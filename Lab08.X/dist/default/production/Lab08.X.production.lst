

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 21 12:40:30 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 05/05/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F26K22 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    96  0000                     
    97 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    98  0000                     
    99 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   100  0000                     
   101                           	psect	idataBANK1
   102  0016D2                     __pidataBANK1:
   103                           	callstack 0
   104                           
   105                           ;initializer for _thresholdRange
   106  0016D2  000A               	dw	10
   107  0000                     _ANSELA	set	3896
   108  0000                     _ANSELB	set	3897
   109  0000                     _ANSELC	set	3898
   110  0000                     _RCONbits	set	4048
   111  0000                     _TXREG1	set	4013
   112  0000                     _RCREG1	set	4014
   113  0000                     _RCSTA1bits	set	4011
   114  0000                     _TXSTA1bits	set	4012
   115  0000                     _PIR1bits	set	3998
   116  0000                     _SPBRGH1	set	4016
   117  0000                     _SPBRG1	set	4015
   118  0000                     _TXSTA1	set	4012
   119  0000                     _RCSTA1	set	4011
   120  0000                     _BAUDCON1	set	4024
   121  0000                     _ADCON0	set	4034
   122  0000                     _ADRESL	set	4035
   123  0000                     _ADCON2	set	4032
   124  0000                     _ADCON1	set	4033
   125  0000                     _OSCTUNE	set	3995
   126  0000                     _OSCCON2	set	4050
   127  0000                     _OSCCON	set	4051
   128  0000                     _T0CON	set	4053
   129  0000                     _TMR0L	set	4054
   130  0000                     _TMR0H	set	4055
   131  0000                     _T0CONbits	set	4053
   132  0000                     _INTCON2bits	set	4081
   133  0000                     _WPUB	set	3937
   134  0000                     _TRISC	set	3988
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISA	set	3986
   137  0000                     _LATC	set	3979
   138  0000                     _LATB	set	3978
   139  0000                     _LATA	set	3977
   140  0000                     _ADRESH	set	4036
   141  0000                     _ADCON0bits	set	4034
   142  0000                     _INTCONbits	set	4082
   143  0000                     _PLLRDY	set	32407
   144                           
   145                           	psect	mediumconst
   146  00FDD0                     __pmediumconst:
   147                           	callstack 0
   148  00FDD0  00                 	db	0
   149  00FDD1                     STR_20:
   150  00FDD1  66                 	db	102	;'f'
   151  00FDD2  3A                 	db	58	;':'
   152  00FDD3  20                 	db	32
   153  00FDD4  67                 	db	103	;'g'
   154  00FDD5  61                 	db	97	;'a'
   155  00FDD6  74                 	db	116	;'t'
   156  00FDD7  68                 	db	104	;'h'
   157  00FDD8  65                 	db	101	;'e'
   158  00FDD9  72                 	db	114	;'r'
   159  00FDDA  20                 	db	32
   160  00FDDB  25                 	db	37
   161  00FDDC  64                 	db	100	;'d'
   162  00FDDD  20                 	db	32
   163  00FDDE  73                 	db	115	;'s'
   164  00FDDF  61                 	db	97	;'a'
   165  00FDE0  6D                 	db	109	;'m'
   166  00FDE1  70                 	db	112	;'p'
   167  00FDE2  6C                 	db	108	;'l'
   168  00FDE3  65                 	db	101	;'e'
   169  00FDE4  73                 	db	115	;'s'
   170  00FDE5  20                 	db	32
   171  00FDE6  66                 	db	102	;'f'
   172  00FDE7  72                 	db	114	;'r'
   173  00FDE8  6F                 	db	111	;'o'
   174  00FDE9  6D                 	db	109	;'m'
   175  00FDEA  20                 	db	32
   176  00FDEB  74                 	db	116	;'t'
   177  00FDEC  68                 	db	104	;'h'
   178  00FDED  65                 	db	101	;'e'
   179  00FDEE  20                 	db	32
   180  00FDEF  6D                 	db	109	;'m'
   181  00FDF0  69                 	db	105	;'i'
   182  00FDF1  63                 	db	99	;'c'
   183  00FDF2  72                 	db	114	;'r'
   184  00FDF3  6F                 	db	111	;'o'
   185  00FDF4  70                 	db	112	;'p'
   186  00FDF5  68                 	db	104	;'h'
   187  00FDF6  6F                 	db	111	;'o'
   188  00FDF7  6E                 	db	110	;'n'
   189  00FDF8  65                 	db	101	;'e'
   190  00FDF9  20                 	db	32
   191  00FDFA  61                 	db	97	;'a'
   192  00FDFB  6E                 	db	110	;'n'
   193  00FDFC  64                 	db	100	;'d'
   194  00FDFD  20                 	db	32
   195  00FDFE  63                 	db	99	;'c'
   196  00FDFF  61                 	db	97	;'a'
   197  00FE00  6C                 	db	108	;'l'
   198  00FE01  63                 	db	99	;'c'
   199  00FE02  75                 	db	117	;'u'
   200  00FE03  6C                 	db	108	;'l'
   201  00FE04  61                 	db	97	;'a'
   202  00FE05  74                 	db	116	;'t'
   203  00FE06  65                 	db	101	;'e'
   204  00FE07  20                 	db	32
   205  00FE08  74                 	db	116	;'t'
   206  00FE09  68                 	db	104	;'h'
   207  00FE0A  65                 	db	101	;'e'
   208  00FE0B  20                 	db	32
   209  00FE0C  66                 	db	102	;'f'
   210  00FE0D  72                 	db	114	;'r'
   211  00FE0E  65                 	db	101	;'e'
   212  00FE0F  71                 	db	113	;'q'
   213  00FE10  75                 	db	117	;'u'
   214  00FE11  65                 	db	101	;'e'
   215  00FE12  6E                 	db	110	;'n'
   216  00FE13  63                 	db	99	;'c'
   217  00FE14  79                 	db	121	;'y'
   218  00FE15  0D                 	db	13
   219  00FE16  0A                 	db	10
   220  00FE17  00                 	db	0
   221  00FE18                     STR_8:
   222  00FE18  0D                 	db	13
   223  00FE19  0A                 	db	10
   224  00FE1A  54                 	db	84	;'T'
   225  00FE1B  68                 	db	104	;'h'
   226  00FE1C  65                 	db	101	;'e'
   227  00FE1D  20                 	db	32
   228  00FE1E  73                 	db	115	;'s'
   229  00FE1F  6F                 	db	111	;'o'
   230  00FE20  75                 	db	117	;'u'
   231  00FE21  6E                 	db	110	;'n'
   232  00FE22  64                 	db	100	;'d'
   233  00FE23  20                 	db	32
   234  00FE24  77                 	db	119	;'w'
   235  00FE25  61                 	db	97	;'a'
   236  00FE26  76                 	db	118	;'v'
   237  00FE27  65                 	db	101	;'e'
   238  00FE28  20                 	db	32
   239  00FE29  63                 	db	99	;'c'
   240  00FE2A  72                 	db	114	;'r'
   241  00FE2B  6F                 	db	111	;'o'
   242  00FE2C  73                 	db	115	;'s'
   243  00FE2D  73                 	db	115	;'s'
   244  00FE2E  65                 	db	101	;'e'
   245  00FE2F  64                 	db	100	;'d'
   246  00FE30  20                 	db	32
   247  00FE31  61                 	db	97	;'a'
   248  00FE32  74                 	db	116	;'t'
   249  00FE33  20                 	db	32
   250  00FE34  74                 	db	116	;'t'
   251  00FE35  68                 	db	104	;'h'
   252  00FE36  65                 	db	101	;'e'
   253  00FE37  20                 	db	32
   254  00FE38  66                 	db	102	;'f'
   255  00FE39  6F                 	db	111	;'o'
   256  00FE3A  6C                 	db	108	;'l'
   257  00FE3B  6C                 	db	108	;'l'
   258  00FE3C  6F                 	db	111	;'o'
   259  00FE3D  77                 	db	119	;'w'
   260  00FE3E  69                 	db	105	;'i'
   261  00FE3F  6E                 	db	110	;'n'
   262  00FE40  67                 	db	103	;'g'
   263  00FE41  20                 	db	32
   264  00FE42  69                 	db	105	;'i'
   265  00FE43  6E                 	db	110	;'n'
   266  00FE44  64                 	db	100	;'d'
   267  00FE45  69                 	db	105	;'i'
   268  00FE46  63                 	db	99	;'c'
   269  00FE47  65                 	db	101	;'e'
   270  00FE48  73                 	db	115	;'s'
   271  00FE49  3A                 	db	58	;':'
   272  00FE4A  0D                 	db	13
   273  00FE4B  0A                 	db	10
   274  00FE4C  00                 	db	0
   275  00FE4D                     STR_5:
   276  00FE4D  54                 	db	84	;'T'
   277  00FE4E  68                 	db	104	;'h'
   278  00FE4F  65                 	db	101	;'e'
   279  00FE50  20                 	db	32
   280  00FE51  6C                 	db	108	;'l'
   281  00FE52  61                 	db	97	;'a'
   282  00FE53  73                 	db	115	;'s'
   283  00FE54  74                 	db	116	;'t'
   284  00FE55  20                 	db	32
   285  00FE56  25                 	db	37
   286  00FE57  64                 	db	100	;'d'
   287  00FE58  20                 	db	32
   288  00FE59  41                 	db	65	;'A'
   289  00FE5A  44                 	db	68	;'D'
   290  00FE5B  43                 	db	67	;'C'
   291  00FE5C  20                 	db	32
   292  00FE5D  73                 	db	115	;'s'
   293  00FE5E  61                 	db	97	;'a'
   294  00FE5F  6D                 	db	109	;'m'
   295  00FE60  70                 	db	112	;'p'
   296  00FE61  6C                 	db	108	;'l'
   297  00FE62  65                 	db	101	;'e'
   298  00FE63  73                 	db	115	;'s'
   299  00FE64  20                 	db	32
   300  00FE65  66                 	db	102	;'f'
   301  00FE66  72                 	db	114	;'r'
   302  00FE67  6F                 	db	111	;'o'
   303  00FE68  6D                 	db	109	;'m'
   304  00FE69  20                 	db	32
   305  00FE6A  74                 	db	116	;'t'
   306  00FE6B  68                 	db	104	;'h'
   307  00FE6C  65                 	db	101	;'e'
   308  00FE6D  20                 	db	32
   309  00FE6E  6D                 	db	109	;'m'
   310  00FE6F  69                 	db	105	;'i'
   311  00FE70  63                 	db	99	;'c'
   312  00FE71  72                 	db	114	;'r'
   313  00FE72  6F                 	db	111	;'o'
   314  00FE73  70                 	db	112	;'p'
   315  00FE74  68                 	db	104	;'h'
   316  00FE75  6F                 	db	111	;'o'
   317  00FE76  6E                 	db	110	;'n'
   318  00FE77  65                 	db	101	;'e'
   319  00FE78  20                 	db	32
   320  00FE79  61                 	db	97	;'a'
   321  00FE7A  72                 	db	114	;'r'
   322  00FE7B  65                 	db	101	;'e'
   323  00FE7C  3A                 	db	58	;':'
   324  00FE7D  20                 	db	32
   325  00FE7E  0D                 	db	13
   326  00FE7F  0A                 	db	10
   327  00FE80  00                 	db	0
   328  00FE81                     STR_19:
   329  00FE81  54                 	db	84	;'T'
   330  00FE82  2F                 	db	47
   331  00FE83  74                 	db	116	;'t'
   332  00FE84  3A                 	db	58	;':'
   333  00FE85  20                 	db	32
   334  00FE86  49                 	db	73	;'I'
   335  00FE87  6E                 	db	110	;'n'
   336  00FE88  63                 	db	99	;'c'
   337  00FE89  72                 	db	114	;'r'
   338  00FE8A  65                 	db	101	;'e'
   339  00FE8B  61                 	db	97	;'a'
   340  00FE8C  73                 	db	115	;'s'
   341  00FE8D  65                 	db	101	;'e'
   342  00FE8E  2F                 	db	47
   343  00FE8F  64                 	db	100	;'d'
   344  00FE90  65                 	db	101	;'e'
   345  00FE91  63                 	db	99	;'c'
   346  00FE92  72                 	db	114	;'r'
   347  00FE93  65                 	db	101	;'e'
   348  00FE94  61                 	db	97	;'a'
   349  00FE95  73                 	db	115	;'s'
   350  00FE96  65                 	db	101	;'e'
   351  00FE97  20                 	db	32
   352  00FE98  74                 	db	116	;'t'
   353  00FE99  68                 	db	104	;'h'
   354  00FE9A  72                 	db	114	;'r'
   355  00FE9B  65                 	db	101	;'e'
   356  00FE9C  73                 	db	115	;'s'
   357  00FE9D  68                 	db	104	;'h'
   358  00FE9E  6F                 	db	111	;'o'
   359  00FE9F  6C                 	db	108	;'l'
   360  00FEA0  64                 	db	100	;'d'
   361  00FEA1  20                 	db	32
   362  00FEA2  31                 	db	49	;'1'
   363  00FEA3  33                 	db	51	;'3'
   364  00FEA4  38                 	db	56	;'8'
   365  00FEA5  2D                 	db	45
   366  00FEA6  31                 	db	49	;'1'
   367  00FEA7  31                 	db	49	;'1'
   368  00FEA8  38                 	db	56	;'8'
   369  00FEA9  0D                 	db	13
   370  00FEAA  0A                 	db	10
   371  00FEAB  00                 	db	0
   372  00FEAC                     STR_10:
   373  00FEAC  0D                 	db	13
   374  00FEAD  0A                 	db	10
   375  00FEAE  54                 	db	84	;'T'
   376  00FEAF  68                 	db	104	;'h'
   377  00FEB0  65                 	db	101	;'e'
   378  00FEB1  20                 	db	32
   379  00FEB2  73                 	db	115	;'s'
   380  00FEB3  6F                 	db	111	;'o'
   381  00FEB4  75                 	db	117	;'u'
   382  00FEB5  6E                 	db	110	;'n'
   383  00FEB6  64                 	db	100	;'d'
   384  00FEB7  20                 	db	32
   385  00FEB8  77                 	db	119	;'w'
   386  00FEB9  61                 	db	97	;'a'
   387  00FEBA  76                 	db	118	;'v'
   388  00FEBB  65                 	db	101	;'e'
   389  00FEBC  20                 	db	32
   390  00FEBD  68                 	db	104	;'h'
   391  00FEBE  61                 	db	97	;'a'
   392  00FEBF  64                 	db	100	;'d'
   393  00FEC0  20                 	db	32
   394  00FEC1  25                 	db	37
   395  00FEC2  64                 	db	100	;'d'
   396  00FEC3  20                 	db	32
   397  00FEC4  70                 	db	112	;'p'
   398  00FEC5  65                 	db	101	;'e'
   399  00FEC6  72                 	db	114	;'r'
   400  00FEC7  69                 	db	105	;'i'
   401  00FEC8  6F                 	db	111	;'o'
   402  00FEC9  64                 	db	100	;'d'
   403  00FECA  73                 	db	115	;'s'
   404  00FECB  3A                 	db	58	;':'
   405  00FECC  0D                 	db	13
   406  00FECD  0A                 	db	10
   407  00FECE  00                 	db	0
   408  00FECF                     STR_14:
   409  00FECF  2D                 	db	45
   410  00FED0  2D                 	db	45
   411  00FED1  2D                 	db	45
   412  00FED2  2D                 	db	45
   413  00FED3  2D                 	db	45
   414  00FED4  2D                 	db	45
   415  00FED5  2D                 	db	45
   416  00FED6  2D                 	db	45
   417  00FED7  2D                 	db	45
   418  00FED8  2D                 	db	45
   419  00FED9  2D                 	db	45
   420  00FEDA  2D                 	db	45
   421  00FEDB  2D                 	db	45
   422  00FEDC  2D                 	db	45
   423  00FEDD  2D                 	db	45
   424  00FEDE  2D                 	db	45
   425  00FEDF  2D                 	db	45
   426  00FEE0  2D                 	db	45
   427  00FEE1  2D                 	db	45
   428  00FEE2  2D                 	db	45
   429  00FEE3  2D                 	db	45
   430  00FEE4  2D                 	db	45
   431  00FEE5  2D                 	db	45
   432  00FEE6  2D                 	db	45
   433  00FEE7  2D                 	db	45
   434  00FEE8  2D                 	db	45
   435  00FEE9  2D                 	db	45
   436  00FEEA  2D                 	db	45
   437  00FEEB  2D                 	db	45
   438  00FEEC  2D                 	db	45
   439  00FEED  0D                 	db	13
   440  00FEEE  0A                 	db	10
   441  00FEEF  00                 	db	0
   442  00FEF0                     STR_13:
   443  00FEF0  0D                 	db	13
   444  00FEF1  0A                 	db	10
   445  00FEF2  61                 	db	97	;'a'
   446  00FEF3  76                 	db	118	;'v'
   447  00FEF4  65                 	db	101	;'e'
   448  00FEF5  72                 	db	114	;'r'
   449  00FEF6  61                 	db	97	;'a'
   450  00FEF7  67                 	db	103	;'g'
   451  00FEF8  65                 	db	101	;'e'
   452  00FEF9  20                 	db	32
   453  00FEFA  66                 	db	102	;'f'
   454  00FEFB  72                 	db	114	;'r'
   455  00FEFC  65                 	db	101	;'e'
   456  00FEFD  71                 	db	113	;'q'
   457  00FEFE  75                 	db	117	;'u'
   458  00FEFF  65                 	db	101	;'e'
   459  00FF00  6E                 	db	110	;'n'
   460  00FF01  64                 	db	100	;'d'
   461  00FF02  79                 	db	121	;'y'
   462  00FF03  20                 	db	32
   463  00FF04  3D                 	db	61	;'='
   464  00FF05  20                 	db	32
   465  00FF06  25                 	db	37
   466  00FF07  64                 	db	100	;'d'
   467  00FF08  20                 	db	32
   468  00FF09  48                 	db	72	;'H'
   469  00FF0A  7A                 	db	122	;'z'
   470  00FF0B  0D                 	db	13
   471  00FF0C  0A                 	db	10
   472  00FF0D  00                 	db	0
   473  00FF0E                     STR_12:
   474  00FF0E  0D                 	db	13
   475  00FF0F  0A                 	db	10
   476  00FF10  61                 	db	97	;'a'
   477  00FF11  76                 	db	118	;'v'
   478  00FF12  65                 	db	101	;'e'
   479  00FF13  72                 	db	114	;'r'
   480  00FF14  61                 	db	97	;'a'
   481  00FF15  67                 	db	103	;'g'
   482  00FF16  65                 	db	101	;'e'
   483  00FF17  20                 	db	32
   484  00FF18  70                 	db	112	;'p'
   485  00FF19  65                 	db	101	;'e'
   486  00FF1A  72                 	db	114	;'r'
   487  00FF1B  69                 	db	105	;'i'
   488  00FF1C  6F                 	db	111	;'o'
   489  00FF1D  64                 	db	100	;'d'
   490  00FF1E  20                 	db	32
   491  00FF1F  3D                 	db	61	;'='
   492  00FF20  20                 	db	32
   493  00FF21  25                 	db	37
   494  00FF22  64                 	db	100	;'d'
   495  00FF23  20                 	db	32
   496  00FF24  75                 	db	117	;'u'
   497  00FF25  73                 	db	115	;'s'
   498  00FF26  0D                 	db	13
   499  00FF27  0A                 	db	10
   500  00FF28  00                 	db	0
   501  00FF29                     STR_2:
   502  00FF29  4D                 	db	77	;'M'
   503  00FF2A  69                 	db	105	;'i'
   504  00FF2B  63                 	db	99	;'c'
   505  00FF2C  72                 	db	114	;'r'
   506  00FF2D  6F                 	db	111	;'o'
   507  00FF2E  70                 	db	112	;'p'
   508  00FF2F  68                 	db	104	;'h'
   509  00FF30  6F                 	db	111	;'o'
   510  00FF31  6E                 	db	110	;'n'
   511  00FF32  65                 	db	101	;'e'
   512  00FF33  20                 	db	32
   513  00FF34  65                 	db	101	;'e'
   514  00FF35  78                 	db	120	;'x'
   515  00FF36  70                 	db	112	;'p'
   516  00FF37  65                 	db	101	;'e'
   517  00FF38  72                 	db	114	;'r'
   518  00FF39  69                 	db	105	;'i'
   519  00FF3A  6D                 	db	109	;'m'
   520  00FF3B  65                 	db	101	;'e'
   521  00FF3C  6E                 	db	110	;'n'
   522  00FF3D  74                 	db	116	;'t'
   523  00FF3E  73                 	db	115	;'s'
   524  00FF3F  0D                 	db	13
   525  00FF40  0A                 	db	10
   526  00FF41  00                 	db	0
   527  00FF42                     STR_25:
   528  00FF42  56                 	db	86	;'V'
   529  00FF43  6F                 	db	111	;'o'
   530  00FF44  6C                 	db	108	;'l'
   531  00FF45  75                 	db	117	;'u'
   532  00FF46  6D                 	db	109	;'m'
   533  00FF47  65                 	db	101	;'e'
   534  00FF48  20                 	db	32
   535  00FF49  72                 	db	114	;'r'
   536  00FF4A  61                 	db	97	;'a'
   537  00FF4B  6E                 	db	110	;'n'
   538  00FF4C  67                 	db	103	;'g'
   539  00FF4D  65                 	db	101	;'e'
   540  00FF4E  3A                 	db	58	;':'
   541  00FF4F  20                 	db	32
   542  00FF50  25                 	db	37
   543  00FF51  64                 	db	100	;'d'
   544  00FF52  20                 	db	32
   545  00FF53  2D                 	db	45
   546  00FF54  20                 	db	32
   547  00FF55  25                 	db	37
   548  00FF56  64                 	db	100	;'d'
   549  00FF57  0D                 	db	13
   550  00FF58  0A                 	db	10
   551  00FF59  00                 	db	0
   552  00FF5A                     STR_18:
   553  00FF5A  7A                 	db	122	;'z'
   554  00FF5B  3A                 	db	58	;':'
   555  00FF5C  20                 	db	32
   556  00FF5D  43                 	db	67	;'C'
   557  00FF5E  6C                 	db	108	;'l'
   558  00FF5F  65                 	db	101	;'e'
   559  00FF60  61                 	db	97	;'a'
   560  00FF61  72                 	db	114	;'r'
   561  00FF62  20                 	db	32
   562  00FF63  74                 	db	116	;'t'
   563  00FF64  68                 	db	104	;'h'
   564  00FF65  65                 	db	101	;'e'
   565  00FF66  20                 	db	32
   566  00FF67  74                 	db	116	;'t'
   567  00FF68  65                 	db	101	;'e'
   568  00FF69  72                 	db	114	;'r'
   569  00FF6A  6D                 	db	109	;'m'
   570  00FF6B  69                 	db	105	;'i'
   571  00FF6C  6E                 	db	110	;'n'
   572  00FF6D  61                 	db	97	;'a'
   573  00FF6E  6C                 	db	108	;'l'
   574  00FF6F  0D                 	db	13
   575  00FF70  0A                 	db	10
   576  00FF71  00                 	db	0
   577  00FF72                     STR_28:
   578  00FF72  54                 	db	84	;'T'
   579  00FF73  68                 	db	104	;'h'
   580  00FF74  72                 	db	114	;'r'
   581  00FF75  65                 	db	101	;'e'
   582  00FF76  73                 	db	115	;'s'
   583  00FF77  68                 	db	104	;'h'
   584  00FF78  6F                 	db	111	;'o'
   585  00FF79  6C                 	db	108	;'l'
   586  00FF7A  64                 	db	100	;'d'
   587  00FF7B  20                 	db	32
   588  00FF7C  61                 	db	97	;'a'
   589  00FF7D  74                 	db	116	;'t'
   590  00FF7E  20                 	db	32
   591  00FF7F  6D                 	db	109	;'m'
   592  00FF80  69                 	db	105	;'i'
   593  00FF81  6E                 	db	110	;'n'
   594  00FF82  69                 	db	105	;'i'
   595  00FF83  6D                 	db	109	;'m'
   596  00FF84  75                 	db	117	;'u'
   597  00FF85  6D                 	db	109	;'m'
   598  00FF86  0D                 	db	13
   599  00FF87  0A                 	db	10
   600  00FF88  00                 	db	0
   601  00FF89                     STR_17:
   602  00FF89  5A                 	db	90	;'Z'
   603  00FF8A  3A                 	db	58	;':'
   604  00FF8B  20                 	db	32
   605  00FF8C  52                 	db	82	;'R'
   606  00FF8D  65                 	db	101	;'e'
   607  00FF8E  73                 	db	115	;'s'
   608  00FF8F  65                 	db	101	;'e'
   609  00FF90  74                 	db	116	;'t'
   610  00FF91  20                 	db	32
   611  00FF92  70                 	db	112	;'p'
   612  00FF93  72                 	db	114	;'r'
   613  00FF94  6F                 	db	111	;'o'
   614  00FF95  63                 	db	99	;'c'
   615  00FF96  65                 	db	101	;'e'
   616  00FF97  73                 	db	115	;'s'
   617  00FF98  73                 	db	115	;'s'
   618  00FF99  6F                 	db	111	;'o'
   619  00FF9A  72                 	db	114	;'r'
   620  00FF9B  0D                 	db	13
   621  00FF9C  0A                 	db	10
   622  00FF9D  00                 	db	0
   623  00FF9E                     STR_29:
   624  00FF9E  55                 	db	85	;'U'
   625  00FF9F  6E                 	db	110	;'n'
   626  00FFA0  6B                 	db	107	;'k'
   627  00FFA1  6E                 	db	110	;'n'
   628  00FFA2  6F                 	db	111	;'o'
   629  00FFA3  77                 	db	119	;'w'
   630  00FFA4  6E                 	db	110	;'n'
   631  00FFA5  20                 	db	32
   632  00FFA6  6B                 	db	107	;'k'
   633  00FFA7  65                 	db	101	;'e'
   634  00FFA8  79                 	db	121	;'y'
   635  00FFA9  20                 	db	32
   636  00FFAA  25                 	db	37
   637  00FFAB  63                 	db	99	;'c'
   638  00FFAC  0D                 	db	13
   639  00FFAD  0A                 	db	10
   640  00FFAE  00                 	db	0
   641  00FFAF                     STR_11:
   642  00FFAF  25                 	db	37
   643  00FFB0  64                 	db	100	;'d'
   644  00FFB1  20                 	db	32
   645  00FFB2  2D                 	db	45
   646  00FFB3  20                 	db	32
   647  00FFB4  25                 	db	37
   648  00FFB5  64                 	db	100	;'d'
   649  00FFB6  20                 	db	32
   650  00FFB7  3D                 	db	61	;'='
   651  00FFB8  20                 	db	32
   652  00FFB9  25                 	db	37
   653  00FFBA  64                 	db	100	;'d'
   654  00FFBB  0D                 	db	13
   655  00FFBC  0A                 	db	10
   656  00FFBD  00                 	db	0
   657  00FFBE                     STR_15:
   658  00FFBE  3F                 	db	63	;'?'
   659  00FFBF  3A                 	db	58	;':'
   660  00FFC0  20                 	db	32
   661  00FFC1  48                 	db	72	;'H'
   662  00FFC2  65                 	db	101	;'e'
   663  00FFC3  6C                 	db	108	;'l'
   664  00FFC4  70                 	db	112	;'p'
   665  00FFC5  20                 	db	32
   666  00FFC6  6D                 	db	109	;'m'
   667  00FFC7  65                 	db	101	;'e'
   668  00FFC8  6E                 	db	110	;'n'
   669  00FFC9  75                 	db	117	;'u'
   670  00FFCA  0D                 	db	13
   671  00FFCB  0A                 	db	10
   672  00FFCC  00                 	db	0
   673  00FFCD                     STR_1:
   674  00FFCD  69                 	db	105	;'i'
   675  00FFCE  6E                 	db	110	;'n'
   676  00FFCF  4C                 	db	76	;'L'
   677  00FFD0  61                 	db	97	;'a'
   678  00FFD1  62                 	db	98	;'b'
   679  00FFD2  20                 	db	32
   680  00FFD3  30                 	db	48	;'0'
   681  00FFD4  38                 	db	56	;'8'
   682  00FFD5  0D                 	db	13
   683  00FFD6  0A                 	db	10
   684  00FFD7  00                 	db	0
   685  00FFD8                     STR_3:
   686  00FFD8  44                 	db	68	;'D'
   687  00FFD9  65                 	db	101	;'e'
   688  00FFDA  76                 	db	118	;'v'
   689  00FFDB  27                 	db	39
   690  00FFDC  32                 	db	50	;'2'
   691  00FFDD  31                 	db	49	;'1'
   692  00FFDE  0D                 	db	13
   693  00FFDF  0A                 	db	10
   694  00FFE0  00                 	db	0
   695  00FFE1                     STR_6:
   696  00FFE1  0D                 	db	13
   697  00FFE2  0A                 	db	10
   698  00FFE3  53                 	db	83	;'S'
   699  00FFE4  5B                 	db	91	;'['
   700  00FFE5  25                 	db	37
   701  00FFE6  64                 	db	100	;'d'
   702  00FFE7  5D                 	db	93	;']'
   703  00FFE8  20                 	db	32
   704  00FFE9  00                 	db	0
   705  00FFEA                     STR_16:
   706  00FFEA  6F                 	db	111	;'o'
   707  00FFEB  3A                 	db	58	;':'
   708  00FFEC  20                 	db	32
   709  00FFED  6B                 	db	107	;'k'
   710  00FFEE  0D                 	db	13
   711  00FFEF  0A                 	db	10
   712  00FFF0  00                 	db	0
   713  00FFF1                     STR_22:
   714  00FFF1  20                 	db	32
   715  00FFF2  6B                 	db	107	;'k'
   716  00FFF3  0D                 	db	13
   717  00FFF4  0A                 	db	10
   718  00FFF5  3E                 	db	62	;'>'
   719  00FFF6  00                 	db	0
   720  00FFF7                     STR_7:
   721  00FFF7  25                 	db	37
   722  00FFF8  64                 	db	100	;'d'
   723  00FFF9  20                 	db	32
   724  00FFFA  00                 	db	0
   725  00FFFB                     STR_4:
   726  00FFFB  3E                 	db	62	;'>'
   727  00FFFC  20                 	db	32
   728  00FFFD  00                 	db	0
   729  00FFFE  00                 	db	0	; dummy byte at the end
   730  0000                     
   731                           ; #config settings
   732                           
   733                           	psect	cinit
   734  0013B4                     __pcinit:
   735                           	callstack 0
   736  0013B4                     start_initialization:
   737                           	callstack 0
   738  0013B4                     __initialization:
   739                           	callstack 0
   740                           
   741                           ; Initialize objects allocated to BANK1 (2 bytes)
   742                           ; load TBLPTR registers with __pidataBANK1
   743  0013B4  0ED2               	movlw	low __pidataBANK1
   744  0013B6  6EF6               	movwf	tblptrl,c
   745  0013B8  0E16               	movlw	high __pidataBANK1
   746  0013BA  6EF7               	movwf	tblptrh,c
   747  0013BC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   748  0013BE  6EF8               	movwf	tblptru,c
   749  0013C0  0009               	tblrd		*+	;fetch initializer
   750  0013C2  CFF5 F193          	movff	tablat,__pdataBANK1
   751  0013C6  0009               	tblrd		*+	;fetch initializer
   752  0013C8  CFF5 F194          	movff	tablat,__pdataBANK1+1
   753                           
   754                           ; Clear objects allocated to BANK2 (256 bytes)
   755  0013CC  EE02  F000         	lfsr	0,__pbssBANK2
   756  0013D0  EE11 F000          	lfsr	1,256
   757  0013D4                     clear_0:
   758  0013D4  6AEE               	clrf	postinc0,c
   759  0013D6  50E5               	movf	postdec1,w,c
   760  0013D8  50E1               	movf	fsr1l,w,c
   761  0013DA  E1FC               	bnz	clear_0
   762  0013DC  50E2               	movf	fsr1h,w,c
   763  0013DE  E1FA               	bnz	clear_0
   764                           
   765                           ; Clear objects allocated to BANK1 (1 bytes)
   766  0013E0  0101               	movlb	1
   767  0013E2  6B95               	clrf	__pbssBANK1& (0+255),b
   768                           
   769                           ; Clear objects allocated to BANK0 (45 bytes)
   770  0013E4  EE00  F099         	lfsr	0,__pbssBANK0
   771  0013E8  0E2D               	movlw	45
   772  0013EA                     clear_1:
   773  0013EA  6AEE               	clrf	postinc0,c
   774  0013EC  06E8               	decf	wreg,f,c
   775  0013EE  E1FD               	bnz	clear_1
   776                           
   777                           ; Clear objects allocated to COMRAM (12 bytes)
   778  0013F0  EE00  F045         	lfsr	0,__pbssCOMRAM
   779  0013F4  0E0C               	movlw	12
   780  0013F6                     clear_2:
   781  0013F6  6AEE               	clrf	postinc0,c
   782  0013F8  06E8               	decf	wreg,f,c
   783  0013FA  E1FD               	bnz	clear_2
   784  0013FC                     end_of_initialization:
   785                           	callstack 0
   786  0013FC                     __end_of__initialization:
   787                           	callstack 0
   788  0013FC  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   789  0013FE  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   790  001400  0100               	movlb	0
   791  001402  EF29  F000         	goto	_main	;jump to C main() function
   792                           
   793                           	psect	bssCOMRAM
   794  000045                     __pbssCOMRAM:
   795                           	callstack 0
   796  000045                     _width:
   797                           	callstack 0
   798  000045                     	ds	2
   799  000047                     _prec:
   800                           	callstack 0
   801  000047                     	ds	2
   802  000049                     _flags:
   803                           	callstack 0
   804  000049                     	ds	2
   805  00004B                     _timer0ReloadVal:
   806                           	callstack 0
   807  00004B                     	ds	2
   808  00004D                     _bufferIdx:
   809                           	callstack 0
   810  00004D                     	ds	2
   811  00004F                     _timerState:
   812                           	callstack 0
   813  00004F                     	ds	1
   814  000050                     _fillBuffer:
   815                           	callstack 0
   816  000050                     	ds	1
   817                           
   818                           	psect	bssBANK0
   819  000099                     __pbssBANK0:
   820                           	callstack 0
   821  000099                     _nout:
   822                           	callstack 0
   823  000099                     	ds	2
   824  00009B                     _EUSART1_ErrorHandler:
   825                           	callstack 0
   826  00009B                     	ds	2
   827  00009D                     _EUSART1_OverrunErrorHandler:
   828                           	callstack 0
   829  00009D                     	ds	2
   830  00009F                     _EUSART1_FramingErrorHandler:
   831                           	callstack 0
   832  00009F                     	ds	2
   833  0000A1                     _ADC_InterruptHandler:
   834                           	callstack 0
   835  0000A1                     	ds	2
   836  0000A3                     _TMR0_InterruptHandler:
   837                           	callstack 0
   838  0000A3                     	ds	2
   839  0000A5                     _eusart1RxLastError:
   840                           	callstack 0
   841  0000A5                     	ds	1
   842  0000A6                     _dbuf:
   843                           	callstack 0
   844  0000A6                     	ds	32
   845                           
   846                           	psect	bssBANK1
   847  000195                     __pbssBANK1:
   848                           	callstack 0
   849  000195                     _samplesCollected:
   850                           	callstack 0
   851  000195                     	ds	1
   852                           
   853                           	psect	dataBANK1
   854  000193                     __pdataBANK1:
   855                           	callstack 0
   856  000193                     _thresholdRange:
   857                           	callstack 0
   858  000193                     	ds	2
   859                           
   860                           	psect	bssBANK2
   861  000200                     __pbssBANK2:
   862                           	callstack 0
   863  000200                     _adc_reading:
   864                           	callstack 0
   865  000200                     	ds	256
   866                           
   867                           	psect	cstackBANK1
   868  000100                     __pcstackBANK1:
   869                           	callstack 0
   870  000100                     main@crossings:
   871                           	callstack 0
   872                           
   873                           ; 128 bytes @ 0x0
   874  000100                     	ds	128
   875  000180                     main@periodSumUs:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x80
   879  000180                     	ds	2
   880  000182                     main@periodSum:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x82
   884  000182                     	ds	2
   885  000184                     main@avgPeriodUs:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x84
   889  000184                     	ds	2
   890  000186                     main@cmd:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x86
   894  000186                     	ds	1
   895  000187                     main@i_221:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x87
   899  000187                     	ds	2
   900  000189                     main@i:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x89
   904  000189                     	ds	2
   905  00018B                     main@i_214:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x8B
   909  00018B                     	ds	2
   910  00018D                     main@crIdx:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x8D
   914  00018D                     	ds	2
   915  00018F                     main@i_220:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x8F
   919  00018F                     	ds	2
   920  000191                     main@i_225:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x91
   924  000191                     	ds	2
   925                           
   926                           	psect	cstackBANK0
   927  000060                     __pcstackBANK0:
   928                           	callstack 0
   929  000060                     _dtoa$1401:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x0
   933  000060                     	ds	2
   934  000062                     dtoa@p:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x2
   938  000062                     	ds	2
   939  000064                     dtoa@w:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x4
   943  000064                     	ds	2
   944  000066                     dtoa@s:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x6
   948  000066                     	ds	2
   949  000068                     dtoa@n:
   950                           	callstack 0
   951                           
   952                           ; 8 bytes @ 0x8
   953  000068                     	ds	8
   954  000070                     dtoa@i:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x10
   958  000070                     	ds	2
   959  000072                     vfpfcnvrt@ll:
   960                           	callstack 0
   961                           
   962                           ; 8 bytes @ 0x12
   963  000072                     	ds	8
   964  00007A                     vfpfcnvrt@c:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x1A
   968  00007A                     	ds	1
   969  00007B                     ?_vfprintf:
   970                           	callstack 0
   971  00007B                     vfprintf@fp:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x1B
   975  00007B                     	ds	2
   976  00007D                     vfprintf@fmt:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x1D
   980  00007D                     	ds	2
   981  00007F                     vfprintf@ap:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x1F
   985  00007F                     	ds	2
   986  000081                     ?_printf:
   987                           	callstack 0
   988  000081                     printf@fmt:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x21
   992  000081                     	ds	10
   993  00008B                     printf@ap:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x2B
   997  00008B                     	ds	2
   998  00008D                     ??_main:
   999                           
  1000                           ; 1 bytes @ 0x2D
  1001  00008D                     	ds	12
  1002                           
  1003                           	psect	cstackCOMRAM
  1004  000001                     __pcstackCOMRAM:
  1005                           	callstack 0
  1006  000001                     i2TMR0_WriteTimer@timerVal:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x0
  1010  000001                     	ds	2
  1011  000003                     ??_myTMR0ISR:
  1012  000003                     
  1013                           ; 1 bytes @ 0x2
  1014  000003                     	ds	4
  1015  000007                     myTMR0ISR@micReading:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x6
  1019  000007                     	ds	1
  1020  000008                     ??_INTERRUPT_InterruptManager:
  1021                           
  1022                           ; 1 bytes @ 0x7
  1023  000008                     	ds	4
  1024  00000C                     ?_strlen:
  1025                           	callstack 0
  1026  00000C                     ?___wmul:
  1027                           	callstack 0
  1028  00000C                     ?___lwdiv:
  1029                           	callstack 0
  1030  00000C                     ?___aldiv:
  1031                           	callstack 0
  1032  00000C                     ?___aodiv:
  1033                           	callstack 0
  1034  00000C                     ?___aomod:
  1035                           	callstack 0
  1036  00000C                     EUSART1_Write@txData:
  1037                           	callstack 0
  1038  00000C                     TMR0_WriteTimer@timerVal:
  1039                           	callstack 0
  1040  00000C                     TMR0_SetInterruptHandler@InterruptHandler:
  1041                           	callstack 0
  1042  00000C                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1043                           	callstack 0
  1044  00000C                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1045                           	callstack 0
  1046  00000C                     EUSART1_SetErrorHandler@interruptHandler:
  1047                           	callstack 0
  1048  00000C                     ___wmul@multiplier:
  1049                           	callstack 0
  1050  00000C                     ___lwdiv@dividend:
  1051                           	callstack 0
  1052  00000C                     strlen@s:
  1053                           	callstack 0
  1054  00000C                     ___aldiv@dividend:
  1055                           	callstack 0
  1056  00000C                     ___aodiv@dividend:
  1057                           	callstack 0
  1058  00000C                     ___aomod@dividend:
  1059                           	callstack 0
  1060                           
  1061                           ; 8 bytes @ 0xB
  1062  00000C                     	ds	1
  1063  00000D                     putch@txData:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0xC
  1067  00000D                     	ds	1
  1068  00000E                     ??_TMR0_Initialize:
  1069  00000E                     ___wmul@multiplicand:
  1070                           	callstack 0
  1071  00000E                     ___lwdiv@divisor:
  1072                           	callstack 0
  1073  00000E                     fputc@c:
  1074                           	callstack 0
  1075  00000E                     strlen@a:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xD
  1079  00000E                     	ds	2
  1080  000010                     ___wmul@product:
  1081                           	callstack 0
  1082  000010                     ___lwdiv@quotient:
  1083                           	callstack 0
  1084  000010                     fputc@fp:
  1085                           	callstack 0
  1086  000010                     ___aldiv@divisor:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0xF
  1090  000010                     	ds	2
  1091  000012                     ??_fputc:
  1092  000012                     ___lwdiv@counter:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x11
  1096  000012                     	ds	2
  1097  000014                     ___aldiv@counter:
  1098                           	callstack 0
  1099  000014                     ___aodiv@divisor:
  1100                           	callstack 0
  1101  000014                     ___aomod@divisor:
  1102                           	callstack 0
  1103                           
  1104                           ; 8 bytes @ 0x13
  1105  000014                     	ds	1
  1106  000015                     ___aldiv@sign:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x14
  1110  000015                     	ds	1
  1111  000016                     ___aldiv@quotient:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x15
  1115  000016                     	ds	1
  1116  000017                     ?_ctoa:
  1117                           	callstack 0
  1118  000017                     ctoa@fp:
  1119                           	callstack 0
  1120  000017                     fputs@s:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x16
  1124  000017                     	ds	2
  1125  000019                     ctoa@c:
  1126                           	callstack 0
  1127  000019                     fputs@fp:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x18
  1131  000019                     	ds	1
  1132  00001A                     ??_ctoa:
  1133                           
  1134                           ; 1 bytes @ 0x19
  1135  00001A                     	ds	1
  1136  00001B                     fputs@c:
  1137                           	callstack 0
  1138  00001B                     ctoa@l:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x1A
  1142  00001B                     	ds	1
  1143  00001C                     ___aodiv@counter:
  1144                           	callstack 0
  1145  00001C                     ___aomod@counter:
  1146                           	callstack 0
  1147  00001C                     fputs@i:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x1B
  1151  00001C                     	ds	1
  1152  00001D                     ___aodiv@sign:
  1153                           	callstack 0
  1154  00001D                     ___aomod@sign:
  1155                           	callstack 0
  1156  00001D                     ctoa@w:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x1C
  1160  00001D                     	ds	1
  1161  00001E                     ?_abs:
  1162                           	callstack 0
  1163  00001E                     ?_pad:
  1164                           	callstack 0
  1165  00001E                     pad@fp:
  1166                           	callstack 0
  1167  00001E                     abs@a:
  1168                           	callstack 0
  1169  00001E                     ___aodiv@quotient:
  1170                           	callstack 0
  1171                           
  1172                           ; 8 bytes @ 0x1D
  1173  00001E                     	ds	2
  1174  000020                     ??_abs:
  1175  000020                     pad@buf:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x1F
  1179  000020                     	ds	2
  1180  000022                     pad@p:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x21
  1184  000022                     	ds	2
  1185  000024                     ??_pad:
  1186                           
  1187                           ; 1 bytes @ 0x23
  1188  000024                     	ds	1
  1189  000025                     pad@i:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x24
  1193  000025                     	ds	2
  1194  000027                     pad@w:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x26
  1198  000027                     	ds	2
  1199  000029                     ?_dtoa:
  1200                           	callstack 0
  1201  000029                     dtoa@fp:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x28
  1205  000029                     	ds	2
  1206  00002B                     dtoa@d:
  1207                           	callstack 0
  1208                           
  1209                           ; 8 bytes @ 0x2A
  1210  00002B                     	ds	8
  1211  000033                     ??_dtoa:
  1212                           
  1213                           ; 1 bytes @ 0x32
  1214  000033                     	ds	8
  1215  00003B                     ?_vfpfcnvrt:
  1216                           	callstack 0
  1217  00003B                     vfpfcnvrt@fp:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x3A
  1221  00003B                     	ds	2
  1222  00003D                     vfpfcnvrt@fmt:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x3C
  1226  00003D                     	ds	2
  1227  00003F                     vfpfcnvrt@ap:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x3E
  1231  00003F                     	ds	2
  1232  000041                     ??_vfpfcnvrt:
  1233                           
  1234                           ; 1 bytes @ 0x40
  1235  000041                     	ds	2
  1236  000043                     vfprintf@cfmt:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x42
  1240  000043                     	ds	2
  1241  000045                     
  1242                           ; 1 bytes @ 0x44
  1243 ;;
  1244 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1245 ;;
  1246 ;; *************** function _main *****************
  1247 ;; Defined at:
  1248 ;;		line 45 in file "main.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  i               2  145[BANK1 ] unsigned short 
  1253 ;;  i               2  135[BANK1 ] unsigned short 
  1254 ;;  i               2  143[BANK1 ] unsigned short 
  1255 ;;  i               2  139[BANK1 ] unsigned short 
  1256 ;;  crossings     128    0[BANK1 ] unsigned char [128]
  1257 ;;  crIdx           2  141[BANK1 ] unsigned short 
  1258 ;;  avgPeriodUs     2  132[BANK1 ] unsigned short 
  1259 ;;  periodSum       2  130[BANK1 ] unsigned short 
  1260 ;;  periodSumUs     2  128[BANK1 ] unsigned short 
  1261 ;;  i               2  137[BANK1 ] unsigned short 
  1262 ;;  cmd             1  134[BANK1 ] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Locals:         0       0     147       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Totals:         0      12     147       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;Total ram usage:      159 bytes
  1277 ;; Hardware stack levels required when called:   13
  1278 ;; This function calls:
  1279 ;;		_EUSART1_Read
  1280 ;;		_EUSART1_is_rx_ready
  1281 ;;		_SYSTEM_Initialize
  1282 ;;		_TMR0_SetInterruptHandler
  1283 ;;		_TMR0_WriteTimer
  1284 ;;		___aldiv
  1285 ;;		___lwdiv
  1286 ;;		___wmul
  1287 ;;		_printf
  1288 ;; This function is called by:
  1289 ;;		Startup code after reset
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text0
  1294  000052                     __ptext0:
  1295                           	callstack 0
  1296  000052                     _main:
  1297                           	callstack 18
  1298  000052                     
  1299                           ;main.c: 54:     uint16_t i;;main.c: 55:     char cmd;;main.c: 57:     SYSTEM_Initialize
      +                          ();
  1300  000052  EC17  F00B         	call	_SYSTEM_Initialize	;wreg free
  1301  000056                     
  1302                           ;main.c: 62:     TMR0_WriteTimer(0x0000);
  1303  000056  0E00               	movlw	0
  1304  000058  6E0D               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1305  00005A  0E00               	movlw	0
  1306  00005C  6E0C               	movwf	TMR0_WriteTimer@timerVal^0,c
  1307  00005E  EC49  F00B         	call	_TMR0_WriteTimer	;wreg free
  1308  000062                     
  1309                           ;main.c: 63:     INTCONbits.TMR0IF = 0;
  1310  000062  94F2               	bcf	242,2,c	;volatile
  1311  000064                     l33:
  1312  000064  A4F2               	btfss	242,2,c	;volatile
  1313  000066  EF37  F000         	goto	u2271
  1314  00006A  EF39  F000         	goto	u2270
  1315  00006E                     u2271:
  1316  00006E  EF32  F000         	goto	l33
  1317  000072                     u2270:
  1318  000072                     
  1319                           ;main.c: 66:     TMR0_SetInterruptHandler(myTMR0ISR);
  1320  000072  0EAA               	movlw	low _myTMR0ISR
  1321  000074  6E0C               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1322  000076  0E0F               	movlw	high _myTMR0ISR
  1323  000078  6E0D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1324  00007A  EC4E  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  1325  00007E                     
  1326                           ;main.c: 67:     (INTCONbits.GIE = 1);
  1327  00007E  8EF2               	bsf	242,7,c	;volatile
  1328  000080                     
  1329                           ;main.c: 68:     (INTCONbits.PEIE = 1);
  1330  000080  8CF2               	bsf	242,6,c	;volatile
  1331  000082                     
  1332                           ;main.c: 70:     printf("inLab 08\r\n");
  1333  000082  0ECD               	movlw	low STR_1
  1334  000084  0100               	movlb	0	; () banked
  1335  000086  6F81               	movwf	printf@fmt& (0+255),b
  1336  000088  0EFF               	movlw	high STR_1
  1337  00008A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1338  00008C  ECE2  F00A         	call	_printf	;wreg free
  1339  000090                     
  1340                           ;main.c: 71:     printf("Microphone experiments\r\n");
  1341  000090  0E29               	movlw	low STR_2
  1342  000092  0100               	movlb	0	; () banked
  1343  000094  6F81               	movwf	printf@fmt& (0+255),b
  1344  000096  0EFF               	movlw	high STR_2
  1345  000098  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1346  00009A  ECE2  F00A         	call	_printf	;wreg free
  1347  00009E                     
  1348                           ;main.c: 72:     printf("Dev'21\r\n");
  1349  00009E  0ED8               	movlw	low STR_3
  1350  0000A0  0100               	movlb	0	; () banked
  1351  0000A2  6F81               	movwf	printf@fmt& (0+255),b
  1352  0000A4  0EFF               	movlw	high STR_3
  1353  0000A6  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1354  0000A8  ECE2  F00A         	call	_printf	;wreg free
  1355  0000AC                     
  1356                           ;main.c: 73:     printf("> ");
  1357  0000AC  0EFB               	movlw	low STR_4
  1358  0000AE  0100               	movlb	0	; () banked
  1359  0000B0  6F81               	movwf	printf@fmt& (0+255),b
  1360  0000B2  0EFF               	movlw	high STR_4
  1361  0000B4  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1362  0000B6  ECE2  F00A         	call	_printf	;wreg free
  1363  0000BA                     
  1364                           ;main.c: 77:     ADCON0bits.GO_NOT_DONE = 1;
  1365  0000BA  82C2               	bsf	194,1,c	;volatile
  1366  0000BC                     l36:
  1367  0000BC  B2C2               	btfsc	194,1,c	;volatile
  1368  0000BE  EF63  F000         	goto	u2281
  1369  0000C2  EF65  F000         	goto	u2280
  1370  0000C6                     u2281:
  1371  0000C6  EF5E  F000         	goto	l36
  1372  0000CA                     u2280:
  1373  0000CA                     l2936:
  1374                           
  1375                           ;main.c: 82:         if(samplesCollected){
  1376  0000CA  0101               	movlb	1	; () banked
  1377  0000CC  5195               	movf	_samplesCollected& (0+255),w,b
  1378  0000CE  B4D8               	btfsc	status,2,c
  1379  0000D0  EF6C  F000         	goto	u2291
  1380  0000D4  EF6E  F000         	goto	u2290
  1381  0000D8                     u2291:
  1382  0000D8  EF08  F002         	goto	l3008
  1383  0000DC                     u2290:
  1384  0000DC                     
  1385                           ; BSR set to: 1
  1386                           ;main.c: 83:             samplesCollected = 0;
  1387  0000DC  0E00               	movlw	0
  1388  0000DE  6F95               	movwf	_samplesCollected& (0+255),b
  1389  0000E0                     
  1390                           ; BSR set to: 1
  1391                           ;main.c: 84:             printf("The last %d ADC samples from the microphone are: \r\n",
      +                           256);
  1392  0000E0  0E4D               	movlw	low STR_5
  1393  0000E2  0100               	movlb	0	; () banked
  1394  0000E4  6F81               	movwf	printf@fmt& (0+255),b
  1395  0000E6  0EFE               	movlw	high STR_5
  1396  0000E8  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1397  0000EA  0E01               	movlw	1
  1398  0000EC  6F84               	movwf	(?_printf+3)& (0+255),b
  1399  0000EE  0E00               	movlw	0
  1400  0000F0  6F83               	movwf	(?_printf+2)& (0+255),b
  1401  0000F2  ECE2  F00A         	call	_printf	;wreg free
  1402  0000F6                     
  1403                           ;main.c: 86:             for(uint16_t i = 0;i<256;i++){
  1404  0000F6  0E00               	movlw	0
  1405  0000F8  0101               	movlb	1	; () banked
  1406  0000FA  6F8C               	movwf	(main@i_214+1)& (0+255),b
  1407  0000FC  0E00               	movlw	0
  1408  0000FE  6F8B               	movwf	main@i_214& (0+255),b
  1409  000100                     l2948:
  1410                           
  1411                           ; BSR set to: 1
  1412                           ;main.c: 87:                 if(i % 16 == 0){
  1413  000100  0E0F               	movlw	15
  1414  000102  158B               	andwf	main@i_214& (0+255),w,b
  1415  000104  0100               	movlb	0	; () banked
  1416  000106  6F8D               	movwf	??_main& (0+255),b
  1417  000108  0E00               	movlw	0
  1418  00010A  0101               	movlb	1	; () banked
  1419  00010C  158C               	andwf	(main@i_214+1)& (0+255),w,b
  1420  00010E  0100               	movlb	0	; () banked
  1421  000110  6F8E               	movwf	(??_main+1)& (0+255),b
  1422  000112  518D               	movf	??_main& (0+255),w,b
  1423  000114  118E               	iorwf	(??_main+1)& (0+255),w,b
  1424  000116  A4D8               	btfss	status,2,c
  1425  000118  EF90  F000         	goto	u2301
  1426  00011C  EF92  F000         	goto	u2300
  1427  000120                     u2301:
  1428  000120  EF9C  F000         	goto	l43
  1429  000124                     u2300:
  1430  000124                     
  1431                           ; BSR set to: 0
  1432                           ;main.c: 88:                     printf("\r\nS[%d] ", i);
  1433  000124  0EE1               	movlw	low STR_6
  1434  000126  6F81               	movwf	printf@fmt& (0+255),b
  1435  000128  0EFF               	movlw	high STR_6
  1436  00012A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1437  00012C  C18B  F083         	movff	main@i_214,?_printf+2
  1438  000130  C18C  F084         	movff	main@i_214+1,?_printf+3
  1439  000134  ECE2  F00A         	call	_printf	;wreg free
  1440  000138                     l43:
  1441                           
  1442                           ;main.c: 90:                 printf("%d ", adc_reading[i]);
  1443  000138  0EF7               	movlw	low STR_7
  1444  00013A  0100               	movlb	0	; () banked
  1445  00013C  6F81               	movwf	printf@fmt& (0+255),b
  1446  00013E  0EFF               	movlw	high STR_7
  1447  000140  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1448  000142  0E00               	movlw	low _adc_reading
  1449  000144  0101               	movlb	1	; () banked
  1450  000146  258B               	addwf	main@i_214& (0+255),w,b
  1451  000148  6ED9               	movwf	fsr2l,c
  1452  00014A  0E02               	movlw	high _adc_reading
  1453  00014C  218C               	addwfc	(main@i_214+1)& (0+255),w,b
  1454  00014E  6EDA               	movwf	fsr2h,c
  1455  000150  50DF               	movf	indf2,w,c
  1456  000152  0100               	movlb	0	; () banked
  1457  000154  6F8D               	movwf	??_main& (0+255),b
  1458  000156  518D               	movf	??_main& (0+255),w,b
  1459  000158  6F83               	movwf	(?_printf+2)& (0+255),b
  1460  00015A  6B84               	clrf	(?_printf+3)& (0+255),b
  1461  00015C  ECE2  F00A         	call	_printf	;wreg free
  1462  000160                     
  1463                           ;main.c: 91:             }
  1464  000160  0101               	movlb	1	; () banked
  1465  000162  4B8B               	infsnz	main@i_214& (0+255),f,b
  1466  000164  2B8C               	incf	(main@i_214+1)& (0+255),f,b
  1467  000166                     
  1468                           ; BSR set to: 1
  1469  000166  058C               	decf	(main@i_214+1)& (0+255),w,b
  1470  000168  A0D8               	btfss	status,0,c
  1471  00016A  EFB9  F000         	goto	u2311
  1472  00016E  EFBB  F000         	goto	u2310
  1473  000172                     u2311:
  1474  000172  EF80  F000         	goto	l2948
  1475  000176                     u2310:
  1476  000176                     
  1477                           ; BSR set to: 1
  1478                           ;main.c: 92:             printf("\r\nThe sound wave crossed at the following indices:\r\
      +                          n");
  1479  000176  0E18               	movlw	low STR_8
  1480  000178  0100               	movlb	0	; () banked
  1481  00017A  6F81               	movwf	printf@fmt& (0+255),b
  1482  00017C  0EFE               	movlw	high STR_8
  1483  00017E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1484  000180  ECE2  F00A         	call	_printf	;wreg free
  1485  000184                     
  1486                           ;main.c: 93:             uint8_t crossings[256/2];;main.c: 94:             uint16_t crId
      +                          x = 0;
  1487  000184  0E00               	movlw	0
  1488  000186  0101               	movlb	1	; () banked
  1489  000188  6F8E               	movwf	(main@crIdx+1)& (0+255),b
  1490  00018A  0E00               	movlw	0
  1491  00018C  6F8D               	movwf	main@crIdx& (0+255),b
  1492  00018E                     
  1493                           ; BSR set to: 1
  1494                           ;main.c: 95:             for(uint16_t i = 1;i<256;i++){
  1495  00018E  0E00               	movlw	0
  1496  000190  6F90               	movwf	(main@i_220+1)& (0+255),b
  1497  000192  0E01               	movlw	1
  1498  000194  6F8F               	movwf	main@i_220& (0+255),b
  1499  000196                     l2966:
  1500                           
  1501                           ; BSR set to: 1
  1502                           ;main.c: 96:                 if(adc_reading[i-1] <= 128 && adc_reading[i] > 128){
  1503  000196  0EFF               	movlw	low (_adc_reading+65535)
  1504  000198  258F               	addwf	main@i_220& (0+255),w,b
  1505  00019A  6ED9               	movwf	fsr2l,c
  1506  00019C  0E01               	movlw	high (_adc_reading+65535)
  1507  00019E  2190               	addwfc	(main@i_220+1)& (0+255),w,b
  1508  0001A0  6EDA               	movwf	fsr2h,c
  1509  0001A2  0E81               	movlw	129
  1510  0001A4  60DF               	cpfslt	indf2,c
  1511  0001A6  EFD7  F000         	goto	u2321
  1512  0001AA  EFD9  F000         	goto	u2320
  1513  0001AE                     u2321:
  1514  0001AE  EFF1  F000         	goto	l2974
  1515  0001B2                     u2320:
  1516  0001B2                     
  1517                           ; BSR set to: 1
  1518  0001B2  0E00               	movlw	low _adc_reading
  1519  0001B4  258F               	addwf	main@i_220& (0+255),w,b
  1520  0001B6  6ED9               	movwf	fsr2l,c
  1521  0001B8  0E02               	movlw	high _adc_reading
  1522  0001BA  2190               	addwfc	(main@i_220+1)& (0+255),w,b
  1523  0001BC  6EDA               	movwf	fsr2h,c
  1524  0001BE  0E80               	movlw	128
  1525  0001C0  64DF               	cpfsgt	indf2,c
  1526  0001C2  EFE5  F000         	goto	u2331
  1527  0001C6  EFE7  F000         	goto	u2330
  1528  0001CA                     u2331:
  1529  0001CA  EFF1  F000         	goto	l2974
  1530  0001CE                     u2330:
  1531  0001CE                     
  1532                           ; BSR set to: 1
  1533                           ;main.c: 97:                     crossings[crIdx] = i - 1;
  1534  0001CE  0E00               	movlw	low main@crossings
  1535  0001D0  258D               	addwf	main@crIdx& (0+255),w,b
  1536  0001D2  6ED9               	movwf	fsr2l,c
  1537  0001D4  0E01               	movlw	high main@crossings
  1538  0001D6  218E               	addwfc	(main@crIdx+1)& (0+255),w,b
  1539  0001D8  6EDA               	movwf	fsr2h,c
  1540  0001DA  058F               	decf	main@i_220& (0+255),w,b
  1541  0001DC  6EDF               	movwf	indf2,c
  1542  0001DE                     
  1543                           ; BSR set to: 1
  1544                           ;main.c: 98:                     crIdx += 1;
  1545  0001DE  4B8D               	infsnz	main@crIdx& (0+255),f,b
  1546  0001E0  2B8E               	incf	(main@crIdx+1)& (0+255),f,b
  1547  0001E2                     l2974:
  1548                           
  1549                           ; BSR set to: 1
  1550                           ;main.c: 100:             }
  1551  0001E2  4B8F               	infsnz	main@i_220& (0+255),f,b
  1552  0001E4  2B90               	incf	(main@i_220+1)& (0+255),f,b
  1553  0001E6                     
  1554                           ; BSR set to: 1
  1555  0001E6  0590               	decf	(main@i_220+1)& (0+255),w,b
  1556  0001E8  A0D8               	btfss	status,0,c
  1557  0001EA  EFF9  F000         	goto	u2341
  1558  0001EE  EFFB  F000         	goto	u2340
  1559  0001F2                     u2341:
  1560  0001F2  EFCB  F000         	goto	l2966
  1561  0001F6                     u2340:
  1562  0001F6                     
  1563                           ; BSR set to: 1
  1564                           ;main.c: 101:             for(uint16_t i = 0;i<crIdx;i++){
  1565  0001F6  0E00               	movlw	0
  1566  0001F8  6F88               	movwf	(main@i_221+1)& (0+255),b
  1567  0001FA  0E00               	movlw	0
  1568  0001FC  6F87               	movwf	main@i_221& (0+255),b
  1569  0001FE  EF18  F001         	goto	l2984
  1570  000202                     l2980:
  1571                           
  1572                           ; BSR set to: 1
  1573                           ;main.c: 102:                 printf("%d ", crossings[i]);
  1574  000202  0EF7               	movlw	low STR_7
  1575  000204  0100               	movlb	0	; () banked
  1576  000206  6F81               	movwf	printf@fmt& (0+255),b
  1577  000208  0EFF               	movlw	high STR_7
  1578  00020A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1579  00020C  0E00               	movlw	low main@crossings
  1580  00020E  0101               	movlb	1	; () banked
  1581  000210  2587               	addwf	main@i_221& (0+255),w,b
  1582  000212  6ED9               	movwf	fsr2l,c
  1583  000214  0E01               	movlw	high main@crossings
  1584  000216  2188               	addwfc	(main@i_221+1)& (0+255),w,b
  1585  000218  6EDA               	movwf	fsr2h,c
  1586  00021A  50DF               	movf	indf2,w,c
  1587  00021C  0100               	movlb	0	; () banked
  1588  00021E  6F8D               	movwf	??_main& (0+255),b
  1589  000220  518D               	movf	??_main& (0+255),w,b
  1590  000222  6F83               	movwf	(?_printf+2)& (0+255),b
  1591  000224  6B84               	clrf	(?_printf+3)& (0+255),b
  1592  000226  ECE2  F00A         	call	_printf	;wreg free
  1593  00022A                     
  1594                           ;main.c: 103:             }
  1595  00022A  0101               	movlb	1	; () banked
  1596  00022C  4B87               	infsnz	main@i_221& (0+255),f,b
  1597  00022E  2B88               	incf	(main@i_221+1)& (0+255),f,b
  1598  000230                     l2984:
  1599                           
  1600                           ; BSR set to: 1
  1601  000230  518D               	movf	main@crIdx& (0+255),w,b
  1602  000232  5D87               	subwf	main@i_221& (0+255),w,b
  1603  000234  518E               	movf	(main@crIdx+1)& (0+255),w,b
  1604  000236  5988               	subwfb	(main@i_221+1)& (0+255),w,b
  1605  000238  A0D8               	btfss	status,0,c
  1606  00023A  EF21  F001         	goto	u2351
  1607  00023E  EF23  F001         	goto	u2350
  1608  000242                     u2351:
  1609  000242  EF01  F001         	goto	l2980
  1610  000246                     u2350:
  1611  000246                     
  1612                           ; BSR set to: 1
  1613                           ;main.c: 104:             printf("\r\nThe sound wave had %d periods:\r\n", crIdx);
  1614  000246  0EAC               	movlw	low STR_10
  1615  000248  0100               	movlb	0	; () banked
  1616  00024A  6F81               	movwf	printf@fmt& (0+255),b
  1617  00024C  0EFE               	movlw	high STR_10
  1618  00024E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1619  000250  C18D  F083         	movff	main@crIdx,?_printf+2
  1620  000254  C18E  F084         	movff	main@crIdx+1,?_printf+3
  1621  000258  ECE2  F00A         	call	_printf	;wreg free
  1622  00025C                     
  1623                           ;main.c: 105:             uint16_t periodSum = 0;
  1624  00025C  0E00               	movlw	0
  1625  00025E  0101               	movlb	1	; () banked
  1626  000260  6F83               	movwf	(main@periodSum+1)& (0+255),b
  1627  000262  0E00               	movlw	0
  1628  000264  6F82               	movwf	main@periodSum& (0+255),b
  1629  000266                     
  1630                           ; BSR set to: 1
  1631                           ;main.c: 106:             for(uint16_t i = 1;i<crIdx;i++){
  1632  000266  0E00               	movlw	0
  1633  000268  6F92               	movwf	(main@i_225+1)& (0+255),b
  1634  00026A  0E01               	movlw	1
  1635  00026C  6F91               	movwf	main@i_225& (0+255),b
  1636  00026E  EFB4  F001         	goto	l2998
  1637  000272                     l2992:
  1638                           
  1639                           ; BSR set to: 1
  1640                           ;main.c: 107:                 printf("%d - %d = %d\r\n", crossings[i], crossings[i-1], c
      +                          rossings[i] - crossings[i-1]);
  1641  000272  0EAF               	movlw	low STR_11
  1642  000274  0100               	movlb	0	; () banked
  1643  000276  6F81               	movwf	printf@fmt& (0+255),b
  1644  000278  0EFF               	movlw	high STR_11
  1645  00027A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1646  00027C  0E00               	movlw	low main@crossings
  1647  00027E  0101               	movlb	1	; () banked
  1648  000280  2591               	addwf	main@i_225& (0+255),w,b
  1649  000282  6ED9               	movwf	fsr2l,c
  1650  000284  0E01               	movlw	high main@crossings
  1651  000286  2192               	addwfc	(main@i_225+1)& (0+255),w,b
  1652  000288  6EDA               	movwf	fsr2h,c
  1653  00028A  50DF               	movf	indf2,w,c
  1654  00028C  0100               	movlb	0	; () banked
  1655  00028E  6F8D               	movwf	??_main& (0+255),b
  1656  000290  518D               	movf	??_main& (0+255),w,b
  1657  000292  6F83               	movwf	(?_printf+2)& (0+255),b
  1658  000294  6B84               	clrf	(?_printf+3)& (0+255),b
  1659  000296  0EFF               	movlw	255
  1660  000298  6F8E               	movwf	(??_main+1)& (0+255),b
  1661  00029A  0EFF               	movlw	255
  1662  00029C  6F8F               	movwf	(??_main+2)& (0+255),b
  1663  00029E  C191  F090         	movff	main@i_225,??_main+3
  1664  0002A2  C192  F091         	movff	main@i_225+1,??_main+4
  1665  0002A6  518E               	movf	(??_main+1)& (0+255),w,b
  1666  0002A8  2790               	addwf	(??_main+3)& (0+255),f,b
  1667  0002AA  518F               	movf	(??_main+2)& (0+255),w,b
  1668  0002AC  2391               	addwfc	(??_main+4)& (0+255),f,b
  1669  0002AE  0E00               	movlw	low main@crossings
  1670  0002B0  2590               	addwf	(??_main+3)& (0+255),w,b
  1671  0002B2  6ED9               	movwf	fsr2l,c
  1672  0002B4  0E01               	movlw	high main@crossings
  1673  0002B6  2191               	addwfc	(??_main+4)& (0+255),w,b
  1674  0002B8  6EDA               	movwf	fsr2h,c
  1675  0002BA  50DF               	movf	indf2,w,c
  1676  0002BC  6F92               	movwf	(??_main+5)& (0+255),b
  1677  0002BE  5192               	movf	(??_main+5)& (0+255),w,b
  1678  0002C0  6F85               	movwf	(?_printf+4)& (0+255),b
  1679  0002C2  6B86               	clrf	(?_printf+5)& (0+255),b
  1680  0002C4  0E00               	movlw	low main@crossings
  1681  0002C6  0101               	movlb	1	; () banked
  1682  0002C8  2591               	addwf	main@i_225& (0+255),w,b
  1683  0002CA  6ED9               	movwf	fsr2l,c
  1684  0002CC  0E01               	movlw	high main@crossings
  1685  0002CE  2192               	addwfc	(main@i_225+1)& (0+255),w,b
  1686  0002D0  6EDA               	movwf	fsr2h,c
  1687  0002D2  50DF               	movf	indf2,w,c
  1688  0002D4  0100               	movlb	0	; () banked
  1689  0002D6  6F93               	movwf	(??_main+6)& (0+255),b
  1690  0002D8  0EFF               	movlw	255
  1691  0002DA  6F94               	movwf	(??_main+7)& (0+255),b
  1692  0002DC  0EFF               	movlw	255
  1693  0002DE  6F95               	movwf	(??_main+8)& (0+255),b
  1694  0002E0  C191  F096         	movff	main@i_225,??_main+9
  1695  0002E4  C192  F097         	movff	main@i_225+1,??_main+10
  1696  0002E8  5194               	movf	(??_main+7)& (0+255),w,b
  1697  0002EA  2796               	addwf	(??_main+9)& (0+255),f,b
  1698  0002EC  5195               	movf	(??_main+8)& (0+255),w,b
  1699  0002EE  2397               	addwfc	(??_main+10)& (0+255),f,b
  1700  0002F0  0E00               	movlw	low main@crossings
  1701  0002F2  2596               	addwf	(??_main+9)& (0+255),w,b
  1702  0002F4  6ED9               	movwf	fsr2l,c
  1703  0002F6  0E01               	movlw	high main@crossings
  1704  0002F8  2197               	addwfc	(??_main+10)& (0+255),w,b
  1705  0002FA  6EDA               	movwf	fsr2h,c
  1706  0002FC  50DF               	movf	indf2,w,c
  1707  0002FE  6F98               	movwf	(??_main+11)& (0+255),b
  1708  000300  5198               	movf	(??_main+11)& (0+255),w,b
  1709  000302  5D93               	subwf	(??_main+6)& (0+255),w,b
  1710  000304  6F87               	movwf	(?_printf+6)& (0+255),b
  1711  000306  6B88               	clrf	(?_printf+7)& (0+255),b
  1712  000308  A0D8               	btfss	status,0,c
  1713  00030A  0788               	decf	(?_printf+7)& (0+255),f,b
  1714  00030C  ECE2  F00A         	call	_printf	;wreg free
  1715  000310                     
  1716                           ;main.c: 108:                 periodSum += crossings[i] - crossings[i-1];
  1717  000310  0E00               	movlw	low main@crossings
  1718  000312  0101               	movlb	1	; () banked
  1719  000314  2591               	addwf	main@i_225& (0+255),w,b
  1720  000316  6ED9               	movwf	fsr2l,c
  1721  000318  0E01               	movlw	high main@crossings
  1722  00031A  2192               	addwfc	(main@i_225+1)& (0+255),w,b
  1723  00031C  6EDA               	movwf	fsr2h,c
  1724  00031E  50DF               	movf	indf2,w,c
  1725  000320  0100               	movlb	0	; () banked
  1726  000322  6F8D               	movwf	??_main& (0+255),b
  1727  000324  6B8E               	clrf	(??_main+1)& (0+255),b
  1728  000326  0EFF               	movlw	255
  1729  000328  6F8F               	movwf	(??_main+2)& (0+255),b
  1730  00032A  0EFF               	movlw	255
  1731  00032C  6F90               	movwf	(??_main+3)& (0+255),b
  1732  00032E  C191  F091         	movff	main@i_225,??_main+4
  1733  000332  C192  F092         	movff	main@i_225+1,??_main+5
  1734  000336  518F               	movf	(??_main+2)& (0+255),w,b
  1735  000338  2791               	addwf	(??_main+4)& (0+255),f,b
  1736  00033A  5190               	movf	(??_main+3)& (0+255),w,b
  1737  00033C  2392               	addwfc	(??_main+5)& (0+255),f,b
  1738  00033E  0E00               	movlw	low main@crossings
  1739  000340  2591               	addwf	(??_main+4)& (0+255),w,b
  1740  000342  6ED9               	movwf	fsr2l,c
  1741  000344  0E01               	movlw	high main@crossings
  1742  000346  2192               	addwfc	(??_main+5)& (0+255),w,b
  1743  000348  6EDA               	movwf	fsr2h,c
  1744  00034A  50DF               	movf	indf2,w,c
  1745  00034C  6F93               	movwf	(??_main+6)& (0+255),b
  1746  00034E  5193               	movf	(??_main+6)& (0+255),w,b
  1747  000350  5F8D               	subwf	??_main& (0+255),f,b
  1748  000352  0E00               	movlw	0
  1749  000354  5B8E               	subwfb	(??_main+1)& (0+255),f,b
  1750  000356  518D               	movf	??_main& (0+255),w,b
  1751  000358  0101               	movlb	1	; () banked
  1752  00035A  2782               	addwf	main@periodSum& (0+255),f,b
  1753  00035C  0100               	movlb	0	; () banked
  1754  00035E  518E               	movf	(??_main+1)& (0+255),w,b
  1755  000360  0101               	movlb	1	; () banked
  1756  000362  2383               	addwfc	(main@periodSum+1)& (0+255),f,b
  1757  000364                     
  1758                           ; BSR set to: 1
  1759                           ;main.c: 109:             }
  1760  000364  4B91               	infsnz	main@i_225& (0+255),f,b
  1761  000366  2B92               	incf	(main@i_225+1)& (0+255),f,b
  1762  000368                     l2998:
  1763                           
  1764                           ; BSR set to: 1
  1765  000368  518D               	movf	main@crIdx& (0+255),w,b
  1766  00036A  5D91               	subwf	main@i_225& (0+255),w,b
  1767  00036C  518E               	movf	(main@crIdx+1)& (0+255),w,b
  1768  00036E  5992               	subwfb	(main@i_225+1)& (0+255),w,b
  1769  000370  A0D8               	btfss	status,0,c
  1770  000372  EFBD  F001         	goto	u2361
  1771  000376  EFBF  F001         	goto	u2360
  1772  00037A                     u2361:
  1773  00037A  EF39  F001         	goto	l2992
  1774  00037E                     u2360:
  1775  00037E                     
  1776                           ; BSR set to: 1
  1777                           ;main.c: 112:             uint16_t periodSumUs = periodSum * 25;
  1778  00037E  C182  F00C         	movff	main@periodSum,___wmul@multiplier
  1779  000382  C183  F00D         	movff	main@periodSum+1,___wmul@multiplier+1
  1780  000386  0E00               	movlw	0
  1781  000388  6E0F               	movwf	(___wmul@multiplicand+1)^0,c
  1782  00038A  0E19               	movlw	25
  1783  00038C  6E0E               	movwf	___wmul@multiplicand^0,c
  1784  00038E  ECF6  F00A         	call	___wmul	;wreg free
  1785  000392  C00C  F180         	movff	?___wmul,main@periodSumUs
  1786  000396  C00D  F181         	movff	?___wmul+1,main@periodSumUs+1
  1787  00039A                     
  1788                           ;main.c: 113:             uint16_t avgPeriodUs = periodSumUs/(crIdx-1);
  1789  00039A  C180  F00C         	movff	main@periodSumUs,___lwdiv@dividend
  1790  00039E  C181  F00D         	movff	main@periodSumUs+1,___lwdiv@dividend+1
  1791  0003A2  0EFF               	movlw	255
  1792  0003A4  0101               	movlb	1	; () banked
  1793  0003A6  258D               	addwf	main@crIdx& (0+255),w,b
  1794  0003A8  6E0E               	movwf	___lwdiv@divisor^0,c
  1795  0003AA  0EFF               	movlw	255
  1796  0003AC  218E               	addwfc	(main@crIdx+1)& (0+255),w,b
  1797  0003AE  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1798  0003B0  EC6E  F009         	call	___lwdiv	;wreg free
  1799  0003B4  C00C  F184         	movff	?___lwdiv,main@avgPeriodUs
  1800  0003B8  C00D  F185         	movff	?___lwdiv+1,main@avgPeriodUs+1
  1801  0003BC                     
  1802                           ;main.c: 114:             printf("\r\naverage period = %d us\r\n", avgPeriodUs);
  1803  0003BC  0E0E               	movlw	low STR_12
  1804  0003BE  0100               	movlb	0	; () banked
  1805  0003C0  6F81               	movwf	printf@fmt& (0+255),b
  1806  0003C2  0EFF               	movlw	high STR_12
  1807  0003C4  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1808  0003C6  C184  F083         	movff	main@avgPeriodUs,?_printf+2
  1809  0003CA  C185  F084         	movff	main@avgPeriodUs+1,?_printf+3
  1810  0003CE  ECE2  F00A         	call	_printf	;wreg free
  1811  0003D2                     
  1812                           ;main.c: 115:             printf("\r\naverage frequendy = %d Hz\r\n", 1000000/avgPeriodU
      +                          s);
  1813  0003D2  0EF0               	movlw	low STR_13
  1814  0003D4  0100               	movlb	0	; () banked
  1815  0003D6  6F81               	movwf	printf@fmt& (0+255),b
  1816  0003D8  0EFE               	movlw	high STR_13
  1817  0003DA  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1818  0003DC  0E40               	movlw	64
  1819  0003DE  6E0C               	movwf	___aldiv@dividend^0,c
  1820  0003E0  0E42               	movlw	66
  1821  0003E2  6E0D               	movwf	(___aldiv@dividend+1)^0,c
  1822  0003E4  0E0F               	movlw	15
  1823  0003E6  6E0E               	movwf	(___aldiv@dividend+2)^0,c
  1824  0003E8  0E00               	movlw	0
  1825  0003EA  6E0F               	movwf	(___aldiv@dividend+3)^0,c
  1826  0003EC  C184  F010         	movff	main@avgPeriodUs,___aldiv@divisor
  1827  0003F0  C185  F011         	movff	main@avgPeriodUs+1,___aldiv@divisor+1
  1828  0003F4  6A12               	clrf	(___aldiv@divisor+2)^0,c
  1829  0003F6  6A13               	clrf	(___aldiv@divisor+3)^0,c
  1830  0003F8  EC4F  F007         	call	___aldiv	;wreg free
  1831  0003FC  C00C  F083         	movff	?___aldiv,?_printf+2
  1832  000400  C00D  F084         	movff	?___aldiv+1,?_printf+3
  1833  000404  C00E  F085         	movff	?___aldiv+2,?_printf+4
  1834  000408  C00F  F086         	movff	?___aldiv+3,?_printf+5
  1835  00040C  ECE2  F00A         	call	_printf	;wreg free
  1836  000410                     l3008:
  1837                           
  1838                           ;main.c: 118:         if ((EUSART1_is_rx_ready())) {
  1839  000410  EC3A  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  1840  000414  0900               	iorlw	0
  1841  000416  B4D8               	btfsc	status,2,c
  1842  000418  EF10  F002         	goto	u2371
  1843  00041C  EF12  F002         	goto	u2370
  1844  000420                     u2371:
  1845  000420  EF65  F000         	goto	l2936
  1846  000424                     u2370:
  1847  000424                     
  1848                           ;main.c: 119:             cmd = EUSART1_Read();
  1849  000424  ECCD  F00A         	call	_EUSART1_Read	;wreg free
  1850  000428  0101               	movlb	1	; () banked
  1851  00042A  6F86               	movwf	main@cmd& (0+255),b
  1852                           
  1853                           ;main.c: 120:             switch (cmd) {
  1854  00042C  EF22  F003         	goto	l3058
  1855  000430                     l3012:
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;main.c: 123:                     printf("------------------------------\r\n");
  1859  000430  0ECF               	movlw	low STR_14
  1860  000432  6F81               	movwf	printf@fmt& (0+255),b
  1861  000434  0EFE               	movlw	high STR_14
  1862  000436  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1863  000438  ECE2  F00A         	call	_printf	;wreg free
  1864                           
  1865                           ;main.c: 124:                     printf("?: Help menu\r\n");
  1866  00043C  0EBE               	movlw	low STR_15
  1867  00043E  0100               	movlb	0	; () banked
  1868  000440  6F81               	movwf	printf@fmt& (0+255),b
  1869  000442  0EFF               	movlw	high STR_15
  1870  000444  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1871  000446  ECE2  F00A         	call	_printf	;wreg free
  1872                           
  1873                           ;main.c: 125:                     printf("o: k\r\n");
  1874  00044A  0EEA               	movlw	low STR_16
  1875  00044C  0100               	movlb	0	; () banked
  1876  00044E  6F81               	movwf	printf@fmt& (0+255),b
  1877  000450  0EFF               	movlw	high STR_16
  1878  000452  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1879  000454  ECE2  F00A         	call	_printf	;wreg free
  1880                           
  1881                           ;main.c: 126:                     printf("Z: Reset processor\r\n");
  1882  000458  0E89               	movlw	low STR_17
  1883  00045A  0100               	movlb	0	; () banked
  1884  00045C  6F81               	movwf	printf@fmt& (0+255),b
  1885  00045E  0EFF               	movlw	high STR_17
  1886  000460  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1887  000462  ECE2  F00A         	call	_printf	;wreg free
  1888                           
  1889                           ;main.c: 127:                     printf("z: Clear the terminal\r\n");
  1890  000466  0E5A               	movlw	low STR_18
  1891  000468  0100               	movlb	0	; () banked
  1892  00046A  6F81               	movwf	printf@fmt& (0+255),b
  1893  00046C  0EFF               	movlw	high STR_18
  1894  00046E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1895  000470  ECE2  F00A         	call	_printf	;wreg free
  1896                           
  1897                           ;main.c: 128:                     printf("T/t: Increase/decrease threshold 138-118\r\n")
      +                          ;
  1898  000474  0E81               	movlw	low STR_19
  1899  000476  0100               	movlb	0	; () banked
  1900  000478  6F81               	movwf	printf@fmt& (0+255),b
  1901  00047A  0EFE               	movlw	high STR_19
  1902  00047C  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1903  00047E  ECE2  F00A         	call	_printf	;wreg free
  1904                           
  1905                           ;main.c: 129:                     printf("f: gather %d samples from the microphone and c
      +                          alculate the frequency\r\n", 256);
  1906  000482  0ED1               	movlw	low STR_20
  1907  000484  0100               	movlb	0	; () banked
  1908  000486  6F81               	movwf	printf@fmt& (0+255),b
  1909  000488  0EFD               	movlw	high STR_20
  1910  00048A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1911  00048C  0E01               	movlw	1
  1912  00048E  6F84               	movwf	(?_printf+3)& (0+255),b
  1913  000490  0E00               	movlw	0
  1914  000492  6F83               	movwf	(?_printf+2)& (0+255),b
  1915  000494  ECE2  F00A         	call	_printf	;wreg free
  1916                           
  1917                           ;main.c: 131:                     printf("------------------------------\r\n");
  1918  000498  0ECF               	movlw	low STR_14
  1919  00049A  0100               	movlb	0	; () banked
  1920  00049C  6F81               	movwf	printf@fmt& (0+255),b
  1921  00049E  0EFE               	movlw	high STR_14
  1922  0004A0  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1923  0004A2  ECE2  F00A         	call	_printf	;wreg free
  1924                           
  1925                           ;main.c: 132:                     break;
  1926  0004A6  EF65  F000         	goto	l2936
  1927  0004AA                     l3014:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;main.c: 138:                     printf(" k\r\n>");
  1931  0004AA  0EF1               	movlw	low STR_22
  1932  0004AC  6F81               	movwf	printf@fmt& (0+255),b
  1933  0004AE  0EFF               	movlw	high STR_22
  1934  0004B0  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1935  0004B2  ECE2  F00A         	call	_printf	;wreg free
  1936                           
  1937                           ;main.c: 139:                     break;
  1938  0004B6  EF65  F000         	goto	l2936
  1939  0004BA                     l3016:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;main.c: 145:                     for (i = 0; i < 40; i++) printf("\n");
  1943  0004BA  0E00               	movlw	0
  1944  0004BC  0101               	movlb	1	; () banked
  1945  0004BE  6F8A               	movwf	(main@i+1)& (0+255),b
  1946  0004C0  0E00               	movlw	0
  1947  0004C2  6F89               	movwf	main@i& (0+255),b
  1948  0004C4                     l3018:
  1949                           
  1950                           ; BSR set to: 1
  1951  0004C4  518A               	movf	(main@i+1)& (0+255),w,b
  1952  0004C6  E109               	bnz	u2380
  1953  0004C8  0E28               	movlw	40
  1954  0004CA  5D89               	subwf	main@i& (0+255),w,b
  1955  0004CC  A0D8               	btfss	status,0,c
  1956  0004CE  EF6B  F002         	goto	u2381
  1957  0004D2  EF6D  F002         	goto	u2380
  1958  0004D6                     u2381:
  1959  0004D6  EF6F  F002         	goto	l3022
  1960  0004DA                     u2380:
  1961  0004DA  EF7B  F002         	goto	l60
  1962  0004DE                     l3022:
  1963                           
  1964                           ; BSR set to: 1
  1965  0004DE  0E7F               	movlw	low (STR_5+50)
  1966  0004E0  0100               	movlb	0	; () banked
  1967  0004E2  6F81               	movwf	printf@fmt& (0+255),b
  1968  0004E4  0EFE               	movlw	high (STR_5+50)
  1969  0004E6  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1970  0004E8  ECE2  F00A         	call	_printf	;wreg free
  1971  0004EC  0101               	movlb	1	; () banked
  1972  0004EE  4B89               	infsnz	main@i& (0+255),f,b
  1973  0004F0  2B8A               	incf	(main@i+1)& (0+255),f,b
  1974  0004F2  EF62  F002         	goto	l3018
  1975  0004F6                     l60:
  1976                           
  1977                           ; BSR set to: 1
  1978  0004F6  00FF               	reset		;# 
  1979                           
  1980                           ;main.c: 147:                     break;
  1981  0004F8  EF65  F000         	goto	l2936
  1982  0004FC                     l3028:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;main.c: 153:                     for (i = 0; i < 40; i++) printf("\n>");
  1986  0004FC  0E00               	movlw	0
  1987  0004FE  0101               	movlb	1	; () banked
  1988  000500  6F8A               	movwf	(main@i+1)& (0+255),b
  1989  000502  0E00               	movlw	0
  1990  000504  6F89               	movwf	main@i& (0+255),b
  1991  000506                     l3030:
  1992                           
  1993                           ; BSR set to: 1
  1994  000506  518A               	movf	(main@i+1)& (0+255),w,b
  1995  000508  E109               	bnz	u2390
  1996  00050A  0E28               	movlw	40
  1997  00050C  5D89               	subwf	main@i& (0+255),w,b
  1998  00050E  A0D8               	btfss	status,0,c
  1999  000510  EF8C  F002         	goto	u2391
  2000  000514  EF8E  F002         	goto	u2390
  2001  000518                     u2391:
  2002  000518  EF90  F002         	goto	l3034
  2003  00051C                     u2390:
  2004  00051C  EF65  F000         	goto	l2936
  2005  000520                     l3034:
  2006                           
  2007                           ; BSR set to: 1
  2008  000520  0EF4               	movlw	low (STR_22+3)
  2009  000522  0100               	movlb	0	; () banked
  2010  000524  6F81               	movwf	printf@fmt& (0+255),b
  2011  000526  0EFF               	movlw	high (STR_22+3)
  2012  000528  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2013  00052A  ECE2  F00A         	call	_printf	;wreg free
  2014  00052E  0101               	movlb	1	; () banked
  2015  000530  4B89               	infsnz	main@i& (0+255),f,b
  2016  000532  2B8A               	incf	(main@i+1)& (0+255),f,b
  2017  000534  EF83  F002         	goto	l3030
  2018  000538                     l3040:
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;main.c: 157:                     thresholdRange += 5;
  2022  000538  0E05               	movlw	5
  2023  00053A  0101               	movlb	1	; () banked
  2024  00053C  2793               	addwf	_thresholdRange& (0+255),f,b
  2025  00053E  0E00               	movlw	0
  2026  000540  2394               	addwfc	(_thresholdRange+1)& (0+255),f,b
  2027  000542                     
  2028                           ; BSR set to: 1
  2029                           ;main.c: 158:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRan
      +                          ge, 128 + thresholdRange);
  2030  000542  0E42               	movlw	low STR_25
  2031  000544  0100               	movlb	0	; () banked
  2032  000546  6F81               	movwf	printf@fmt& (0+255),b
  2033  000548  0EFF               	movlw	high STR_25
  2034  00054A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2035  00054C  0101               	movlb	1	; () banked
  2036  00054E  5193               	movf	_thresholdRange& (0+255),w,b
  2037  000550  0880               	sublw	128
  2038  000552  0100               	movlb	0	; () banked
  2039  000554  6F83               	movwf	(?_printf+2)& (0+255),b
  2040  000556  0101               	movlb	1	; () banked
  2041  000558  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  2042  00055A  A0D8               	btfss	status,0,c
  2043  00055C  2AE8               	incf	wreg,f,c
  2044  00055E  0800               	sublw	0
  2045  000560  0100               	movlb	0	; () banked
  2046  000562  6F84               	movwf	(?_printf+3)& (0+255),b
  2047  000564  0E80               	movlw	128
  2048  000566  0101               	movlb	1	; () banked
  2049  000568  2593               	addwf	_thresholdRange& (0+255),w,b
  2050  00056A  0100               	movlb	0	; () banked
  2051  00056C  6F85               	movwf	(?_printf+4)& (0+255),b
  2052  00056E  0E00               	movlw	0
  2053  000570  0101               	movlb	1	; () banked
  2054  000572  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2055  000574  0100               	movlb	0	; () banked
  2056  000576  6F86               	movwf	(?_printf+5)& (0+255),b
  2057  000578  ECE2  F00A         	call	_printf	;wreg free
  2058                           
  2059                           ;main.c: 159:                     break;
  2060  00057C  EF65  F000         	goto	l2936
  2061  000580                     l3044:
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;main.c: 161:                     if(thresholdRange > 0){
  2065  000580  0101               	movlb	1	; () banked
  2066  000582  5193               	movf	_thresholdRange& (0+255),w,b
  2067  000584  1194               	iorwf	(_thresholdRange+1)& (0+255),w,b
  2068  000586  B4D8               	btfsc	status,2,c
  2069  000588  EFC8  F002         	goto	u2401
  2070  00058C  EFCA  F002         	goto	u2400
  2071  000590                     u2401:
  2072  000590  EFED  F002         	goto	l3050
  2073  000594                     u2400:
  2074  000594                     
  2075                           ; BSR set to: 1
  2076                           ;main.c: 162:                         thresholdRange -= 5;
  2077  000594  0E05               	movlw	5
  2078  000596  5F93               	subwf	_thresholdRange& (0+255),f,b
  2079  000598  0E00               	movlw	0
  2080  00059A  5B94               	subwfb	(_thresholdRange+1)& (0+255),f,b
  2081  00059C                     
  2082                           ; BSR set to: 1
  2083                           ;main.c: 163:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRan
      +                          ge, 128 + thresholdRange);
  2084  00059C  0E42               	movlw	low STR_25
  2085  00059E  0100               	movlb	0	; () banked
  2086  0005A0  6F81               	movwf	printf@fmt& (0+255),b
  2087  0005A2  0EFF               	movlw	high STR_25
  2088  0005A4  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2089  0005A6  0101               	movlb	1	; () banked
  2090  0005A8  5193               	movf	_thresholdRange& (0+255),w,b
  2091  0005AA  0880               	sublw	128
  2092  0005AC  0100               	movlb	0	; () banked
  2093  0005AE  6F83               	movwf	(?_printf+2)& (0+255),b
  2094  0005B0  0101               	movlb	1	; () banked
  2095  0005B2  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  2096  0005B4  A0D8               	btfss	status,0,c
  2097  0005B6  2AE8               	incf	wreg,f,c
  2098  0005B8  0800               	sublw	0
  2099  0005BA  0100               	movlb	0	; () banked
  2100  0005BC  6F84               	movwf	(?_printf+3)& (0+255),b
  2101  0005BE  0E80               	movlw	128
  2102  0005C0  0101               	movlb	1	; () banked
  2103  0005C2  2593               	addwf	_thresholdRange& (0+255),w,b
  2104  0005C4  0100               	movlb	0	; () banked
  2105  0005C6  6F85               	movwf	(?_printf+4)& (0+255),b
  2106  0005C8  0E00               	movlw	0
  2107  0005CA  0101               	movlb	1	; () banked
  2108  0005CC  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2109  0005CE  0100               	movlb	0	; () banked
  2110  0005D0  6F86               	movwf	(?_printf+5)& (0+255),b
  2111  0005D2  ECE2  F00A         	call	_printf	;wreg free
  2112                           
  2113                           ;main.c: 164:                     }
  2114  0005D6  EF65  F000         	goto	l2936
  2115  0005DA                     l3050:
  2116                           
  2117                           ; BSR set to: 1
  2118                           ;main.c: 166:                         printf("Volume range: %d - %d\r\n", 128 - threshol
      +                          dRange, 128 + thresholdRange);
  2119  0005DA  0E42               	movlw	low STR_25
  2120  0005DC  0100               	movlb	0	; () banked
  2121  0005DE  6F81               	movwf	printf@fmt& (0+255),b
  2122  0005E0  0EFF               	movlw	high STR_25
  2123  0005E2  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2124  0005E4  0101               	movlb	1	; () banked
  2125  0005E6  5193               	movf	_thresholdRange& (0+255),w,b
  2126  0005E8  0880               	sublw	128
  2127  0005EA  0100               	movlb	0	; () banked
  2128  0005EC  6F83               	movwf	(?_printf+2)& (0+255),b
  2129  0005EE  0101               	movlb	1	; () banked
  2130  0005F0  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  2131  0005F2  A0D8               	btfss	status,0,c
  2132  0005F4  2AE8               	incf	wreg,f,c
  2133  0005F6  0800               	sublw	0
  2134  0005F8  0100               	movlb	0	; () banked
  2135  0005FA  6F84               	movwf	(?_printf+3)& (0+255),b
  2136  0005FC  0E80               	movlw	128
  2137  0005FE  0101               	movlb	1	; () banked
  2138  000600  2593               	addwf	_thresholdRange& (0+255),w,b
  2139  000602  0100               	movlb	0	; () banked
  2140  000604  6F85               	movwf	(?_printf+4)& (0+255),b
  2141  000606  0E00               	movlw	0
  2142  000608  0101               	movlb	1	; () banked
  2143  00060A  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2144  00060C  0100               	movlb	0	; () banked
  2145  00060E  6F86               	movwf	(?_printf+5)& (0+255),b
  2146  000610  ECE2  F00A         	call	_printf	;wreg free
  2147                           
  2148                           ;main.c: 167:                         printf("Threshold at minimum\r\n");
  2149  000614  0E72               	movlw	low STR_28
  2150  000616  0100               	movlb	0	; () banked
  2151  000618  6F81               	movwf	printf@fmt& (0+255),b
  2152  00061A  0EFF               	movlw	high STR_28
  2153  00061C  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2154  00061E  ECE2  F00A         	call	_printf	;wreg free
  2155  000622  EF65  F000         	goto	l2936
  2156  000626                     l3052:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;main.c: 173:                     fillBuffer = 1;
  2160  000626  0E01               	movlw	1
  2161  000628  6E50               	movwf	_fillBuffer^0,c
  2162                           
  2163                           ;main.c: 174:                     break;
  2164  00062A  EF65  F000         	goto	l2936
  2165  00062E                     l3054:
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;main.c: 212:                     printf("Unknown key %c\r\n", cmd);
  2169  00062E  0E9E               	movlw	low STR_29
  2170  000630  6F81               	movwf	printf@fmt& (0+255),b
  2171  000632  0EFF               	movlw	high STR_29
  2172  000634  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2173  000636  C186  F083         	movff	main@cmd,?_printf+2
  2174  00063A  6B84               	clrf	(?_printf+3)& (0+255),b
  2175  00063C  ECE2  F00A         	call	_printf	;wreg free
  2176                           
  2177                           ;main.c: 213:                     break;
  2178  000640  EF65  F000         	goto	l2936
  2179  000644                     l3058:
  2180                           
  2181                           ; BSR set to: 1
  2182  000644  5186               	movf	main@cmd& (0+255),w,b
  2183  000646  0100               	movlb	0	; () banked
  2184  000648  6F8D               	movwf	??_main& (0+255),b
  2185  00064A  6B8E               	clrf	(??_main+1)& (0+255),b
  2186                           
  2187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2188                           ; Switch size 1, requested type "simple"
  2189                           ; Number of cases is 1, Range of values is 0 to 0
  2190                           ; switch strategies available:
  2191                           ; Name         Instructions Cycles
  2192                           ; simple_byte            4     3 (average)
  2193                           ;	Chosen strategy is simple_byte
  2194  00064C  518E               	movf	(??_main+1)& (0+255),w,b
  2195  00064E  0A00               	xorlw	0	; case 0
  2196  000650  B4D8               	btfsc	status,2,c
  2197  000652  EF2D  F003         	goto	l3116
  2198  000656  EF17  F003         	goto	l3054
  2199  00065A                     l3116:
  2200                           
  2201                           ; BSR set to: 0
  2202                           ; Switch size 1, requested type "simple"
  2203                           ; Number of cases is 7, Range of values is 63 to 122
  2204                           ; switch strategies available:
  2205                           ; Name         Instructions Cycles
  2206                           ; simple_byte           22    12 (average)
  2207                           ;	Chosen strategy is simple_byte
  2208  00065A  518D               	movf	??_main& (0+255),w,b
  2209  00065C  0A3F               	xorlw	63	; case 63
  2210  00065E  B4D8               	btfsc	status,2,c
  2211  000660  EF18  F002         	goto	l3012
  2212  000664  0A6B               	xorlw	107	; case 84
  2213  000666  B4D8               	btfsc	status,2,c
  2214  000668  EF9C  F002         	goto	l3040
  2215  00066C  0A0E               	xorlw	14	; case 90
  2216  00066E  B4D8               	btfsc	status,2,c
  2217  000670  EF5D  F002         	goto	l3016
  2218  000674  0A3C               	xorlw	60	; case 102
  2219  000676  B4D8               	btfsc	status,2,c
  2220  000678  EF13  F003         	goto	l3052
  2221  00067C  0A09               	xorlw	9	; case 111
  2222  00067E  B4D8               	btfsc	status,2,c
  2223  000680  EF55  F002         	goto	l3014
  2224  000684  0A1B               	xorlw	27	; case 116
  2225  000686  B4D8               	btfsc	status,2,c
  2226  000688  EFC0  F002         	goto	l3044
  2227  00068C  0A0E               	xorlw	14	; case 122
  2228  00068E  B4D8               	btfsc	status,2,c
  2229  000690  EF7E  F002         	goto	l3028
  2230  000694  EF17  F003         	goto	l3054
  2231  000698  EF27  F000         	goto	start
  2232  00069C                     __end_of_main:
  2233                           	callstack 0
  2234                           
  2235 ;; *************** function _printf *****************
  2236 ;; Defined at:
  2237 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  2240 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2241 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2242 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2243 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2244 ;;		 -> STR_13(30), STR_12(27), STR_11(15), STR_10(35), 
  2245 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2246 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2247 ;;		 -> STR_1(11), 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  ap              2   43[BANK0 ] PTR void [1]
  2250 ;;		 -> ?_printf(2), 
  2251 ;;  ret             2    0        int 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  2   33[BANK0 ] int 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2261 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;Total ram usage:       12 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:   12
  2268 ;; This function calls:
  2269 ;;		_vfprintf
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text1
  2276  0015C4                     __ptext1:
  2277                           	callstack 0
  2278  0015C4                     _printf:
  2279                           	callstack 18
  2280  0015C4  0E83               	movlw	low (?_printf+2)
  2281  0015C6  0100               	movlb	0	; () banked
  2282  0015C8  6F8B               	movwf	printf@ap& (0+255),b
  2283  0015CA  0E00               	movlw	high (?_printf+2)
  2284  0015CC  6F8C               	movwf	(printf@ap+1)& (0+255),b
  2285  0015CE                     
  2286                           ; BSR set to: 0
  2287  0015CE  0E00               	movlw	0
  2288  0015D0  6F7B               	movwf	vfprintf@fp& (0+255),b
  2289  0015D2  0E00               	movlw	0
  2290  0015D4  6F7C               	movwf	(vfprintf@fp+1)& (0+255),b
  2291  0015D6  C081  F07D         	movff	printf@fmt,vfprintf@fmt
  2292  0015DA  C082  F07E         	movff	printf@fmt+1,vfprintf@fmt+1
  2293  0015DE  0E8B               	movlw	low printf@ap
  2294  0015E0  6F7F               	movwf	vfprintf@ap& (0+255),b
  2295  0015E2  0E00               	movlw	high printf@ap
  2296  0015E4  6F80               	movwf	(vfprintf@ap+1)& (0+255),b
  2297  0015E6  ECA8  F009         	call	_vfprintf	;wreg free
  2298  0015EA  0012               	return		;funcret
  2299  0015EC                     __end_of_printf:
  2300                           	callstack 0
  2301                           
  2302 ;; *************** function _vfprintf *****************
  2303 ;; Defined at:
  2304 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2307 ;;		 -> NULL(0), 
  2308 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  2309 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2310 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2311 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2312 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2313 ;;		 -> STR_13(30), STR_12(27), STR_11(15), STR_10(35), 
  2314 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2315 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2316 ;;		 -> STR_1(11), 
  2317 ;;  ap              2   31[BANK0 ] PTR PTR void 
  2318 ;;		 -> printf@ap(2), 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  cfmt            2   66[COMRAM] PTR unsigned char 
  2321 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2322 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2323 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2324 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2325 ;;		 -> STR_13(30), STR_12(27), STR_11(15), STR_10(35), 
  2326 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2327 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2328 ;;		 -> STR_1(11), 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  2   27[BANK0 ] int 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2338 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;Total ram usage:        8 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:   11
  2345 ;; This function calls:
  2346 ;;		_vfpfcnvrt
  2347 ;; This function is called by:
  2348 ;;		_printf
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text2
  2353  001350                     __ptext2:
  2354                           	callstack 0
  2355  001350                     _vfprintf:
  2356                           	callstack 18
  2357  001350                     
  2358                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2359  001350  C07D  F043         	movff	vfprintf@fmt,vfprintf@cfmt
  2360  001354  C07E  F044         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2361  001358                     
  2362                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2363  001358  0E00               	movlw	0
  2364  00135A  0100               	movlb	0	; () banked
  2365  00135C  6F9A               	movwf	(_nout+1)& (0+255),b
  2366  00135E  0E00               	movlw	0
  2367  001360  6F99               	movwf	_nout& (0+255),b
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2370  001362  EFC6  F009         	goto	l2906
  2371  001366                     l2904:
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2375  001366  C07B  F03B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2376  00136A  C07C  F03C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2377  00136E  0E43               	movlw	low vfprintf@cfmt
  2378  001370  6E3D               	movwf	vfpfcnvrt@fmt^0,c
  2379  001372  0E00               	movlw	high vfprintf@cfmt
  2380  001374  6E3E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2381  001376  C07F  F03F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2382  00137A  C080  F040         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2383  00137E  ECBF  F004         	call	_vfpfcnvrt	;wreg free
  2384  001382  503B               	movf	?_vfpfcnvrt^0,w,c
  2385  001384  0100               	movlb	0	; () banked
  2386  001386  2799               	addwf	_nout& (0+255),f,b
  2387  001388  503C               	movf	(?_vfpfcnvrt+1)^0,w,c
  2388  00138A  239A               	addwfc	(_nout+1)& (0+255),f,b
  2389  00138C                     l2906:
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2393  00138C  C043  FFF6         	movff	vfprintf@cfmt,tblptrl
  2394  001390  C044  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2395  001394                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2396  001394  6AF8               	clrf	tblptru,c
  2397  001396                     	endif
  2398  001396                     	if	0	;tblptru may be non-zero
  2399  001396                     	endif
  2400  001396  0008               	tblrd		*
  2401  001398  50F5               	movf	tablat,w,c
  2402  00139A  0900               	iorlw	0
  2403  00139C  A4D8               	btfss	status,2,c
  2404  00139E  EFD3  F009         	goto	u2261
  2405  0013A2  EFD5  F009         	goto	u2260
  2406  0013A6                     u2261:
  2407  0013A6  EFB3  F009         	goto	l2904
  2408  0013AA                     u2260:
  2409  0013AA                     
  2410                           ; BSR set to: 0
  2411                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2412  0013AA  C099  F07B         	movff	_nout,?_vfprintf
  2413  0013AE  C09A  F07C         	movff	_nout+1,?_vfprintf+1
  2414  0013B2                     
  2415                           ; BSR set to: 0
  2416  0013B2  0012               	return		;funcret
  2417  0013B4                     __end_of_vfprintf:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _vfpfcnvrt *****************
  2421 ;; Defined at:
  2422 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  fp              2   58[COMRAM] PTR struct _IO_FILE
  2425 ;;		 -> NULL(0), 
  2426 ;;  fmt             2   60[COMRAM] PTR PTR unsigned char 
  2427 ;;		 -> vfprintf@cfmt(2), 
  2428 ;;  ap              2   62[COMRAM] PTR PTR void 
  2429 ;;		 -> printf@ap(2), 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  ll              8   18[BANK0 ] long long 
  2432 ;;  llu             8    0        unsigned long long 
  2433 ;;  f               4    0        unsigned long long 
  2434 ;;  vp              3    0        PTR void 
  2435 ;;  ct              3    0        unsigned char [3]
  2436 ;;  cp              3    0        PTR unsigned char 
  2437 ;;  i               2    0        int 
  2438 ;;  done            2    0        int 
  2439 ;;  c               1   26[BANK0 ] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  2   58[COMRAM] int 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2449 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;Total ram usage:       17 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:   10
  2456 ;; This function calls:
  2457 ;;		_ctoa
  2458 ;;		_dtoa
  2459 ;;		_fputc
  2460 ;; This function is called by:
  2461 ;;		_vfprintf
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text3
  2466  00097E                     __ptext3:
  2467                           	callstack 0
  2468  00097E                     _vfpfcnvrt:
  2469                           	callstack 18
  2470  00097E                     
  2471                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2472  00097E  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2473  000982  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2474  000986  CFDE FFF6          	movff	postinc2,tblptrl
  2475  00098A  CFDD FFF7          	movff	postdec2,tblptrh
  2476  00098E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2477  00098E  6AF8               	clrf	tblptru,c
  2478  000990                     	endif
  2479  000990                     	if	0	;tblptru may be non-zero
  2480  000990                     	endif
  2481  000990  0008               	tblrd		*
  2482  000992  50F5               	movf	tablat,w,c
  2483  000994  0A25               	xorlw	37
  2484  000996  A4D8               	btfss	status,2,c
  2485  000998  EFD0  F004         	goto	u2211
  2486  00099C  EFD2  F004         	goto	u2210
  2487  0009A0                     u2211:
  2488  0009A0  EFBC  F005         	goto	l2892
  2489  0009A4                     u2210:
  2490  0009A4                     
  2491                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2492  0009A4  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2493  0009A8  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2494  0009AC  2ADE               	incf	postinc2,f,c
  2495  0009AE  0E00               	movlw	0
  2496  0009B0  22DD               	addwfc	postdec2,f,c
  2497  0009B2                     
  2498                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2499  0009B2  0E00               	movlw	0
  2500  0009B4  6E46               	movwf	(_width+1)^0,c
  2501  0009B6  0E00               	movlw	0
  2502  0009B8  6E45               	movwf	_width^0,c
  2503  0009BA  C045  F049         	movff	_width,_flags
  2504  0009BE  C046  F04A         	movff	_width+1,_flags+1
  2505  0009C2                     
  2506                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2507  0009C2  6847               	setf	_prec^0,c
  2508  0009C4  6848               	setf	(_prec+1)^0,c
  2509  0009C6                     
  2510                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2511  0009C6  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2512  0009CA  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2513  0009CE  CFDE FFF6          	movff	postinc2,tblptrl
  2514  0009D2  CFDD FFF7          	movff	postdec2,tblptrh
  2515  0009D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2516  0009D6  6AF8               	clrf	tblptru,c
  2517  0009D8                     	endif
  2518  0009D8                     	if	0	;tblptru may be non-zero
  2519  0009D8                     	endif
  2520  0009D8  0008               	tblrd		*
  2521  0009DA  50F5               	movf	tablat,w,c
  2522  0009DC  0A63               	xorlw	99
  2523  0009DE  A4D8               	btfss	status,2,c
  2524  0009E0  EFF4  F004         	goto	u2221
  2525  0009E4  EFF6  F004         	goto	u2220
  2526  0009E8                     u2221:
  2527  0009E8  EF1E  F005         	goto	l2866
  2528  0009EC                     u2220:
  2529  0009EC                     
  2530                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2531  0009EC  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2532  0009F0  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2533  0009F4  2ADE               	incf	postinc2,f,c
  2534  0009F6  0E00               	movlw	0
  2535  0009F8  22DD               	addwfc	postdec2,f,c
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2538  0009FA  C03F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2539  0009FE  C040  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2540  000A02  CFDF F041          	movff	indf2,??_vfpfcnvrt
  2541  000A06  0E02               	movlw	2
  2542  000A08  26DE               	addwf	postinc2,f,c
  2543  000A0A  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  2544  000A0E  0E00               	movlw	0
  2545  000A10  22DD               	addwfc	postdec2,f,c
  2546  000A12  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2547  000A16  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2548  000A1A  50DF               	movf	indf2,w,c
  2549  000A1C  0100               	movlb	0	; () banked
  2550  000A1E  6F7A               	movwf	vfpfcnvrt@c& (0+255),b
  2551  000A20                     
  2552                           ; BSR set to: 0
  2553                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2554  000A20  C03B  F017         	movff	vfpfcnvrt@fp,ctoa@fp
  2555  000A24  C03C  F018         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2556  000A28  C07A  F019         	movff	vfpfcnvrt@c,ctoa@c
  2557  000A2C  EC58  F008         	call	_ctoa	;wreg free
  2558  000A30  C017  F03B         	movff	?_ctoa,?_vfpfcnvrt
  2559  000A34  C018  F03C         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2560  000A38  EFD8  F005         	goto	l1103
  2561  000A3C                     l2866:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2564  000A3C  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2565  000A40  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2566  000A44  CFDE FFF6          	movff	postinc2,tblptrl
  2567  000A48  CFDD FFF7          	movff	postdec2,tblptrh
  2568  000A4C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2569  000A4C  6AF8               	clrf	tblptru,c
  2570  000A4E                     	endif
  2571  000A4E                     	if	0	;tblptru may be non-zero
  2572  000A4E                     	endif
  2573  000A4E  0008               	tblrd		*
  2574  000A50  50F5               	movf	tablat,w,c
  2575  000A52  0A64               	xorlw	100
  2576  000A54  B4D8               	btfsc	status,2,c
  2577  000A56  EF2F  F005         	goto	u2231
  2578  000A5A  EF31  F005         	goto	u2230
  2579  000A5E                     u2231:
  2580  000A5E  EF44  F005         	goto	l2870
  2581  000A62                     u2230:
  2582  000A62  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2583  000A66  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2584  000A6A  CFDE FFF6          	movff	postinc2,tblptrl
  2585  000A6E  CFDD FFF7          	movff	postdec2,tblptrh
  2586  000A72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2587  000A72  6AF8               	clrf	tblptru,c
  2588  000A74                     	endif
  2589  000A74                     	if	0	;tblptru may be non-zero
  2590  000A74                     	endif
  2591  000A74  0008               	tblrd		*
  2592  000A76  50F5               	movf	tablat,w,c
  2593  000A78  0A69               	xorlw	105
  2594  000A7A  A4D8               	btfss	status,2,c
  2595  000A7C  EF42  F005         	goto	u2241
  2596  000A80  EF44  F005         	goto	u2240
  2597  000A84                     u2241:
  2598  000A84  EF85  F005         	goto	l2876
  2599  000A88                     u2240:
  2600  000A88                     l2870:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2603  000A88  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2604  000A8C  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2605  000A90  2ADE               	incf	postinc2,f,c
  2606  000A92  0E00               	movlw	0
  2607  000A94  22DD               	addwfc	postdec2,f,c
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2610  000A96  C03F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2611  000A9A  C040  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2612  000A9E  CFDF F041          	movff	indf2,??_vfpfcnvrt
  2613  000AA2  0E02               	movlw	2
  2614  000AA4  26DE               	addwf	postinc2,f,c
  2615  000AA6  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  2616  000AAA  0E00               	movlw	0
  2617  000AAC  22DD               	addwfc	postdec2,f,c
  2618  000AAE  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2619  000AB2  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2620  000AB6  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
  2621  000ABA  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
  2622  000ABE  0100               	movlb	0	; () banked
  2623  000AC0  0E00               	movlw	0
  2624  000AC2  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2625  000AC4  0EFF               	movlw	-1
  2626  000AC6  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2627  000AC8  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2628  000ACA  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2629  000ACC  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2630  000ACE  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2631  000AD0  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2632  000AD2                     
  2633                           ; BSR set to: 0
  2634                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2635  000AD2  C03B  F029         	movff	vfpfcnvrt@fp,dtoa@fp
  2636  000AD6  C03C  F02A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2637  000ADA  C072  F02B         	movff	vfpfcnvrt@ll,dtoa@d
  2638  000ADE  C073  F02C         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2639  000AE2  C074  F02D         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2640  000AE6  C075  F02E         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2641  000AEA  C076  F02F         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2642  000AEE  C077  F030         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2643  000AF2  C078  F031         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2644  000AF6  C079  F032         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2645  000AFA  EC4E  F003         	call	_dtoa	;wreg free
  2646  000AFE  C029  F03B         	movff	?_dtoa,?_vfpfcnvrt
  2647  000B02  C02A  F03C         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2648  000B06  EFD8  F005         	goto	l1103
  2649  000B0A                     l2876:
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2652  000B0A  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2653  000B0E  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2654  000B12  CFDE FFF6          	movff	postinc2,tblptrl
  2655  000B16  CFDD FFF7          	movff	postdec2,tblptrh
  2656  000B1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2657  000B1A  6AF8               	clrf	tblptru,c
  2658  000B1C                     	endif
  2659  000B1C                     	if	0	;tblptru may be non-zero
  2660  000B1C                     	endif
  2661  000B1C  0008               	tblrd		*
  2662  000B1E  50F5               	movf	tablat,w,c
  2663  000B20  0A25               	xorlw	37
  2664  000B22  A4D8               	btfss	status,2,c
  2665  000B24  EF96  F005         	goto	u2251
  2666  000B28  EF98  F005         	goto	u2250
  2667  000B2C                     u2251:
  2668  000B2C  EFAF  F005         	goto	l2886
  2669  000B30                     u2250:
  2670  000B30                     
  2671                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2672  000B30  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2673  000B34  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2674  000B38  2ADE               	incf	postinc2,f,c
  2675  000B3A  0E00               	movlw	0
  2676  000B3C  22DD               	addwfc	postdec2,f,c
  2677  000B3E                     
  2678                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2679  000B3E  0E00               	movlw	0
  2680  000B40  6E0F               	movwf	(fputc@c+1)^0,c
  2681  000B42  0E25               	movlw	37
  2682  000B44  6E0E               	movwf	fputc@c^0,c
  2683  000B46  C03B  F010         	movff	vfpfcnvrt@fp,fputc@fp
  2684  000B4A  C03C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2685  000B4E  EC23  F009         	call	_fputc	;wreg free
  2686  000B52                     l2882:
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2689  000B52  0E00               	movlw	0
  2690  000B54  6E3C               	movwf	(?_vfpfcnvrt+1)^0,c
  2691  000B56  0E01               	movlw	1
  2692  000B58  6E3B               	movwf	?_vfpfcnvrt^0,c
  2693  000B5A  EFD8  F005         	goto	l1103
  2694  000B5E                     l2886:
  2695                           
  2696                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2697  000B5E  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2698  000B62  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2699  000B66  2ADE               	incf	postinc2,f,c
  2700  000B68  0E00               	movlw	0
  2701  000B6A  22DD               	addwfc	postdec2,f,c
  2702  000B6C                     
  2703                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2704  000B6C  0E00               	movlw	0
  2705  000B6E  6E3C               	movwf	(?_vfpfcnvrt+1)^0,c
  2706  000B70  0E00               	movlw	0
  2707  000B72  6E3B               	movwf	?_vfpfcnvrt^0,c
  2708  000B74  EFD8  F005         	goto	l1103
  2709  000B78                     l2892:
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2712  000B78  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2713  000B7C  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2714  000B80  CFDE FFF6          	movff	postinc2,tblptrl
  2715  000B84  CFDD FFF7          	movff	postdec2,tblptrh
  2716  000B88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2717  000B88  6AF8               	clrf	tblptru,c
  2718  000B8A                     	endif
  2719  000B8A                     	if	0	;tblptru may be non-zero
  2720  000B8A                     	endif
  2721  000B8A  0008               	tblrd		*
  2722  000B8C  50F5               	movf	tablat,w,c
  2723  000B8E  6E0E               	movwf	fputc@c^0,c
  2724  000B90  6A0F               	clrf	(fputc@c+1)^0,c
  2725  000B92  C03B  F010         	movff	vfpfcnvrt@fp,fputc@fp
  2726  000B96  C03C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2727  000B9A  EC23  F009         	call	_fputc	;wreg free
  2728  000B9E                     
  2729                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2730  000B9E  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2731  000BA2  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2732  000BA6  2ADE               	incf	postinc2,f,c
  2733  000BA8  0E00               	movlw	0
  2734  000BAA  22DD               	addwfc	postdec2,f,c
  2735  000BAC  EFA9  F005         	goto	l2882
  2736  000BB0                     l1103:
  2737  000BB0  0012               	return		;funcret
  2738  000BB2                     __end_of_vfpfcnvrt:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _dtoa *****************
  2742 ;; Defined at:
  2743 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  2746 ;;		 -> NULL(0), 
  2747 ;;  d               8   42[COMRAM] long long 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  n               8    8[BANK0 ] long long 
  2750 ;;  i               2   16[BANK0 ] int 
  2751 ;;  s               2    6[BANK0 ] int 
  2752 ;;  w               2    4[BANK0 ] int 
  2753 ;;  p               2    2[BANK0 ] int 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  2   40[COMRAM] int 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2763 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Totals:        18      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;Total ram usage:       36 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    9
  2770 ;; This function calls:
  2771 ;;		___aodiv
  2772 ;;		___aomod
  2773 ;;		_abs
  2774 ;;		_pad
  2775 ;; This function is called by:
  2776 ;;		_vfpfcnvrt
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text4
  2781  00069C                     __ptext4:
  2782                           	callstack 0
  2783  00069C                     _dtoa:
  2784                           	callstack 18
  2785  00069C                     
  2786                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2787  00069C  C02B  F068         	movff	dtoa@d,dtoa@n
  2788  0006A0  C02C  F069         	movff	dtoa@d+1,dtoa@n+1
  2789  0006A4  C02D  F06A         	movff	dtoa@d+2,dtoa@n+2
  2790  0006A8  C02E  F06B         	movff	dtoa@d+3,dtoa@n+3
  2791  0006AC  C02F  F06C         	movff	dtoa@d+4,dtoa@n+4
  2792  0006B0  C030  F06D         	movff	dtoa@d+5,dtoa@n+5
  2793  0006B4  C031  F06E         	movff	dtoa@d+6,dtoa@n+6
  2794  0006B8  C032  F06F         	movff	dtoa@d+7,dtoa@n+7
  2795  0006BC                     
  2796                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2797  0006BC  0100               	movlb	0	; () banked
  2798  0006BE  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
  2799  0006C0  EF64  F003         	goto	u2061
  2800  0006C4  EF67  F003         	goto	u2060
  2801  0006C8                     u2061:
  2802  0006C8  0E01               	movlw	1
  2803  0006CA  EF68  F003         	goto	u2070
  2804  0006CE                     u2060:
  2805  0006CE  0E00               	movlw	0
  2806  0006D0                     u2070:
  2807  0006D0  6F66               	movwf	dtoa@s& (0+255),b
  2808  0006D2  6B67               	clrf	(dtoa@s+1)& (0+255),b
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2811  0006D4  5166               	movf	dtoa@s& (0+255),w,b
  2812  0006D6  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  2813  0006D8  B4D8               	btfsc	status,2,c
  2814  0006DA  EF71  F003         	goto	u2081
  2815  0006DE  EF73  F003         	goto	u2080
  2816  0006E2                     u2081:
  2817  0006E2  EF83  F003         	goto	l2794
  2818  0006E6                     u2080:
  2819  0006E6                     
  2820                           ; BSR set to: 0
  2821                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2822  0006E6  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
  2823  0006E8  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
  2824  0006EA  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
  2825  0006EC  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
  2826  0006EE  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
  2827  0006F0  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
  2828  0006F2  1F69               	comf	(dtoa@n+1)& (0+255),f,b
  2829  0006F4  6D68               	negf	dtoa@n& (0+255),b
  2830  0006F6  0E00               	movlw	0
  2831  0006F8  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
  2832  0006FA  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
  2833  0006FC  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
  2834  0006FE  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
  2835  000700  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
  2836  000702  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
  2837  000704  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
  2838  000706                     l2794:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2842  000706  BE48               	btfsc	(_prec+1)^0,7,c
  2843  000708  EF88  F003         	goto	u2091
  2844  00070C  EF8A  F003         	goto	u2090
  2845  000710                     u2091:
  2846  000710  EF8B  F003         	goto	l2798
  2847  000714                     u2090:
  2848  000714                     
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2851  000714  9249               	bcf	_flags^0,1,c
  2852  000716                     l2798:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2856  000716  BE48               	btfsc	(_prec+1)^0,7,c
  2857  000718  EF98  F003         	goto	u2100
  2858  00071C  5048               	movf	(_prec+1)^0,w,c
  2859  00071E  E106               	bnz	u2101
  2860  000720  0447               	decf	_prec^0,w,c
  2861  000722  B0D8               	btfsc	status,0,c
  2862  000724  EF96  F003         	goto	u2101
  2863  000728  EF98  F003         	goto	u2100
  2864  00072C                     u2101:
  2865  00072C  EF9E  F003         	goto	l1078
  2866  000730                     u2100:
  2867  000730                     
  2868                           ; BSR set to: 0
  2869  000730  0E00               	movlw	0
  2870  000732  6F63               	movwf	(dtoa@p+1)& (0+255),b
  2871  000734  0E01               	movlw	1
  2872  000736  6F62               	movwf	dtoa@p& (0+255),b
  2873  000738  EFA2  F003         	goto	l1080
  2874  00073C                     l1078:
  2875                           
  2876                           ; BSR set to: 0
  2877  00073C  C047  F062         	movff	_prec,dtoa@p
  2878  000740  C048  F063         	movff	_prec+1,dtoa@p+1
  2879  000744                     l1080:
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2883  000744  C045  F064         	movff	_width,dtoa@w
  2884  000748  C046  F065         	movff	_width+1,dtoa@w+1
  2885  00074C                     
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2888  00074C  5166               	movf	dtoa@s& (0+255),w,b
  2889  00074E  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  2890  000750  A4D8               	btfss	status,2,c
  2891  000752  EFAD  F003         	goto	u2111
  2892  000756  EFAF  F003         	goto	u2110
  2893  00075A                     u2111:
  2894  00075A  EFB6  F003         	goto	l2806
  2895  00075E                     u2110:
  2896  00075E                     
  2897                           ; BSR set to: 0
  2898  00075E  A449               	btfss	_flags^0,2,c
  2899  000760  EFB4  F003         	goto	u2121
  2900  000764  EFB6  F003         	goto	u2120
  2901  000768                     u2121:
  2902  000768  EFB9  F003         	goto	l2808
  2903  00076C                     u2120:
  2904  00076C                     l2806:
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  2908  00076C  0764               	decf	dtoa@w& (0+255),f,b
  2909  00076E  A0D8               	btfss	status,0,c
  2910  000770  0765               	decf	(dtoa@w+1)& (0+255),f,b
  2911  000772                     l2808:
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2915  000772  0E00               	movlw	0
  2916  000774  6F71               	movwf	(dtoa@i+1)& (0+255),b
  2917  000776  0E1F               	movlw	31
  2918  000778  6F70               	movwf	dtoa@i& (0+255),b
  2919  00077A                     
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2922  00077A  0E00               	movlw	0
  2923  00077C  6FC5               	movwf	(_dbuf+31)& (0+255),b
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2926  00077E  EF3E  F004         	goto	l2822
  2927  000782                     l2812:
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  2931  000782  0770               	decf	dtoa@i& (0+255),f,b
  2932  000784  A0D8               	btfss	status,0,c
  2933  000786  0771               	decf	(dtoa@i+1)& (0+255),f,b
  2934  000788                     
  2935                           ; BSR set to: 0
  2936                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2937  000788  0EA6               	movlw	low _dbuf
  2938  00078A  2570               	addwf	dtoa@i& (0+255),w,b
  2939  00078C  6ED9               	movwf	fsr2l,c
  2940  00078E  0E00               	movlw	high _dbuf
  2941  000790  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  2942  000792  6EDA               	movwf	fsr2h,c
  2943  000794  C068  F00C         	movff	dtoa@n,___aomod@dividend
  2944  000798  C069  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  2945  00079C  C06A  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  2946  0007A0  C06B  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  2947  0007A4  C06C  F010         	movff	dtoa@n+4,___aomod@dividend+4
  2948  0007A8  C06D  F011         	movff	dtoa@n+5,___aomod@dividend+5
  2949  0007AC  C06E  F012         	movff	dtoa@n+6,___aomod@dividend+6
  2950  0007B0  C06F  F013         	movff	dtoa@n+7,___aomod@dividend+7
  2951  0007B4  0E0A               	movlw	10
  2952  0007B6  6E14               	movwf	___aomod@divisor^0,c
  2953  0007B8  0E00               	movlw	0
  2954  0007BA  6E15               	movwf	(___aomod@divisor+1)^0,c
  2955  0007BC  0E00               	movlw	0
  2956  0007BE  6E16               	movwf	(___aomod@divisor+2)^0,c
  2957  0007C0  0E00               	movlw	0
  2958  0007C2  6E17               	movwf	(___aomod@divisor+3)^0,c
  2959  0007C4  0E00               	movlw	0
  2960  0007C6  6E18               	movwf	(___aomod@divisor+4)^0,c
  2961  0007C8  0E00               	movlw	0
  2962  0007CA  6E19               	movwf	(___aomod@divisor+5)^0,c
  2963  0007CC  0E00               	movlw	0
  2964  0007CE  6E1A               	movwf	(___aomod@divisor+6)^0,c
  2965  0007D0  0E00               	movlw	0
  2966  0007D2  6E1B               	movwf	(___aomod@divisor+7)^0,c
  2967  0007D4  EC9D  F006         	call	___aomod	;wreg free
  2968  0007D8  C00C  F033         	movff	?___aomod,??_dtoa
  2969  0007DC  C00D  F034         	movff	?___aomod+1,??_dtoa+1
  2970  0007E0  C00E  F035         	movff	?___aomod+2,??_dtoa+2
  2971  0007E4  C00F  F036         	movff	?___aomod+3,??_dtoa+3
  2972  0007E8  C010  F037         	movff	?___aomod+4,??_dtoa+4
  2973  0007EC  C011  F038         	movff	?___aomod+5,??_dtoa+5
  2974  0007F0  C012  F039         	movff	?___aomod+6,??_dtoa+6
  2975  0007F4  C013  F03A         	movff	?___aomod+7,??_dtoa+7
  2976  0007F8  C033  F01E         	movff	??_dtoa,abs@a
  2977  0007FC  C035  F01F         	movff	??_dtoa+2,abs@a+1
  2978  000800  EC25  F00A         	call	_abs	;wreg free
  2979  000804  501E               	movf	?_abs^0,w,c
  2980  000806  0F30               	addlw	48
  2981  000808  6EDF               	movwf	indf2,c
  2982  00080A                     
  2983                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2984  00080A  0100               	movlb	0	; () banked
  2985  00080C  0762               	decf	dtoa@p& (0+255),f,b
  2986  00080E  A0D8               	btfss	status,0,c
  2987  000810  0763               	decf	(dtoa@p+1)& (0+255),f,b
  2988  000812                     
  2989                           ; BSR set to: 0
  2990                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2991  000812  0764               	decf	dtoa@w& (0+255),f,b
  2992  000814  A0D8               	btfss	status,0,c
  2993  000816  0765               	decf	(dtoa@w+1)& (0+255),f,b
  2994  000818                     
  2995                           ; BSR set to: 0
  2996                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2997  000818  C068  F00C         	movff	dtoa@n,___aodiv@dividend
  2998  00081C  C069  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  2999  000820  C06A  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  3000  000824  C06B  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  3001  000828  C06C  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  3002  00082C  C06D  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  3003  000830  C06E  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  3004  000834  C06F  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  3005  000838  0E0A               	movlw	10
  3006  00083A  6E14               	movwf	___aodiv@divisor^0,c
  3007  00083C  0E00               	movlw	0
  3008  00083E  6E15               	movwf	(___aodiv@divisor+1)^0,c
  3009  000840  0E00               	movlw	0
  3010  000842  6E16               	movwf	(___aodiv@divisor+2)^0,c
  3011  000844  0E00               	movlw	0
  3012  000846  6E17               	movwf	(___aodiv@divisor+3)^0,c
  3013  000848  0E00               	movlw	0
  3014  00084A  6E18               	movwf	(___aodiv@divisor+4)^0,c
  3015  00084C  0E00               	movlw	0
  3016  00084E  6E19               	movwf	(___aodiv@divisor+5)^0,c
  3017  000850  0E00               	movlw	0
  3018  000852  6E1A               	movwf	(___aodiv@divisor+6)^0,c
  3019  000854  0E00               	movlw	0
  3020  000856  6E1B               	movwf	(___aodiv@divisor+7)^0,c
  3021  000858  ECD9  F005         	call	___aodiv	;wreg free
  3022  00085C  C00C  F068         	movff	?___aodiv,dtoa@n
  3023  000860  C00D  F069         	movff	?___aodiv+1,dtoa@n+1
  3024  000864  C00E  F06A         	movff	?___aodiv+2,dtoa@n+2
  3025  000868  C00F  F06B         	movff	?___aodiv+3,dtoa@n+3
  3026  00086C  C010  F06C         	movff	?___aodiv+4,dtoa@n+4
  3027  000870  C011  F06D         	movff	?___aodiv+5,dtoa@n+5
  3028  000874  C012  F06E         	movff	?___aodiv+6,dtoa@n+6
  3029  000878  C013  F06F         	movff	?___aodiv+7,dtoa@n+7
  3030  00087C                     l2822:
  3031                           
  3032                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3033  00087C  0100               	movlb	0	; () banked
  3034  00087E  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
  3035  000880  EF4A  F004         	goto	u2131
  3036  000884  5171               	movf	(dtoa@i+1)& (0+255),w,b
  3037  000886  E108               	bnz	u2130
  3038  000888  0570               	decf	dtoa@i& (0+255),w,b
  3039  00088A  A0D8               	btfss	status,0,c
  3040  00088C  EF4A  F004         	goto	u2131
  3041  000890  EF4C  F004         	goto	u2130
  3042  000894                     u2131:
  3043  000894  EF7C  F004         	goto	l2832
  3044  000898                     u2130:
  3045  000898                     
  3046                           ; BSR set to: 0
  3047  000898  5168               	movf	dtoa@n& (0+255),w,b
  3048  00089A  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
  3049  00089C  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
  3050  00089E  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
  3051  0008A0  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
  3052  0008A2  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
  3053  0008A4  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
  3054  0008A6  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
  3055  0008A8  A4D8               	btfss	status,2,c
  3056  0008AA  EF59  F004         	goto	u2141
  3057  0008AE  EF5B  F004         	goto	u2140
  3058  0008B2                     u2141:
  3059  0008B2  EFC1  F003         	goto	l2812
  3060  0008B6                     u2140:
  3061  0008B6                     
  3062                           ; BSR set to: 0
  3063  0008B6  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  3064  0008B8  EF68  F004         	goto	u2150
  3065  0008BC  5163               	movf	(dtoa@p+1)& (0+255),w,b
  3066  0008BE  E106               	bnz	u2151
  3067  0008C0  0562               	decf	dtoa@p& (0+255),w,b
  3068  0008C2  B0D8               	btfsc	status,0,c
  3069  0008C4  EF66  F004         	goto	u2151
  3070  0008C8  EF68  F004         	goto	u2150
  3071  0008CC                     u2151:
  3072  0008CC  EFC1  F003         	goto	l2812
  3073  0008D0                     u2150:
  3074  0008D0                     
  3075                           ; BSR set to: 0
  3076  0008D0  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  3077  0008D2  EF73  F004         	goto	u2161
  3078  0008D6  5165               	movf	(dtoa@w+1)& (0+255),w,b
  3079  0008D8  E108               	bnz	u2160
  3080  0008DA  0564               	decf	dtoa@w& (0+255),w,b
  3081  0008DC  A0D8               	btfss	status,0,c
  3082  0008DE  EF73  F004         	goto	u2161
  3083  0008E2  EF75  F004         	goto	u2160
  3084  0008E6                     u2161:
  3085  0008E6  EF7C  F004         	goto	l2832
  3086  0008EA                     u2160:
  3087  0008EA                     
  3088                           ; BSR set to: 0
  3089  0008EA  B249               	btfsc	_flags^0,1,c
  3090  0008EC  EF7A  F004         	goto	u2171
  3091  0008F0  EF7C  F004         	goto	u2170
  3092  0008F4                     u2171:
  3093  0008F4  EFC1  F003         	goto	l2812
  3094  0008F8                     u2170:
  3095  0008F8                     l2832:
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3099  0008F8  5166               	movf	dtoa@s& (0+255),w,b
  3100  0008FA  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  3101  0008FC  A4D8               	btfss	status,2,c
  3102  0008FE  EF83  F004         	goto	u2181
  3103  000902  EF85  F004         	goto	u2180
  3104  000906                     u2181:
  3105  000906  EF8C  F004         	goto	l2836
  3106  00090A                     u2180:
  3107  00090A                     
  3108                           ; BSR set to: 0
  3109  00090A  A449               	btfss	_flags^0,2,c
  3110  00090C  EF8A  F004         	goto	u2191
  3111  000910  EF8C  F004         	goto	u2190
  3112  000914                     u2191:
  3113  000914  EFAA  F004         	goto	l2846
  3114  000918                     u2190:
  3115  000918                     l2836:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  3119  000918  0770               	decf	dtoa@i& (0+255),f,b
  3120  00091A  A0D8               	btfss	status,0,c
  3121  00091C  0771               	decf	(dtoa@i+1)& (0+255),f,b
  3122  00091E                     
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3125  00091E  5166               	movf	dtoa@s& (0+255),w,b
  3126  000920  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  3127  000922  A4D8               	btfss	status,2,c
  3128  000924  EF96  F004         	goto	u2201
  3129  000928  EF98  F004         	goto	u2200
  3130  00092C                     u2201:
  3131  00092C  EF9E  F004         	goto	l2842
  3132  000930                     u2200:
  3133  000930                     
  3134                           ; BSR set to: 0
  3135  000930  0E00               	movlw	0
  3136  000932  6F61               	movwf	(_dtoa$1401+1)& (0+255),b
  3137  000934  0E2B               	movlw	43
  3138  000936  6F60               	movwf	_dtoa$1401& (0+255),b
  3139  000938  EFA2  F004         	goto	l2844
  3140  00093C                     l2842:
  3141                           
  3142                           ; BSR set to: 0
  3143  00093C  0E00               	movlw	0
  3144  00093E  6F61               	movwf	(_dtoa$1401+1)& (0+255),b
  3145  000940  0E2D               	movlw	45
  3146  000942  6F60               	movwf	_dtoa$1401& (0+255),b
  3147  000944                     l2844:
  3148                           
  3149                           ; BSR set to: 0
  3150  000944  0EA6               	movlw	low _dbuf
  3151  000946  2570               	addwf	dtoa@i& (0+255),w,b
  3152  000948  6ED9               	movwf	fsr2l,c
  3153  00094A  0E00               	movlw	high _dbuf
  3154  00094C  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  3155  00094E  6EDA               	movwf	fsr2h,c
  3156  000950  C060  FFDF         	movff	_dtoa$1401,indf2
  3157  000954                     l2846:
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3161  000954  C029  F01E         	movff	dtoa@fp,pad@fp
  3162  000958  C02A  F01F         	movff	dtoa@fp+1,pad@fp+1
  3163  00095C  0EA6               	movlw	low _dbuf
  3164  00095E  2570               	addwf	dtoa@i& (0+255),w,b
  3165  000960  6E20               	movwf	pad@buf^0,c
  3166  000962  0E00               	movlw	high _dbuf
  3167  000964  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  3168  000966  6E21               	movwf	(pad@buf+1)^0,c
  3169  000968  C064  F022         	movff	dtoa@w,pad@p
  3170  00096C  C065  F023         	movff	dtoa@w+1,pad@p+1
  3171  000970  ECC2  F008         	call	_pad	;wreg free
  3172  000974  C01E  F029         	movff	?_pad,?_dtoa
  3173  000978  C01F  F02A         	movff	?_pad+1,?_dtoa+1
  3174  00097C  0012               	return		;funcret
  3175  00097E                     __end_of_dtoa:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function _pad *****************
  3179 ;; Defined at:
  3180 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3183 ;;		 -> NULL(0), 
  3184 ;;  buf             2   31[COMRAM] PTR unsigned char 
  3185 ;;		 -> dbuf(32), 
  3186 ;;  p               2   33[COMRAM] int 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  w               2   38[COMRAM] int 
  3189 ;;  i               2   36[COMRAM] int 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  2   29[COMRAM] int 
  3192 ;; Registers used:
  3193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3199 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;Total ram usage:       11 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    8
  3206 ;; This function calls:
  3207 ;;		_fputc
  3208 ;;		_fputs
  3209 ;;		_strlen
  3210 ;; This function is called by:
  3211 ;;		_dtoa
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text5
  3216  001184                     __ptext5:
  3217                           	callstack 0
  3218  001184                     _pad:
  3219                           	callstack 18
  3220  001184                     
  3221                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3222  001184  A049               	btfss	_flags^0,0,c
  3223  001186  EFC7  F008         	goto	u1961
  3224  00118A  EFC9  F008         	goto	u1960
  3225  00118E                     u1961:
  3226  00118E  EFD3  F008         	goto	l2738
  3227  001192                     u1960:
  3228  001192                     
  3229                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3230  001192  C020  F017         	movff	pad@buf,fputs@s
  3231  001196  C021  F018         	movff	pad@buf+1,fputs@s+1
  3232  00119A  C01E  F019         	movff	pad@fp,fputs@fp
  3233  00119E  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  3234  0011A2  EC03  F00A         	call	_fputs	;wreg free
  3235  0011A6                     l2738:
  3236                           
  3237                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3238  0011A6  BE23               	btfsc	(pad@p+1)^0,7,c
  3239  0011A8  EFD8  F008         	goto	u1971
  3240  0011AC  EFDA  F008         	goto	u1970
  3241  0011B0                     u1971:
  3242  0011B0  EFE0  F008         	goto	l2742
  3243  0011B4                     u1970:
  3244  0011B4  C022  F027         	movff	pad@p,pad@w
  3245  0011B8  C023  F028         	movff	pad@p+1,pad@w+1
  3246  0011BC  EFE4  F008         	goto	l1051
  3247  0011C0                     l2742:
  3248  0011C0  0E00               	movlw	0
  3249  0011C2  6E28               	movwf	(pad@w+1)^0,c
  3250  0011C4  0E00               	movlw	0
  3251  0011C6  6E27               	movwf	pad@w^0,c
  3252  0011C8                     l1051:
  3253                           
  3254                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3255  0011C8  0E00               	movlw	0
  3256  0011CA  6E26               	movwf	(pad@i+1)^0,c
  3257  0011CC  0E00               	movlw	0
  3258  0011CE  6E25               	movwf	pad@i^0,c
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3261  0011D0  EFF6  F008         	goto	l2748
  3262  0011D4                     l2744:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3265  0011D4  0E00               	movlw	0
  3266  0011D6  6E0F               	movwf	(fputc@c+1)^0,c
  3267  0011D8  0E20               	movlw	32
  3268  0011DA  6E0E               	movwf	fputc@c^0,c
  3269  0011DC  C01E  F010         	movff	pad@fp,fputc@fp
  3270  0011E0  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  3271  0011E4  EC23  F009         	call	_fputc	;wreg free
  3272  0011E8                     
  3273                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3274  0011E8  4A25               	infsnz	pad@i^0,f,c
  3275  0011EA  2A26               	incf	(pad@i+1)^0,f,c
  3276  0011EC                     l2748:
  3277                           
  3278                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3279  0011EC  5027               	movf	pad@w^0,w,c
  3280  0011EE  5C25               	subwf	pad@i^0,w,c
  3281  0011F0  5026               	movf	(pad@i+1)^0,w,c
  3282  0011F2  0A80               	xorlw	128
  3283  0011F4  6E24               	movwf	??_pad^0,c
  3284  0011F6  5028               	movf	(pad@w+1)^0,w,c
  3285  0011F8  0A80               	xorlw	128
  3286  0011FA  5824               	subwfb	??_pad^0,w,c
  3287  0011FC  A0D8               	btfss	status,0,c
  3288  0011FE  EF03  F009         	goto	u1981
  3289  001202  EF05  F009         	goto	u1980
  3290  001206                     u1981:
  3291  001206  EFEA  F008         	goto	l2744
  3292  00120A                     u1980:
  3293  00120A                     
  3294                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3295  00120A  B049               	btfsc	_flags^0,0,c
  3296  00120C  EF0A  F009         	goto	u1991
  3297  001210  EF0C  F009         	goto	u1990
  3298  001214                     u1991:
  3299  001214  EF16  F009         	goto	l2752
  3300  001218                     u1990:
  3301  001218                     
  3302                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3303  001218  C020  F017         	movff	pad@buf,fputs@s
  3304  00121C  C021  F018         	movff	pad@buf+1,fputs@s+1
  3305  001220  C01E  F019         	movff	pad@fp,fputs@fp
  3306  001224  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  3307  001228  EC03  F00A         	call	_fputs	;wreg free
  3308  00122C                     l2752:
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3311  00122C  C020  F00C         	movff	pad@buf,strlen@s
  3312  001230  C021  F00D         	movff	pad@buf+1,strlen@s+1
  3313  001234  EC81  F00A         	call	_strlen	;wreg free
  3314  001238  5027               	movf	pad@w^0,w,c
  3315  00123A  240C               	addwf	?_strlen^0,w,c
  3316  00123C  6E1E               	movwf	?_pad^0,c
  3317  00123E  5028               	movf	(pad@w+1)^0,w,c
  3318  001240  200D               	addwfc	(?_strlen+1)^0,w,c
  3319  001242  6E1F               	movwf	(?_pad+1)^0,c
  3320  001244  0012               	return		;funcret
  3321  001246                     __end_of_pad:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function _strlen *****************
  3325 ;; Defined at:
  3326 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3329 ;;		 -> dbuf(32), 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  a               2   13[COMRAM] PTR const unsigned char 
  3332 ;;		 -> dbuf(32), 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  2   11[COMRAM] unsigned int 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;Total ram usage:        4 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    4
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_pad
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text6
  3357  001502                     __ptext6:
  3358                           	callstack 0
  3359  001502                     _strlen:
  3360                           	callstack 21
  3361  001502  C00C  F00E         	movff	strlen@s,strlen@a
  3362  001506  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  3363  00150A  EF89  F00A         	goto	l2648
  3364  00150E                     l2646:
  3365  00150E  4A0C               	infsnz	strlen@s^0,f,c
  3366  001510  2A0D               	incf	(strlen@s+1)^0,f,c
  3367  001512                     l2648:
  3368  001512  C00C  FFD9         	movff	strlen@s,fsr2l
  3369  001516  C00D  FFDA         	movff	strlen@s+1,fsr2h
  3370  00151A  50DF               	movf	indf2,w,c
  3371  00151C  A4D8               	btfss	status,2,c
  3372  00151E  EF93  F00A         	goto	u1821
  3373  001522  EF95  F00A         	goto	u1820
  3374  001526                     u1821:
  3375  001526  EF87  F00A         	goto	l2646
  3376  00152A                     u1820:
  3377  00152A  500E               	movf	strlen@a^0,w,c
  3378  00152C  5C0C               	subwf	strlen@s^0,w,c
  3379  00152E  6E0C               	movwf	?_strlen^0,c
  3380  001530  500F               	movf	(strlen@a+1)^0,w,c
  3381  001532  580D               	subwfb	(strlen@s+1)^0,w,c
  3382  001534  6E0D               	movwf	(?_strlen+1)^0,c
  3383  001536  0012               	return		;funcret
  3384  001538                     __end_of_strlen:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function _fputs *****************
  3388 ;; Defined at:
  3389 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  s               2   22[COMRAM] PTR const unsigned char 
  3392 ;;		 -> dbuf(32), 
  3393 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  3394 ;;		 -> NULL(0), 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;  i               2   27[COMRAM] int 
  3397 ;;  c               1   26[COMRAM] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  2   22[COMRAM] int 
  3400 ;; Registers used:
  3401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3407 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;Total ram usage:        7 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    7
  3414 ;; This function calls:
  3415 ;;		_fputc
  3416 ;; This function is called by:
  3417 ;;		_pad
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	text7
  3422  001406                     __ptext7:
  3423                           	callstack 0
  3424  001406                     _fputs:
  3425                           	callstack 18
  3426  001406  0E00               	movlw	0
  3427  001408  6E1D               	movwf	(fputs@i+1)^0,c
  3428  00140A  0E00               	movlw	0
  3429  00140C  6E1C               	movwf	fputs@i^0,c
  3430  00140E  EF14  F00A         	goto	l2642
  3431  001412                     l2638:
  3432  001412  C01B  F00E         	movff	fputs@c,fputc@c
  3433  001416  6A0F               	clrf	(fputc@c+1)^0,c
  3434  001418  C019  F010         	movff	fputs@fp,fputc@fp
  3435  00141C  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  3436  001420  EC23  F009         	call	_fputc	;wreg free
  3437  001424  4A1C               	infsnz	fputs@i^0,f,c
  3438  001426  2A1D               	incf	(fputs@i+1)^0,f,c
  3439  001428                     l2642:
  3440  001428  501C               	movf	fputs@i^0,w,c
  3441  00142A  2417               	addwf	fputs@s^0,w,c
  3442  00142C  6ED9               	movwf	fsr2l,c
  3443  00142E  501D               	movf	(fputs@i+1)^0,w,c
  3444  001430  2018               	addwfc	(fputs@s+1)^0,w,c
  3445  001432  6EDA               	movwf	fsr2h,c
  3446  001434  50DF               	movf	indf2,w,c
  3447  001436  6E1B               	movwf	fputs@c^0,c
  3448  001438  501B               	movf	fputs@c^0,w,c
  3449  00143A  A4D8               	btfss	status,2,c
  3450  00143C  EF22  F00A         	goto	u1811
  3451  001440  EF24  F00A         	goto	u1810
  3452  001444                     u1811:
  3453  001444  EF09  F00A         	goto	l2638
  3454  001448                     u1810:
  3455  001448  0012               	return		;funcret
  3456  00144A                     __end_of_fputs:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _abs *****************
  3460 ;; Defined at:
  3461 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  a               2   29[COMRAM] int 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  2   29[COMRAM] int 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;Total ram usage:        4 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    4
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_dtoa
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text8
  3490  00144A                     __ptext8:
  3491                           	callstack 0
  3492  00144A                     _abs:
  3493                           	callstack 22
  3494  00144A  BE1F               	btfsc	(abs@a+1)^0,7,c
  3495  00144C  EF32  F00A         	goto	u2000
  3496  001450  501F               	movf	(abs@a+1)^0,w,c
  3497  001452  E106               	bnz	u2001
  3498  001454  041E               	decf	abs@a^0,w,c
  3499  001456  B0D8               	btfsc	status,0,c
  3500  001458  EF30  F00A         	goto	u2001
  3501  00145C  EF32  F00A         	goto	u2000
  3502  001460                     u2001:
  3503  001460  EF40  F00A         	goto	l1117
  3504  001464                     u2000:
  3505  001464  C01E  F020         	movff	abs@a,??_abs
  3506  001468  C01F  F021         	movff	abs@a+1,??_abs+1
  3507  00146C  1E20               	comf	??_abs^0,f,c
  3508  00146E  1E21               	comf	(??_abs+1)^0,f,c
  3509  001470  4A20               	infsnz	??_abs^0,f,c
  3510  001472  2A21               	incf	(??_abs+1)^0,f,c
  3511  001474  C020  F01E         	movff	??_abs,?_abs
  3512  001478  C021  F01F         	movff	??_abs+1,?_abs+1
  3513  00147C  EF44  F00A         	goto	l1120
  3514  001480                     l1117:
  3515  001480  C01E  F01E         	movff	abs@a,?_abs
  3516  001484  C01F  F01F         	movff	abs@a+1,?_abs+1
  3517  001488                     l1120:
  3518  001488  0012               	return		;funcret
  3519  00148A                     __end_of_abs:
  3520                           	callstack 0
  3521                           
  3522 ;; *************** function ___aomod *****************
  3523 ;; Defined at:
  3524 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  dividend        8   11[COMRAM] long long 
  3527 ;;  divisor         8   19[COMRAM] long long 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  sign            1   28[COMRAM] unsigned char 
  3530 ;;  counter         1   27[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  8   11[COMRAM] long long 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3540 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;Total ram usage:       18 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    4
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_dtoa
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text9
  3555  000D3A                     __ptext9:
  3556                           	callstack 0
  3557  000D3A                     ___aomod:
  3558                           	callstack 22
  3559  000D3A  0E00               	movlw	0
  3560  000D3C  6E1D               	movwf	___aomod@sign^0,c
  3561  000D3E  BE13               	btfsc	(___aomod@dividend+7)^0,7,c
  3562  000D40  EFA6  F006         	goto	u1900
  3563  000D44  EFA4  F006         	goto	u1901
  3564  000D48                     u1901:
  3565  000D48  EFB8  F006         	goto	l2706
  3566  000D4C                     u1900:
  3567  000D4C  1E13               	comf	(___aomod@dividend+7)^0,f,c
  3568  000D4E  1E12               	comf	(___aomod@dividend+6)^0,f,c
  3569  000D50  1E11               	comf	(___aomod@dividend+5)^0,f,c
  3570  000D52  1E10               	comf	(___aomod@dividend+4)^0,f,c
  3571  000D54  1E0F               	comf	(___aomod@dividend+3)^0,f,c
  3572  000D56  1E0E               	comf	(___aomod@dividend+2)^0,f,c
  3573  000D58  1E0D               	comf	(___aomod@dividend+1)^0,f,c
  3574  000D5A  6C0C               	negf	___aomod@dividend^0,c
  3575  000D5C  0E00               	movlw	0
  3576  000D5E  220D               	addwfc	(___aomod@dividend+1)^0,f,c
  3577  000D60  220E               	addwfc	(___aomod@dividend+2)^0,f,c
  3578  000D62  220F               	addwfc	(___aomod@dividend+3)^0,f,c
  3579  000D64  2210               	addwfc	(___aomod@dividend+4)^0,f,c
  3580  000D66  2211               	addwfc	(___aomod@dividend+5)^0,f,c
  3581  000D68  2212               	addwfc	(___aomod@dividend+6)^0,f,c
  3582  000D6A  2213               	addwfc	(___aomod@dividend+7)^0,f,c
  3583  000D6C  0E01               	movlw	1
  3584  000D6E  6E1D               	movwf	___aomod@sign^0,c
  3585  000D70                     l2706:
  3586  000D70  BE1B               	btfsc	(___aomod@divisor+7)^0,7,c
  3587  000D72  EFBF  F006         	goto	u1910
  3588  000D76  EFBD  F006         	goto	u1911
  3589  000D7A                     u1911:
  3590  000D7A  EFCF  F006         	goto	l2710
  3591  000D7E                     u1910:
  3592  000D7E  1E1B               	comf	(___aomod@divisor+7)^0,f,c
  3593  000D80  1E1A               	comf	(___aomod@divisor+6)^0,f,c
  3594  000D82  1E19               	comf	(___aomod@divisor+5)^0,f,c
  3595  000D84  1E18               	comf	(___aomod@divisor+4)^0,f,c
  3596  000D86  1E17               	comf	(___aomod@divisor+3)^0,f,c
  3597  000D88  1E16               	comf	(___aomod@divisor+2)^0,f,c
  3598  000D8A  1E15               	comf	(___aomod@divisor+1)^0,f,c
  3599  000D8C  6C14               	negf	___aomod@divisor^0,c
  3600  000D8E  0E00               	movlw	0
  3601  000D90  2215               	addwfc	(___aomod@divisor+1)^0,f,c
  3602  000D92  2216               	addwfc	(___aomod@divisor+2)^0,f,c
  3603  000D94  2217               	addwfc	(___aomod@divisor+3)^0,f,c
  3604  000D96  2218               	addwfc	(___aomod@divisor+4)^0,f,c
  3605  000D98  2219               	addwfc	(___aomod@divisor+5)^0,f,c
  3606  000D9A  221A               	addwfc	(___aomod@divisor+6)^0,f,c
  3607  000D9C  221B               	addwfc	(___aomod@divisor+7)^0,f,c
  3608  000D9E                     l2710:
  3609  000D9E  5014               	movf	___aomod@divisor^0,w,c
  3610  000DA0  1015               	iorwf	(___aomod@divisor+1)^0,w,c
  3611  000DA2  1016               	iorwf	(___aomod@divisor+2)^0,w,c
  3612  000DA4  1017               	iorwf	(___aomod@divisor+3)^0,w,c
  3613  000DA6  1018               	iorwf	(___aomod@divisor+4)^0,w,c
  3614  000DA8  1019               	iorwf	(___aomod@divisor+5)^0,w,c
  3615  000DAA  101A               	iorwf	(___aomod@divisor+6)^0,w,c
  3616  000DAC  101B               	iorwf	(___aomod@divisor+7)^0,w,c
  3617  000DAE  B4D8               	btfsc	status,2,c
  3618  000DB0  EFDC  F006         	goto	u1921
  3619  000DB4  EFDE  F006         	goto	u1920
  3620  000DB8                     u1921:
  3621  000DB8  EF26  F007         	goto	l2726
  3622  000DBC                     u1920:
  3623  000DBC  0E01               	movlw	1
  3624  000DBE  6E1C               	movwf	___aomod@counter^0,c
  3625  000DC0  EFEC  F006         	goto	l2716
  3626  000DC4                     l2714:
  3627  000DC4  90D8               	bcf	status,0,c
  3628  000DC6  3614               	rlcf	___aomod@divisor^0,f,c
  3629  000DC8  3615               	rlcf	(___aomod@divisor+1)^0,f,c
  3630  000DCA  3616               	rlcf	(___aomod@divisor+2)^0,f,c
  3631  000DCC  3617               	rlcf	(___aomod@divisor+3)^0,f,c
  3632  000DCE  3618               	rlcf	(___aomod@divisor+4)^0,f,c
  3633  000DD0  3619               	rlcf	(___aomod@divisor+5)^0,f,c
  3634  000DD2  361A               	rlcf	(___aomod@divisor+6)^0,f,c
  3635  000DD4  361B               	rlcf	(___aomod@divisor+7)^0,f,c
  3636  000DD6  2A1C               	incf	___aomod@counter^0,f,c
  3637  000DD8                     l2716:
  3638  000DD8  AE1B               	btfss	(___aomod@divisor+7)^0,7,c
  3639  000DDA  EFF1  F006         	goto	u1931
  3640  000DDE  EFF3  F006         	goto	u1930
  3641  000DE2                     u1931:
  3642  000DE2  EFE2  F006         	goto	l2714
  3643  000DE6                     u1930:
  3644  000DE6                     l2718:
  3645  000DE6  5014               	movf	___aomod@divisor^0,w,c
  3646  000DE8  5C0C               	subwf	___aomod@dividend^0,w,c
  3647  000DEA  5015               	movf	(___aomod@divisor+1)^0,w,c
  3648  000DEC  580D               	subwfb	(___aomod@dividend+1)^0,w,c
  3649  000DEE  5016               	movf	(___aomod@divisor+2)^0,w,c
  3650  000DF0  580E               	subwfb	(___aomod@dividend+2)^0,w,c
  3651  000DF2  5017               	movf	(___aomod@divisor+3)^0,w,c
  3652  000DF4  580F               	subwfb	(___aomod@dividend+3)^0,w,c
  3653  000DF6  5018               	movf	(___aomod@divisor+4)^0,w,c
  3654  000DF8  5810               	subwfb	(___aomod@dividend+4)^0,w,c
  3655  000DFA  5019               	movf	(___aomod@divisor+5)^0,w,c
  3656  000DFC  5811               	subwfb	(___aomod@dividend+5)^0,w,c
  3657  000DFE  501A               	movf	(___aomod@divisor+6)^0,w,c
  3658  000E00  5812               	subwfb	(___aomod@dividend+6)^0,w,c
  3659  000E02  501B               	movf	(___aomod@divisor+7)^0,w,c
  3660  000E04  5813               	subwfb	(___aomod@dividend+7)^0,w,c
  3661  000E06  A0D8               	btfss	status,0,c
  3662  000E08  EF08  F007         	goto	u1941
  3663  000E0C  EF0A  F007         	goto	u1940
  3664  000E10                     u1941:
  3665  000E10  EF1A  F007         	goto	l2722
  3666  000E14                     u1940:
  3667  000E14  5014               	movf	___aomod@divisor^0,w,c
  3668  000E16  5E0C               	subwf	___aomod@dividend^0,f,c
  3669  000E18  5015               	movf	(___aomod@divisor+1)^0,w,c
  3670  000E1A  5A0D               	subwfb	(___aomod@dividend+1)^0,f,c
  3671  000E1C  5016               	movf	(___aomod@divisor+2)^0,w,c
  3672  000E1E  5A0E               	subwfb	(___aomod@dividend+2)^0,f,c
  3673  000E20  5017               	movf	(___aomod@divisor+3)^0,w,c
  3674  000E22  5A0F               	subwfb	(___aomod@dividend+3)^0,f,c
  3675  000E24  5018               	movf	(___aomod@divisor+4)^0,w,c
  3676  000E26  5A10               	subwfb	(___aomod@dividend+4)^0,f,c
  3677  000E28  5019               	movf	(___aomod@divisor+5)^0,w,c
  3678  000E2A  5A11               	subwfb	(___aomod@dividend+5)^0,f,c
  3679  000E2C  501A               	movf	(___aomod@divisor+6)^0,w,c
  3680  000E2E  5A12               	subwfb	(___aomod@dividend+6)^0,f,c
  3681  000E30  501B               	movf	(___aomod@divisor+7)^0,w,c
  3682  000E32  5A13               	subwfb	(___aomod@dividend+7)^0,f,c
  3683  000E34                     l2722:
  3684  000E34  90D8               	bcf	status,0,c
  3685  000E36  321B               	rrcf	(___aomod@divisor+7)^0,f,c
  3686  000E38  321A               	rrcf	(___aomod@divisor+6)^0,f,c
  3687  000E3A  3219               	rrcf	(___aomod@divisor+5)^0,f,c
  3688  000E3C  3218               	rrcf	(___aomod@divisor+4)^0,f,c
  3689  000E3E  3217               	rrcf	(___aomod@divisor+3)^0,f,c
  3690  000E40  3216               	rrcf	(___aomod@divisor+2)^0,f,c
  3691  000E42  3215               	rrcf	(___aomod@divisor+1)^0,f,c
  3692  000E44  3214               	rrcf	___aomod@divisor^0,f,c
  3693  000E46  2E1C               	decfsz	___aomod@counter^0,f,c
  3694  000E48  EFF3  F006         	goto	l2718
  3695  000E4C                     l2726:
  3696  000E4C  501D               	movf	___aomod@sign^0,w,c
  3697  000E4E  B4D8               	btfsc	status,2,c
  3698  000E50  EF2C  F007         	goto	u1951
  3699  000E54  EF2E  F007         	goto	u1950
  3700  000E58                     u1951:
  3701  000E58  EF3E  F007         	goto	l2730
  3702  000E5C                     u1950:
  3703  000E5C  1E13               	comf	(___aomod@dividend+7)^0,f,c
  3704  000E5E  1E12               	comf	(___aomod@dividend+6)^0,f,c
  3705  000E60  1E11               	comf	(___aomod@dividend+5)^0,f,c
  3706  000E62  1E10               	comf	(___aomod@dividend+4)^0,f,c
  3707  000E64  1E0F               	comf	(___aomod@dividend+3)^0,f,c
  3708  000E66  1E0E               	comf	(___aomod@dividend+2)^0,f,c
  3709  000E68  1E0D               	comf	(___aomod@dividend+1)^0,f,c
  3710  000E6A  6C0C               	negf	___aomod@dividend^0,c
  3711  000E6C  0E00               	movlw	0
  3712  000E6E  220D               	addwfc	(___aomod@dividend+1)^0,f,c
  3713  000E70  220E               	addwfc	(___aomod@dividend+2)^0,f,c
  3714  000E72  220F               	addwfc	(___aomod@dividend+3)^0,f,c
  3715  000E74  2210               	addwfc	(___aomod@dividend+4)^0,f,c
  3716  000E76  2211               	addwfc	(___aomod@dividend+5)^0,f,c
  3717  000E78  2212               	addwfc	(___aomod@dividend+6)^0,f,c
  3718  000E7A  2213               	addwfc	(___aomod@dividend+7)^0,f,c
  3719  000E7C                     l2730:
  3720  000E7C  C00C  F00C         	movff	___aomod@dividend,?___aomod
  3721  000E80  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  3722  000E84  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  3723  000E88  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  3724  000E8C  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  3725  000E90  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  3726  000E94  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  3727  000E98  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  3728  000E9C  0012               	return		;funcret
  3729  000E9E                     __end_of___aomod:
  3730                           	callstack 0
  3731                           
  3732 ;; *************** function ___aodiv *****************
  3733 ;; Defined at:
  3734 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  dividend        8   11[COMRAM] long long 
  3737 ;;  divisor         8   19[COMRAM] long long 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  quotient        8   29[COMRAM] long long 
  3740 ;;  sign            1   28[COMRAM] unsigned char 
  3741 ;;  counter         1   27[COMRAM] unsigned char 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  8   11[COMRAM] long long 
  3744 ;; Registers used:
  3745 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3751 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;Total ram usage:       26 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:    4
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_dtoa
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text10
  3766  000BB2                     __ptext10:
  3767                           	callstack 0
  3768  000BB2                     ___aodiv:
  3769                           	callstack 22
  3770  000BB2  0E00               	movlw	0
  3771  000BB4  6E1D               	movwf	___aodiv@sign^0,c
  3772  000BB6  BE1B               	btfsc	(___aodiv@divisor+7)^0,7,c
  3773  000BB8  EFE2  F005         	goto	u1830
  3774  000BBC  EFE0  F005         	goto	u1831
  3775  000BC0                     u1831:
  3776  000BC0  EFF4  F005         	goto	l2662
  3777  000BC4                     u1830:
  3778  000BC4  1E1B               	comf	(___aodiv@divisor+7)^0,f,c
  3779  000BC6  1E1A               	comf	(___aodiv@divisor+6)^0,f,c
  3780  000BC8  1E19               	comf	(___aodiv@divisor+5)^0,f,c
  3781  000BCA  1E18               	comf	(___aodiv@divisor+4)^0,f,c
  3782  000BCC  1E17               	comf	(___aodiv@divisor+3)^0,f,c
  3783  000BCE  1E16               	comf	(___aodiv@divisor+2)^0,f,c
  3784  000BD0  1E15               	comf	(___aodiv@divisor+1)^0,f,c
  3785  000BD2  6C14               	negf	___aodiv@divisor^0,c
  3786  000BD4  0E00               	movlw	0
  3787  000BD6  2215               	addwfc	(___aodiv@divisor+1)^0,f,c
  3788  000BD8  2216               	addwfc	(___aodiv@divisor+2)^0,f,c
  3789  000BDA  2217               	addwfc	(___aodiv@divisor+3)^0,f,c
  3790  000BDC  2218               	addwfc	(___aodiv@divisor+4)^0,f,c
  3791  000BDE  2219               	addwfc	(___aodiv@divisor+5)^0,f,c
  3792  000BE0  221A               	addwfc	(___aodiv@divisor+6)^0,f,c
  3793  000BE2  221B               	addwfc	(___aodiv@divisor+7)^0,f,c
  3794  000BE4  0E01               	movlw	1
  3795  000BE6  6E1D               	movwf	___aodiv@sign^0,c
  3796  000BE8                     l2662:
  3797  000BE8  BE13               	btfsc	(___aodiv@dividend+7)^0,7,c
  3798  000BEA  EFFB  F005         	goto	u1840
  3799  000BEE  EFF9  F005         	goto	u1841
  3800  000BF2                     u1841:
  3801  000BF2  EF0D  F006         	goto	l2668
  3802  000BF6                     u1840:
  3803  000BF6  1E13               	comf	(___aodiv@dividend+7)^0,f,c
  3804  000BF8  1E12               	comf	(___aodiv@dividend+6)^0,f,c
  3805  000BFA  1E11               	comf	(___aodiv@dividend+5)^0,f,c
  3806  000BFC  1E10               	comf	(___aodiv@dividend+4)^0,f,c
  3807  000BFE  1E0F               	comf	(___aodiv@dividend+3)^0,f,c
  3808  000C00  1E0E               	comf	(___aodiv@dividend+2)^0,f,c
  3809  000C02  1E0D               	comf	(___aodiv@dividend+1)^0,f,c
  3810  000C04  6C0C               	negf	___aodiv@dividend^0,c
  3811  000C06  0E00               	movlw	0
  3812  000C08  220D               	addwfc	(___aodiv@dividend+1)^0,f,c
  3813  000C0A  220E               	addwfc	(___aodiv@dividend+2)^0,f,c
  3814  000C0C  220F               	addwfc	(___aodiv@dividend+3)^0,f,c
  3815  000C0E  2210               	addwfc	(___aodiv@dividend+4)^0,f,c
  3816  000C10  2211               	addwfc	(___aodiv@dividend+5)^0,f,c
  3817  000C12  2212               	addwfc	(___aodiv@dividend+6)^0,f,c
  3818  000C14  2213               	addwfc	(___aodiv@dividend+7)^0,f,c
  3819  000C16  0E01               	movlw	1
  3820  000C18  1A1D               	xorwf	___aodiv@sign^0,f,c
  3821  000C1A                     l2668:
  3822  000C1A  EE20  F01E         	lfsr	2,___aodiv@quotient
  3823  000C1E  0E07               	movlw	7
  3824  000C20                     u1851:
  3825  000C20  6ADE               	clrf	postinc2,c
  3826  000C22  06E8               	decf	wreg,f,c
  3827  000C24  E2FD               	bc	u1851
  3828  000C26  5014               	movf	___aodiv@divisor^0,w,c
  3829  000C28  1015               	iorwf	(___aodiv@divisor+1)^0,w,c
  3830  000C2A  1016               	iorwf	(___aodiv@divisor+2)^0,w,c
  3831  000C2C  1017               	iorwf	(___aodiv@divisor+3)^0,w,c
  3832  000C2E  1018               	iorwf	(___aodiv@divisor+4)^0,w,c
  3833  000C30  1019               	iorwf	(___aodiv@divisor+5)^0,w,c
  3834  000C32  101A               	iorwf	(___aodiv@divisor+6)^0,w,c
  3835  000C34  101B               	iorwf	(___aodiv@divisor+7)^0,w,c
  3836  000C36  B4D8               	btfsc	status,2,c
  3837  000C38  EF20  F006         	goto	u1861
  3838  000C3C  EF22  F006         	goto	u1860
  3839  000C40                     u1861:
  3840  000C40  EF74  F006         	goto	l2690
  3841  000C44                     u1860:
  3842  000C44  0E01               	movlw	1
  3843  000C46  6E1C               	movwf	___aodiv@counter^0,c
  3844  000C48  EF30  F006         	goto	l2676
  3845  000C4C                     l2674:
  3846  000C4C  90D8               	bcf	status,0,c
  3847  000C4E  3614               	rlcf	___aodiv@divisor^0,f,c
  3848  000C50  3615               	rlcf	(___aodiv@divisor+1)^0,f,c
  3849  000C52  3616               	rlcf	(___aodiv@divisor+2)^0,f,c
  3850  000C54  3617               	rlcf	(___aodiv@divisor+3)^0,f,c
  3851  000C56  3618               	rlcf	(___aodiv@divisor+4)^0,f,c
  3852  000C58  3619               	rlcf	(___aodiv@divisor+5)^0,f,c
  3853  000C5A  361A               	rlcf	(___aodiv@divisor+6)^0,f,c
  3854  000C5C  361B               	rlcf	(___aodiv@divisor+7)^0,f,c
  3855  000C5E  2A1C               	incf	___aodiv@counter^0,f,c
  3856  000C60                     l2676:
  3857  000C60  AE1B               	btfss	(___aodiv@divisor+7)^0,7,c
  3858  000C62  EF35  F006         	goto	u1871
  3859  000C66  EF37  F006         	goto	u1870
  3860  000C6A                     u1871:
  3861  000C6A  EF26  F006         	goto	l2674
  3862  000C6E                     u1870:
  3863  000C6E                     l2678:
  3864  000C6E  90D8               	bcf	status,0,c
  3865  000C70  361E               	rlcf	___aodiv@quotient^0,f,c
  3866  000C72  361F               	rlcf	(___aodiv@quotient+1)^0,f,c
  3867  000C74  3620               	rlcf	(___aodiv@quotient+2)^0,f,c
  3868  000C76  3621               	rlcf	(___aodiv@quotient+3)^0,f,c
  3869  000C78  3622               	rlcf	(___aodiv@quotient+4)^0,f,c
  3870  000C7A  3623               	rlcf	(___aodiv@quotient+5)^0,f,c
  3871  000C7C  3624               	rlcf	(___aodiv@quotient+6)^0,f,c
  3872  000C7E  3625               	rlcf	(___aodiv@quotient+7)^0,f,c
  3873  000C80  5014               	movf	___aodiv@divisor^0,w,c
  3874  000C82  5C0C               	subwf	___aodiv@dividend^0,w,c
  3875  000C84  5015               	movf	(___aodiv@divisor+1)^0,w,c
  3876  000C86  580D               	subwfb	(___aodiv@dividend+1)^0,w,c
  3877  000C88  5016               	movf	(___aodiv@divisor+2)^0,w,c
  3878  000C8A  580E               	subwfb	(___aodiv@dividend+2)^0,w,c
  3879  000C8C  5017               	movf	(___aodiv@divisor+3)^0,w,c
  3880  000C8E  580F               	subwfb	(___aodiv@dividend+3)^0,w,c
  3881  000C90  5018               	movf	(___aodiv@divisor+4)^0,w,c
  3882  000C92  5810               	subwfb	(___aodiv@dividend+4)^0,w,c
  3883  000C94  5019               	movf	(___aodiv@divisor+5)^0,w,c
  3884  000C96  5811               	subwfb	(___aodiv@dividend+5)^0,w,c
  3885  000C98  501A               	movf	(___aodiv@divisor+6)^0,w,c
  3886  000C9A  5812               	subwfb	(___aodiv@dividend+6)^0,w,c
  3887  000C9C  501B               	movf	(___aodiv@divisor+7)^0,w,c
  3888  000C9E  5813               	subwfb	(___aodiv@dividend+7)^0,w,c
  3889  000CA0  A0D8               	btfss	status,0,c
  3890  000CA2  EF55  F006         	goto	u1881
  3891  000CA6  EF57  F006         	goto	u1880
  3892  000CAA                     u1881:
  3893  000CAA  EF68  F006         	goto	l2686
  3894  000CAE                     u1880:
  3895  000CAE  5014               	movf	___aodiv@divisor^0,w,c
  3896  000CB0  5E0C               	subwf	___aodiv@dividend^0,f,c
  3897  000CB2  5015               	movf	(___aodiv@divisor+1)^0,w,c
  3898  000CB4  5A0D               	subwfb	(___aodiv@dividend+1)^0,f,c
  3899  000CB6  5016               	movf	(___aodiv@divisor+2)^0,w,c
  3900  000CB8  5A0E               	subwfb	(___aodiv@dividend+2)^0,f,c
  3901  000CBA  5017               	movf	(___aodiv@divisor+3)^0,w,c
  3902  000CBC  5A0F               	subwfb	(___aodiv@dividend+3)^0,f,c
  3903  000CBE  5018               	movf	(___aodiv@divisor+4)^0,w,c
  3904  000CC0  5A10               	subwfb	(___aodiv@dividend+4)^0,f,c
  3905  000CC2  5019               	movf	(___aodiv@divisor+5)^0,w,c
  3906  000CC4  5A11               	subwfb	(___aodiv@dividend+5)^0,f,c
  3907  000CC6  501A               	movf	(___aodiv@divisor+6)^0,w,c
  3908  000CC8  5A12               	subwfb	(___aodiv@dividend+6)^0,f,c
  3909  000CCA  501B               	movf	(___aodiv@divisor+7)^0,w,c
  3910  000CCC  5A13               	subwfb	(___aodiv@dividend+7)^0,f,c
  3911  000CCE  801E               	bsf	___aodiv@quotient^0,0,c
  3912  000CD0                     l2686:
  3913  000CD0  90D8               	bcf	status,0,c
  3914  000CD2  321B               	rrcf	(___aodiv@divisor+7)^0,f,c
  3915  000CD4  321A               	rrcf	(___aodiv@divisor+6)^0,f,c
  3916  000CD6  3219               	rrcf	(___aodiv@divisor+5)^0,f,c
  3917  000CD8  3218               	rrcf	(___aodiv@divisor+4)^0,f,c
  3918  000CDA  3217               	rrcf	(___aodiv@divisor+3)^0,f,c
  3919  000CDC  3216               	rrcf	(___aodiv@divisor+2)^0,f,c
  3920  000CDE  3215               	rrcf	(___aodiv@divisor+1)^0,f,c
  3921  000CE0  3214               	rrcf	___aodiv@divisor^0,f,c
  3922  000CE2  2E1C               	decfsz	___aodiv@counter^0,f,c
  3923  000CE4  EF37  F006         	goto	l2678
  3924  000CE8                     l2690:
  3925  000CE8  501D               	movf	___aodiv@sign^0,w,c
  3926  000CEA  B4D8               	btfsc	status,2,c
  3927  000CEC  EF7A  F006         	goto	u1891
  3928  000CF0  EF7C  F006         	goto	u1890
  3929  000CF4                     u1891:
  3930  000CF4  EF8C  F006         	goto	l2694
  3931  000CF8                     u1890:
  3932  000CF8  1E25               	comf	(___aodiv@quotient+7)^0,f,c
  3933  000CFA  1E24               	comf	(___aodiv@quotient+6)^0,f,c
  3934  000CFC  1E23               	comf	(___aodiv@quotient+5)^0,f,c
  3935  000CFE  1E22               	comf	(___aodiv@quotient+4)^0,f,c
  3936  000D00  1E21               	comf	(___aodiv@quotient+3)^0,f,c
  3937  000D02  1E20               	comf	(___aodiv@quotient+2)^0,f,c
  3938  000D04  1E1F               	comf	(___aodiv@quotient+1)^0,f,c
  3939  000D06  6C1E               	negf	___aodiv@quotient^0,c
  3940  000D08  0E00               	movlw	0
  3941  000D0A  221F               	addwfc	(___aodiv@quotient+1)^0,f,c
  3942  000D0C  2220               	addwfc	(___aodiv@quotient+2)^0,f,c
  3943  000D0E  2221               	addwfc	(___aodiv@quotient+3)^0,f,c
  3944  000D10  2222               	addwfc	(___aodiv@quotient+4)^0,f,c
  3945  000D12  2223               	addwfc	(___aodiv@quotient+5)^0,f,c
  3946  000D14  2224               	addwfc	(___aodiv@quotient+6)^0,f,c
  3947  000D16  2225               	addwfc	(___aodiv@quotient+7)^0,f,c
  3948  000D18                     l2694:
  3949  000D18  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  3950  000D1C  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  3951  000D20  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  3952  000D24  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  3953  000D28  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  3954  000D2C  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  3955  000D30  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  3956  000D34  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  3957  000D38  0012               	return		;funcret
  3958  000D3A                     __end_of___aodiv:
  3959                           	callstack 0
  3960                           
  3961 ;; *************** function _ctoa *****************
  3962 ;; Defined at:
  3963 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3966 ;;		 -> NULL(0), 
  3967 ;;  c               1   24[COMRAM] unsigned char 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  w               2   28[COMRAM] int 
  3970 ;;  l               2   26[COMRAM] int 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  2   22[COMRAM] int 
  3973 ;; Registers used:
  3974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3980 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;Total ram usage:        8 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    7
  3987 ;; This function calls:
  3988 ;;		_fputc
  3989 ;; This function is called by:
  3990 ;;		_vfpfcnvrt
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text11
  3995  0010B0                     __ptext11:
  3996                           	callstack 0
  3997  0010B0                     _ctoa:
  3998                           	callstack 20
  3999  0010B0                     
  4000                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  4001  0010B0  5045               	movf	_width^0,w,c
  4002  0010B2  1046               	iorwf	(_width+1)^0,w,c
  4003  0010B4  A4D8               	btfss	status,2,c
  4004  0010B6  EF5F  F008         	goto	u2011
  4005  0010BA  EF61  F008         	goto	u2010
  4006  0010BE                     u2011:
  4007  0010BE  EF67  F008         	goto	l2764
  4008  0010C2                     u2010:
  4009  0010C2  C045  F01D         	movff	_width,ctoa@w
  4010  0010C6  C046  F01E         	movff	_width+1,ctoa@w+1
  4011  0010CA  EF6D  F008         	goto	l2766
  4012  0010CE                     l2764:
  4013  0010CE  0EFF               	movlw	255
  4014  0010D0  2445               	addwf	_width^0,w,c
  4015  0010D2  6E1D               	movwf	ctoa@w^0,c
  4016  0010D4  0EFF               	movlw	255
  4017  0010D6  2046               	addwfc	(_width+1)^0,w,c
  4018  0010D8  6E1E               	movwf	(ctoa@w+1)^0,c
  4019  0010DA                     l2766:
  4020                           
  4021                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  4022  0010DA  A049               	btfss	_flags^0,0,c
  4023  0010DC  EF72  F008         	goto	u2021
  4024  0010E0  EF74  F008         	goto	u2020
  4025  0010E4                     u2021:
  4026  0010E4  EF7D  F008         	goto	l2770
  4027  0010E8                     u2020:
  4028  0010E8                     
  4029                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  4030  0010E8  C019  F00E         	movff	ctoa@c,fputc@c
  4031  0010EC  6A0F               	clrf	(fputc@c+1)^0,c
  4032  0010EE  C017  F010         	movff	ctoa@fp,fputc@fp
  4033  0010F2  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  4034  0010F6  EC23  F009         	call	_fputc	;wreg free
  4035  0010FA                     l2770:
  4036                           
  4037                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  4038  0010FA  BE1E               	btfsc	(ctoa@w+1)^0,7,c
  4039  0010FC  EF82  F008         	goto	u2031
  4040  001100  EF84  F008         	goto	u2030
  4041  001104                     u2031:
  4042  001104  EF86  F008         	goto	l2774
  4043  001108                     u2030:
  4044  001108  EF8A  F008         	goto	l1067
  4045  00110C                     l2774:
  4046  00110C  0E00               	movlw	0
  4047  00110E  6E1E               	movwf	(ctoa@w+1)^0,c
  4048  001110  0E00               	movlw	0
  4049  001112  6E1D               	movwf	ctoa@w^0,c
  4050  001114                     l1067:
  4051                           
  4052                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  4053  001114  0E00               	movlw	0
  4054  001116  6E1C               	movwf	(ctoa@l+1)^0,c
  4055  001118  0E00               	movlw	0
  4056  00111A  6E1B               	movwf	ctoa@l^0,c
  4057                           
  4058                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4059  00111C  EF9C  F008         	goto	l2780
  4060  001120                     l2776:
  4061                           
  4062                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  4063  001120  0E00               	movlw	0
  4064  001122  6E0F               	movwf	(fputc@c+1)^0,c
  4065  001124  0E20               	movlw	32
  4066  001126  6E0E               	movwf	fputc@c^0,c
  4067  001128  C017  F010         	movff	ctoa@fp,fputc@fp
  4068  00112C  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  4069  001130  EC23  F009         	call	_fputc	;wreg free
  4070  001134                     
  4071                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  4072  001134  4A1B               	infsnz	ctoa@l^0,f,c
  4073  001136  2A1C               	incf	(ctoa@l+1)^0,f,c
  4074  001138                     l2780:
  4075                           
  4076                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4077  001138  501D               	movf	ctoa@w^0,w,c
  4078  00113A  5C1B               	subwf	ctoa@l^0,w,c
  4079  00113C  501C               	movf	(ctoa@l+1)^0,w,c
  4080  00113E  0A80               	xorlw	128
  4081  001140  6E1A               	movwf	??_ctoa^0,c
  4082  001142  501E               	movf	(ctoa@w+1)^0,w,c
  4083  001144  0A80               	xorlw	128
  4084  001146  581A               	subwfb	??_ctoa^0,w,c
  4085  001148  A0D8               	btfss	status,0,c
  4086  00114A  EFA9  F008         	goto	u2041
  4087  00114E  EFAB  F008         	goto	u2040
  4088  001152                     u2041:
  4089  001152  EF90  F008         	goto	l2776
  4090  001156                     u2040:
  4091  001156                     
  4092                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  4093  001156  B049               	btfsc	_flags^0,0,c
  4094  001158  EFB0  F008         	goto	u2051
  4095  00115C  EFB2  F008         	goto	u2050
  4096  001160                     u2051:
  4097  001160  EFBB  F008         	goto	l2784
  4098  001164                     u2050:
  4099  001164                     
  4100                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  4101  001164  C019  F00E         	movff	ctoa@c,fputc@c
  4102  001168  6A0F               	clrf	(fputc@c+1)^0,c
  4103  00116A  C017  F010         	movff	ctoa@fp,fputc@fp
  4104  00116E  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  4105  001172  EC23  F009         	call	_fputc	;wreg free
  4106  001176                     l2784:
  4107                           
  4108                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  4109  001176  0E01               	movlw	1
  4110  001178  241B               	addwf	ctoa@l^0,w,c
  4111  00117A  6E17               	movwf	?_ctoa^0,c
  4112  00117C  0E00               	movlw	0
  4113  00117E  201C               	addwfc	(ctoa@l+1)^0,w,c
  4114  001180  6E18               	movwf	(?_ctoa+1)^0,c
  4115  001182  0012               	return		;funcret
  4116  001184                     __end_of_ctoa:
  4117                           	callstack 0
  4118                           
  4119 ;; *************** function _fputc *****************
  4120 ;; Defined at:
  4121 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  c               2   13[COMRAM] int 
  4124 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4125 ;;		 -> NULL(0), 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;		None
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  2   13[COMRAM] int 
  4130 ;; Registers used:
  4131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;Total ram usage:        9 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    6
  4144 ;; This function calls:
  4145 ;;		_putch
  4146 ;; This function is called by:
  4147 ;;		_pad
  4148 ;;		_ctoa
  4149 ;;		_vfpfcnvrt
  4150 ;;		_fputs
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text12
  4155  001246                     __ptext12:
  4156                           	callstack 0
  4157  001246                     _fputc:
  4158                           	callstack 21
  4159  001246  5010               	movf	fputc@fp^0,w,c
  4160  001248  1011               	iorwf	(fputc@fp+1)^0,w,c
  4161  00124A  B4D8               	btfsc	status,2,c
  4162  00124C  EF2A  F009         	goto	u1771
  4163  001250  EF2C  F009         	goto	u1770
  4164  001254                     u1771:
  4165  001254  EF35  F009         	goto	l2626
  4166  001258                     u1770:
  4167  001258  5010               	movf	fputc@fp^0,w,c
  4168  00125A  1011               	iorwf	(fputc@fp+1)^0,w,c
  4169  00125C  A4D8               	btfss	status,2,c
  4170  00125E  EF33  F009         	goto	u1781
  4171  001262  EF35  F009         	goto	u1780
  4172  001266                     u1781:
  4173  001266  EF3A  F009         	goto	l2628
  4174  00126A                     u1780:
  4175  00126A                     l2626:
  4176  00126A  500E               	movf	fputc@c^0,w,c
  4177  00126C  EC44  F00B         	call	_putch
  4178  001270  EF6D  F009         	goto	l1132
  4179  001274                     l2628:
  4180  001274  EE20 F004          	lfsr	2,4
  4181  001278  5010               	movf	fputc@fp^0,w,c
  4182  00127A  26D9               	addwf	fsr2l,f,c
  4183  00127C  5011               	movf	(fputc@fp+1)^0,w,c
  4184  00127E  22DA               	addwfc	fsr2h,f,c
  4185  001280  50DE               	movf	postinc2,w,c
  4186  001282  10DE               	iorwf	postinc2,w,c
  4187  001284  B4D8               	btfsc	status,2,c
  4188  001286  EF47  F009         	goto	u1791
  4189  00128A  EF49  F009         	goto	u1790
  4190  00128E                     u1791:
  4191  00128E  EF64  F009         	goto	l2632
  4192  001292                     u1790:
  4193  001292  EE20 F004          	lfsr	2,4
  4194  001296  5010               	movf	fputc@fp^0,w,c
  4195  001298  26D9               	addwf	fsr2l,f,c
  4196  00129A  5011               	movf	(fputc@fp+1)^0,w,c
  4197  00129C  22DA               	addwfc	fsr2h,f,c
  4198  00129E  EE10 F002          	lfsr	1,2
  4199  0012A2  5010               	movf	fputc@fp^0,w,c
  4200  0012A4  26E1               	addwf	fsr1l,f,c
  4201  0012A6  5011               	movf	(fputc@fp+1)^0,w,c
  4202  0012A8  22E2               	addwfc	fsr1h,f,c
  4203  0012AA  50DE               	movf	postinc2,w,c
  4204  0012AC  5CE6               	subwf	postinc1,w,c
  4205  0012AE  50E6               	movf	postinc1,w,c
  4206  0012B0  0A80               	xorlw	128
  4207  0012B2  6E16               	movwf	(??_fputc+4)^0,c
  4208  0012B4  50DE               	movf	postinc2,w,c
  4209  0012B6  0A80               	xorlw	128
  4210  0012B8  5816               	subwfb	(??_fputc+4)^0,w,c
  4211  0012BA  B0D8               	btfsc	status,0,c
  4212  0012BC  EF62  F009         	goto	u1801
  4213  0012C0  EF64  F009         	goto	u1800
  4214  0012C4                     u1801:
  4215  0012C4  EF6D  F009         	goto	l1132
  4216  0012C8                     u1800:
  4217  0012C8                     l2632:
  4218  0012C8  EE20 F002          	lfsr	2,2
  4219  0012CC  5010               	movf	fputc@fp^0,w,c
  4220  0012CE  26D9               	addwf	fsr2l,f,c
  4221  0012D0  5011               	movf	(fputc@fp+1)^0,w,c
  4222  0012D2  22DA               	addwfc	fsr2h,f,c
  4223  0012D4  2ADE               	incf	postinc2,f,c
  4224  0012D6  0E00               	movlw	0
  4225  0012D8  22DD               	addwfc	postdec2,f,c
  4226  0012DA                     l1132:
  4227  0012DA  0012               	return		;funcret
  4228  0012DC                     __end_of_fputc:
  4229                           	callstack 0
  4230                           
  4231 ;; *************** function _putch *****************
  4232 ;; Defined at:
  4233 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  txData          1    wreg     unsigned char 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  txData          1   12[COMRAM] unsigned char 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2, cstack
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4250 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4251 ;;Total ram usage:        1 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    5
  4254 ;; This function calls:
  4255 ;;		_EUSART1_Write
  4256 ;; This function is called by:
  4257 ;;		_fputc
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text13
  4262  001688                     __ptext13:
  4263                           	callstack 0
  4264  001688                     _putch:
  4265                           	callstack 21
  4266                           
  4267                           ;incstack = 0
  4268                           ;putch@txData stored from wreg
  4269  001688  6E0D               	movwf	putch@txData^0,c
  4270  00168A                     
  4271                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4272  00168A  500D               	movf	putch@txData^0,w,c
  4273  00168C  EC24  F00B         	call	_EUSART1_Write
  4274  001690  0012               	return		;funcret
  4275  001692                     __end_of_putch:
  4276                           	callstack 0
  4277                           
  4278 ;; *************** function _EUSART1_Write *****************
  4279 ;; Defined at:
  4280 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  txData          1    wreg     unsigned char 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  txData          1   11[COMRAM] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;Total ram usage:        1 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    4
  4301 ;; This function calls:
  4302 ;;		Nothing
  4303 ;; This function is called by:
  4304 ;;		_putch
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text14
  4309  001648                     __ptext14:
  4310                           	callstack 0
  4311  001648                     _EUSART1_Write:
  4312                           	callstack 21
  4313                           
  4314                           ;incstack = 0
  4315                           ;EUSART1_Write@txData stored from wreg
  4316  001648  6E0C               	movwf	EUSART1_Write@txData^0,c
  4317  00164A                     l300:
  4318                           
  4319                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4320  00164A  A89E               	btfss	158,4,c	;volatile
  4321  00164C  EF2A  F00B         	goto	u1761
  4322  001650  EF2C  F00B         	goto	u1760
  4323  001654                     u1761:
  4324  001654  EF25  F00B         	goto	l300
  4325  001658                     u1760:
  4326  001658                     
  4327                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4328  001658  C00C  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4329  00165C  0012               	return		;funcret
  4330  00165E                     __end_of_EUSART1_Write:
  4331                           	callstack 0
  4332                           
  4333 ;; *************** function ___wmul *****************
  4334 ;; Defined at:
  4335 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  multiplier      2   11[COMRAM] unsigned int 
  4338 ;;  multiplicand    2   13[COMRAM] unsigned int 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  product         2   15[COMRAM] unsigned int 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  2   11[COMRAM] unsigned int 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0, prodl, prodh
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;Total ram usage:        6 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    4
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_main
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text15
  4365  0015EC                     __ptext15:
  4366                           	callstack 0
  4367  0015EC                     ___wmul:
  4368                           	callstack 26
  4369  0015EC  500C               	movf	___wmul@multiplier^0,w,c
  4370  0015EE  020E               	mulwf	___wmul@multiplicand^0,c
  4371  0015F0  CFF3 F010          	movff	prodl,___wmul@product
  4372  0015F4  CFF4 F011          	movff	prodh,___wmul@product+1
  4373  0015F8  500C               	movf	___wmul@multiplier^0,w,c
  4374  0015FA  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  4375  0015FC  50F3               	movf	243,w,c
  4376  0015FE  2611               	addwf	(___wmul@product+1)^0,f,c
  4377  001600  500D               	movf	(___wmul@multiplier+1)^0,w,c
  4378  001602  020E               	mulwf	___wmul@multiplicand^0,c
  4379  001604  50F3               	movf	243,w,c
  4380  001606  2611               	addwf	(___wmul@product+1)^0,f,c
  4381  001608  C010  F00C         	movff	___wmul@product,?___wmul
  4382  00160C  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  4383  001610  0012               	return		;funcret
  4384  001612                     __end_of___wmul:
  4385                           	callstack 0
  4386                           
  4387 ;; *************** function ___lwdiv *****************
  4388 ;; Defined at:
  4389 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  dividend        2   11[COMRAM] unsigned int 
  4392 ;;  divisor         2   13[COMRAM] unsigned int 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  quotient        2   15[COMRAM] unsigned int 
  4395 ;;  counter         1   17[COMRAM] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  2   11[COMRAM] unsigned int 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4405 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;Total ram usage:        7 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    4
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_main
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text16
  4420  0012DC                     __ptext16:
  4421                           	callstack 0
  4422  0012DC                     ___lwdiv:
  4423                           	callstack 26
  4424  0012DC  0E00               	movlw	0
  4425  0012DE  6E11               	movwf	(___lwdiv@quotient+1)^0,c
  4426  0012E0  0E00               	movlw	0
  4427  0012E2  6E10               	movwf	___lwdiv@quotient^0,c
  4428  0012E4  500E               	movf	___lwdiv@divisor^0,w,c
  4429  0012E6  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4430  0012E8  B4D8               	btfsc	status,2,c
  4431  0012EA  EF79  F009         	goto	u1571
  4432  0012EE  EF7B  F009         	goto	u1570
  4433  0012F2                     u1571:
  4434  0012F2  EFA3  F009         	goto	l837
  4435  0012F6                     u1570:
  4436  0012F6  0E01               	movlw	1
  4437  0012F8  6E12               	movwf	___lwdiv@counter^0,c
  4438  0012FA  EF83  F009         	goto	l2390
  4439  0012FE                     l2388:
  4440  0012FE  90D8               	bcf	status,0,c
  4441  001300  360E               	rlcf	___lwdiv@divisor^0,f,c
  4442  001302  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4443  001304  2A12               	incf	___lwdiv@counter^0,f,c
  4444  001306                     l2390:
  4445  001306  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  4446  001308  EF88  F009         	goto	u1581
  4447  00130C  EF8A  F009         	goto	u1580
  4448  001310                     u1581:
  4449  001310  EF7F  F009         	goto	l2388
  4450  001314                     u1580:
  4451  001314                     l2392:
  4452  001314  90D8               	bcf	status,0,c
  4453  001316  3610               	rlcf	___lwdiv@quotient^0,f,c
  4454  001318  3611               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4455  00131A  500E               	movf	___lwdiv@divisor^0,w,c
  4456  00131C  5C0C               	subwf	___lwdiv@dividend^0,w,c
  4457  00131E  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  4458  001320  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4459  001322  A0D8               	btfss	status,0,c
  4460  001324  EF96  F009         	goto	u1591
  4461  001328  EF98  F009         	goto	u1590
  4462  00132C                     u1591:
  4463  00132C  EF9D  F009         	goto	l2400
  4464  001330                     u1590:
  4465  001330  500E               	movf	___lwdiv@divisor^0,w,c
  4466  001332  5E0C               	subwf	___lwdiv@dividend^0,f,c
  4467  001334  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  4468  001336  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4469  001338  8010               	bsf	___lwdiv@quotient^0,0,c
  4470  00133A                     l2400:
  4471  00133A  90D8               	bcf	status,0,c
  4472  00133C  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4473  00133E  320E               	rrcf	___lwdiv@divisor^0,f,c
  4474  001340  2E12               	decfsz	___lwdiv@counter^0,f,c
  4475  001342  EF8A  F009         	goto	l2392
  4476  001346                     l837:
  4477  001346  C010  F00C         	movff	___lwdiv@quotient,?___lwdiv
  4478  00134A  C011  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4479  00134E  0012               	return		;funcret
  4480  001350                     __end_of___lwdiv:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function ___aldiv *****************
  4484 ;; Defined at:
  4485 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aldiv.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  dividend        4   11[COMRAM] long 
  4488 ;;  divisor         4   15[COMRAM] long 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  quotient        4   21[COMRAM] long 
  4491 ;;  sign            1   20[COMRAM] unsigned char 
  4492 ;;  counter         1   19[COMRAM] unsigned char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  4   11[COMRAM] long 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4502 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;Total ram usage:       14 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    4
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_main
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text17
  4517  000E9E                     __ptext17:
  4518                           	callstack 0
  4519  000E9E                     ___aldiv:
  4520                           	callstack 26
  4521  000E9E  0E00               	movlw	0
  4522  000EA0  6E15               	movwf	___aldiv@sign^0,c
  4523  000EA2  BE13               	btfsc	(___aldiv@divisor+3)^0,7,c
  4524  000EA4  EF58  F007         	goto	u1510
  4525  000EA8  EF56  F007         	goto	u1511
  4526  000EAC                     u1511:
  4527  000EAC  EF62  F007         	goto	l2346
  4528  000EB0                     u1510:
  4529  000EB0  1E13               	comf	(___aldiv@divisor+3)^0,f,c
  4530  000EB2  1E12               	comf	(___aldiv@divisor+2)^0,f,c
  4531  000EB4  1E11               	comf	(___aldiv@divisor+1)^0,f,c
  4532  000EB6  6C10               	negf	___aldiv@divisor^0,c
  4533  000EB8  0E00               	movlw	0
  4534  000EBA  2211               	addwfc	(___aldiv@divisor+1)^0,f,c
  4535  000EBC  2212               	addwfc	(___aldiv@divisor+2)^0,f,c
  4536  000EBE  2213               	addwfc	(___aldiv@divisor+3)^0,f,c
  4537  000EC0  0E01               	movlw	1
  4538  000EC2  6E15               	movwf	___aldiv@sign^0,c
  4539  000EC4                     l2346:
  4540  000EC4  BE0F               	btfsc	(___aldiv@dividend+3)^0,7,c
  4541  000EC6  EF69  F007         	goto	u1520
  4542  000ECA  EF67  F007         	goto	u1521
  4543  000ECE                     u1521:
  4544  000ECE  EF73  F007         	goto	l2352
  4545  000ED2                     u1520:
  4546  000ED2  1E0F               	comf	(___aldiv@dividend+3)^0,f,c
  4547  000ED4  1E0E               	comf	(___aldiv@dividend+2)^0,f,c
  4548  000ED6  1E0D               	comf	(___aldiv@dividend+1)^0,f,c
  4549  000ED8  6C0C               	negf	___aldiv@dividend^0,c
  4550  000EDA  0E00               	movlw	0
  4551  000EDC  220D               	addwfc	(___aldiv@dividend+1)^0,f,c
  4552  000EDE  220E               	addwfc	(___aldiv@dividend+2)^0,f,c
  4553  000EE0  220F               	addwfc	(___aldiv@dividend+3)^0,f,c
  4554  000EE2  0E01               	movlw	1
  4555  000EE4  1A15               	xorwf	___aldiv@sign^0,f,c
  4556  000EE6                     l2352:
  4557  000EE6  0E00               	movlw	0
  4558  000EE8  6E16               	movwf	___aldiv@quotient^0,c
  4559  000EEA  0E00               	movlw	0
  4560  000EEC  6E17               	movwf	(___aldiv@quotient+1)^0,c
  4561  000EEE  0E00               	movlw	0
  4562  000EF0  6E18               	movwf	(___aldiv@quotient+2)^0,c
  4563  000EF2  0E00               	movlw	0
  4564  000EF4  6E19               	movwf	(___aldiv@quotient+3)^0,c
  4565  000EF6  5010               	movf	___aldiv@divisor^0,w,c
  4566  000EF8  1011               	iorwf	(___aldiv@divisor+1)^0,w,c
  4567  000EFA  1012               	iorwf	(___aldiv@divisor+2)^0,w,c
  4568  000EFC  1013               	iorwf	(___aldiv@divisor+3)^0,w,c
  4569  000EFE  B4D8               	btfsc	status,2,c
  4570  000F00  EF84  F007         	goto	u1531
  4571  000F04  EF86  F007         	goto	u1530
  4572  000F08                     u1531:
  4573  000F08  EFBC  F007         	goto	l2374
  4574  000F0C                     u1530:
  4575  000F0C  0E01               	movlw	1
  4576  000F0E  6E14               	movwf	___aldiv@counter^0,c
  4577  000F10  EF90  F007         	goto	l2360
  4578  000F14                     l2358:
  4579  000F14  90D8               	bcf	status,0,c
  4580  000F16  3610               	rlcf	___aldiv@divisor^0,f,c
  4581  000F18  3611               	rlcf	(___aldiv@divisor+1)^0,f,c
  4582  000F1A  3612               	rlcf	(___aldiv@divisor+2)^0,f,c
  4583  000F1C  3613               	rlcf	(___aldiv@divisor+3)^0,f,c
  4584  000F1E  2A14               	incf	___aldiv@counter^0,f,c
  4585  000F20                     l2360:
  4586  000F20  AE13               	btfss	(___aldiv@divisor+3)^0,7,c
  4587  000F22  EF95  F007         	goto	u1541
  4588  000F26  EF97  F007         	goto	u1540
  4589  000F2A                     u1541:
  4590  000F2A  EF8A  F007         	goto	l2358
  4591  000F2E                     u1540:
  4592  000F2E                     l2362:
  4593  000F2E  90D8               	bcf	status,0,c
  4594  000F30  3616               	rlcf	___aldiv@quotient^0,f,c
  4595  000F32  3617               	rlcf	(___aldiv@quotient+1)^0,f,c
  4596  000F34  3618               	rlcf	(___aldiv@quotient+2)^0,f,c
  4597  000F36  3619               	rlcf	(___aldiv@quotient+3)^0,f,c
  4598  000F38  5010               	movf	___aldiv@divisor^0,w,c
  4599  000F3A  5C0C               	subwf	___aldiv@dividend^0,w,c
  4600  000F3C  5011               	movf	(___aldiv@divisor+1)^0,w,c
  4601  000F3E  580D               	subwfb	(___aldiv@dividend+1)^0,w,c
  4602  000F40  5012               	movf	(___aldiv@divisor+2)^0,w,c
  4603  000F42  580E               	subwfb	(___aldiv@dividend+2)^0,w,c
  4604  000F44  5013               	movf	(___aldiv@divisor+3)^0,w,c
  4605  000F46  580F               	subwfb	(___aldiv@dividend+3)^0,w,c
  4606  000F48  A0D8               	btfss	status,0,c
  4607  000F4A  EFA9  F007         	goto	u1551
  4608  000F4E  EFAB  F007         	goto	u1550
  4609  000F52                     u1551:
  4610  000F52  EFB4  F007         	goto	l2370
  4611  000F56                     u1550:
  4612  000F56  5010               	movf	___aldiv@divisor^0,w,c
  4613  000F58  5E0C               	subwf	___aldiv@dividend^0,f,c
  4614  000F5A  5011               	movf	(___aldiv@divisor+1)^0,w,c
  4615  000F5C  5A0D               	subwfb	(___aldiv@dividend+1)^0,f,c
  4616  000F5E  5012               	movf	(___aldiv@divisor+2)^0,w,c
  4617  000F60  5A0E               	subwfb	(___aldiv@dividend+2)^0,f,c
  4618  000F62  5013               	movf	(___aldiv@divisor+3)^0,w,c
  4619  000F64  5A0F               	subwfb	(___aldiv@dividend+3)^0,f,c
  4620  000F66  8016               	bsf	___aldiv@quotient^0,0,c
  4621  000F68                     l2370:
  4622  000F68  90D8               	bcf	status,0,c
  4623  000F6A  3213               	rrcf	(___aldiv@divisor+3)^0,f,c
  4624  000F6C  3212               	rrcf	(___aldiv@divisor+2)^0,f,c
  4625  000F6E  3211               	rrcf	(___aldiv@divisor+1)^0,f,c
  4626  000F70  3210               	rrcf	___aldiv@divisor^0,f,c
  4627  000F72  2E14               	decfsz	___aldiv@counter^0,f,c
  4628  000F74  EF97  F007         	goto	l2362
  4629  000F78                     l2374:
  4630  000F78  5015               	movf	___aldiv@sign^0,w,c
  4631  000F7A  B4D8               	btfsc	status,2,c
  4632  000F7C  EFC2  F007         	goto	u1561
  4633  000F80  EFC4  F007         	goto	u1560
  4634  000F84                     u1561:
  4635  000F84  EFCC  F007         	goto	l2378
  4636  000F88                     u1560:
  4637  000F88  1E19               	comf	(___aldiv@quotient+3)^0,f,c
  4638  000F8A  1E18               	comf	(___aldiv@quotient+2)^0,f,c
  4639  000F8C  1E17               	comf	(___aldiv@quotient+1)^0,f,c
  4640  000F8E  6C16               	negf	___aldiv@quotient^0,c
  4641  000F90  0E00               	movlw	0
  4642  000F92  2217               	addwfc	(___aldiv@quotient+1)^0,f,c
  4643  000F94  2218               	addwfc	(___aldiv@quotient+2)^0,f,c
  4644  000F96  2219               	addwfc	(___aldiv@quotient+3)^0,f,c
  4645  000F98                     l2378:
  4646  000F98  C016  F00C         	movff	___aldiv@quotient,?___aldiv
  4647  000F9C  C017  F00D         	movff	___aldiv@quotient+1,?___aldiv+1
  4648  000FA0  C018  F00E         	movff	___aldiv@quotient+2,?___aldiv+2
  4649  000FA4  C019  F00F         	movff	___aldiv@quotient+3,?___aldiv+3
  4650  000FA8  0012               	return		;funcret
  4651  000FAA                     __end_of___aldiv:
  4652                           	callstack 0
  4653                           
  4654 ;; *************** function _TMR0_WriteTimer *****************
  4655 ;; Defined at:
  4656 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  timerVal        2   11[COMRAM] unsigned short 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;Total ram usage:        2 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    4
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text18
  4685  001692                     __ptext18:
  4686                           	callstack 0
  4687  001692                     _TMR0_WriteTimer:
  4688                           	callstack 26
  4689  001692                     
  4690                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4691  001692  500D               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4692  001694  6ED7               	movwf	215,c	;volatile
  4693  001696                     
  4694                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4695  001696  C00C  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4696  00169A  0012               	return		;funcret
  4697  00169C                     __end_of_TMR0_WriteTimer:
  4698                           	callstack 0
  4699                           
  4700 ;; *************** function _SYSTEM_Initialize *****************
  4701 ;; Defined at:
  4702 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      void 
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0, cstack
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;Total ram usage:        0 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    6
  4723 ;; This function calls:
  4724 ;;		_ADC_Initialize
  4725 ;;		_EUSART1_Initialize
  4726 ;;		_INTERRUPT_Initialize
  4727 ;;		_OSCILLATOR_Initialize
  4728 ;;		_PIN_MANAGER_Initialize
  4729 ;;		_TMR0_Initialize
  4730 ;; This function is called by:
  4731 ;;		_main
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text19
  4736  00162E                     __ptext19:
  4737                           	callstack 0
  4738  00162E                     _SYSTEM_Initialize:
  4739                           	callstack 24
  4740  00162E                     
  4741                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4742  00162E  EC67  F00B         	call	_INTERRUPT_Initialize	;wreg free
  4743  001632                     
  4744                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4745  001632  ECB7  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  4746  001636                     
  4747                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4748  001636  EC09  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  4749  00163A                     
  4750                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  4751  00163A  EC2F  F00B         	call	_ADC_Initialize	;wreg free
  4752  00163E                     
  4753                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4754  00163E  EC9C  F00A         	call	_TMR0_Initialize	;wreg free
  4755  001642                     
  4756                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  4757  001642  EC45  F00A         	call	_EUSART1_Initialize	;wreg free
  4758  001646  0012               	return		;funcret
  4759  001648                     __end_of_SYSTEM_Initialize:
  4760                           	callstack 0
  4761                           
  4762 ;; *************** function _TMR0_Initialize *****************
  4763 ;; Defined at:
  4764 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;Total ram usage:        2 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    5
  4785 ;; This function calls:
  4786 ;;		_TMR0_SetInterruptHandler
  4787 ;; This function is called by:
  4788 ;;		_SYSTEM_Initialize
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text20
  4793  001538                     __ptext20:
  4794                           	callstack 0
  4795  001538                     _TMR0_Initialize:
  4796                           	callstack 24
  4797  001538                     
  4798                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4799  001538  9CD5               	bcf	213,6,c	;volatile
  4800  00153A                     
  4801                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  4802  00153A  0E00               	movlw	0
  4803  00153C  6ED7               	movwf	215,c	;volatile
  4804                           
  4805                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  4806  00153E  0E00               	movlw	0
  4807  001540  6ED6               	movwf	214,c	;volatile
  4808  001542                     
  4809                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4810  001542  50D6               	movf	214,w,c	;volatile
  4811  001544  CFD7 F00E          	movff	4055,??_TMR0_Initialize	;volatile
  4812  001548  6A0F               	clrf	(??_TMR0_Initialize+1)^0,c
  4813  00154A  C00E  F00F         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4814  00154E  6A0E               	clrf	??_TMR0_Initialize^0,c
  4815  001550  100E               	iorwf	??_TMR0_Initialize^0,w,c
  4816  001552  6E4B               	movwf	_timer0ReloadVal^0,c	;volatile
  4817  001554  500F               	movf	(??_TMR0_Initialize+1)^0,w,c
  4818  001556  6E4C               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4819  001558                     
  4820                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4821  001558  94F2               	bcf	242,2,c	;volatile
  4822  00155A                     
  4823                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4824  00155A  8AF2               	bsf	242,5,c	;volatile
  4825  00155C                     
  4826                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4827  00155C  0ED4               	movlw	low _TMR0_DefaultInterruptHandler
  4828  00155E  6E0C               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4829  001560  0E16               	movlw	high _TMR0_DefaultInterruptHandler
  4830  001562  6E0D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4831  001564  EC4E  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  4832  001568                     
  4833                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  4834  001568  0E9F               	movlw	159
  4835  00156A  6ED5               	movwf	213,c	;volatile
  4836  00156C  0012               	return		;funcret
  4837  00156E                     __end_of_TMR0_Initialize:
  4838                           	callstack 0
  4839                           
  4840 ;; *************** function _TMR0_SetInterruptHandler *****************
  4841 ;; Defined at:
  4842 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  InterruptHan    2   11[COMRAM] PTR FTN()void 
  4845 ;;		 -> TMR0_DefaultInterruptHandler(1), myTMR0ISR(1), 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;Total ram usage:        2 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    4
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_main
  4868 ;;		_TMR0_Initialize
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text21
  4873  00169C                     __ptext21:
  4874                           	callstack 0
  4875  00169C                     _TMR0_SetInterruptHandler:
  4876                           	callstack 26
  4877  00169C                     
  4878                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4879  00169C  C00C  F0A3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4880  0016A0  C00D  F0A4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4881  0016A4  0012               	return		;funcret
  4882  0016A6                     __end_of_TMR0_SetInterruptHandler:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _PIN_MANAGER_Initialize *****************
  4886 ;; Defined at:
  4887 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;Total ram usage:        0 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    4
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_SYSTEM_Initialize
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text22
  4916  00156E                     __ptext22:
  4917                           	callstack 0
  4918  00156E                     _PIN_MANAGER_Initialize:
  4919                           	callstack 25
  4920  00156E                     
  4921                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4922  00156E  0E00               	movlw	0
  4923  001570  6E89               	movwf	137,c	;volatile
  4924                           
  4925                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4926  001572  0E00               	movlw	0
  4927  001574  6E8A               	movwf	138,c	;volatile
  4928                           
  4929                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4930  001576  0E00               	movlw	0
  4931  001578  6E8B               	movwf	139,c	;volatile
  4932                           
  4933                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  4934  00157A  0EBF               	movlw	191
  4935  00157C  6E92               	movwf	146,c	;volatile
  4936  00157E                     
  4937                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  4938  00157E  6893               	setf	147,c	;volatile
  4939                           
  4940                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  4941  001580  0EBF               	movlw	191
  4942  001582  6E94               	movwf	148,c	;volatile
  4943                           
  4944                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4945  001584  0E3C               	movlw	60
  4946  001586  010F               	movlb	15	; () banked
  4947  001588  6F3A               	movwf	58,b	;volatile
  4948                           
  4949                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  4950  00158A  0E3F               	movlw	63
  4951  00158C  6F39               	movwf	57,b	;volatile
  4952                           
  4953                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4954  00158E  0E2F               	movlw	47
  4955  001590  6F38               	movwf	56,b	;volatile
  4956                           
  4957                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4958  001592  0E00               	movlw	0
  4959  001594  6E61               	movwf	97,c	;volatile
  4960  001596                     
  4961                           ; BSR set to: 15
  4962                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4963  001596  8EF1               	bsf	241,7,c	;volatile
  4964  001598                     
  4965                           ; BSR set to: 15
  4966  001598  0012               	return		;funcret
  4967  00159A                     __end_of_PIN_MANAGER_Initialize:
  4968                           	callstack 0
  4969                           
  4970 ;; *************** function _OSCILLATOR_Initialize *****************
  4971 ;; Defined at:
  4972 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;		None
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;		None
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      void 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;Total ram usage:        0 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:    4
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_SYSTEM_Initialize
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text23
  5001  001612                     __ptext23:
  5002                           	callstack 0
  5003  001612                     _OSCILLATOR_Initialize:
  5004                           	callstack 25
  5005  001612                     
  5006                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  5007  001612  0E70               	movlw	112
  5008  001614  6ED3               	movwf	211,c	;volatile
  5009                           
  5010                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  5011  001616  0E04               	movlw	4
  5012  001618  6ED2               	movwf	210,c	;volatile
  5013                           
  5014                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  5015  00161A  0E40               	movlw	64
  5016  00161C  6E9B               	movwf	155,c	;volatile
  5017  00161E                     l190:
  5018                           
  5019                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  5020  00161E  AED2               	btfss	4050,7,c	;volatile
  5021  001620  EF14  F00B         	goto	u1441
  5022  001624  EF16  F00B         	goto	u1440
  5023  001628                     u1441:
  5024  001628  EF0F  F00B         	goto	l190
  5025  00162C                     u1440:
  5026  00162C  0012               	return		;funcret
  5027  00162E                     __end_of_OSCILLATOR_Initialize:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function _INTERRUPT_Initialize *****************
  5031 ;; Defined at:
  5032 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		None
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5050 ;;Total ram usage:        0 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    4
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_SYSTEM_Initialize
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text24
  5061  0016CE                     __ptext24:
  5062                           	callstack 0
  5063  0016CE                     _INTERRUPT_Initialize:
  5064                           	callstack 25
  5065  0016CE                     
  5066                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5067  0016CE  9ED0               	bcf	208,7,c	;volatile
  5068  0016D0  0012               	return		;funcret
  5069  0016D2                     __end_of_INTERRUPT_Initialize:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _EUSART1_Initialize *****************
  5073 ;; Defined at:
  5074 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    5
  5095 ;; This function calls:
  5096 ;;		_EUSART1_SetErrorHandler
  5097 ;;		_EUSART1_SetFramingErrorHandler
  5098 ;;		_EUSART1_SetOverrunErrorHandler
  5099 ;; This function is called by:
  5100 ;;		_SYSTEM_Initialize
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text25
  5105  00148A                     __ptext25:
  5106                           	callstack 0
  5107  00148A                     _EUSART1_Initialize:
  5108                           	callstack 24
  5109  00148A                     
  5110                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5111  00148A  0E08               	movlw	8
  5112  00148C  6EB8               	movwf	184,c	;volatile
  5113                           
  5114                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5115  00148E  0E90               	movlw	144
  5116  001490  6EAB               	movwf	171,c	;volatile
  5117                           
  5118                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5119  001492  0E24               	movlw	36
  5120  001494  6EAC               	movwf	172,c	;volatile
  5121                           
  5122                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5123  001496  0E82               	movlw	130
  5124  001498  6EAF               	movwf	175,c	;volatile
  5125                           
  5126                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5127  00149A  0E06               	movlw	6
  5128  00149C  6EB0               	movwf	176,c	;volatile
  5129  00149E                     
  5130                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5131  00149E  0E00               	movlw	0
  5132  0014A0  6E0C               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5133  0014A2  0E00               	movlw	0
  5134  0014A4  6E0D               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5135  0014A6  EC58  F00B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5136  0014AA                     
  5137                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5138  0014AA  0E00               	movlw	0
  5139  0014AC  6E0C               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5140  0014AE  0E00               	movlw	0
  5141  0014B0  6E0D               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5142  0014B2  EC53  F00B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5143  0014B6                     
  5144                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5145  0014B6  0E00               	movlw	0
  5146  0014B8  6E0C               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5147  0014BA  0E00               	movlw	0
  5148  0014BC  6E0D               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5149  0014BE  EC5D  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  5150  0014C2                     
  5151                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5152  0014C2  0E00               	movlw	0
  5153  0014C4  0100               	movlb	0	; () banked
  5154  0014C6  6FA5               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5155  0014C8                     
  5156                           ; BSR set to: 0
  5157  0014C8  0012               	return		;funcret
  5158  0014CA                     __end_of_EUSART1_Initialize:
  5159                           	callstack 0
  5160                           
  5161 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5162 ;; Defined at:
  5163 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  5166 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      void 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;Total ram usage:        2 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    4
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_EUSART1_Initialize
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text26
  5193  0016A6                     __ptext26:
  5194                           	callstack 0
  5195  0016A6                     _EUSART1_SetOverrunErrorHandler:
  5196                           	callstack 24
  5197  0016A6                     
  5198                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5199  0016A6  C00C  F09D         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5200  0016AA  C00D  F09E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5201  0016AE  0012               	return		;funcret
  5202  0016B0                     __end_of_EUSART1_SetOverrunErrorHandler:
  5203                           	callstack 0
  5204                           
  5205 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5206 ;; Defined at:
  5207 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  5210 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;Total ram usage:        2 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    4
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_EUSART1_Initialize
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text27
  5237  0016B0                     __ptext27:
  5238                           	callstack 0
  5239  0016B0                     _EUSART1_SetFramingErrorHandler:
  5240                           	callstack 24
  5241  0016B0                     
  5242                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5243  0016B0  C00C  F09F         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5244  0016B4  C00D  F0A0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5245  0016B8  0012               	return		;funcret
  5246  0016BA                     __end_of_EUSART1_SetFramingErrorHandler:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _EUSART1_SetErrorHandler *****************
  5250 ;; Defined at:
  5251 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  5254 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, status,2, status,0
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;Total ram usage:        2 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    4
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_EUSART1_Initialize
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text28
  5281  0016BA                     __ptext28:
  5282                           	callstack 0
  5283  0016BA                     _EUSART1_SetErrorHandler:
  5284                           	callstack 24
  5285  0016BA                     
  5286                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5287  0016BA  C00C  F09B         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5288  0016BE  C00D  F09C         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5289  0016C2  0012               	return		;funcret
  5290  0016C4                     __end_of_EUSART1_SetErrorHandler:
  5291                           	callstack 0
  5292                           
  5293 ;; *************** function _ADC_Initialize *****************
  5294 ;; Defined at:
  5295 ;;		line 62 in file "mcc_generated_files/adc.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;		None
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;		None
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      void 
  5302 ;; Registers used:
  5303 ;;		wreg, status,2
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;Total ram usage:        0 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:    4
  5316 ;; This function calls:
  5317 ;;		Nothing
  5318 ;; This function is called by:
  5319 ;;		_SYSTEM_Initialize
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text29
  5324  00165E                     __ptext29:
  5325                           	callstack 0
  5326  00165E                     _ADC_Initialize:
  5327                           	callstack 25
  5328  00165E                     
  5329                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  5330  00165E  0E00               	movlw	0
  5331  001660  6EC1               	movwf	193,c	;volatile
  5332                           
  5333                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  5334  001662  0E26               	movlw	38
  5335  001664  6EC0               	movwf	192,c	;volatile
  5336                           
  5337                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  5338  001666  0E00               	movlw	0
  5339  001668  6EC3               	movwf	195,c	;volatile
  5340                           
  5341                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  5342  00166A  0E00               	movlw	0
  5343  00166C  6EC4               	movwf	196,c	;volatile
  5344                           
  5345                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  5346  00166E  0E11               	movlw	17
  5347  001670  6EC2               	movwf	194,c	;volatile
  5348  001672  0012               	return		;funcret
  5349  001674                     __end_of_ADC_Initialize:
  5350                           	callstack 0
  5351                           
  5352 ;; *************** function _EUSART1_is_rx_ready *****************
  5353 ;; Defined at:
  5354 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      _Bool 
  5361 ;; Registers used:
  5362 ;;		wreg
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;Total ram usage:        0 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    4
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_main
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text30
  5383  001674                     __ptext30:
  5384                           	callstack 0
  5385  001674                     _EUSART1_is_rx_ready:
  5386                           	callstack 26
  5387  001674                     
  5388                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5389  001674  BA9E               	btfsc	158,5,c	;volatile
  5390  001676  EF3F  F00B         	goto	u1461
  5391  00167A  EF42  F00B         	goto	u1460
  5392  00167E                     u1461:
  5393  00167E  0E01               	movlw	1
  5394  001680  EF43  F00B         	goto	u1466
  5395  001684                     u1460:
  5396  001684  0E00               	movlw	0
  5397  001686                     u1466:
  5398  001686  0012               	return		;funcret
  5399  001688                     __end_of_EUSART1_is_rx_ready:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function _EUSART1_Read *****************
  5403 ;; Defined at:
  5404 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      unsigned char 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;Total ram usage:        0 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    4
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_main
  5429 ;;		_getch
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text31
  5434  00159A                     __ptext31:
  5435                           	callstack 0
  5436  00159A                     _EUSART1_Read:
  5437                           	callstack 26
  5438  00159A                     l293:
  5439                           
  5440                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5441  00159A  AA9E               	btfss	158,5,c	;volatile
  5442  00159C  EFD2  F00A         	goto	u1471
  5443  0015A0  EFD4  F00A         	goto	u1470
  5444  0015A4                     u1471:
  5445  0015A4  EFCD  F00A         	goto	l293
  5446  0015A8                     u1470:
  5447  0015A8                     
  5448                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5449  0015A8  0E00               	movlw	0
  5450  0015AA  0100               	movlb	0	; () banked
  5451  0015AC  6FA5               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5452  0015AE                     
  5453                           ; BSR set to: 0
  5454                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5455  0015AE  A2AB               	btfss	171,1,c	;volatile
  5456  0015B0  EFDC  F00A         	goto	u1481
  5457  0015B4  EFDE  F00A         	goto	u1480
  5458  0015B8                     u1481:
  5459  0015B8  EFE0  F00A         	goto	l2318
  5460  0015BC                     u1480:
  5461  0015BC                     
  5462                           ; BSR set to: 0
  5463                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5464  0015BC  98AB               	bcf	171,4,c	;volatile
  5465                           
  5466                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5467  0015BE  88AB               	bsf	171,4,c	;volatile
  5468  0015C0                     l2318:
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5472  0015C0  50AE               	movf	174,w,c	;volatile
  5473  0015C2                     
  5474                           ; BSR set to: 0
  5475  0015C2  0012               	return		;funcret
  5476  0015C4                     __end_of_EUSART1_Read:
  5477                           	callstack 0
  5478                           
  5479 ;; *************** function _INTERRUPT_InterruptManager *****************
  5480 ;; Defined at:
  5481 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;		None
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;Total ram usage:        4 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    3
  5502 ;; This function calls:
  5503 ;;		_TMR0_ISR
  5504 ;; This function is called by:
  5505 ;;		Interrupt level 2
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	intcode
  5510  000008                     __pintcode:
  5511                           	callstack 0
  5512  000008                     _INTERRUPT_InterruptManager:
  5513                           	callstack 18
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;incstack = 0
  5517  000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5518  00000A  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManager
  5519  00000E  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5520  000012  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5521  000016  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5522  00001A                     
  5523                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5524  00001A  AAF2               	btfss	242,5,c	;volatile
  5525  00001C  EF12  F000         	goto	i2u174_41
  5526  000020  EF14  F000         	goto	i2u174_40
  5527  000024                     i2u174_41:
  5528  000024  EF1D  F000         	goto	i2l343
  5529  000028                     i2u174_40:
  5530  000028  A4F2               	btfss	242,2,c	;volatile
  5531  00002A  EF19  F000         	goto	i2u175_41
  5532  00002E  EF1B  F000         	goto	i2u175_40
  5533  000032                     i2u175_41:
  5534  000032  EF1D  F000         	goto	i2l343
  5535  000036                     i2u175_40:
  5536  000036                     
  5537                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5538  000036  EC65  F00A         	call	_TMR0_ISR	;wreg free
  5539  00003A                     i2l343:
  5540  00003A  C00B  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5541  00003E  C00A  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5542  000042  C009  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5543  000046  C008  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5544  00004A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5545  00004C  0011               	retfie		f
  5546  00004E                     __end_of_INTERRUPT_InterruptManager:
  5547                           	callstack 0
  5548                           
  5549 ;; *************** function _TMR0_ISR *****************
  5550 ;; Defined at:
  5551 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;		None
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;Total ram usage:        0 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:    2
  5572 ;; This function calls:
  5573 ;;		Absolute function
  5574 ;;		_TMR0_DefaultInterruptHandler
  5575 ;;		_myTMR0ISR
  5576 ;; This function is called by:
  5577 ;;		_INTERRUPT_InterruptManager
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text33
  5582  0014CA                     __ptext33:
  5583                           	callstack 0
  5584  0014CA                     _TMR0_ISR:
  5585                           	callstack 18
  5586  0014CA                     
  5587                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5588  0014CA  94F2               	bcf	242,2,c	;volatile
  5589  0014CC                     
  5590                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5591  0014CC  504C               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5592  0014CE  6ED7               	movwf	215,c	;volatile
  5593  0014D0                     
  5594                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5595  0014D0  C04B  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5596  0014D4                     
  5597                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5598  0014D4  0100               	movlb	0	; () banked
  5599  0014D6  51A3               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5600  0014D8  11A4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5601  0014DA  B4D8               	btfsc	status,2,c
  5602  0014DC  EF72  F00A         	goto	i2u149_41
  5603  0014E0  EF74  F00A         	goto	i2u149_40
  5604  0014E4                     i2u149_41:
  5605  0014E4  EF80  F00A         	goto	i2l158
  5606  0014E8                     i2u149_40:
  5607  0014E8                     
  5608                           ; BSR set to: 0
  5609                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  5610  0014E8  D802               	call	i2u150_48
  5611  0014EA  EF80  F00A         	goto	i2u150_49
  5612  0014EE                     i2u150_48:
  5613  0014EE  0005               	push	
  5614  0014F0  6EFA               	movwf	pclath,c
  5615  0014F2  51A3               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5616  0014F4  6EFD               	movwf	tosl,c
  5617  0014F6  51A4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5618  0014F8  6EFE               	movwf	tosh,c
  5619  0014FA  6AFF               	clrf	tosu,c
  5620  0014FC  50FA               	movf	pclath,w,c
  5621  0014FE  0012               	return		;indir
  5622  001500                     i2u150_49:
  5623  001500                     i2l158:
  5624  001500  0012               	return		;funcret
  5625  001502                     __end_of_TMR0_ISR:
  5626                           	callstack 0
  5627                           
  5628 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5629 ;; Defined at:
  5630 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;		None
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;		None
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      void 
  5637 ;; Registers used:
  5638 ;;		None
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;Total ram usage:        0 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; This function calls:
  5651 ;;		Nothing
  5652 ;; This function is called by:
  5653 ;;		_TMR0_Initialize
  5654 ;;		_TMR0_ISR
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text34
  5659  0016D4                     __ptext34:
  5660                           	callstack 0
  5661  0016D4                     _TMR0_DefaultInterruptHandler:
  5662                           	callstack 19
  5663  0016D4  0012               	return		;funcret
  5664  0016D6                     __end_of_TMR0_DefaultInterruptHandler:
  5665                           	callstack 0
  5666                           
  5667 ;; *************** function _myTMR0ISR *****************
  5668 ;; Defined at:
  5669 ;;		line 228 in file "main.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;		None
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  micReading      1    6[COMRAM] unsigned char 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;Total ram usage:        5 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    1
  5690 ;; This function calls:
  5691 ;;		i2_TMR0_WriteTimer
  5692 ;; This function is called by:
  5693 ;;		_main
  5694 ;;		_TMR0_ISR
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text35
  5699  000FAA                     __ptext35:
  5700                           	callstack 0
  5701  000FAA                     _myTMR0ISR:
  5702                           	callstack 18
  5703  000FAA                     
  5704                           ;main.c: 231:     uint8_t micReading = ADRESH;
  5705  000FAA  CFC4 F007          	movff	4036,myTMR0ISR@micReading	;volatile
  5706                           
  5707                           ;main.c: 236:     ADCON0bits.GO_NOT_DONE = 1;
  5708  000FAE  82C2               	bsf	194,1,c	;volatile
  5709                           
  5710                           ;main.c: 240:     switch(timerState){
  5711  000FB0  EF3E  F008         	goto	i2l2234
  5712  000FB4                     i2l2208:
  5713                           
  5714                           ;main.c: 244:             if(fillBuffer){
  5715  000FB4  5050               	movf	_fillBuffer^0,w,c
  5716  000FB6  B4D8               	btfsc	status,2,c
  5717  000FB8  EFE0  F007         	goto	i2u140_41
  5718  000FBC  EFE2  F007         	goto	i2u140_40
  5719  000FC0                     i2u140_41:
  5720  000FC0  EF57  F008         	goto	i2l88
  5721  000FC4                     i2u140_40:
  5722  000FC4                     
  5723                           ;main.c: 245:                 timerState = MIC_WAIT_FOR_TRIGGER;
  5724  000FC4  0E01               	movlw	1
  5725  000FC6  6E4F               	movwf	_timerState^0,c
  5726                           
  5727                           ;main.c: 246:                 bufferIdx = 0;
  5728  000FC8  0E00               	movlw	0
  5729  000FCA  6E4E               	movwf	(_bufferIdx+1)^0,c
  5730  000FCC  0E00               	movlw	0
  5731  000FCE  6E4D               	movwf	_bufferIdx^0,c
  5732                           
  5733                           ;main.c: 247:                 fillBuffer = 0;
  5734  000FD0  0E00               	movlw	0
  5735  000FD2  6E50               	movwf	_fillBuffer^0,c
  5736  000FD4  EF57  F008         	goto	i2l88
  5737  000FD8                     i2l2212:
  5738                           
  5739                           ;main.c: 253:             if(micReading >= 128 + thresholdRange || micReading <= 128 - t
      +                          hresholdRange){
  5740  000FD8  0E80               	movlw	128
  5741  000FDA  0101               	movlb	1	; () banked
  5742  000FDC  2593               	addwf	_thresholdRange& (0+255),w,b
  5743  000FDE  6E03               	movwf	??_myTMR0ISR^0,c
  5744  000FE0  0E00               	movlw	0
  5745  000FE2  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  5746  000FE4  6E04               	movwf	(??_myTMR0ISR+1)^0,c
  5747  000FE6  5007               	movf	myTMR0ISR@micReading^0,w,c
  5748  000FE8  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  5749  000FEA  6A06               	clrf	(??_myTMR0ISR+3)^0,c
  5750  000FEC  5003               	movf	??_myTMR0ISR^0,w,c
  5751  000FEE  5C05               	subwf	(??_myTMR0ISR+2)^0,w,c
  5752  000FF0  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5753  000FF2  5806               	subwfb	(??_myTMR0ISR+3)^0,w,c
  5754  000FF4  B0D8               	btfsc	status,0,c
  5755  000FF6  EFFF  F007         	goto	i2u141_41
  5756  000FFA  EF01  F008         	goto	i2u141_40
  5757  000FFE                     i2u141_41:
  5758  000FFE  EF17  F008         	goto	i2l2216
  5759  001002                     i2u141_40:
  5760  001002                     
  5761                           ; BSR set to: 1
  5762  001002  5007               	movf	myTMR0ISR@micReading^0,w,c
  5763  001004  6E03               	movwf	??_myTMR0ISR^0,c
  5764  001006  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  5765  001008  0E80               	movlw	128
  5766  00100A  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  5767  00100C  0E00               	movlw	0
  5768  00100E  6E06               	movwf	(??_myTMR0ISR+3)^0,c
  5769  001010  5193               	movf	_thresholdRange& (0+255),w,b
  5770  001012  5E05               	subwf	(??_myTMR0ISR+2)^0,f,c
  5771  001014  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  5772  001016  5A06               	subwfb	(??_myTMR0ISR+3)^0,f,c
  5773  001018  5003               	movf	??_myTMR0ISR^0,w,c
  5774  00101A  5C05               	subwf	(??_myTMR0ISR+2)^0,w,c
  5775  00101C  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5776  00101E  5806               	subwfb	(??_myTMR0ISR+3)^0,w,c
  5777  001020  A0D8               	btfss	status,0,c
  5778  001022  EF15  F008         	goto	i2u142_41
  5779  001026  EF17  F008         	goto	i2u142_40
  5780  00102A                     i2u142_41:
  5781  00102A  EF57  F008         	goto	i2l88
  5782  00102E                     i2u142_40:
  5783  00102E                     i2l2216:
  5784                           
  5785                           ; BSR set to: 1
  5786                           ;main.c: 254:                 adc_reading[bufferIdx] = micReading;
  5787  00102E  0E00               	movlw	low _adc_reading
  5788  001030  244D               	addwf	_bufferIdx^0,w,c
  5789  001032  6ED9               	movwf	fsr2l,c
  5790  001034  0E02               	movlw	high _adc_reading
  5791  001036  204E               	addwfc	(_bufferIdx+1)^0,w,c
  5792  001038  6EDA               	movwf	fsr2h,c
  5793  00103A  C007  FFDF         	movff	myTMR0ISR@micReading,indf2
  5794  00103E                     
  5795                           ; BSR set to: 1
  5796                           ;main.c: 255:                 bufferIdx += 1;
  5797  00103E  4A4D               	infsnz	_bufferIdx^0,f,c
  5798  001040  2A4E               	incf	(_bufferIdx+1)^0,f,c
  5799  001042                     
  5800                           ; BSR set to: 1
  5801                           ;main.c: 256:                 timerState = MIC_ACQUIRE;
  5802  001042  0E02               	movlw	2
  5803  001044  6E4F               	movwf	_timerState^0,c
  5804  001046  EF57  F008         	goto	i2l88
  5805  00104A                     i2l2222:
  5806                           
  5807                           ;main.c: 260:             adc_reading[bufferIdx] = micReading;
  5808  00104A  0E00               	movlw	low _adc_reading
  5809  00104C  244D               	addwf	_bufferIdx^0,w,c
  5810  00104E  6ED9               	movwf	fsr2l,c
  5811  001050  0E02               	movlw	high _adc_reading
  5812  001052  204E               	addwfc	(_bufferIdx+1)^0,w,c
  5813  001054  6EDA               	movwf	fsr2h,c
  5814  001056  C007  FFDF         	movff	myTMR0ISR@micReading,indf2
  5815  00105A                     
  5816                           ;main.c: 261:             bufferIdx += 1;
  5817  00105A  4A4D               	infsnz	_bufferIdx^0,f,c
  5818  00105C  2A4E               	incf	(_bufferIdx+1)^0,f,c
  5819  00105E                     
  5820                           ;main.c: 262:             if(bufferIdx >= 256){
  5821  00105E  044E               	decf	(_bufferIdx+1)^0,w,c
  5822  001060  A0D8               	btfss	status,0,c
  5823  001062  EF35  F008         	goto	i2u143_41
  5824  001066  EF37  F008         	goto	i2u143_40
  5825  00106A                     i2u143_41:
  5826  00106A  EF57  F008         	goto	i2l88
  5827  00106E                     i2u143_40:
  5828  00106E                     
  5829                           ;main.c: 264:                 samplesCollected = 1;
  5830  00106E  0E01               	movlw	1
  5831  001070  0101               	movlb	1	; () banked
  5832  001072  6F95               	movwf	_samplesCollected& (0+255),b
  5833                           
  5834                           ;main.c: 265:                 timerState = MIC_IDLE;
  5835  001074  0E00               	movlw	0
  5836  001076  6E4F               	movwf	_timerState^0,c
  5837  001078  EF57  F008         	goto	i2l88
  5838  00107C                     i2l2234:
  5839  00107C  504F               	movf	_timerState^0,w,c
  5840  00107E  6E03               	movwf	??_myTMR0ISR^0,c
  5841  001080  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  5842                           
  5843                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5844                           ; Switch size 1, requested type "simple"
  5845                           ; Number of cases is 1, Range of values is 0 to 0
  5846                           ; switch strategies available:
  5847                           ; Name         Instructions Cycles
  5848                           ; simple_byte            4     3 (average)
  5849                           ;	Chosen strategy is simple_byte
  5850  001082  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5851  001084  0A00               	xorlw	0	; case 0
  5852  001086  B4D8               	btfsc	status,2,c
  5853  001088  EF48  F008         	goto	i2l3118
  5854  00108C  EF57  F008         	goto	i2l88
  5855  001090                     i2l3118:
  5856                           
  5857                           ; Switch size 1, requested type "simple"
  5858                           ; Number of cases is 3, Range of values is 0 to 2
  5859                           ; switch strategies available:
  5860                           ; Name         Instructions Cycles
  5861                           ; simple_byte           10     6 (average)
  5862                           ;	Chosen strategy is simple_byte
  5863  001090  5003               	movf	??_myTMR0ISR^0,w,c
  5864  001092  0A00               	xorlw	0	; case 0
  5865  001094  B4D8               	btfsc	status,2,c
  5866  001096  EFDA  F007         	goto	i2l2208
  5867  00109A  0A01               	xorlw	1	; case 1
  5868  00109C  B4D8               	btfsc	status,2,c
  5869  00109E  EFEC  F007         	goto	i2l2212
  5870  0010A2  0A03               	xorlw	3	; case 2
  5871  0010A4  B4D8               	btfsc	status,2,c
  5872  0010A6  EF25  F008         	goto	i2l2222
  5873  0010AA  EF57  F008         	goto	i2l88
  5874  0010AE                     i2l88:
  5875  0010AE  0012               	return		;funcret
  5876  0010B0                     __end_of_myTMR0ISR:
  5877                           	callstack 0
  5878                           
  5879 ;; *************** function i2_TMR0_WriteTimer *****************
  5880 ;; Defined at:
  5881 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  timerVal        2    0[COMRAM] unsigned short 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;Total ram usage:        2 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; This function calls:
  5902 ;;		Nothing
  5903 ;; This function is called by:
  5904 ;;		_myTMR0ISR
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text36
  5909  0016C4                     __ptext36:
  5910                           	callstack 0
  5911  0016C4                     i2_TMR0_WriteTimer:
  5912                           	callstack 18
  5913  0016C4                     
  5914                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5915  0016C4  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  5916  0016C6  6ED7               	movwf	215,c	;volatile
  5917  0016C8                     
  5918                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5919  0016C8  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  5920  0016CC  0012               	return		;funcret
  5921  0016CE                     __end_ofi2_TMR0_WriteTimer:
  5922                           	callstack 0
  5923                           
  5924                           	psect	text37
  5925  000000                     __ptext37:
  5926                           	callstack 0
  5927  000000                     
  5928                           	psect	rparam
  5929  0000                     
  5930                           	psect	temp
  5931  000051                     btemp:
  5932                           	callstack 0
  5933  000051                     	ds	1
  5934  0000                     int$flags	set	btemp
  5935  0000                     wtemp8	set	btemp+1
  5936  0000                     ttemp5	set	btemp+1
  5937  0000                     ttemp6	set	btemp+4
  5938  0000                     ttemp7	set	btemp+8
  5939                           
  5940                           	psect	idloc
  5941                           
  5942                           ;Config register IDLOC0 @ 0x200000
  5943                           ;	unspecified, using default values
  5944  200000                     	org	2097152
  5945  200000  FF                 	db	255
  5946                           
  5947                           ;Config register IDLOC1 @ 0x200001
  5948                           ;	unspecified, using default values
  5949  200001                     	org	2097153
  5950  200001  FF                 	db	255
  5951                           
  5952                           ;Config register IDLOC2 @ 0x200002
  5953                           ;	unspecified, using default values
  5954  200002                     	org	2097154
  5955  200002  FF                 	db	255
  5956                           
  5957                           ;Config register IDLOC3 @ 0x200003
  5958                           ;	unspecified, using default values
  5959  200003                     	org	2097155
  5960  200003  FF                 	db	255
  5961                           
  5962                           ;Config register IDLOC4 @ 0x200004
  5963                           ;	unspecified, using default values
  5964  200004                     	org	2097156
  5965  200004  FF                 	db	255
  5966                           
  5967                           ;Config register IDLOC5 @ 0x200005
  5968                           ;	unspecified, using default values
  5969  200005                     	org	2097157
  5970  200005  FF                 	db	255
  5971                           
  5972                           ;Config register IDLOC6 @ 0x200006
  5973                           ;	unspecified, using default values
  5974  200006                     	org	2097158
  5975  200006  FF                 	db	255
  5976                           
  5977                           ;Config register IDLOC7 @ 0x200007
  5978                           ;	unspecified, using default values
  5979  200007                     	org	2097159
  5980  200007  FF                 	db	255
  5981                           
  5982                           	psect	config
  5983                           
  5984                           ; Padding undefined space
  5985  300000                     	org	3145728
  5986  300000  FF                 	db	255
  5987                           
  5988                           ;Config register CONFIG1H @ 0x300001
  5989                           ;	Oscillator Selection bits
  5990                           ;	FOSC = INTIO67, Internal oscillator block
  5991                           ;	4X PLL Enable
  5992                           ;	PLLCFG = OFF, Oscillator used directly
  5993                           ;	Primary clock enable bit
  5994                           ;	PRICLKEN = ON, Primary clock enabled
  5995                           ;	Fail-Safe Clock Monitor Enable bit
  5996                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5997                           ;	Internal/External Oscillator Switchover bit
  5998                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5999  300001                     	org	3145729
  6000  300001  28                 	db	40
  6001                           
  6002                           ;Config register CONFIG2L @ 0x300002
  6003                           ;	Power-up Timer Enable bit
  6004                           ;	PWRTEN = OFF, Power up timer disabled
  6005                           ;	Brown-out Reset Enable bits
  6006                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6007                           ;	Brown Out Reset Voltage bits
  6008                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6009  300002                     	org	3145730
  6010  300002  1F                 	db	31
  6011                           
  6012                           ;Config register CONFIG2H @ 0x300003
  6013                           ;	Watchdog Timer Enable bits
  6014                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6015                           ;	Watchdog Timer Postscale Select bits
  6016                           ;	WDTPS = 32768, 1:32768
  6017  300003                     	org	3145731
  6018  300003  3C                 	db	60
  6019                           
  6020                           ; Padding undefined space
  6021  300004                     	org	3145732
  6022  300004  FF                 	db	255
  6023                           
  6024                           ;Config register CONFIG3H @ 0x300005
  6025                           ;	CCP2 MUX bit
  6026                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6027                           ;	PORTB A/D Enable bit
  6028                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6029                           ;	P3A/CCP3 Mux bit
  6030                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6031                           ;	HFINTOSC Fast Start-up
  6032                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6033                           ;	Timer3 Clock input mux bit
  6034                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6035                           ;	ECCP2 B output mux bit
  6036                           ;	P2BMX = PORTB5, P2B is on RB5
  6037                           ;	MCLR Pin Enable bit
  6038                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6039  300005                     	org	3145733
  6040  300005  BF                 	db	191
  6041                           
  6042                           ;Config register CONFIG4L @ 0x300006
  6043                           ;	Stack Full/Underflow Reset Enable bit
  6044                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6045                           ;	Single-Supply ICSP Enable bit
  6046                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6047                           ;	Extended Instruction Set Enable bit
  6048                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6049                           ;	Background Debug
  6050                           ;	DEBUG = OFF, Disabled
  6051  300006                     	org	3145734
  6052  300006  85                 	db	133
  6053                           
  6054                           ; Padding undefined space
  6055  300007                     	org	3145735
  6056  300007  FF                 	db	255
  6057                           
  6058                           ;Config register CONFIG5L @ 0x300008
  6059                           ;	Code Protection Block 0
  6060                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6061                           ;	Code Protection Block 1
  6062                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6063                           ;	Code Protection Block 2
  6064                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6065                           ;	Code Protection Block 3
  6066                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6067  300008                     	org	3145736
  6068  300008  0F                 	db	15
  6069                           
  6070                           ;Config register CONFIG5H @ 0x300009
  6071                           ;	Boot Block Code Protection bit
  6072                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6073                           ;	Data EEPROM Code Protection bit
  6074                           ;	CPD = OFF, Data EEPROM not code-protected
  6075  300009                     	org	3145737
  6076  300009  C0                 	db	192
  6077                           
  6078                           ;Config register CONFIG6L @ 0x30000A
  6079                           ;	Write Protection Block 0
  6080                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6081                           ;	Write Protection Block 1
  6082                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6083                           ;	Write Protection Block 2
  6084                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6085                           ;	Write Protection Block 3
  6086                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6087  30000A                     	org	3145738
  6088  30000A  0F                 	db	15
  6089                           
  6090                           ;Config register CONFIG6H @ 0x30000B
  6091                           ;	Configuration Register Write Protection bit
  6092                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6093                           ;	Boot Block Write Protection bit
  6094                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6095                           ;	Data EEPROM Write Protection bit
  6096                           ;	WRTD = OFF, Data EEPROM not write-protected
  6097  30000B                     	org	3145739
  6098  30000B  E0                 	db	224
  6099                           
  6100                           ;Config register CONFIG7L @ 0x30000C
  6101                           ;	Table Read Protection Block 0
  6102                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6103                           ;	Table Read Protection Block 1
  6104                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6105                           ;	Table Read Protection Block 2
  6106                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6107                           ;	Table Read Protection Block 3
  6108                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6109  30000C                     	org	3145740
  6110  30000C  0F                 	db	15
  6111                           
  6112                           ;Config register CONFIG7H @ 0x30000D
  6113                           ;	Boot Block Table Read Protection bit
  6114                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6115  30000D                     	org	3145741
  6116  30000D  40                 	db	64
  6117                           tosu	equ	0xFFF
  6118                           tosh	equ	0xFFE
  6119                           tosl	equ	0xFFD
  6120                           stkptr	equ	0xFFC
  6121                           pclatu	equ	0xFFB
  6122                           pclath	equ	0xFFA
  6123                           pcl	equ	0xFF9
  6124                           tblptru	equ	0xFF8
  6125                           tblptrh	equ	0xFF7
  6126                           tblptrl	equ	0xFF6
  6127                           tablat	equ	0xFF5
  6128                           prodh	equ	0xFF4
  6129                           prodl	equ	0xFF3
  6130                           indf0	equ	0xFEF
  6131                           postinc0	equ	0xFEE
  6132                           postdec0	equ	0xFED
  6133                           preinc0	equ	0xFEC
  6134                           plusw0	equ	0xFEB
  6135                           fsr0h	equ	0xFEA
  6136                           fsr0l	equ	0xFE9
  6137                           wreg	equ	0xFE8
  6138                           indf1	equ	0xFE7
  6139                           postinc1	equ	0xFE6
  6140                           postdec1	equ	0xFE5
  6141                           preinc1	equ	0xFE4
  6142                           plusw1	equ	0xFE3
  6143                           fsr1h	equ	0xFE2
  6144                           fsr1l	equ	0xFE1
  6145                           bsr	equ	0xFE0
  6146                           indf2	equ	0xFDF
  6147                           postinc2	equ	0xFDE
  6148                           postdec2	equ	0xFDD
  6149                           preinc2	equ	0xFDC
  6150                           plusw2	equ	0xFDB
  6151                           fsr2h	equ	0xFDA
  6152                           fsr2l	equ	0xFD9
  6153                           status	equ	0xFD8

Data Sizes:
    Strings     557
    Constant    0
    Data        2
    BSS         314
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      80
    BANK0           160     57     102
    BANK1           256    147     150
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1332_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[30]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[30]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[30]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), myTMR0ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), myTMR0ISR(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               159   159      0   17755
                                             45 BANK0     12    12      0
                                              0 BANK1    147   147      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                            ___aldiv
                            ___lwdiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   14342
                                             33 BANK0     12     4      8
                            ___aldiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11645
                                             66 COMRAM     2     2      0
                                             27 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   11163
                                             58 COMRAM     8     2      6
                                             18 BANK0      9     9      0
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6701
                                             40 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4435
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             22 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1546
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                             12 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     449
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             11 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             11 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             13 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     159
                                              7 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     159
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           5     5      0     159
                                              2 COMRAM     5     5      0
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   ___aldiv
   ___lwdiv
   ___wmul
   _printf
     ___aldiv (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       i2_TMR0_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     93      96       7       58.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     39      66       5       63.7%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      50       1       85.1%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     24C      12        0.0%
DATA                 0      0     24C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 21 12:40:30 2020

                                            l33 0064                                              l43 0138  
                                            l60 04F6                                              l36 00BC  
                           ___wmul@multiplicand 000E                                 _timer0ReloadVal 004B  
                           myTMR0ISR@micReading 0007                                             l115 1598  
                                           l212 1672                                             l300 164A  
                                           l151 169A                                             l303 165C  
                                           l321 16B8                                             l161 16A4  
                                           l139 156C                                             l324 16AE  
                                           l309 1690                                             l190 161E  
                                           l327 16C2                                             l336 16D0  
                                           l193 162C                                             l425 0FA8  
                                           l346 1610                                             l187 1646  
                                           l284 1686                                             l276 14C8  
                                           l460 0D38                                             l293 159A  
                                           l297 15C2                                             l473 0E9C  
                                           l844 134E                                             l837 1346  
                                           _abs 144A                                             _pad 1184  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1103 0BB0  
                                          l1120 1488                                            l1112 13AA  
                                          l1024 15EA                                            l1113 13B2  
                                          l1051 11C8                                            ?_abs 001E  
                                          l1132 12DA                                            l1140 1448  
                                          l1117 1480                                            l1070 1156  
                                          l1054 120A                                            l1072 1182  
                                          l1056 1244                                            l1080 0744  
                                          l3000 037E                                            l1146 1536  
                                          l3010 0424                                            l3002 039A  
                                          l1067 1114                                            l3012 0430  
                                          l3004 03BC                                            l2310 159A  
                                          l2150 16BA                                            l1078 073C  
                                          l3030 0506                                            l3022 04DE  
                                          l3014 04AA                                            l3006 03D2  
                                          l2312 15A8                                            l2240 156E  
                                          l2144 169C                                            l2400 133A  
                                          l3040 0538                                            l3024 04EC  
                                          l3016 04BA                                            l3008 0410  
                                          l2314 15AE                                            l2306 1674  
                                          l2146 16B0                                            l2242 157E  
                                          l2250 1542                                            l2402 1340  
                                          l1098 097C                                            l3050 05DA  
                                          l3042 0542                                            l3034 0520  
                                          l3018 04C4                                            l2316 15BC  
                                          l2148 16A6                                            l2260 16CE  
                                          l2244 1596                                            l2252 1558  
                                          l2340 0EA2                                            l2332 15EC  
                                          l3116 065A                                            l3052 0626  
                                          l3044 0580                                            l3036 052E  
                                          l3028 04FC                                            l2318 15C0  
                                          l2270 14AA                                            l2262 1612  
                                          l2254 155A                                            l2246 1538  
                                          l2350 0EE2                                            l2342 0EB0  
                                          l2334 1608                                            l3054 062E  
                                          l3046 0594                                            l2264 165E  
                                          l2272 14B6                                            l2256 155C  
                                          l2248 153A                                            l2360 0F20  
                                          l2352 0EE6                                            l2344 0EC0  
                                          l3048 059C                                            l2274 14C2  
                                          l2266 148A                                            l2258 1568  
                                          l2290 163A                                            l2370 0F68  
                                          l2362 0F2E                                            l2354 0EF6  
                                          l2346 0EC4                                            l2338 0E9E  
                                          l3058 0644                                            l2268 149E  
                                          l2292 163E                                            l2284 162E  
                                          l2372 0F72                                            l2364 0F38  
                                          l2356 0F0C                                            l2348 0ED2  
                                          l2620 168A                                            l2700 0D3E  
                                          l2294 1642                                            l2286 1632  
                                          l2366 0F56                                            l2358 0F14  
                                          l2374 0F78                                            l2390 1306  
                                          l2382 12DC                                            l2630 1292  
                                          l2622 1246                                            l2710 0D9E  
                                          l2702 0D4C                                            l2288 1636  
                                          l2296 1692                                            l2376 0F88  
                                          l2368 0F66                                            l2392 1314  
                                          l2384 12E4                                            l2616 164A  
                                          l2632 12C8                                            l2624 1258  
                                          l2720 0E14                                            l2712 0DBC  
                                          l2704 0D6C                                            l2640 1424  
                                          l2800 0730                                            l2298 1696  
                                          l2378 0F98                                            l2394 131A  
                                          l2386 12F6                                            l2618 1658  
                                          l2626 126A                                            l2730 0E7C  
                                          l2722 0E34                                            l2714 0DC4  
                                          l2706 0D70                                            l2642 1428  
                                          l2650 152A                                            l2810 077A  
                                          l2802 074C                                            l2396 1330  
                                          l2388 12FE                                            l2628 1274  
                                          l2660 0BE4                                            l2724 0E46  
                                          l2716 0DD8                                            l2708 0D7E  
                                          l2636 1406                                            l2644 1502  
                                          l2740 11B4                                            l2820 0818  
                                          l2812 0782                                            l2804 075E  
                                          l2900 1350                                            l2398 1338  
                                          l2670 0C26                                            l2662 0BE8  
                                          l2654 0BB2                                            l2718 0DE6  
                                          l2726 0E4C                                            l2638 1412  
                                          l2646 150E                                            l2750 1218  
                                          l2742 11C0                                            l2734 1184  
                                          l2830 08EA                                            l2814 0788  
                                          l2822 087C                                            l2806 076C  
                                          l2902 1358                                            l2910 15CE  
                                          l2760 10B0                                            l2680 0C80  
                                          l2672 0C44                                            l2664 0BF6  
                                          l2656 0BB6                                            l2728 0E5C  
                                          l2648 1512                                            l2752 122C  
                                          l2744 11D4                                            l2736 1192  
                                          l2840 0930                                            l2824 0898  
                                          l2832 08F8                                            l2816 080A  
                                          l2808 0772                                            l2904 1366  
                                          l2920 0072                                            l2770 10FA  
                                          l2762 10C2                                            l2682 0CAE  
                                          l2674 0C4C                                            l2690 0CE8  
                                          l2666 0C16                                            l2658 0BC4  
                                          l2746 11E8                                            l2738 11A6  
                                          l2842 093C                                            l2834 090A  
                                          l2826 08B6                                            l2818 0812  
                                          l2850 097E                                            l2906 138C  
                                          l2930 009E                                            l2922 007E  
                                          l2914 0052                                            l2780 1138  
                                          l2764 10CE                                            l2692 0CF8  
                                          l2684 0CCE                                            l2676 0C60  
                                          l2668 0C1A                                            l2756 144A  
                                          l2748 11EC                                            l2844 0944  
                                          l2836 0918                                            l2828 08D0  
                                          l2860 09EC                                            l2852 09A4  
                                          l2908 15C4                                            l2940 00E0  
                                          l2932 00AC                                            l2924 0080  
                                          l2916 0056                                            l2782 1164  
                                          l2774 110C                                            l2766 10DA  
                                          l2694 0D18                                            l2686 0CD0  
                                          l2678 0C6E                                            l2758 1464  
                                          l2838 091E                                            l2846 0954  
                                          l2790 06BC                                            l2870 0A88  
                                          l2862 0A20                                            l2854 09B2  
                                          l2950 0124                                            l2942 00F6  
                                          l2934 00BA                                            l2926 0082  
                                          l2918 0062                                            ?_pad 001E  
                                          l2784 1176                                            l2776 1120  
                                          l2768 10E8                                            l2688 0CE2  
                                          l2792 06E6                                            l2880 0B3E  
                                          l2872 0AD2                                            l2856 09C2  
                                          l2960 018E                                            l2952 0160  
                                          l2936 00CA                                            l2928 0090  
                                          l2778 1134                                            l2698 0D3A  
                                          l2794 0706                                            l2882 0B52  
                                          l2866 0A3C                                            l2858 09C6  
                                          l2970 01CE                                            l2954 0166  
                                          l2938 00DC                                            l2796 0714  
                                          l2788 069C                                            l2876 0B0A  
                                          l2868 0A62                                            l2892 0B78  
                                          l2980 0202                                            l2972 01DE  
                                          l2956 0176                                            l2948 0100  
                                          l2798 0716                                            l2894 0B9E  
                                          l2878 0B30                                            l2886 0B5E  
                                          l2990 0266                                            l2982 022A  
                                          l2974 01E2                                            l2966 0196  
                                          l2958 0184                                            l2888 0B6C  
                                          l2992 0272                                            l2984 0230  
                                          l2976 01E6                                            l2968 01B2  
                                          l2994 0310                                            l2986 0246  
                                          l2978 01F6                                            l2996 0364  
                                          l2988 025C                                            l2998 0368  
                                          STR_1 FFCD                                            STR_2 FF29  
                                          STR_3 FFD8                                            STR_4 FFFB  
                                          STR_5 FE4D                                            STR_6 FFE1  
                                          STR_7 FFF7                                            STR_8 FE18  
                                          STR_9 FFF7                                            u2000 1464  
                                          u2001 1460                                            u2010 10C2  
                                          u2011 10BE                                            u2020 10E8  
                                          u2100 0730                                            u2021 10E4  
                                          u2101 072C                                            u2030 1108  
                                          u2110 075E                                            u2031 1104  
                                          u2111 075A                                            u2040 1156  
                                          u2200 0930                                            u2120 076C  
                                          u2041 1152                                            u2201 092C  
                                          u2121 0768                                            u2050 1164  
                                          u2130 0898                                            u2210 09A4  
                                          u2051 1160                                            u2131 0894  
                                          u2211 09A0                                            u2140 08B6  
                                          u2060 06CE                                            u2220 09EC  
                                          u2300 0124                                            u2141 08B2  
                                          u2061 06C8                                            u2221 09E8  
                                          u2301 0120                                            _LATA 000F89  
                                          u1510 0EB0                                            u2150 08D0  
                                          u2070 06D0                                            u2230 0A62  
                                          u2310 0176                                            _LATB 000F8A  
                                          u1511 0EAC                                            u2151 08CC  
                                          u2231 0A5E                                            u2311 0172  
                                          _LATC 000F8B                                            u1440 162C  
                                          u1520 0ED2                                            u2160 08EA  
                                          u2080 06E6                                            u2240 0A88  
                                          u2400 0594                                            u2320 01B2  
                                          u1441 1628                                            u1521 0ECE  
                                          u2161 08E6                                            u2081 06E2  
                                          u2241 0A84                                            u2401 0590  
                                          u2321 01AE                                            u1530 0F0C  
                                          u2170 08F8                                            u2090 0714  
                                          u2250 0B30                                            u2330 01CE  
                                          u1531 0F08                                            u2171 08F4  
                                          u2091 0710                                            u2251 0B2C  
                                          u2331 01CA                                            u1460 1684  
                                          u1540 0F2E                                            u2180 090A  
                                          u2260 13AA                                            u2340 01F6  
                                          u1461 167E                                            u1541 0F2A  
                                          u2181 0906                                            u2261 13A6  
                                          u2341 01F2                                            u1470 15A8  
                                          u1550 0F56                                            u2190 0918  
                                          u2350 0246                                            u2270 0072  
                                          u1471 15A4                                            u1551 0F52  
                                          u2191 0914                                            u2351 0242  
                                          u2271 006E                                            u1480 15BC  
                                          u1560 0F88                                            u1800 12C8  
                                          u2360 037E                                            u2280 00CA  
                                          u1481 15B8                                            u1561 0F84  
                                          u1801 12C4                                            u2361 037A  
                                          u2281 00C6                                            u1466 1686  
                                          u1570 12F6                                            u1810 1448  
                                          u2370 0424                                            u2290 00DC  
                                          u1571 12F2                                            u1811 1444  
                                          u2371 0420                                            u2291 00D8  
                                          u1580 1314                                            u1900 0D4C  
                                          u1820 152A                                            u2380 04DA  
                                          u1581 1310                                            u1901 0D48  
                                          u1821 1526                                            u2381 04D6  
                                          u1590 1330                                            u1830 0BC4  
                                          u1910 0D7E                                            u2390 051C  
                                          u1591 132C                                            u1831 0BC0  
                                          u1911 0D7A                                            u2391 0518  
                                          u1760 1658                                            u1840 0BF6  
                                          u1920 0DBC                                            u1761 1654  
                                          u1841 0BF2                                            u1921 0DB8  
                                          u1770 1258                                            u1930 0DE6  
                                          u1771 1254                                            u1851 0C20  
                                          u1931 0DE2                                            u1780 126A  
                                          u1860 0C44                                            u1940 0E14  
                                          u1781 1266                                            u1861 0C40  
                                          u1941 0E10                                            u1790 1292  
                                          u1870 0C6E                                            u1950 0E5C  
                                          u1791 128E                                            u1871 0C6A  
                                          u1951 0E58                                            u1880 0CAE  
                                          u1960 1192                                            u1881 0CAA  
                                          u1961 118E                                            u1890 0CF8  
                                          u1970 11B4                                            u1891 0CF4  
                                          u1971 11B0                                            u1980 120A  
                                          u1981 1206                                            u1990 1218  
                                          u1991 1214                                            i2l88 10AE  
                                          _WPUB 000F61                                   _EUSART1_Write 1648  
                                          abs@a 001E                                            _dbuf 00A6  
                                          _ctoa 10B0                                            _main 0052  
                                          _dtoa 069C                                   ?_EUSART1_Read 0001  
                                          _prec 0047                                            _nout 0099  
                                          pad@i 0025                                            pad@p 0022  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0027                                            fsr2l 000FD9  
                                          btemp 0051                                            prodh 000FF4  
                                          prodl 000FF3                                            start 004E  
                                  ___param_bank 000000                                           ??_abs 0020  
                                         ??_pad 0024                         __end_of_TMR0_Initialize 156E  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 162E                                 __end_of___aldiv 0FAA  
                               __end_of___aodiv 0D3A                                           ?_ctoa 0017  
                                         ?_main 0001                                           ?_dtoa 0029  
                               __end_of___aomod 0E9E                                           STR_10 FEAC  
                                         STR_11 FFAF                                           STR_12 FF0E  
                                         STR_20 FDD1                                           STR_21 FECF  
                                         STR_13 FEF0                                           STR_22 FFF1  
                                         STR_14 FECF                                           STR_23 FE7F  
                                         STR_15 FFBE                                           STR_24 FFF4  
                                         STR_16 FFEA                                           STR_17 FF89  
                                         STR_25 FF42                                           STR_26 FF42  
                                         STR_18 FF5A                                           STR_27 FF42  
                                         STR_19 FE81                                           STR_28 FF72  
                                         STR_29 FF9E                                           _T0CON 000FD5  
                               __end_of___lwdiv 1350                                           i2l151 16CC  
                                         i2l164 16D4                                 _TMR0_WriteTimer 1692  
                                         i2l158 1500                                           i2l343 003A  
                                  vfpfcnvrt@fmt 003D                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                       ?_TMR0_SetInterruptHandler 000C  
                              __end_of_TMR0_ISR 1502                                           _flags 0049  
                                         _fputc 1246                                           _fputs 1406  
                                         pad@fp 001E                                           _width 0045  
                                         ctoa@c 0019                                           _putch 1688  
                                         ctoa@l 001B                                           ctoa@w 001D  
                                         main@i 0189                                           dtoa@d 002B  
                                         dtoa@i 0070                                           dtoa@n 0068  
                                         dtoa@p 0062                                           dtoa@s 0066  
                                         dtoa@w 0064                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 000C                                           ttemp5 0052  
                                         ttemp6 0055                                           ttemp7 0059  
                                         status 000FD8                                           wtemp8 0052  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 13B4  
                                  __end_of_ctoa 1184                      __end_of_EUSART1_Initialize 14CA  
                                  __end_of_main 069C                                    __end_of_dtoa 097E  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 001A  
                                        ??_main 008D                                          ??_dtoa 0033  
                                 __activetblptr 000003                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 000E                                          ?_fputs 0017  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l2202 16C4  
                                        i2l2210 0FC4                                          i2l2204 16C8  
                                        i2l2220 1042                                          i2l2212 0FD8  
                                        i2l2222 104A                                          i2l2214 1002  
                                        i2l2206 0FAA                                          i2l2224 105A  
                                        i2l2216 102E                                          i2l2208 0FB4  
                                        i2l2226 105E                                          i2l2218 103E  
                                        i2l2234 107C                                          i2l2330 14E8  
                                        i2l2322 14CA                                          i2l2228 106E  
                                        i2l2324 14CC                                          i2l3118 1090  
                                        i2l2326 14D0                                          i2l2328 14D4  
                                        i2l2560 001A                                          i2l2562 0028  
                                        i2l2564 0036                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   main@crossings 0100  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    vfprintf@cfmt 0043  
                                     ??___aldiv 0014                                       ??___aodiv 001C  
                                     ??___aomod 001C                                          ___wmul 15EC  
                                 main@periodSum 0182                         __end_of_TMR0_WriteTimer 169C  
                                     ??___lwdiv 0010                       i2TMR0_WriteTimer@timerVal 0001  
                      ?_EUSART1_SetErrorHandler 000C                                ?_TMR0_Initialize 0001  
                                        clear_0 13D4                                          clear_1 13EA  
                                        clear_2 13F6                                          _printf 15C4  
                                        pad@buf 0020                ??_EUSART1_SetOverrunErrorHandler 000E  
               ?_EUSART1_SetOverrunErrorHandler 000C                                          ctoa@fp 0017  
                                        dtoa@fp 0029                                          _strlen 1502  
                                        fputc@c 000E                                          fputs@c 001B  
                                        fputs@i 001C                                          fputs@s 0017  
                                  __mediumconst FDD0                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 13B4                                 ??_EUSART1_Write 000C  
      TMR0_SetInterruptHandler@InterruptHandler 000C                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 162E                                      __accesstop 0060  
                       __end_of__initialization 13FC                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0001  
                                  __pidataBANK1 16D2                             ??_SYSTEM_Initialize 0010  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 12DC  
                                 __end_of_fputs 144A                                   __end_of_putch 1692  
                          __end_of_EUSART1_Read 15C4                                         ??_fputc 0012  
                     __end_of_SYSTEM_Initialize 1648                                         ??_fputs 001B  
                            __size_of_myTMR0ISR 0106                                         ??_putch 000D  
                                    __pbssBANK0 0099                                      __pbssBANK1 0195  
                                    __pbssBANK2 0200                 __end_of_EUSART1_SetErrorHandler 16C4  
              __end_of_TMR0_SetInterruptHandler 16A6                                         ?___wmul 000C  
                                    ??_TMR0_ISR 0008                                ?_TMR0_WriteTimer 000C  
                                    _fillBuffer 0050                                         ?_printf 0081  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 000C  
        __end_of_EUSART1_SetFramingErrorHandler 16BA         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 16B0                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0234                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                            _ADC_InterruptHandler 00A1  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aldiv 0E9E                                         ___aodiv 0BB2  
                                       ___aomod 0D3A                                 __size_of___wmul 0026  
                                       ___lwdiv 12DC                               __end_of_myTMR0ISR 10B0  
                                     ?_vfprintf 007B                             _EUSART1_is_rx_ready 1674  
                                       __pcinit 13B4                                         __ramtop 1000  
                                       __ptext0 0052                                         __ptext1 15C4  
                                       __ptext2 1350                                         __ptext3 097E  
                                       __ptext4 069C                                         __ptext5 1184  
                                       __ptext6 1502                                         __ptext7 1406  
                                       __ptext8 144A                                         __ptext9 0D3A  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 1612  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                              ___aldiv@dividend 000C                              _EUSART1_Initialize 148A  
                      ??_PIN_MANAGER_Initialize 000C                                         main@cmd 0186  
                    __size_of_SYSTEM_Initialize 001A                            end_of_initialization 13FC  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0010                     _EUSART1_OverrunErrorHandler 009D  
                                       fputs@fp 0019                               __end_of_vfpfcnvrt 0BB2  
                              ___aldiv@quotient 0016                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002A                                      ??_vfprintf 0043  
                          ??_EUSART1_Initialize 000E                                         strlen@a 000E  
                                       strlen@s 000C                                      _timerState 004F  
                      _TMR0_SetInterruptHandler 169C                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 000C                           ??_EUSART1_is_rx_ready 000C  
                                  _EUSART1_Read 159A                    __end_of_INTERRUPT_Initialize 16D2  
                                   vfpfcnvrt@ap 003F                                     vfpfcnvrt@fp 003B  
                                   vfpfcnvrt@ll 0072                                  __end_of___wmul 1612  
                             __size_of_TMR0_ISR 0038                                  _ADC_Initialize 165E  
                                   _adc_reading 0200                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 15EC                                  __end_of_strlen 1538  
                           start_initialization 13B4                        __size_of_TMR0_Initialize 0036  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 148A  
                                   __end_of_pad 1246                                     putch@txData 000D  
                         __end_of_EUSART1_Write 165E                                     vfprintf@fmt 007D  
                                      ??___wmul 0010                          __end_of_ADC_Initialize 1674  
                                   __pdataBANK1 0193                                 main@avgPeriodUs 0184  
                                      ??_printf 0045                                        ??_strlen 000E  
                                   __pbssCOMRAM 0045                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                ___aodiv@dividend 000C  
              ??_EUSART1_SetFramingErrorHandler 000E                 ?_EUSART1_SetFramingErrorHandler 000C  
                         _TMR0_InterruptHandler 00A3                                ___lwdiv@dividend 000C  
                        _PIN_MANAGER_Initialize 156E                                       _dtoa$1401 0060  
                                     __pintcode 0008                                   __pmediumconst FDD0  
                                      ?___aldiv 000C                                        ?___aodiv 000C  
                                      ?___aomod 000C                                ___aodiv@quotient 001E  
                                      ?___lwdiv 000C                                 ?_ADC_Initialize 0001  
                                     _bufferIdx 004D                    ??_INTERRUPT_InterruptManager 0008  
                             __size_of_vfprintf 0064                                       _myTMR0ISR 0FAA  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 009B  
                       _EUSART1_SetErrorHandler 16BA                                ___lwdiv@quotient 0010  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 16CE  
                               ___aldiv@divisor 0010                               ??_TMR0_Initialize 000E  
                               ___aldiv@counter 0014                                  ___wmul@product 0010  
       EUSART1_SetErrorHandler@interruptHandler 000C                                        i2u140_40 0FC4  
                                      i2u140_41 0FC0                                        i2u141_40 1002  
                                      i2u141_41 0FFE                                        i2u142_40 102E  
                                      i2u142_41 102A                                        i2u143_40 106E  
                                      i2u150_48 14EE                                        i2u143_41 106A  
                                      i2u150_49 1500             __size_of_INTERRUPT_InterruptManager 0046  
                                      i2u149_40 14E8                      ??_TMR0_SetInterruptHandler 000E  
                                      i2u149_41 14E4                                        i2u174_40 0028  
                                      i2u174_41 0024                                        i2u175_40 0036  
                                      i2u175_41 0032                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 14CA  
                                     _vfpfcnvrt 097E                                      _ADCON0bits 000FC2  
                                     main@i_220 018F                                       main@i_221 0187  
                                     main@i_214 018B                                       main@i_225 0191  
                             ___wmul@multiplier 000C                                      ?_myTMR0ISR 0001  
                                     main@crIdx 018D                               i2_TMR0_WriteTimer 16C4  
                                    vfpfcnvrt@c 007A                              ?i2_TMR0_WriteTimer 0001  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                           ??i2_TMR0_WriteTimer 0003                                        __Hrparam 0000  
                                    vfprintf@ap 007F                                        __Lrparam 0000  
                                    vfprintf@fp 007B                         ??_OSCILLATOR_Initialize 000C  
                              __size_of___aldiv 010C                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 0040  
                                    ?_vfpfcnvrt 003B                                __size_of___lwdiv 0074  
                               ___aodiv@divisor 0014                                 ___aodiv@counter 001C  
                     __end_ofi2_TMR0_WriteTimer 16CE                       ??_EUSART1_SetErrorHandler 000E  
                   _EUSART1_DefaultErrorHandler 000000                                 main@periodSumUs 0180  
                   __end_of_EUSART1_is_rx_ready 1688                                 ___lwdiv@divisor 000E  
                               ___lwdiv@counter 0012                                        __ptext10 0BB2  
                                      __ptext11 10B0                                        __ptext20 1538  
                                      __ptext12 1246                                        __ptext21 169C  
                                      __ptext13 1688                                        __ptext30 1674  
                                      __ptext22 156E                                        __ptext14 1648  
                                      __ptext31 159A                                        __ptext23 1612  
                                      __ptext15 15EC                                        __ptext24 16CE  
                                      __ptext16 12DC                                        __ptext33 14CA  
                                      __ptext25 148A                                        __ptext17 0E9E  
                                      __ptext34 16D4                                        __ptext26 16A6  
                                      __ptext18 1692                                        __ptext35 0FAA  
                                      __ptext27 16B0                                        __ptext19 162E  
                                      __ptext36 16C4                                        __ptext28 16BA  
                                      __ptext37 0000                                        __ptext29 165E  
                       TMR0_WriteTimer@timerVal 000C                               ??_TMR0_WriteTimer 000E  
                                 __size_of_ctoa 00D4                                   __size_of_main 064A  
                                 __size_of_dtoa 02E2            __end_of_TMR0_DefaultInterruptHandler 16D6  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 16D4  
EUSART1_SetOverrunErrorHandler@interruptHandler 000C                                        int$flags 0051  
                                      _vfprintf 1350              __end_of_INTERRUPT_InterruptManager 004E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0081  
                   _EUSART1_FramingErrorHandler 009F                                ___aomod@dividend 000C  
                                   ??_myTMR0ISR 0003                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 000C                                        intlevel2 0000  
                              _samplesCollected 0195                                  _thresholdRange 0193  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 16B0  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 16A6  
                                    _RCSTA1bits 000FAB                                ??_ADC_Initialize 000C  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 008B  EUSART1_SetFramingErrorHandler@interruptHandler 000C  
                               ___aomod@divisor 0014                                     ??_vfpfcnvrt 0041  
                               ___aomod@counter 001C                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 00A5                      __size_ofi2_TMR0_WriteTimer 000A  
                               _TMR0_Initialize 1538                                    ___aldiv@sign 0015  
                                  ___aodiv@sign 001D                  __end_of_PIN_MANAGER_Initialize 159A  
                                  ___aomod@sign 001D                                    fp__myTMR0ISR 0000  
