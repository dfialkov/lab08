

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 21 17:50:01 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 05/05/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F26K22 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    96  0000                     
    97 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    98  0000                     
    99 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   100  0000                     
   101                           	psect	idataBANK0
   102  001712                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _thresholdRange
   106  001712  000A               	dw	10
   107  0000                     _ANSELA	set	3896
   108  0000                     _ANSELB	set	3897
   109  0000                     _ANSELC	set	3898
   110  0000                     _RCONbits	set	4048
   111  0000                     _TXREG1	set	4013
   112  0000                     _RCREG1	set	4014
   113  0000                     _RCSTA1bits	set	4011
   114  0000                     _TXSTA1bits	set	4012
   115  0000                     _PIR1bits	set	3998
   116  0000                     _SPBRGH1	set	4016
   117  0000                     _SPBRG1	set	4015
   118  0000                     _TXSTA1	set	4012
   119  0000                     _RCSTA1	set	4011
   120  0000                     _BAUDCON1	set	4024
   121  0000                     _ADCON0	set	4034
   122  0000                     _ADRESL	set	4035
   123  0000                     _ADCON2	set	4032
   124  0000                     _ADCON1	set	4033
   125  0000                     _OSCTUNE	set	3995
   126  0000                     _OSCCON2	set	4050
   127  0000                     _OSCCON	set	4051
   128  0000                     _T0CON	set	4053
   129  0000                     _TMR0L	set	4054
   130  0000                     _TMR0H	set	4055
   131  0000                     _T0CONbits	set	4053
   132  0000                     _INTCON2bits	set	4081
   133  0000                     _WPUB	set	3937
   134  0000                     _TRISC	set	3988
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISA	set	3986
   137  0000                     _LATC	set	3979
   138  0000                     _LATB	set	3978
   139  0000                     _LATA	set	3977
   140  0000                     _ADRESH	set	4036
   141  0000                     _ADCON0bits	set	4034
   142  0000                     _INTCONbits	set	4082
   143  0000                     _PLLRDY	set	32407
   144                           
   145                           	psect	mediumconst
   146  00FDD0                     __pmediumconst:
   147                           	callstack 0
   148  00FDD0  00                 	db	0
   149  00FDD1                     STR_20:
   150  00FDD1  66                 	db	102	;'f'
   151  00FDD2  3A                 	db	58	;':'
   152  00FDD3  20                 	db	32
   153  00FDD4  67                 	db	103	;'g'
   154  00FDD5  61                 	db	97	;'a'
   155  00FDD6  74                 	db	116	;'t'
   156  00FDD7  68                 	db	104	;'h'
   157  00FDD8  65                 	db	101	;'e'
   158  00FDD9  72                 	db	114	;'r'
   159  00FDDA  20                 	db	32
   160  00FDDB  25                 	db	37
   161  00FDDC  64                 	db	100	;'d'
   162  00FDDD  20                 	db	32
   163  00FDDE  73                 	db	115	;'s'
   164  00FDDF  61                 	db	97	;'a'
   165  00FDE0  6D                 	db	109	;'m'
   166  00FDE1  70                 	db	112	;'p'
   167  00FDE2  6C                 	db	108	;'l'
   168  00FDE3  65                 	db	101	;'e'
   169  00FDE4  73                 	db	115	;'s'
   170  00FDE5  20                 	db	32
   171  00FDE6  66                 	db	102	;'f'
   172  00FDE7  72                 	db	114	;'r'
   173  00FDE8  6F                 	db	111	;'o'
   174  00FDE9  6D                 	db	109	;'m'
   175  00FDEA  20                 	db	32
   176  00FDEB  74                 	db	116	;'t'
   177  00FDEC  68                 	db	104	;'h'
   178  00FDED  65                 	db	101	;'e'
   179  00FDEE  20                 	db	32
   180  00FDEF  6D                 	db	109	;'m'
   181  00FDF0  69                 	db	105	;'i'
   182  00FDF1  63                 	db	99	;'c'
   183  00FDF2  72                 	db	114	;'r'
   184  00FDF3  6F                 	db	111	;'o'
   185  00FDF4  70                 	db	112	;'p'
   186  00FDF5  68                 	db	104	;'h'
   187  00FDF6  6F                 	db	111	;'o'
   188  00FDF7  6E                 	db	110	;'n'
   189  00FDF8  65                 	db	101	;'e'
   190  00FDF9  20                 	db	32
   191  00FDFA  61                 	db	97	;'a'
   192  00FDFB  6E                 	db	110	;'n'
   193  00FDFC  64                 	db	100	;'d'
   194  00FDFD  20                 	db	32
   195  00FDFE  63                 	db	99	;'c'
   196  00FDFF  61                 	db	97	;'a'
   197  00FE00  6C                 	db	108	;'l'
   198  00FE01  63                 	db	99	;'c'
   199  00FE02  75                 	db	117	;'u'
   200  00FE03  6C                 	db	108	;'l'
   201  00FE04  61                 	db	97	;'a'
   202  00FE05  74                 	db	116	;'t'
   203  00FE06  65                 	db	101	;'e'
   204  00FE07  20                 	db	32
   205  00FE08  74                 	db	116	;'t'
   206  00FE09  68                 	db	104	;'h'
   207  00FE0A  65                 	db	101	;'e'
   208  00FE0B  20                 	db	32
   209  00FE0C  66                 	db	102	;'f'
   210  00FE0D  72                 	db	114	;'r'
   211  00FE0E  65                 	db	101	;'e'
   212  00FE0F  71                 	db	113	;'q'
   213  00FE10  75                 	db	117	;'u'
   214  00FE11  65                 	db	101	;'e'
   215  00FE12  6E                 	db	110	;'n'
   216  00FE13  63                 	db	99	;'c'
   217  00FE14  79                 	db	121	;'y'
   218  00FE15  0D                 	db	13
   219  00FE16  0A                 	db	10
   220  00FE17  00                 	db	0
   221  00FE18                     STR_8:
   222  00FE18  0D                 	db	13
   223  00FE19  0A                 	db	10
   224  00FE1A  54                 	db	84	;'T'
   225  00FE1B  68                 	db	104	;'h'
   226  00FE1C  65                 	db	101	;'e'
   227  00FE1D  20                 	db	32
   228  00FE1E  73                 	db	115	;'s'
   229  00FE1F  6F                 	db	111	;'o'
   230  00FE20  75                 	db	117	;'u'
   231  00FE21  6E                 	db	110	;'n'
   232  00FE22  64                 	db	100	;'d'
   233  00FE23  20                 	db	32
   234  00FE24  77                 	db	119	;'w'
   235  00FE25  61                 	db	97	;'a'
   236  00FE26  76                 	db	118	;'v'
   237  00FE27  65                 	db	101	;'e'
   238  00FE28  20                 	db	32
   239  00FE29  63                 	db	99	;'c'
   240  00FE2A  72                 	db	114	;'r'
   241  00FE2B  6F                 	db	111	;'o'
   242  00FE2C  73                 	db	115	;'s'
   243  00FE2D  73                 	db	115	;'s'
   244  00FE2E  65                 	db	101	;'e'
   245  00FE2F  64                 	db	100	;'d'
   246  00FE30  20                 	db	32
   247  00FE31  61                 	db	97	;'a'
   248  00FE32  74                 	db	116	;'t'
   249  00FE33  20                 	db	32
   250  00FE34  74                 	db	116	;'t'
   251  00FE35  68                 	db	104	;'h'
   252  00FE36  65                 	db	101	;'e'
   253  00FE37  20                 	db	32
   254  00FE38  66                 	db	102	;'f'
   255  00FE39  6F                 	db	111	;'o'
   256  00FE3A  6C                 	db	108	;'l'
   257  00FE3B  6C                 	db	108	;'l'
   258  00FE3C  6F                 	db	111	;'o'
   259  00FE3D  77                 	db	119	;'w'
   260  00FE3E  69                 	db	105	;'i'
   261  00FE3F  6E                 	db	110	;'n'
   262  00FE40  67                 	db	103	;'g'
   263  00FE41  20                 	db	32
   264  00FE42  69                 	db	105	;'i'
   265  00FE43  6E                 	db	110	;'n'
   266  00FE44  64                 	db	100	;'d'
   267  00FE45  69                 	db	105	;'i'
   268  00FE46  63                 	db	99	;'c'
   269  00FE47  65                 	db	101	;'e'
   270  00FE48  73                 	db	115	;'s'
   271  00FE49  3A                 	db	58	;':'
   272  00FE4A  0D                 	db	13
   273  00FE4B  0A                 	db	10
   274  00FE4C  00                 	db	0
   275  00FE4D                     STR_5:
   276  00FE4D  54                 	db	84	;'T'
   277  00FE4E  68                 	db	104	;'h'
   278  00FE4F  65                 	db	101	;'e'
   279  00FE50  20                 	db	32
   280  00FE51  6C                 	db	108	;'l'
   281  00FE52  61                 	db	97	;'a'
   282  00FE53  73                 	db	115	;'s'
   283  00FE54  74                 	db	116	;'t'
   284  00FE55  20                 	db	32
   285  00FE56  25                 	db	37
   286  00FE57  64                 	db	100	;'d'
   287  00FE58  20                 	db	32
   288  00FE59  41                 	db	65	;'A'
   289  00FE5A  44                 	db	68	;'D'
   290  00FE5B  43                 	db	67	;'C'
   291  00FE5C  20                 	db	32
   292  00FE5D  73                 	db	115	;'s'
   293  00FE5E  61                 	db	97	;'a'
   294  00FE5F  6D                 	db	109	;'m'
   295  00FE60  70                 	db	112	;'p'
   296  00FE61  6C                 	db	108	;'l'
   297  00FE62  65                 	db	101	;'e'
   298  00FE63  73                 	db	115	;'s'
   299  00FE64  20                 	db	32
   300  00FE65  66                 	db	102	;'f'
   301  00FE66  72                 	db	114	;'r'
   302  00FE67  6F                 	db	111	;'o'
   303  00FE68  6D                 	db	109	;'m'
   304  00FE69  20                 	db	32
   305  00FE6A  74                 	db	116	;'t'
   306  00FE6B  68                 	db	104	;'h'
   307  00FE6C  65                 	db	101	;'e'
   308  00FE6D  20                 	db	32
   309  00FE6E  6D                 	db	109	;'m'
   310  00FE6F  69                 	db	105	;'i'
   311  00FE70  63                 	db	99	;'c'
   312  00FE71  72                 	db	114	;'r'
   313  00FE72  6F                 	db	111	;'o'
   314  00FE73  70                 	db	112	;'p'
   315  00FE74  68                 	db	104	;'h'
   316  00FE75  6F                 	db	111	;'o'
   317  00FE76  6E                 	db	110	;'n'
   318  00FE77  65                 	db	101	;'e'
   319  00FE78  20                 	db	32
   320  00FE79  61                 	db	97	;'a'
   321  00FE7A  72                 	db	114	;'r'
   322  00FE7B  65                 	db	101	;'e'
   323  00FE7C  3A                 	db	58	;':'
   324  00FE7D  20                 	db	32
   325  00FE7E  0D                 	db	13
   326  00FE7F  0A                 	db	10
   327  00FE80  00                 	db	0
   328  00FE81                     STR_19:
   329  00FE81  54                 	db	84	;'T'
   330  00FE82  2F                 	db	47
   331  00FE83  74                 	db	116	;'t'
   332  00FE84  3A                 	db	58	;':'
   333  00FE85  20                 	db	32
   334  00FE86  49                 	db	73	;'I'
   335  00FE87  6E                 	db	110	;'n'
   336  00FE88  63                 	db	99	;'c'
   337  00FE89  72                 	db	114	;'r'
   338  00FE8A  65                 	db	101	;'e'
   339  00FE8B  61                 	db	97	;'a'
   340  00FE8C  73                 	db	115	;'s'
   341  00FE8D  65                 	db	101	;'e'
   342  00FE8E  2F                 	db	47
   343  00FE8F  64                 	db	100	;'d'
   344  00FE90  65                 	db	101	;'e'
   345  00FE91  63                 	db	99	;'c'
   346  00FE92  72                 	db	114	;'r'
   347  00FE93  65                 	db	101	;'e'
   348  00FE94  61                 	db	97	;'a'
   349  00FE95  73                 	db	115	;'s'
   350  00FE96  65                 	db	101	;'e'
   351  00FE97  20                 	db	32
   352  00FE98  74                 	db	116	;'t'
   353  00FE99  68                 	db	104	;'h'
   354  00FE9A  72                 	db	114	;'r'
   355  00FE9B  65                 	db	101	;'e'
   356  00FE9C  73                 	db	115	;'s'
   357  00FE9D  68                 	db	104	;'h'
   358  00FE9E  6F                 	db	111	;'o'
   359  00FE9F  6C                 	db	108	;'l'
   360  00FEA0  64                 	db	100	;'d'
   361  00FEA1  20                 	db	32
   362  00FEA2  31                 	db	49	;'1'
   363  00FEA3  33                 	db	51	;'3'
   364  00FEA4  38                 	db	56	;'8'
   365  00FEA5  2D                 	db	45
   366  00FEA6  31                 	db	49	;'1'
   367  00FEA7  31                 	db	49	;'1'
   368  00FEA8  38                 	db	56	;'8'
   369  00FEA9  0D                 	db	13
   370  00FEAA  0A                 	db	10
   371  00FEAB  00                 	db	0
   372  00FEAC                     STR_10:
   373  00FEAC  0D                 	db	13
   374  00FEAD  0A                 	db	10
   375  00FEAE  54                 	db	84	;'T'
   376  00FEAF  68                 	db	104	;'h'
   377  00FEB0  65                 	db	101	;'e'
   378  00FEB1  20                 	db	32
   379  00FEB2  73                 	db	115	;'s'
   380  00FEB3  6F                 	db	111	;'o'
   381  00FEB4  75                 	db	117	;'u'
   382  00FEB5  6E                 	db	110	;'n'
   383  00FEB6  64                 	db	100	;'d'
   384  00FEB7  20                 	db	32
   385  00FEB8  77                 	db	119	;'w'
   386  00FEB9  61                 	db	97	;'a'
   387  00FEBA  76                 	db	118	;'v'
   388  00FEBB  65                 	db	101	;'e'
   389  00FEBC  20                 	db	32
   390  00FEBD  68                 	db	104	;'h'
   391  00FEBE  61                 	db	97	;'a'
   392  00FEBF  64                 	db	100	;'d'
   393  00FEC0  20                 	db	32
   394  00FEC1  25                 	db	37
   395  00FEC2  64                 	db	100	;'d'
   396  00FEC3  20                 	db	32
   397  00FEC4  70                 	db	112	;'p'
   398  00FEC5  65                 	db	101	;'e'
   399  00FEC6  72                 	db	114	;'r'
   400  00FEC7  69                 	db	105	;'i'
   401  00FEC8  6F                 	db	111	;'o'
   402  00FEC9  64                 	db	100	;'d'
   403  00FECA  73                 	db	115	;'s'
   404  00FECB  3A                 	db	58	;':'
   405  00FECC  0D                 	db	13
   406  00FECD  0A                 	db	10
   407  00FECE  00                 	db	0
   408  00FECF                     STR_14:
   409  00FECF  2D                 	db	45
   410  00FED0  2D                 	db	45
   411  00FED1  2D                 	db	45
   412  00FED2  2D                 	db	45
   413  00FED3  2D                 	db	45
   414  00FED4  2D                 	db	45
   415  00FED5  2D                 	db	45
   416  00FED6  2D                 	db	45
   417  00FED7  2D                 	db	45
   418  00FED8  2D                 	db	45
   419  00FED9  2D                 	db	45
   420  00FEDA  2D                 	db	45
   421  00FEDB  2D                 	db	45
   422  00FEDC  2D                 	db	45
   423  00FEDD  2D                 	db	45
   424  00FEDE  2D                 	db	45
   425  00FEDF  2D                 	db	45
   426  00FEE0  2D                 	db	45
   427  00FEE1  2D                 	db	45
   428  00FEE2  2D                 	db	45
   429  00FEE3  2D                 	db	45
   430  00FEE4  2D                 	db	45
   431  00FEE5  2D                 	db	45
   432  00FEE6  2D                 	db	45
   433  00FEE7  2D                 	db	45
   434  00FEE8  2D                 	db	45
   435  00FEE9  2D                 	db	45
   436  00FEEA  2D                 	db	45
   437  00FEEB  2D                 	db	45
   438  00FEEC  2D                 	db	45
   439  00FEED  0D                 	db	13
   440  00FEEE  0A                 	db	10
   441  00FEEF  00                 	db	0
   442  00FEF0                     STR_13:
   443  00FEF0  0D                 	db	13
   444  00FEF1  0A                 	db	10
   445  00FEF2  61                 	db	97	;'a'
   446  00FEF3  76                 	db	118	;'v'
   447  00FEF4  65                 	db	101	;'e'
   448  00FEF5  72                 	db	114	;'r'
   449  00FEF6  61                 	db	97	;'a'
   450  00FEF7  67                 	db	103	;'g'
   451  00FEF8  65                 	db	101	;'e'
   452  00FEF9  20                 	db	32
   453  00FEFA  66                 	db	102	;'f'
   454  00FEFB  72                 	db	114	;'r'
   455  00FEFC  65                 	db	101	;'e'
   456  00FEFD  71                 	db	113	;'q'
   457  00FEFE  75                 	db	117	;'u'
   458  00FEFF  65                 	db	101	;'e'
   459  00FF00  6E                 	db	110	;'n'
   460  00FF01  64                 	db	100	;'d'
   461  00FF02  79                 	db	121	;'y'
   462  00FF03  20                 	db	32
   463  00FF04  3D                 	db	61	;'='
   464  00FF05  20                 	db	32
   465  00FF06  25                 	db	37
   466  00FF07  64                 	db	100	;'d'
   467  00FF08  20                 	db	32
   468  00FF09  48                 	db	72	;'H'
   469  00FF0A  7A                 	db	122	;'z'
   470  00FF0B  0D                 	db	13
   471  00FF0C  0A                 	db	10
   472  00FF0D  00                 	db	0
   473  00FF0E                     STR_12:
   474  00FF0E  0D                 	db	13
   475  00FF0F  0A                 	db	10
   476  00FF10  61                 	db	97	;'a'
   477  00FF11  76                 	db	118	;'v'
   478  00FF12  65                 	db	101	;'e'
   479  00FF13  72                 	db	114	;'r'
   480  00FF14  61                 	db	97	;'a'
   481  00FF15  67                 	db	103	;'g'
   482  00FF16  65                 	db	101	;'e'
   483  00FF17  20                 	db	32
   484  00FF18  70                 	db	112	;'p'
   485  00FF19  65                 	db	101	;'e'
   486  00FF1A  72                 	db	114	;'r'
   487  00FF1B  69                 	db	105	;'i'
   488  00FF1C  6F                 	db	111	;'o'
   489  00FF1D  64                 	db	100	;'d'
   490  00FF1E  20                 	db	32
   491  00FF1F  3D                 	db	61	;'='
   492  00FF20  20                 	db	32
   493  00FF21  25                 	db	37
   494  00FF22  64                 	db	100	;'d'
   495  00FF23  20                 	db	32
   496  00FF24  75                 	db	117	;'u'
   497  00FF25  73                 	db	115	;'s'
   498  00FF26  0D                 	db	13
   499  00FF27  0A                 	db	10
   500  00FF28  00                 	db	0
   501  00FF29                     STR_2:
   502  00FF29  4D                 	db	77	;'M'
   503  00FF2A  69                 	db	105	;'i'
   504  00FF2B  63                 	db	99	;'c'
   505  00FF2C  72                 	db	114	;'r'
   506  00FF2D  6F                 	db	111	;'o'
   507  00FF2E  70                 	db	112	;'p'
   508  00FF2F  68                 	db	104	;'h'
   509  00FF30  6F                 	db	111	;'o'
   510  00FF31  6E                 	db	110	;'n'
   511  00FF32  65                 	db	101	;'e'
   512  00FF33  20                 	db	32
   513  00FF34  65                 	db	101	;'e'
   514  00FF35  78                 	db	120	;'x'
   515  00FF36  70                 	db	112	;'p'
   516  00FF37  65                 	db	101	;'e'
   517  00FF38  72                 	db	114	;'r'
   518  00FF39  69                 	db	105	;'i'
   519  00FF3A  6D                 	db	109	;'m'
   520  00FF3B  65                 	db	101	;'e'
   521  00FF3C  6E                 	db	110	;'n'
   522  00FF3D  74                 	db	116	;'t'
   523  00FF3E  73                 	db	115	;'s'
   524  00FF3F  0D                 	db	13
   525  00FF40  0A                 	db	10
   526  00FF41  00                 	db	0
   527  00FF42                     STR_25:
   528  00FF42  56                 	db	86	;'V'
   529  00FF43  6F                 	db	111	;'o'
   530  00FF44  6C                 	db	108	;'l'
   531  00FF45  75                 	db	117	;'u'
   532  00FF46  6D                 	db	109	;'m'
   533  00FF47  65                 	db	101	;'e'
   534  00FF48  20                 	db	32
   535  00FF49  72                 	db	114	;'r'
   536  00FF4A  61                 	db	97	;'a'
   537  00FF4B  6E                 	db	110	;'n'
   538  00FF4C  67                 	db	103	;'g'
   539  00FF4D  65                 	db	101	;'e'
   540  00FF4E  3A                 	db	58	;':'
   541  00FF4F  20                 	db	32
   542  00FF50  25                 	db	37
   543  00FF51  64                 	db	100	;'d'
   544  00FF52  20                 	db	32
   545  00FF53  2D                 	db	45
   546  00FF54  20                 	db	32
   547  00FF55  25                 	db	37
   548  00FF56  64                 	db	100	;'d'
   549  00FF57  0D                 	db	13
   550  00FF58  0A                 	db	10
   551  00FF59  00                 	db	0
   552  00FF5A                     STR_18:
   553  00FF5A  7A                 	db	122	;'z'
   554  00FF5B  3A                 	db	58	;':'
   555  00FF5C  20                 	db	32
   556  00FF5D  43                 	db	67	;'C'
   557  00FF5E  6C                 	db	108	;'l'
   558  00FF5F  65                 	db	101	;'e'
   559  00FF60  61                 	db	97	;'a'
   560  00FF61  72                 	db	114	;'r'
   561  00FF62  20                 	db	32
   562  00FF63  74                 	db	116	;'t'
   563  00FF64  68                 	db	104	;'h'
   564  00FF65  65                 	db	101	;'e'
   565  00FF66  20                 	db	32
   566  00FF67  74                 	db	116	;'t'
   567  00FF68  65                 	db	101	;'e'
   568  00FF69  72                 	db	114	;'r'
   569  00FF6A  6D                 	db	109	;'m'
   570  00FF6B  69                 	db	105	;'i'
   571  00FF6C  6E                 	db	110	;'n'
   572  00FF6D  61                 	db	97	;'a'
   573  00FF6E  6C                 	db	108	;'l'
   574  00FF6F  0D                 	db	13
   575  00FF70  0A                 	db	10
   576  00FF71  00                 	db	0
   577  00FF72                     STR_28:
   578  00FF72  54                 	db	84	;'T'
   579  00FF73  68                 	db	104	;'h'
   580  00FF74  72                 	db	114	;'r'
   581  00FF75  65                 	db	101	;'e'
   582  00FF76  73                 	db	115	;'s'
   583  00FF77  68                 	db	104	;'h'
   584  00FF78  6F                 	db	111	;'o'
   585  00FF79  6C                 	db	108	;'l'
   586  00FF7A  64                 	db	100	;'d'
   587  00FF7B  20                 	db	32
   588  00FF7C  61                 	db	97	;'a'
   589  00FF7D  74                 	db	116	;'t'
   590  00FF7E  20                 	db	32
   591  00FF7F  6D                 	db	109	;'m'
   592  00FF80  69                 	db	105	;'i'
   593  00FF81  6E                 	db	110	;'n'
   594  00FF82  69                 	db	105	;'i'
   595  00FF83  6D                 	db	109	;'m'
   596  00FF84  75                 	db	117	;'u'
   597  00FF85  6D                 	db	109	;'m'
   598  00FF86  0D                 	db	13
   599  00FF87  0A                 	db	10
   600  00FF88  00                 	db	0
   601  00FF89                     STR_17:
   602  00FF89  5A                 	db	90	;'Z'
   603  00FF8A  3A                 	db	58	;':'
   604  00FF8B  20                 	db	32
   605  00FF8C  52                 	db	82	;'R'
   606  00FF8D  65                 	db	101	;'e'
   607  00FF8E  73                 	db	115	;'s'
   608  00FF8F  65                 	db	101	;'e'
   609  00FF90  74                 	db	116	;'t'
   610  00FF91  20                 	db	32
   611  00FF92  70                 	db	112	;'p'
   612  00FF93  72                 	db	114	;'r'
   613  00FF94  6F                 	db	111	;'o'
   614  00FF95  63                 	db	99	;'c'
   615  00FF96  65                 	db	101	;'e'
   616  00FF97  73                 	db	115	;'s'
   617  00FF98  73                 	db	115	;'s'
   618  00FF99  6F                 	db	111	;'o'
   619  00FF9A  72                 	db	114	;'r'
   620  00FF9B  0D                 	db	13
   621  00FF9C  0A                 	db	10
   622  00FF9D  00                 	db	0
   623  00FF9E                     STR_29:
   624  00FF9E  55                 	db	85	;'U'
   625  00FF9F  6E                 	db	110	;'n'
   626  00FFA0  6B                 	db	107	;'k'
   627  00FFA1  6E                 	db	110	;'n'
   628  00FFA2  6F                 	db	111	;'o'
   629  00FFA3  77                 	db	119	;'w'
   630  00FFA4  6E                 	db	110	;'n'
   631  00FFA5  20                 	db	32
   632  00FFA6  6B                 	db	107	;'k'
   633  00FFA7  65                 	db	101	;'e'
   634  00FFA8  79                 	db	121	;'y'
   635  00FFA9  20                 	db	32
   636  00FFAA  25                 	db	37
   637  00FFAB  63                 	db	99	;'c'
   638  00FFAC  0D                 	db	13
   639  00FFAD  0A                 	db	10
   640  00FFAE  00                 	db	0
   641  00FFAF                     STR_11:
   642  00FFAF  25                 	db	37
   643  00FFB0  64                 	db	100	;'d'
   644  00FFB1  20                 	db	32
   645  00FFB2  2D                 	db	45
   646  00FFB3  20                 	db	32
   647  00FFB4  25                 	db	37
   648  00FFB5  64                 	db	100	;'d'
   649  00FFB6  20                 	db	32
   650  00FFB7  3D                 	db	61	;'='
   651  00FFB8  20                 	db	32
   652  00FFB9  25                 	db	37
   653  00FFBA  64                 	db	100	;'d'
   654  00FFBB  0D                 	db	13
   655  00FFBC  0A                 	db	10
   656  00FFBD  00                 	db	0
   657  00FFBE                     STR_15:
   658  00FFBE  3F                 	db	63	;'?'
   659  00FFBF  3A                 	db	58	;':'
   660  00FFC0  20                 	db	32
   661  00FFC1  48                 	db	72	;'H'
   662  00FFC2  65                 	db	101	;'e'
   663  00FFC3  6C                 	db	108	;'l'
   664  00FFC4  70                 	db	112	;'p'
   665  00FFC5  20                 	db	32
   666  00FFC6  6D                 	db	109	;'m'
   667  00FFC7  65                 	db	101	;'e'
   668  00FFC8  6E                 	db	110	;'n'
   669  00FFC9  75                 	db	117	;'u'
   670  00FFCA  0D                 	db	13
   671  00FFCB  0A                 	db	10
   672  00FFCC  00                 	db	0
   673  00FFCD                     STR_1:
   674  00FFCD  69                 	db	105	;'i'
   675  00FFCE  6E                 	db	110	;'n'
   676  00FFCF  4C                 	db	76	;'L'
   677  00FFD0  61                 	db	97	;'a'
   678  00FFD1  62                 	db	98	;'b'
   679  00FFD2  20                 	db	32
   680  00FFD3  30                 	db	48	;'0'
   681  00FFD4  38                 	db	56	;'8'
   682  00FFD5  0D                 	db	13
   683  00FFD6  0A                 	db	10
   684  00FFD7  00                 	db	0
   685  00FFD8                     STR_3:
   686  00FFD8  44                 	db	68	;'D'
   687  00FFD9  65                 	db	101	;'e'
   688  00FFDA  76                 	db	118	;'v'
   689  00FFDB  27                 	db	39
   690  00FFDC  32                 	db	50	;'2'
   691  00FFDD  31                 	db	49	;'1'
   692  00FFDE  0D                 	db	13
   693  00FFDF  0A                 	db	10
   694  00FFE0  00                 	db	0
   695  00FFE1                     STR_6:
   696  00FFE1  0D                 	db	13
   697  00FFE2  0A                 	db	10
   698  00FFE3  53                 	db	83	;'S'
   699  00FFE4  5B                 	db	91	;'['
   700  00FFE5  25                 	db	37
   701  00FFE6  64                 	db	100	;'d'
   702  00FFE7  5D                 	db	93	;']'
   703  00FFE8  20                 	db	32
   704  00FFE9  00                 	db	0
   705  00FFEA                     STR_16:
   706  00FFEA  6F                 	db	111	;'o'
   707  00FFEB  3A                 	db	58	;':'
   708  00FFEC  20                 	db	32
   709  00FFED  6B                 	db	107	;'k'
   710  00FFEE  0D                 	db	13
   711  00FFEF  0A                 	db	10
   712  00FFF0  00                 	db	0
   713  00FFF1                     STR_22:
   714  00FFF1  20                 	db	32
   715  00FFF2  6B                 	db	107	;'k'
   716  00FFF3  0D                 	db	13
   717  00FFF4  0A                 	db	10
   718  00FFF5  3E                 	db	62	;'>'
   719  00FFF6  00                 	db	0
   720  00FFF7                     STR_7:
   721  00FFF7  25                 	db	37
   722  00FFF8  64                 	db	100	;'d'
   723  00FFF9  20                 	db	32
   724  00FFFA  00                 	db	0
   725  00FFFB                     STR_4:
   726  00FFFB  3E                 	db	62	;'>'
   727  00FFFC  20                 	db	32
   728  00FFFD  00                 	db	0
   729  00FFFE  00                 	db	0	; dummy byte at the end
   730  0000                     
   731                           ; #config settings
   732                           
   733                           	psect	cinit
   734  0013E0                     __pcinit:
   735                           	callstack 0
   736  0013E0                     start_initialization:
   737                           	callstack 0
   738  0013E0                     __initialization:
   739                           	callstack 0
   740                           
   741                           ; Initialize objects allocated to BANK0 (2 bytes)
   742                           ; load TBLPTR registers with __pidataBANK0
   743  0013E0  0E12               	movlw	low __pidataBANK0
   744  0013E2  6EF6               	movwf	tblptrl,c
   745  0013E4  0E17               	movlw	high __pidataBANK0
   746  0013E6  6EF7               	movwf	tblptrh,c
   747  0013E8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   748  0013EA  6EF8               	movwf	tblptru,c
   749  0013EC  0009               	tblrd		*+	;fetch initializer
   750  0013EE  CFF5 F0E5          	movff	tablat,__pdataBANK0
   751  0013F2  0009               	tblrd		*+	;fetch initializer
   752  0013F4  CFF5 F0E6          	movff	tablat,__pdataBANK0+1
   753                           
   754                           ; Clear objects allocated to BIGRAM (512 bytes)
   755  0013F8  EE02  F000         	lfsr	0,__pbssBIGRAM
   756  0013FC  EE12 F000          	lfsr	1,512
   757  001400                     clear_0:
   758  001400  6AEE               	clrf	postinc0,c
   759  001402  50E5               	movf	postdec1,w,c
   760  001404  50E1               	movf	fsr1l,w,c
   761  001406  E1FC               	bnz	clear_0
   762  001408  50E2               	movf	fsr1h,w,c
   763  00140A  E1FA               	bnz	clear_0
   764                           
   765                           ; Clear objects allocated to BANK0 (41 bytes)
   766  00140C  EE00  F0BC         	lfsr	0,__pbssBANK0
   767  001410  0E29               	movlw	41
   768  001412                     clear_1:
   769  001412  6AEE               	clrf	postinc0,c
   770  001414  06E8               	decf	wreg,f,c
   771  001416  E1FD               	bnz	clear_1
   772                           
   773                           ; Clear objects allocated to COMRAM (17 bytes)
   774  001418  EE00  F03C         	lfsr	0,__pbssCOMRAM
   775  00141C  0E11               	movlw	17
   776  00141E                     clear_2:
   777  00141E  6AEE               	clrf	postinc0,c
   778  001420  06E8               	decf	wreg,f,c
   779  001422  E1FD               	bnz	clear_2
   780  001424                     end_of_initialization:
   781                           	callstack 0
   782  001424                     __end_of__initialization:
   783                           	callstack 0
   784  001424  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   785  001426  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   786  001428  0100               	movlb	0
   787  00142A  EF29  F000         	goto	_main	;jump to C main() function
   788                           
   789                           	psect	bssCOMRAM
   790  00003C                     __pbssCOMRAM:
   791                           	callstack 0
   792  00003C                     _width:
   793                           	callstack 0
   794  00003C                     	ds	2
   795  00003E                     _prec:
   796                           	callstack 0
   797  00003E                     	ds	2
   798  000040                     _flags:
   799                           	callstack 0
   800  000040                     	ds	2
   801  000042                     _ADC_InterruptHandler:
   802                           	callstack 0
   803  000042                     	ds	2
   804  000044                     _timer0ReloadVal:
   805                           	callstack 0
   806  000044                     	ds	2
   807  000046                     _TMR0_InterruptHandler:
   808                           	callstack 0
   809  000046                     	ds	2
   810  000048                     _bufferIdx:
   811                           	callstack 0
   812  000048                     	ds	2
   813  00004A                     _eusart1RxLastError:
   814                           	callstack 0
   815  00004A                     	ds	1
   816  00004B                     _timerState:
   817                           	callstack 0
   818  00004B                     	ds	1
   819  00004C                     _fillBuffer:
   820                           	callstack 0
   821  00004C                     	ds	1
   822                           
   823                           	psect	bssBANK0
   824  0000BC                     __pbssBANK0:
   825                           	callstack 0
   826  0000BC                     _nout:
   827                           	callstack 0
   828  0000BC                     	ds	2
   829  0000BE                     _EUSART1_ErrorHandler:
   830                           	callstack 0
   831  0000BE                     	ds	2
   832  0000C0                     _EUSART1_OverrunErrorHandler:
   833                           	callstack 0
   834  0000C0                     	ds	2
   835  0000C2                     _EUSART1_FramingErrorHandler:
   836                           	callstack 0
   837  0000C2                     	ds	2
   838  0000C4                     _samplesCollected:
   839                           	callstack 0
   840  0000C4                     	ds	1
   841  0000C5                     _dbuf:
   842                           	callstack 0
   843  0000C5                     	ds	32
   844                           
   845                           	psect	dataBANK0
   846  0000E5                     __pdataBANK0:
   847                           	callstack 0
   848  0000E5                     _thresholdRange:
   849                           	callstack 0
   850  0000E5                     	ds	2
   851                           
   852                           	psect	bssBIGRAM
   853  000200                     __pbssBIGRAM:
   854                           	callstack 0
   855  000200                     _adc_reading:
   856                           	callstack 0
   857  000200                     	ds	512
   858                           
   859                           	psect	cstackBANK1
   860  000100                     __pcstackBANK1:
   861                           	callstack 0
   862  000100                     main@crossings:
   863                           	callstack 0
   864                           
   865                           ; 256 bytes @ 0x0
   866  000100                     	ds	256
   867                           
   868                           	psect	cstackBANK0
   869  000060                     __pcstackBANK0:
   870                           	callstack 0
   871  000060                     ??_dtoa:
   872                           
   873                           ; 1 bytes @ 0x0
   874  000060                     	ds	8
   875  000068                     _dtoa$1405:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x8
   879  000068                     	ds	2
   880  00006A                     dtoa@p:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0xA
   884  00006A                     	ds	2
   885  00006C                     dtoa@w:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0xC
   889  00006C                     	ds	2
   890  00006E                     dtoa@s:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0xE
   894  00006E                     	ds	2
   895  000070                     dtoa@n:
   896                           	callstack 0
   897                           
   898                           ; 8 bytes @ 0x10
   899  000070                     	ds	8
   900  000078                     dtoa@i:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x18
   904  000078                     	ds	2
   905  00007A                     ?_vfpfcnvrt:
   906                           	callstack 0
   907  00007A                     vfpfcnvrt@fp:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x1A
   911  00007A                     	ds	2
   912  00007C                     vfpfcnvrt@fmt:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x1C
   916  00007C                     	ds	2
   917  00007E                     vfpfcnvrt@ap:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x1E
   921  00007E                     	ds	2
   922  000080                     vfpfcnvrt@ll:
   923                           	callstack 0
   924                           
   925                           ; 8 bytes @ 0x20
   926  000080                     	ds	8
   927  000088                     vfpfcnvrt@c:
   928                           	callstack 0
   929                           
   930                           ; 1 bytes @ 0x28
   931  000088                     	ds	1
   932  000089                     ?_vfprintf:
   933                           	callstack 0
   934  000089                     vfprintf@fp:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x29
   938  000089                     	ds	2
   939  00008B                     vfprintf@fmt:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x2B
   943  00008B                     	ds	2
   944  00008D                     vfprintf@ap:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x2D
   948  00008D                     	ds	2
   949  00008F                     vfprintf@cfmt:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x2F
   953  00008F                     	ds	2
   954  000091                     ?_printf:
   955                           	callstack 0
   956  000091                     printf@fmt:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x31
   960  000091                     	ds	10
   961  00009B                     printf@ap:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x3B
   965  00009B                     	ds	2
   966  00009D                     ??_main:
   967                           
   968                           ; 1 bytes @ 0x3D
   969  00009D                     	ds	12
   970  0000A9                     main@periodSumUs:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x49
   974  0000A9                     	ds	2
   975  0000AB                     main@periodSum:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x4B
   979  0000AB                     	ds	2
   980  0000AD                     main@avgPeriodUs:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x4D
   984  0000AD                     	ds	2
   985  0000AF                     main@cmd:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x4F
   989  0000AF                     	ds	1
   990  0000B0                     main@i_225:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x50
   994  0000B0                     	ds	2
   995  0000B2                     main@i:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x52
   999  0000B2                     	ds	2
  1000  0000B4                     main@i_218:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x54
  1004  0000B4                     	ds	2
  1005  0000B6                     main@crIdx:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x56
  1009  0000B6                     	ds	2
  1010  0000B8                     main@i_224:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x58
  1014  0000B8                     	ds	2
  1015  0000BA                     main@i_229:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x5A
  1019  0000BA                     	ds	2
  1020                           
  1021                           	psect	cstackCOMRAM
  1022  000001                     __pcstackCOMRAM:
  1023                           	callstack 0
  1024  000001                     ?_TMR0_ReadTimer:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x0
  1028  000001                     	ds	2
  1029  000003                     ??_TMR0_ReadTimer:
  1030                           
  1031                           ; 1 bytes @ 0x2
  1032  000003                     	ds	2
  1033  000005                     TMR0_ReadTimer@readVal:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x4
  1037  000005                     	ds	2
  1038  000007                     TMR0_ReadTimer@readValLow:
  1039                           	callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x6
  1042  000007                     	ds	1
  1043  000008                     TMR0_ReadTimer@readValHigh:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x7
  1047  000008                     	ds	1
  1048  000009                     i2TMR0_WriteTimer@timerVal:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x8
  1052  000009                     	ds	2
  1053  00000B                     ??_myTMR0ISR:
  1054  00000B                     
  1055                           ; 1 bytes @ 0xA
  1056  00000B                     	ds	2
  1057  00000D                     myTMR0ISR@micReading:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0xC
  1061  00000D                     	ds	2
  1062  00000F                     ??_INTERRUPT_InterruptManager:
  1063                           
  1064                           ; 1 bytes @ 0xE
  1065  00000F                     	ds	4
  1066  000013                     ?_strlen:
  1067                           	callstack 0
  1068  000013                     ?___wmul:
  1069                           	callstack 0
  1070  000013                     ?___lwdiv:
  1071                           	callstack 0
  1072  000013                     ?___aldiv:
  1073                           	callstack 0
  1074  000013                     ?___aodiv:
  1075                           	callstack 0
  1076  000013                     ?___aomod:
  1077                           	callstack 0
  1078  000013                     EUSART1_Write@txData:
  1079                           	callstack 0
  1080  000013                     TMR0_WriteTimer@timerVal:
  1081                           	callstack 0
  1082  000013                     TMR0_SetInterruptHandler@InterruptHandler:
  1083                           	callstack 0
  1084  000013                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1085                           	callstack 0
  1086  000013                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1087                           	callstack 0
  1088  000013                     EUSART1_SetErrorHandler@interruptHandler:
  1089                           	callstack 0
  1090  000013                     ___wmul@multiplier:
  1091                           	callstack 0
  1092  000013                     ___lwdiv@dividend:
  1093                           	callstack 0
  1094  000013                     strlen@s:
  1095                           	callstack 0
  1096  000013                     ___aldiv@dividend:
  1097                           	callstack 0
  1098  000013                     ___aodiv@dividend:
  1099                           	callstack 0
  1100  000013                     ___aomod@dividend:
  1101                           	callstack 0
  1102                           
  1103                           ; 8 bytes @ 0x12
  1104  000013                     	ds	1
  1105  000014                     putch@txData:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x13
  1109  000014                     	ds	1
  1110  000015                     ??_TMR0_Initialize:
  1111  000015                     ___wmul@multiplicand:
  1112                           	callstack 0
  1113  000015                     ___lwdiv@divisor:
  1114                           	callstack 0
  1115  000015                     fputc@c:
  1116                           	callstack 0
  1117  000015                     strlen@a:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x14
  1121  000015                     	ds	2
  1122  000017                     ___lwdiv@counter:
  1123                           	callstack 0
  1124  000017                     ___wmul@product:
  1125                           	callstack 0
  1126  000017                     fputc@fp:
  1127                           	callstack 0
  1128  000017                     ___aldiv@divisor:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x16
  1132  000017                     	ds	1
  1133  000018                     ___lwdiv@quotient:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x17
  1137  000018                     	ds	1
  1138  000019                     ??_fputc:
  1139                           
  1140                           ; 1 bytes @ 0x18
  1141  000019                     	ds	2
  1142  00001B                     ___aldiv@counter:
  1143                           	callstack 0
  1144  00001B                     ___aodiv@divisor:
  1145                           	callstack 0
  1146  00001B                     ___aomod@divisor:
  1147                           	callstack 0
  1148                           
  1149                           ; 8 bytes @ 0x1A
  1150  00001B                     	ds	1
  1151  00001C                     ___aldiv@sign:
  1152                           	callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x1B
  1155  00001C                     	ds	1
  1156  00001D                     ___aldiv@quotient:
  1157                           	callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x1C
  1160  00001D                     	ds	1
  1161  00001E                     ?_ctoa:
  1162                           	callstack 0
  1163  00001E                     ctoa@fp:
  1164                           	callstack 0
  1165  00001E                     fputs@s:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x1D
  1169  00001E                     	ds	2
  1170  000020                     ctoa@c:
  1171                           	callstack 0
  1172  000020                     fputs@fp:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x1F
  1176  000020                     	ds	1
  1177  000021                     ??_ctoa:
  1178                           
  1179                           ; 1 bytes @ 0x20
  1180  000021                     	ds	1
  1181  000022                     fputs@c:
  1182                           	callstack 0
  1183  000022                     ctoa@l:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x21
  1187  000022                     	ds	1
  1188  000023                     ___aodiv@counter:
  1189                           	callstack 0
  1190  000023                     ___aomod@counter:
  1191                           	callstack 0
  1192  000023                     fputs@i:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x22
  1196  000023                     	ds	1
  1197  000024                     ___aodiv@sign:
  1198                           	callstack 0
  1199  000024                     ___aomod@sign:
  1200                           	callstack 0
  1201  000024                     ctoa@w:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x23
  1205  000024                     	ds	1
  1206  000025                     ?_abs:
  1207                           	callstack 0
  1208  000025                     ?_pad:
  1209                           	callstack 0
  1210  000025                     pad@fp:
  1211                           	callstack 0
  1212  000025                     abs@a:
  1213                           	callstack 0
  1214  000025                     ___aodiv@quotient:
  1215                           	callstack 0
  1216                           
  1217                           ; 8 bytes @ 0x24
  1218  000025                     	ds	2
  1219  000027                     ??_abs:
  1220  000027                     pad@buf:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x26
  1224  000027                     	ds	2
  1225  000029                     pad@p:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x28
  1229  000029                     	ds	2
  1230  00002B                     ??_pad:
  1231                           
  1232                           ; 1 bytes @ 0x2A
  1233  00002B                     	ds	1
  1234  00002C                     pad@i:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x2B
  1238  00002C                     	ds	2
  1239  00002E                     pad@w:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x2D
  1243  00002E                     	ds	2
  1244  000030                     ?_dtoa:
  1245                           	callstack 0
  1246  000030                     dtoa@fp:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x2F
  1250  000030                     	ds	2
  1251  000032                     dtoa@d:
  1252                           	callstack 0
  1253                           
  1254                           ; 8 bytes @ 0x31
  1255  000032                     	ds	8
  1256  00003A                     ??_vfpfcnvrt:
  1257                           
  1258                           ; 1 bytes @ 0x39
  1259  00003A                     	ds	2
  1260  00003C                     
  1261                           ; 1 bytes @ 0x3B
  1262 ;;
  1263 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1264 ;;
  1265 ;; *************** function _main *****************
  1266 ;; Defined at:
  1267 ;;		line 45 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  i               2   90[BANK0 ] unsigned short 
  1272 ;;  i               2   80[BANK0 ] unsigned short 
  1273 ;;  i               2   88[BANK0 ] unsigned short 
  1274 ;;  i               2   84[BANK0 ] unsigned short 
  1275 ;;  crossings     256    0[BANK1 ] unsigned short [128]
  1276 ;;  crIdx           2   86[BANK0 ] unsigned short 
  1277 ;;  avgPeriodUs     2   77[BANK0 ] unsigned short 
  1278 ;;  periodSum       2   75[BANK0 ] unsigned short 
  1279 ;;  periodSumUs     2   73[BANK0 ] unsigned short 
  1280 ;;  i               2   82[BANK0 ] unsigned short 
  1281 ;;  cmd             1   79[BANK0 ] unsigned char 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Locals:         0      19     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Totals:         0      31     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;Total ram usage:      287 bytes
  1296 ;; Hardware stack levels required when called:   13
  1297 ;; This function calls:
  1298 ;;		_EUSART1_Read
  1299 ;;		_EUSART1_is_rx_ready
  1300 ;;		_SYSTEM_Initialize
  1301 ;;		_TMR0_SetInterruptHandler
  1302 ;;		_TMR0_WriteTimer
  1303 ;;		___aldiv
  1304 ;;		___lwdiv
  1305 ;;		___wmul
  1306 ;;		_printf
  1307 ;; This function is called by:
  1308 ;;		Startup code after reset
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text0
  1313  000052                     __ptext0:
  1314                           	callstack 0
  1315  000052                     _main:
  1316                           	callstack 18
  1317  000052                     
  1318                           ;main.c: 54:     uint16_t i;;main.c: 55:     char cmd;;main.c: 57:     SYSTEM_Initialize
      +                          ();
  1319  000052  EC37  F00B         	call	_SYSTEM_Initialize	;wreg free
  1320  000056                     
  1321                           ;main.c: 62:     TMR0_WriteTimer(0x0000);
  1322  000056  0E00               	movlw	0
  1323  000058  6E14               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1324  00005A  0E00               	movlw	0
  1325  00005C  6E13               	movwf	TMR0_WriteTimer@timerVal^0,c
  1326  00005E  EC69  F00B         	call	_TMR0_WriteTimer	;wreg free
  1327  000062                     
  1328                           ;main.c: 63:     INTCONbits.TMR0IF = 0;
  1329  000062  94F2               	bcf	242,2,c	;volatile
  1330  000064                     l35:
  1331  000064  A4F2               	btfss	242,2,c	;volatile
  1332  000066  EF37  F000         	goto	u2401
  1333  00006A  EF39  F000         	goto	u2400
  1334  00006E                     u2401:
  1335  00006E  EF32  F000         	goto	l35
  1336  000072                     u2400:
  1337  000072                     
  1338                           ;main.c: 66:     TMR0_SetInterruptHandler(myTMR0ISR);
  1339  000072  0EAA               	movlw	low _myTMR0ISR
  1340  000074  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1341  000076  0E0E               	movlw	high _myTMR0ISR
  1342  000078  6E14               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1343  00007A  EC6E  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  1344  00007E                     
  1345                           ;main.c: 67:     (INTCONbits.GIE = 1);
  1346  00007E  8EF2               	bsf	242,7,c	;volatile
  1347  000080                     
  1348                           ;main.c: 68:     (INTCONbits.PEIE = 1);
  1349  000080  8CF2               	bsf	242,6,c	;volatile
  1350  000082                     
  1351                           ;main.c: 70:     printf("inLab 08\r\n");
  1352  000082  0ECD               	movlw	low STR_1
  1353  000084  0100               	movlb	0	; () banked
  1354  000086  6F91               	movwf	printf@fmt& (0+255),b
  1355  000088  0EFF               	movlw	high STR_1
  1356  00008A  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1357  00008C  ECDF  F00A         	call	_printf	;wreg free
  1358  000090                     
  1359                           ;main.c: 71:     printf("Microphone experiments\r\n");
  1360  000090  0E29               	movlw	low STR_2
  1361  000092  0100               	movlb	0	; () banked
  1362  000094  6F91               	movwf	printf@fmt& (0+255),b
  1363  000096  0EFF               	movlw	high STR_2
  1364  000098  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1365  00009A  ECDF  F00A         	call	_printf	;wreg free
  1366  00009E                     
  1367                           ;main.c: 72:     printf("Dev'21\r\n");
  1368  00009E  0ED8               	movlw	low STR_3
  1369  0000A0  0100               	movlb	0	; () banked
  1370  0000A2  6F91               	movwf	printf@fmt& (0+255),b
  1371  0000A4  0EFF               	movlw	high STR_3
  1372  0000A6  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1373  0000A8  ECDF  F00A         	call	_printf	;wreg free
  1374  0000AC                     
  1375                           ;main.c: 73:     printf("> ");
  1376  0000AC  0EFB               	movlw	low STR_4
  1377  0000AE  0100               	movlb	0	; () banked
  1378  0000B0  6F91               	movwf	printf@fmt& (0+255),b
  1379  0000B2  0EFF               	movlw	high STR_4
  1380  0000B4  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1381  0000B6  ECDF  F00A         	call	_printf	;wreg free
  1382  0000BA                     
  1383                           ;main.c: 77:     ADCON0bits.GO_NOT_DONE = 1;
  1384  0000BA  82C2               	bsf	194,1,c	;volatile
  1385  0000BC                     l38:
  1386  0000BC  B2C2               	btfsc	194,1,c	;volatile
  1387  0000BE  EF63  F000         	goto	u2411
  1388  0000C2  EF65  F000         	goto	u2410
  1389  0000C6                     u2411:
  1390  0000C6  EF5E  F000         	goto	l38
  1391  0000CA                     u2410:
  1392  0000CA                     l3084:
  1393                           
  1394                           ;main.c: 82:         if(samplesCollected){
  1395  0000CA  0100               	movlb	0	; () banked
  1396  0000CC  51C4               	movf	_samplesCollected& (0+255),w,b
  1397  0000CE  B4D8               	btfsc	status,2,c
  1398  0000D0  EF6C  F000         	goto	u2421
  1399  0000D4  EF6E  F000         	goto	u2420
  1400  0000D8                     u2421:
  1401  0000D8  EF2E  F002         	goto	l3156
  1402  0000DC                     u2420:
  1403  0000DC                     
  1404                           ; BSR set to: 0
  1405                           ;main.c: 83:             samplesCollected = 0;
  1406  0000DC  0E00               	movlw	0
  1407  0000DE  6FC4               	movwf	_samplesCollected& (0+255),b
  1408  0000E0                     
  1409                           ; BSR set to: 0
  1410                           ;main.c: 84:             printf("The last %d ADC samples from the microphone are: \r\n",
      +                           256);
  1411  0000E0  0E4D               	movlw	low STR_5
  1412  0000E2  6F91               	movwf	printf@fmt& (0+255),b
  1413  0000E4  0EFE               	movlw	high STR_5
  1414  0000E6  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1415  0000E8  0E01               	movlw	1
  1416  0000EA  6F94               	movwf	(?_printf+3)& (0+255),b
  1417  0000EC  0E00               	movlw	0
  1418  0000EE  6F93               	movwf	(?_printf+2)& (0+255),b
  1419  0000F0  ECDF  F00A         	call	_printf	;wreg free
  1420  0000F4                     
  1421                           ;main.c: 86:             for(uint16_t i = 0;i<256;i++){
  1422  0000F4  0E00               	movlw	0
  1423  0000F6  0100               	movlb	0	; () banked
  1424  0000F8  6FB5               	movwf	(main@i_218+1)& (0+255),b
  1425  0000FA  0E00               	movlw	0
  1426  0000FC  6FB4               	movwf	main@i_218& (0+255),b
  1427  0000FE                     l3096:
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;main.c: 87:                 if(i % 16 == 0){
  1431  0000FE  0E0F               	movlw	15
  1432  000100  15B4               	andwf	main@i_218& (0+255),w,b
  1433  000102  6F9D               	movwf	??_main& (0+255),b
  1434  000104  0E00               	movlw	0
  1435  000106  15B5               	andwf	(main@i_218+1)& (0+255),w,b
  1436  000108  6F9E               	movwf	(??_main+1)& (0+255),b
  1437  00010A  519D               	movf	??_main& (0+255),w,b
  1438  00010C  119E               	iorwf	(??_main+1)& (0+255),w,b
  1439  00010E  A4D8               	btfss	status,2,c
  1440  000110  EF8C  F000         	goto	u2431
  1441  000114  EF8E  F000         	goto	u2430
  1442  000118                     u2431:
  1443  000118  EF98  F000         	goto	l45
  1444  00011C                     u2430:
  1445  00011C                     
  1446                           ; BSR set to: 0
  1447                           ;main.c: 88:                     printf("\r\nS[%d] ", i);
  1448  00011C  0EE1               	movlw	low STR_6
  1449  00011E  6F91               	movwf	printf@fmt& (0+255),b
  1450  000120  0EFF               	movlw	high STR_6
  1451  000122  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1452  000124  C0B4  F093         	movff	main@i_218,?_printf+2
  1453  000128  C0B5  F094         	movff	main@i_218+1,?_printf+3
  1454  00012C  ECDF  F00A         	call	_printf	;wreg free
  1455  000130                     l45:
  1456                           
  1457                           ;main.c: 90:                 printf("%d ", adc_reading[i]);
  1458  000130  0EF7               	movlw	low STR_7
  1459  000132  0100               	movlb	0	; () banked
  1460  000134  6F91               	movwf	printf@fmt& (0+255),b
  1461  000136  0EFF               	movlw	high STR_7
  1462  000138  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1463  00013A  90D8               	bcf	status,0,c
  1464  00013C  35B4               	rlcf	main@i_218& (0+255),w,b
  1465  00013E  6ED9               	movwf	fsr2l,c
  1466  000140  35B5               	rlcf	(main@i_218+1)& (0+255),w,b
  1467  000142  6EDA               	movwf	fsr2h,c
  1468  000144  0E00               	movlw	low _adc_reading
  1469  000146  26D9               	addwf	fsr2l,f,c
  1470  000148  0E02               	movlw	high _adc_reading
  1471  00014A  22DA               	addwfc	fsr2h,f,c
  1472  00014C  CFDE F093          	movff	postinc2,?_printf+2
  1473  000150  CFDD F094          	movff	postdec2,?_printf+3
  1474  000154  ECDF  F00A         	call	_printf	;wreg free
  1475  000158                     
  1476                           ;main.c: 91:             }
  1477  000158  0100               	movlb	0	; () banked
  1478  00015A  4BB4               	infsnz	main@i_218& (0+255),f,b
  1479  00015C  2BB5               	incf	(main@i_218+1)& (0+255),f,b
  1480  00015E                     
  1481                           ; BSR set to: 0
  1482  00015E  05B5               	decf	(main@i_218+1)& (0+255),w,b
  1483  000160  A0D8               	btfss	status,0,c
  1484  000162  EFB5  F000         	goto	u2441
  1485  000166  EFB7  F000         	goto	u2440
  1486  00016A                     u2441:
  1487  00016A  EF7F  F000         	goto	l3096
  1488  00016E                     u2440:
  1489  00016E                     
  1490                           ; BSR set to: 0
  1491                           ;main.c: 92:             printf("\r\nThe sound wave crossed at the following indices:\r\
      +                          n");
  1492  00016E  0E18               	movlw	low STR_8
  1493  000170  6F91               	movwf	printf@fmt& (0+255),b
  1494  000172  0EFE               	movlw	high STR_8
  1495  000174  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1496  000176  ECDF  F00A         	call	_printf	;wreg free
  1497  00017A                     
  1498                           ;main.c: 93:             uint16_t crossings[256/2];;main.c: 94:             uint16_t crI
      +                          dx = 0;
  1499  00017A  0E00               	movlw	0
  1500  00017C  0100               	movlb	0	; () banked
  1501  00017E  6FB7               	movwf	(main@crIdx+1)& (0+255),b
  1502  000180  0E00               	movlw	0
  1503  000182  6FB6               	movwf	main@crIdx& (0+255),b
  1504  000184                     
  1505                           ; BSR set to: 0
  1506                           ;main.c: 95:             for(uint16_t i = 1;i<256;i++){
  1507  000184  0E00               	movlw	0
  1508  000186  6FB9               	movwf	(main@i_224+1)& (0+255),b
  1509  000188  0E01               	movlw	1
  1510  00018A  6FB8               	movwf	main@i_224& (0+255),b
  1511  00018C                     l3114:
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;main.c: 96:                 if(adc_reading[i-1] <= 128 && adc_reading[i] > 128){
  1515  00018C  90D8               	bcf	status,0,c
  1516  00018E  35B8               	rlcf	main@i_224& (0+255),w,b
  1517  000190  6ED9               	movwf	fsr2l,c
  1518  000192  35B9               	rlcf	(main@i_224+1)& (0+255),w,b
  1519  000194  6EDA               	movwf	fsr2h,c
  1520  000196  0EFE               	movlw	low (_adc_reading+65534)
  1521  000198  26D9               	addwf	fsr2l,f,c
  1522  00019A  0E01               	movlw	high (_adc_reading+65534)
  1523  00019C  22DA               	addwfc	fsr2h,f,c
  1524  00019E  0E01               	movlw	1
  1525  0001A0  50DB               	movf	plusw2,w,c
  1526  0001A2  E107               	bnz	u2451
  1527  0001A4  0E81               	movlw	129
  1528  0001A6  5CDE               	subwf	postinc2,w,c
  1529  0001A8  B0D8               	btfsc	status,0,c
  1530  0001AA  EFD9  F000         	goto	u2451
  1531  0001AE  EFDB  F000         	goto	u2450
  1532  0001B2                     u2451:
  1533  0001B2  EF0B  F001         	goto	l3122
  1534  0001B6                     u2450:
  1535  0001B6                     
  1536                           ; BSR set to: 0
  1537  0001B6  90D8               	bcf	status,0,c
  1538  0001B8  35B8               	rlcf	main@i_224& (0+255),w,b
  1539  0001BA  6ED9               	movwf	fsr2l,c
  1540  0001BC  35B9               	rlcf	(main@i_224+1)& (0+255),w,b
  1541  0001BE  6EDA               	movwf	fsr2h,c
  1542  0001C0  0E00               	movlw	low _adc_reading
  1543  0001C2  26D9               	addwf	fsr2l,f,c
  1544  0001C4  0E02               	movlw	high _adc_reading
  1545  0001C6  22DA               	addwfc	fsr2h,f,c
  1546  0001C8  0E01               	movlw	1
  1547  0001CA  50DB               	movf	plusw2,w,c
  1548  0001CC  E109               	bnz	u2460
  1549  0001CE  0E81               	movlw	129
  1550  0001D0  5CDE               	subwf	postinc2,w,c
  1551  0001D2  A0D8               	btfss	status,0,c
  1552  0001D4  EFEE  F000         	goto	u2461
  1553  0001D8  EFF0  F000         	goto	u2460
  1554  0001DC                     u2461:
  1555  0001DC  EF0B  F001         	goto	l3122
  1556  0001E0                     u2460:
  1557  0001E0                     
  1558                           ; BSR set to: 0
  1559                           ;main.c: 97:                     crossings[crIdx] = i - 1;
  1560  0001E0  0EFF               	movlw	255
  1561  0001E2  6F9D               	movwf	??_main& (0+255),b
  1562  0001E4  0EFF               	movlw	255
  1563  0001E6  6F9E               	movwf	(??_main+1)& (0+255),b
  1564  0001E8  C0B8  F09F         	movff	main@i_224,??_main+2
  1565  0001EC  C0B9  F0A0         	movff	main@i_224+1,??_main+3
  1566  0001F0  519D               	movf	??_main& (0+255),w,b
  1567  0001F2  279F               	addwf	(??_main+2)& (0+255),f,b
  1568  0001F4  519E               	movf	(??_main+1)& (0+255),w,b
  1569  0001F6  23A0               	addwfc	(??_main+3)& (0+255),f,b
  1570  0001F8  90D8               	bcf	status,0,c
  1571  0001FA  35B6               	rlcf	main@crIdx& (0+255),w,b
  1572  0001FC  6ED9               	movwf	fsr2l,c
  1573  0001FE  35B7               	rlcf	(main@crIdx+1)& (0+255),w,b
  1574  000200  6EDA               	movwf	fsr2h,c
  1575  000202  0E00               	movlw	low main@crossings
  1576  000204  26D9               	addwf	fsr2l,f,c
  1577  000206  0E01               	movlw	high main@crossings
  1578  000208  22DA               	addwfc	fsr2h,f,c
  1579  00020A  C09F  FFDE         	movff	??_main+2,postinc2
  1580  00020E  C0A0  FFDD         	movff	??_main+3,postdec2
  1581  000212                     
  1582                           ; BSR set to: 0
  1583                           ;main.c: 98:                     crIdx += 1;
  1584  000212  4BB6               	infsnz	main@crIdx& (0+255),f,b
  1585  000214  2BB7               	incf	(main@crIdx+1)& (0+255),f,b
  1586  000216                     l3122:
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;main.c: 100:             }
  1590  000216  4BB8               	infsnz	main@i_224& (0+255),f,b
  1591  000218  2BB9               	incf	(main@i_224+1)& (0+255),f,b
  1592  00021A                     
  1593                           ; BSR set to: 0
  1594  00021A  05B9               	decf	(main@i_224+1)& (0+255),w,b
  1595  00021C  A0D8               	btfss	status,0,c
  1596  00021E  EF13  F001         	goto	u2471
  1597  000222  EF15  F001         	goto	u2470
  1598  000226                     u2471:
  1599  000226  EFC6  F000         	goto	l3114
  1600  00022A                     u2470:
  1601  00022A                     
  1602                           ; BSR set to: 0
  1603                           ;main.c: 101:             for(uint16_t i = 0;i<crIdx;i++){
  1604  00022A  0E00               	movlw	0
  1605  00022C  6FB1               	movwf	(main@i_225+1)& (0+255),b
  1606  00022E  0E00               	movlw	0
  1607  000230  6FB0               	movwf	main@i_225& (0+255),b
  1608  000232  EF31  F001         	goto	l3132
  1609  000236                     l3128:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;main.c: 102:                 printf("%d ", crossings[i]);
  1613  000236  0EF7               	movlw	low STR_7
  1614  000238  6F91               	movwf	printf@fmt& (0+255),b
  1615  00023A  0EFF               	movlw	high STR_7
  1616  00023C  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1617  00023E  90D8               	bcf	status,0,c
  1618  000240  35B0               	rlcf	main@i_225& (0+255),w,b
  1619  000242  6ED9               	movwf	fsr2l,c
  1620  000244  35B1               	rlcf	(main@i_225+1)& (0+255),w,b
  1621  000246  6EDA               	movwf	fsr2h,c
  1622  000248  0E00               	movlw	low main@crossings
  1623  00024A  26D9               	addwf	fsr2l,f,c
  1624  00024C  0E01               	movlw	high main@crossings
  1625  00024E  22DA               	addwfc	fsr2h,f,c
  1626  000250  CFDE F093          	movff	postinc2,?_printf+2
  1627  000254  CFDD F094          	movff	postdec2,?_printf+3
  1628  000258  ECDF  F00A         	call	_printf	;wreg free
  1629  00025C                     
  1630                           ;main.c: 103:             }
  1631  00025C  0100               	movlb	0	; () banked
  1632  00025E  4BB0               	infsnz	main@i_225& (0+255),f,b
  1633  000260  2BB1               	incf	(main@i_225+1)& (0+255),f,b
  1634  000262                     l3132:
  1635                           
  1636                           ; BSR set to: 0
  1637  000262  51B6               	movf	main@crIdx& (0+255),w,b
  1638  000264  5DB0               	subwf	main@i_225& (0+255),w,b
  1639  000266  51B7               	movf	(main@crIdx+1)& (0+255),w,b
  1640  000268  59B1               	subwfb	(main@i_225+1)& (0+255),w,b
  1641  00026A  A0D8               	btfss	status,0,c
  1642  00026C  EF3A  F001         	goto	u2481
  1643  000270  EF3C  F001         	goto	u2480
  1644  000274                     u2481:
  1645  000274  EF1B  F001         	goto	l3128
  1646  000278                     u2480:
  1647  000278                     
  1648                           ; BSR set to: 0
  1649                           ;main.c: 104:             printf("\r\nThe sound wave had %d periods:\r\n", crIdx);
  1650  000278  0EAC               	movlw	low STR_10
  1651  00027A  6F91               	movwf	printf@fmt& (0+255),b
  1652  00027C  0EFE               	movlw	high STR_10
  1653  00027E  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1654  000280  C0B6  F093         	movff	main@crIdx,?_printf+2
  1655  000284  C0B7  F094         	movff	main@crIdx+1,?_printf+3
  1656  000288  ECDF  F00A         	call	_printf	;wreg free
  1657  00028C                     
  1658                           ;main.c: 105:             uint16_t periodSum = 0;
  1659  00028C  0E00               	movlw	0
  1660  00028E  0100               	movlb	0	; () banked
  1661  000290  6FAC               	movwf	(main@periodSum+1)& (0+255),b
  1662  000292  0E00               	movlw	0
  1663  000294  6FAB               	movwf	main@periodSum& (0+255),b
  1664  000296                     
  1665                           ; BSR set to: 0
  1666                           ;main.c: 106:             for(uint16_t i = 1;i<crIdx;i++){
  1667  000296  0E00               	movlw	0
  1668  000298  6FBB               	movwf	(main@i_229+1)& (0+255),b
  1669  00029A  0E01               	movlw	1
  1670  00029C  6FBA               	movwf	main@i_229& (0+255),b
  1671  00029E  EFDA  F001         	goto	l3146
  1672  0002A2                     l3140:
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;main.c: 107:                 printf("%d - %d = %d\r\n", crossings[i], crossings[i-1], c
      +                          rossings[i] - crossings[i-1]);
  1676  0002A2  0EAF               	movlw	low STR_11
  1677  0002A4  6F91               	movwf	printf@fmt& (0+255),b
  1678  0002A6  0EFF               	movlw	high STR_11
  1679  0002A8  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1680  0002AA  90D8               	bcf	status,0,c
  1681  0002AC  35BA               	rlcf	main@i_229& (0+255),w,b
  1682  0002AE  6ED9               	movwf	fsr2l,c
  1683  0002B0  35BB               	rlcf	(main@i_229+1)& (0+255),w,b
  1684  0002B2  6EDA               	movwf	fsr2h,c
  1685  0002B4  0E00               	movlw	low main@crossings
  1686  0002B6  26D9               	addwf	fsr2l,f,c
  1687  0002B8  0E01               	movlw	high main@crossings
  1688  0002BA  22DA               	addwfc	fsr2h,f,c
  1689  0002BC  CFDE F093          	movff	postinc2,?_printf+2
  1690  0002C0  CFDD F094          	movff	postdec2,?_printf+3
  1691  0002C4  0EFE               	movlw	254
  1692  0002C6  6F9D               	movwf	??_main& (0+255),b
  1693  0002C8  0EFF               	movlw	255
  1694  0002CA  6F9E               	movwf	(??_main+1)& (0+255),b
  1695  0002CC  C0BA  F09F         	movff	main@i_229,??_main+2
  1696  0002D0  C0BB  F0A0         	movff	main@i_229+1,??_main+3
  1697  0002D4  90D8               	bcf	status,0,c
  1698  0002D6  379F               	rlcf	(??_main+2)& (0+255),f,b
  1699  0002D8  37A0               	rlcf	(??_main+3)& (0+255),f,b
  1700  0002DA  519D               	movf	??_main& (0+255),w,b
  1701  0002DC  279F               	addwf	(??_main+2)& (0+255),f,b
  1702  0002DE  519E               	movf	(??_main+1)& (0+255),w,b
  1703  0002E0  23A0               	addwfc	(??_main+3)& (0+255),f,b
  1704  0002E2  0E00               	movlw	low main@crossings
  1705  0002E4  259F               	addwf	(??_main+2)& (0+255),w,b
  1706  0002E6  6ED9               	movwf	fsr2l,c
  1707  0002E8  0E01               	movlw	high main@crossings
  1708  0002EA  21A0               	addwfc	(??_main+3)& (0+255),w,b
  1709  0002EC  6EDA               	movwf	fsr2h,c
  1710  0002EE  CFDE F095          	movff	postinc2,?_printf+4
  1711  0002F2  CFDD F096          	movff	postdec2,?_printf+5
  1712  0002F6  0EFE               	movlw	254
  1713  0002F8  6FA1               	movwf	(??_main+4)& (0+255),b
  1714  0002FA  0EFF               	movlw	255
  1715  0002FC  6FA2               	movwf	(??_main+5)& (0+255),b
  1716  0002FE  C0BA  F0A3         	movff	main@i_229,??_main+6
  1717  000302  C0BB  F0A4         	movff	main@i_229+1,??_main+7
  1718  000306  90D8               	bcf	status,0,c
  1719  000308  37A3               	rlcf	(??_main+6)& (0+255),f,b
  1720  00030A  37A4               	rlcf	(??_main+7)& (0+255),f,b
  1721  00030C  51A1               	movf	(??_main+4)& (0+255),w,b
  1722  00030E  27A3               	addwf	(??_main+6)& (0+255),f,b
  1723  000310  51A2               	movf	(??_main+5)& (0+255),w,b
  1724  000312  23A4               	addwfc	(??_main+7)& (0+255),f,b
  1725  000314  0E00               	movlw	low main@crossings
  1726  000316  25A3               	addwf	(??_main+6)& (0+255),w,b
  1727  000318  6ED9               	movwf	fsr2l,c
  1728  00031A  0E01               	movlw	high main@crossings
  1729  00031C  21A4               	addwfc	(??_main+7)& (0+255),w,b
  1730  00031E  6EDA               	movwf	fsr2h,c
  1731  000320  CFDE F0A5          	movff	postinc2,??_main+8
  1732  000324  CFDD F0A6          	movff	postdec2,??_main+9
  1733  000328  90D8               	bcf	status,0,c
  1734  00032A  35BA               	rlcf	main@i_229& (0+255),w,b
  1735  00032C  6ED9               	movwf	fsr2l,c
  1736  00032E  35BB               	rlcf	(main@i_229+1)& (0+255),w,b
  1737  000330  6EDA               	movwf	fsr2h,c
  1738  000332  0E00               	movlw	low main@crossings
  1739  000334  26D9               	addwf	fsr2l,f,c
  1740  000336  0E01               	movlw	high main@crossings
  1741  000338  22DA               	addwfc	fsr2h,f,c
  1742  00033A  CFDE F0A7          	movff	postinc2,??_main+10
  1743  00033E  CFDD F0A8          	movff	postdec2,??_main+11
  1744  000342  51A5               	movf	(??_main+8)& (0+255),w,b
  1745  000344  5DA7               	subwf	(??_main+10)& (0+255),w,b
  1746  000346  6F97               	movwf	(?_printf+6)& (0+255),b
  1747  000348  51A6               	movf	(??_main+9)& (0+255),w,b
  1748  00034A  59A8               	subwfb	(??_main+11)& (0+255),w,b
  1749  00034C  6F98               	movwf	(?_printf+7)& (0+255),b
  1750  00034E  ECDF  F00A         	call	_printf	;wreg free
  1751  000352                     
  1752                           ;main.c: 108:                 periodSum += crossings[i] - crossings[i-1];
  1753  000352  0EFE               	movlw	254
  1754  000354  0100               	movlb	0	; () banked
  1755  000356  6F9D               	movwf	??_main& (0+255),b
  1756  000358  0EFF               	movlw	255
  1757  00035A  6F9E               	movwf	(??_main+1)& (0+255),b
  1758  00035C  C0BA  F09F         	movff	main@i_229,??_main+2
  1759  000360  C0BB  F0A0         	movff	main@i_229+1,??_main+3
  1760  000364  90D8               	bcf	status,0,c
  1761  000366  379F               	rlcf	(??_main+2)& (0+255),f,b
  1762  000368  37A0               	rlcf	(??_main+3)& (0+255),f,b
  1763  00036A  519D               	movf	??_main& (0+255),w,b
  1764  00036C  279F               	addwf	(??_main+2)& (0+255),f,b
  1765  00036E  519E               	movf	(??_main+1)& (0+255),w,b
  1766  000370  23A0               	addwfc	(??_main+3)& (0+255),f,b
  1767  000372  0E00               	movlw	low main@crossings
  1768  000374  259F               	addwf	(??_main+2)& (0+255),w,b
  1769  000376  6ED9               	movwf	fsr2l,c
  1770  000378  0E01               	movlw	high main@crossings
  1771  00037A  21A0               	addwfc	(??_main+3)& (0+255),w,b
  1772  00037C  6EDA               	movwf	fsr2h,c
  1773  00037E  CFDE F0A1          	movff	postinc2,??_main+4
  1774  000382  CFDD F0A2          	movff	postdec2,??_main+5
  1775  000386  90D8               	bcf	status,0,c
  1776  000388  35BA               	rlcf	main@i_229& (0+255),w,b
  1777  00038A  6ED9               	movwf	fsr2l,c
  1778  00038C  35BB               	rlcf	(main@i_229+1)& (0+255),w,b
  1779  00038E  6EDA               	movwf	fsr2h,c
  1780  000390  0E00               	movlw	low main@crossings
  1781  000392  26D9               	addwf	fsr2l,f,c
  1782  000394  0E01               	movlw	high main@crossings
  1783  000396  22DA               	addwfc	fsr2h,f,c
  1784  000398  CFDE F0A3          	movff	postinc2,??_main+6
  1785  00039C  CFDD F0A4          	movff	postdec2,??_main+7
  1786  0003A0  51A1               	movf	(??_main+4)& (0+255),w,b
  1787  0003A2  5FA3               	subwf	(??_main+6)& (0+255),f,b
  1788  0003A4  51A2               	movf	(??_main+5)& (0+255),w,b
  1789  0003A6  5BA4               	subwfb	(??_main+7)& (0+255),f,b
  1790  0003A8  51A3               	movf	(??_main+6)& (0+255),w,b
  1791  0003AA  27AB               	addwf	main@periodSum& (0+255),f,b
  1792  0003AC  51A4               	movf	(??_main+7)& (0+255),w,b
  1793  0003AE  23AC               	addwfc	(main@periodSum+1)& (0+255),f,b
  1794  0003B0                     
  1795                           ; BSR set to: 0
  1796                           ;main.c: 109:             }
  1797  0003B0  4BBA               	infsnz	main@i_229& (0+255),f,b
  1798  0003B2  2BBB               	incf	(main@i_229+1)& (0+255),f,b
  1799  0003B4                     l3146:
  1800                           
  1801                           ; BSR set to: 0
  1802  0003B4  51B6               	movf	main@crIdx& (0+255),w,b
  1803  0003B6  5DBA               	subwf	main@i_229& (0+255),w,b
  1804  0003B8  51B7               	movf	(main@crIdx+1)& (0+255),w,b
  1805  0003BA  59BB               	subwfb	(main@i_229+1)& (0+255),w,b
  1806  0003BC  A0D8               	btfss	status,0,c
  1807  0003BE  EFE3  F001         	goto	u2491
  1808  0003C2  EFE5  F001         	goto	u2490
  1809  0003C6                     u2491:
  1810  0003C6  EF51  F001         	goto	l3140
  1811  0003CA                     u2490:
  1812  0003CA                     
  1813                           ; BSR set to: 0
  1814                           ;main.c: 112:             uint16_t periodSumUs = periodSum * 25;
  1815  0003CA  C0AB  F013         	movff	main@periodSum,___wmul@multiplier
  1816  0003CE  C0AC  F014         	movff	main@periodSum+1,___wmul@multiplier+1
  1817  0003D2  0E00               	movlw	0
  1818  0003D4  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  1819  0003D6  0E19               	movlw	25
  1820  0003D8  6E15               	movwf	___wmul@multiplicand^0,c
  1821  0003DA  EC07  F00B         	call	___wmul	;wreg free
  1822  0003DE  C013  F0A9         	movff	?___wmul,main@periodSumUs
  1823  0003E2  C014  F0AA         	movff	?___wmul+1,main@periodSumUs+1
  1824  0003E6                     
  1825                           ;main.c: 113:             uint16_t avgPeriodUs = periodSumUs/(crIdx -1 );
  1826  0003E6  C0A9  F013         	movff	main@periodSumUs,___lwdiv@dividend
  1827  0003EA  C0AA  F014         	movff	main@periodSumUs+1,___lwdiv@dividend+1
  1828  0003EE  0EFF               	movlw	255
  1829  0003F0  0100               	movlb	0	; () banked
  1830  0003F2  25B6               	addwf	main@crIdx& (0+255),w,b
  1831  0003F4  6E15               	movwf	___lwdiv@divisor^0,c
  1832  0003F6  0EFF               	movlw	255
  1833  0003F8  21B7               	addwfc	(main@crIdx+1)& (0+255),w,b
  1834  0003FA  6E16               	movwf	(___lwdiv@divisor+1)^0,c
  1835  0003FC  EC84  F009         	call	___lwdiv	;wreg free
  1836  000400  C013  F0AD         	movff	?___lwdiv,main@avgPeriodUs
  1837  000404  C014  F0AE         	movff	?___lwdiv+1,main@avgPeriodUs+1
  1838  000408                     
  1839                           ;main.c: 114:             printf("\r\naverage period = %d us\r\n", avgPeriodUs);
  1840  000408  0E0E               	movlw	low STR_12
  1841  00040A  0100               	movlb	0	; () banked
  1842  00040C  6F91               	movwf	printf@fmt& (0+255),b
  1843  00040E  0EFF               	movlw	high STR_12
  1844  000410  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1845  000412  C0AD  F093         	movff	main@avgPeriodUs,?_printf+2
  1846  000416  C0AE  F094         	movff	main@avgPeriodUs+1,?_printf+3
  1847  00041A  ECDF  F00A         	call	_printf	;wreg free
  1848  00041E                     
  1849                           ;main.c: 115:             printf("\r\naverage frequendy = %d Hz\r\n", 1000000/avgPeriodU
      +                          s);
  1850  00041E  0EF0               	movlw	low STR_13
  1851  000420  0100               	movlb	0	; () banked
  1852  000422  6F91               	movwf	printf@fmt& (0+255),b
  1853  000424  0EFE               	movlw	high STR_13
  1854  000426  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1855  000428  0E40               	movlw	64
  1856  00042A  6E13               	movwf	___aldiv@dividend^0,c
  1857  00042C  0E42               	movlw	66
  1858  00042E  6E14               	movwf	(___aldiv@dividend+1)^0,c
  1859  000430  0E0F               	movlw	15
  1860  000432  6E15               	movwf	(___aldiv@dividend+2)^0,c
  1861  000434  0E00               	movlw	0
  1862  000436  6E16               	movwf	(___aldiv@dividend+3)^0,c
  1863  000438  C0AD  F017         	movff	main@avgPeriodUs,___aldiv@divisor
  1864  00043C  C0AE  F018         	movff	main@avgPeriodUs+1,___aldiv@divisor+1
  1865  000440  6A19               	clrf	(___aldiv@divisor+2)^0,c
  1866  000442  6A1A               	clrf	(___aldiv@divisor+3)^0,c
  1867  000444  ECE8  F007         	call	___aldiv	;wreg free
  1868  000448  C013  F093         	movff	?___aldiv,?_printf+2
  1869  00044C  C014  F094         	movff	?___aldiv+1,?_printf+3
  1870  000450  C015  F095         	movff	?___aldiv+2,?_printf+4
  1871  000454  C016  F096         	movff	?___aldiv+3,?_printf+5
  1872  000458  ECDF  F00A         	call	_printf	;wreg free
  1873  00045C                     l3156:
  1874                           
  1875                           ;main.c: 118:         if ((EUSART1_is_rx_ready())) {
  1876  00045C  EC5A  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  1877  000460  0900               	iorlw	0
  1878  000462  B4D8               	btfsc	status,2,c
  1879  000464  EF36  F002         	goto	u2501
  1880  000468  EF38  F002         	goto	u2500
  1881  00046C                     u2501:
  1882  00046C  EF65  F000         	goto	l3084
  1883  000470                     u2500:
  1884  000470                     
  1885                           ;main.c: 119:             cmd = EUSART1_Read();
  1886  000470  ECF3  F00A         	call	_EUSART1_Read	;wreg free
  1887  000474  0100               	movlb	0	; () banked
  1888  000476  6FAF               	movwf	main@cmd& (0+255),b
  1889                           
  1890                           ;main.c: 120:             switch (cmd) {
  1891  000478  EF27  F003         	goto	l3206
  1892  00047C                     l3160:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;main.c: 123:                     printf("------------------------------\r\n");
  1896  00047C  0ECF               	movlw	low STR_14
  1897  00047E  6F91               	movwf	printf@fmt& (0+255),b
  1898  000480  0EFE               	movlw	high STR_14
  1899  000482  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1900  000484  ECDF  F00A         	call	_printf	;wreg free
  1901                           
  1902                           ;main.c: 124:                     printf("?: Help menu\r\n");
  1903  000488  0EBE               	movlw	low STR_15
  1904  00048A  0100               	movlb	0	; () banked
  1905  00048C  6F91               	movwf	printf@fmt& (0+255),b
  1906  00048E  0EFF               	movlw	high STR_15
  1907  000490  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1908  000492  ECDF  F00A         	call	_printf	;wreg free
  1909                           
  1910                           ;main.c: 125:                     printf("o: k\r\n");
  1911  000496  0EEA               	movlw	low STR_16
  1912  000498  0100               	movlb	0	; () banked
  1913  00049A  6F91               	movwf	printf@fmt& (0+255),b
  1914  00049C  0EFF               	movlw	high STR_16
  1915  00049E  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1916  0004A0  ECDF  F00A         	call	_printf	;wreg free
  1917                           
  1918                           ;main.c: 126:                     printf("Z: Reset processor\r\n");
  1919  0004A4  0E89               	movlw	low STR_17
  1920  0004A6  0100               	movlb	0	; () banked
  1921  0004A8  6F91               	movwf	printf@fmt& (0+255),b
  1922  0004AA  0EFF               	movlw	high STR_17
  1923  0004AC  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1924  0004AE  ECDF  F00A         	call	_printf	;wreg free
  1925                           
  1926                           ;main.c: 127:                     printf("z: Clear the terminal\r\n");
  1927  0004B2  0E5A               	movlw	low STR_18
  1928  0004B4  0100               	movlb	0	; () banked
  1929  0004B6  6F91               	movwf	printf@fmt& (0+255),b
  1930  0004B8  0EFF               	movlw	high STR_18
  1931  0004BA  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1932  0004BC  ECDF  F00A         	call	_printf	;wreg free
  1933                           
  1934                           ;main.c: 128:                     printf("T/t: Increase/decrease threshold 138-118\r\n")
      +                          ;
  1935  0004C0  0E81               	movlw	low STR_19
  1936  0004C2  0100               	movlb	0	; () banked
  1937  0004C4  6F91               	movwf	printf@fmt& (0+255),b
  1938  0004C6  0EFE               	movlw	high STR_19
  1939  0004C8  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1940  0004CA  ECDF  F00A         	call	_printf	;wreg free
  1941                           
  1942                           ;main.c: 129:                     printf("f: gather %d samples from the microphone and c
      +                          alculate the frequency\r\n", 256);
  1943  0004CE  0ED1               	movlw	low STR_20
  1944  0004D0  0100               	movlb	0	; () banked
  1945  0004D2  6F91               	movwf	printf@fmt& (0+255),b
  1946  0004D4  0EFD               	movlw	high STR_20
  1947  0004D6  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1948  0004D8  0E01               	movlw	1
  1949  0004DA  6F94               	movwf	(?_printf+3)& (0+255),b
  1950  0004DC  0E00               	movlw	0
  1951  0004DE  6F93               	movwf	(?_printf+2)& (0+255),b
  1952  0004E0  ECDF  F00A         	call	_printf	;wreg free
  1953                           
  1954                           ;main.c: 131:                     printf("------------------------------\r\n");
  1955  0004E4  0ECF               	movlw	low STR_14
  1956  0004E6  0100               	movlb	0	; () banked
  1957  0004E8  6F91               	movwf	printf@fmt& (0+255),b
  1958  0004EA  0EFE               	movlw	high STR_14
  1959  0004EC  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1960  0004EE  ECDF  F00A         	call	_printf	;wreg free
  1961                           
  1962                           ;main.c: 132:                     break;
  1963  0004F2  EF65  F000         	goto	l3084
  1964  0004F6                     l3162:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;main.c: 138:                     printf(" k\r\n>");
  1968  0004F6  0EF1               	movlw	low STR_22
  1969  0004F8  6F91               	movwf	printf@fmt& (0+255),b
  1970  0004FA  0EFF               	movlw	high STR_22
  1971  0004FC  6F92               	movwf	(printf@fmt+1)& (0+255),b
  1972  0004FE  ECDF  F00A         	call	_printf	;wreg free
  1973                           
  1974                           ;main.c: 139:                     break;
  1975  000502  EF65  F000         	goto	l3084
  1976  000506                     l3164:
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;main.c: 145:                     for (i = 0; i < 40; i++) printf("\n");
  1980  000506  0E00               	movlw	0
  1981  000508  6FB3               	movwf	(main@i+1)& (0+255),b
  1982  00050A  0E00               	movlw	0
  1983  00050C  6FB2               	movwf	main@i& (0+255),b
  1984  00050E                     l3166:
  1985                           
  1986                           ; BSR set to: 0
  1987  00050E  51B3               	movf	(main@i+1)& (0+255),w,b
  1988  000510  E109               	bnz	u2510
  1989  000512  0E28               	movlw	40
  1990  000514  5DB2               	subwf	main@i& (0+255),w,b
  1991  000516  A0D8               	btfss	status,0,c
  1992  000518  EF90  F002         	goto	u2511
  1993  00051C  EF92  F002         	goto	u2510
  1994  000520                     u2511:
  1995  000520  EF94  F002         	goto	l3170
  1996  000524                     u2510:
  1997  000524  EF9F  F002         	goto	l62
  1998  000528                     l3170:
  1999                           
  2000                           ; BSR set to: 0
  2001  000528  0E7F               	movlw	low (STR_5+50)
  2002  00052A  6F91               	movwf	printf@fmt& (0+255),b
  2003  00052C  0EFE               	movlw	high (STR_5+50)
  2004  00052E  6F92               	movwf	(printf@fmt+1)& (0+255),b
  2005  000530  ECDF  F00A         	call	_printf	;wreg free
  2006  000534  0100               	movlb	0	; () banked
  2007  000536  4BB2               	infsnz	main@i& (0+255),f,b
  2008  000538  2BB3               	incf	(main@i+1)& (0+255),f,b
  2009  00053A  EF87  F002         	goto	l3166
  2010  00053E                     l62:
  2011                           
  2012                           ; BSR set to: 0
  2013  00053E  00FF               	reset		;# 
  2014                           
  2015                           ;main.c: 147:                     break;
  2016  000540  EF65  F000         	goto	l3084
  2017  000544                     l3176:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;main.c: 153:                     for (i = 0; i < 40; i++) printf("\n>");
  2021  000544  0E00               	movlw	0
  2022  000546  6FB3               	movwf	(main@i+1)& (0+255),b
  2023  000548  0E00               	movlw	0
  2024  00054A  6FB2               	movwf	main@i& (0+255),b
  2025  00054C                     l3178:
  2026                           
  2027                           ; BSR set to: 0
  2028  00054C  51B3               	movf	(main@i+1)& (0+255),w,b
  2029  00054E  E109               	bnz	u2520
  2030  000550  0E28               	movlw	40
  2031  000552  5DB2               	subwf	main@i& (0+255),w,b
  2032  000554  A0D8               	btfss	status,0,c
  2033  000556  EFAF  F002         	goto	u2521
  2034  00055A  EFB1  F002         	goto	u2520
  2035  00055E                     u2521:
  2036  00055E  EFB3  F002         	goto	l3182
  2037  000562                     u2520:
  2038  000562  EF65  F000         	goto	l3084
  2039  000566                     l3182:
  2040                           
  2041                           ; BSR set to: 0
  2042  000566  0EF4               	movlw	low (STR_22+3)
  2043  000568  6F91               	movwf	printf@fmt& (0+255),b
  2044  00056A  0EFF               	movlw	high (STR_22+3)
  2045  00056C  6F92               	movwf	(printf@fmt+1)& (0+255),b
  2046  00056E  ECDF  F00A         	call	_printf	;wreg free
  2047  000572  0100               	movlb	0	; () banked
  2048  000574  4BB2               	infsnz	main@i& (0+255),f,b
  2049  000576  2BB3               	incf	(main@i+1)& (0+255),f,b
  2050  000578  EFA6  F002         	goto	l3178
  2051  00057C                     l3188:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;main.c: 157:                     thresholdRange += 5;
  2055  00057C  0E05               	movlw	5
  2056  00057E  27E5               	addwf	_thresholdRange& (0+255),f,b
  2057  000580  0E00               	movlw	0
  2058  000582  23E6               	addwfc	(_thresholdRange+1)& (0+255),f,b
  2059  000584                     
  2060                           ; BSR set to: 0
  2061                           ;main.c: 158:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRan
      +                          ge, 128 + thresholdRange);
  2062  000584  0E42               	movlw	low STR_25
  2063  000586  6F91               	movwf	printf@fmt& (0+255),b
  2064  000588  0EFF               	movlw	high STR_25
  2065  00058A  6F92               	movwf	(printf@fmt+1)& (0+255),b
  2066  00058C  51E5               	movf	_thresholdRange& (0+255),w,b
  2067  00058E  0880               	sublw	128
  2068  000590  6F93               	movwf	(?_printf+2)& (0+255),b
  2069  000592  51E6               	movf	(_thresholdRange+1)& (0+255),w,b
  2070  000594  A0D8               	btfss	status,0,c
  2071  000596  2AE8               	incf	wreg,f,c
  2072  000598  0800               	sublw	0
  2073  00059A  6F94               	movwf	(?_printf+3)& (0+255),b
  2074  00059C  0E80               	movlw	128
  2075  00059E  25E5               	addwf	_thresholdRange& (0+255),w,b
  2076  0005A0  6F95               	movwf	(?_printf+4)& (0+255),b
  2077  0005A2  0E00               	movlw	0
  2078  0005A4  21E6               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2079  0005A6  6F96               	movwf	(?_printf+5)& (0+255),b
  2080  0005A8  ECDF  F00A         	call	_printf	;wreg free
  2081                           
  2082                           ;main.c: 159:                     break;
  2083  0005AC  EF65  F000         	goto	l3084
  2084  0005B0                     l3192:
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;main.c: 161:                     if(thresholdRange > 0){
  2088  0005B0  51E5               	movf	_thresholdRange& (0+255),w,b
  2089  0005B2  11E6               	iorwf	(_thresholdRange+1)& (0+255),w,b
  2090  0005B4  B4D8               	btfsc	status,2,c
  2091  0005B6  EFDF  F002         	goto	u2531
  2092  0005BA  EFE1  F002         	goto	u2530
  2093  0005BE                     u2531:
  2094  0005BE  EFFB  F002         	goto	l3198
  2095  0005C2                     u2530:
  2096  0005C2                     
  2097                           ; BSR set to: 0
  2098                           ;main.c: 162:                         thresholdRange -= 5;
  2099  0005C2  0E05               	movlw	5
  2100  0005C4  5FE5               	subwf	_thresholdRange& (0+255),f,b
  2101  0005C6  0E00               	movlw	0
  2102  0005C8  5BE6               	subwfb	(_thresholdRange+1)& (0+255),f,b
  2103  0005CA                     
  2104                           ; BSR set to: 0
  2105                           ;main.c: 163:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRan
      +                          ge, 128 + thresholdRange);
  2106  0005CA  0E42               	movlw	low STR_25
  2107  0005CC  6F91               	movwf	printf@fmt& (0+255),b
  2108  0005CE  0EFF               	movlw	high STR_25
  2109  0005D0  6F92               	movwf	(printf@fmt+1)& (0+255),b
  2110  0005D2  51E5               	movf	_thresholdRange& (0+255),w,b
  2111  0005D4  0880               	sublw	128
  2112  0005D6  6F93               	movwf	(?_printf+2)& (0+255),b
  2113  0005D8  51E6               	movf	(_thresholdRange+1)& (0+255),w,b
  2114  0005DA  A0D8               	btfss	status,0,c
  2115  0005DC  2AE8               	incf	wreg,f,c
  2116  0005DE  0800               	sublw	0
  2117  0005E0  6F94               	movwf	(?_printf+3)& (0+255),b
  2118  0005E2  0E80               	movlw	128
  2119  0005E4  25E5               	addwf	_thresholdRange& (0+255),w,b
  2120  0005E6  6F95               	movwf	(?_printf+4)& (0+255),b
  2121  0005E8  0E00               	movlw	0
  2122  0005EA  21E6               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2123  0005EC  6F96               	movwf	(?_printf+5)& (0+255),b
  2124  0005EE  ECDF  F00A         	call	_printf	;wreg free
  2125                           
  2126                           ;main.c: 164:                     }
  2127  0005F2  EF65  F000         	goto	l3084
  2128  0005F6                     l3198:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;main.c: 166:                         printf("Volume range: %d - %d\r\n", 128 - threshol
      +                          dRange, 128 + thresholdRange);
  2132  0005F6  0E42               	movlw	low STR_25
  2133  0005F8  6F91               	movwf	printf@fmt& (0+255),b
  2134  0005FA  0EFF               	movlw	high STR_25
  2135  0005FC  6F92               	movwf	(printf@fmt+1)& (0+255),b
  2136  0005FE  51E5               	movf	_thresholdRange& (0+255),w,b
  2137  000600  0880               	sublw	128
  2138  000602  6F93               	movwf	(?_printf+2)& (0+255),b
  2139  000604  51E6               	movf	(_thresholdRange+1)& (0+255),w,b
  2140  000606  A0D8               	btfss	status,0,c
  2141  000608  2AE8               	incf	wreg,f,c
  2142  00060A  0800               	sublw	0
  2143  00060C  6F94               	movwf	(?_printf+3)& (0+255),b
  2144  00060E  0E80               	movlw	128
  2145  000610  25E5               	addwf	_thresholdRange& (0+255),w,b
  2146  000612  6F95               	movwf	(?_printf+4)& (0+255),b
  2147  000614  0E00               	movlw	0
  2148  000616  21E6               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2149  000618  6F96               	movwf	(?_printf+5)& (0+255),b
  2150  00061A  ECDF  F00A         	call	_printf	;wreg free
  2151                           
  2152                           ;main.c: 167:                         printf("Threshold at minimum\r\n");
  2153  00061E  0E72               	movlw	low STR_28
  2154  000620  0100               	movlb	0	; () banked
  2155  000622  6F91               	movwf	printf@fmt& (0+255),b
  2156  000624  0EFF               	movlw	high STR_28
  2157  000626  6F92               	movwf	(printf@fmt+1)& (0+255),b
  2158  000628  ECDF  F00A         	call	_printf	;wreg free
  2159  00062C  EF65  F000         	goto	l3084
  2160  000630                     l3200:
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;main.c: 173:                     fillBuffer = 1;
  2164  000630  0E01               	movlw	1
  2165  000632  6E4C               	movwf	_fillBuffer^0,c
  2166                           
  2167                           ;main.c: 174:                     break;
  2168  000634  EF65  F000         	goto	l3084
  2169  000638                     l3202:
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;main.c: 212:                     printf("Unknown key %c\r\n", cmd);
  2173  000638  0E9E               	movlw	low STR_29
  2174  00063A  6F91               	movwf	printf@fmt& (0+255),b
  2175  00063C  0EFF               	movlw	high STR_29
  2176  00063E  6F92               	movwf	(printf@fmt+1)& (0+255),b
  2177  000640  C0AF  F093         	movff	main@cmd,?_printf+2
  2178  000644  6B94               	clrf	(?_printf+3)& (0+255),b
  2179  000646  ECDF  F00A         	call	_printf	;wreg free
  2180                           
  2181                           ;main.c: 213:                     break;
  2182  00064A  EF65  F000         	goto	l3084
  2183  00064E                     l3206:
  2184                           
  2185                           ; BSR set to: 0
  2186  00064E  51AF               	movf	main@cmd& (0+255),w,b
  2187  000650  6F9D               	movwf	??_main& (0+255),b
  2188  000652  6B9E               	clrf	(??_main+1)& (0+255),b
  2189                           
  2190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2191                           ; Switch size 1, requested type "simple"
  2192                           ; Number of cases is 1, Range of values is 0 to 0
  2193                           ; switch strategies available:
  2194                           ; Name         Instructions Cycles
  2195                           ; simple_byte            4     3 (average)
  2196                           ;	Chosen strategy is simple_byte
  2197  000654  519E               	movf	(??_main+1)& (0+255),w,b
  2198  000656  0A00               	xorlw	0	; case 0
  2199  000658  B4D8               	btfsc	status,2,c
  2200  00065A  EF31  F003         	goto	l3268
  2201  00065E  EF1C  F003         	goto	l3202
  2202  000662                     l3268:
  2203                           
  2204                           ; BSR set to: 0
  2205                           ; Switch size 1, requested type "simple"
  2206                           ; Number of cases is 7, Range of values is 63 to 122
  2207                           ; switch strategies available:
  2208                           ; Name         Instructions Cycles
  2209                           ; simple_byte           22    12 (average)
  2210                           ;	Chosen strategy is simple_byte
  2211  000662  519D               	movf	??_main& (0+255),w,b
  2212  000664  0A3F               	xorlw	63	; case 63
  2213  000666  B4D8               	btfsc	status,2,c
  2214  000668  EF3E  F002         	goto	l3160
  2215  00066C  0A6B               	xorlw	107	; case 84
  2216  00066E  B4D8               	btfsc	status,2,c
  2217  000670  EFBE  F002         	goto	l3188
  2218  000674  0A0E               	xorlw	14	; case 90
  2219  000676  B4D8               	btfsc	status,2,c
  2220  000678  EF83  F002         	goto	l3164
  2221  00067C  0A3C               	xorlw	60	; case 102
  2222  00067E  B4D8               	btfsc	status,2,c
  2223  000680  EF18  F003         	goto	l3200
  2224  000684  0A09               	xorlw	9	; case 111
  2225  000686  B4D8               	btfsc	status,2,c
  2226  000688  EF7B  F002         	goto	l3162
  2227  00068C  0A1B               	xorlw	27	; case 116
  2228  00068E  B4D8               	btfsc	status,2,c
  2229  000690  EFD8  F002         	goto	l3192
  2230  000694  0A0E               	xorlw	14	; case 122
  2231  000696  B4D8               	btfsc	status,2,c
  2232  000698  EFA2  F002         	goto	l3176
  2233  00069C  EF1C  F003         	goto	l3202
  2234  0006A0  EF27  F000         	goto	start
  2235  0006A4                     __end_of_main:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _printf *****************
  2239 ;; Defined at:
  2240 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  fmt             2   49[BANK0 ] PTR const unsigned char 
  2243 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2244 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2245 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2246 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2247 ;;		 -> STR_13(30), STR_12(27), STR_11(15), STR_10(35), 
  2248 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2249 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2250 ;;		 -> STR_1(11), 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  ap              2   59[BANK0 ] PTR void [1]
  2253 ;;		 -> ?_printf(2), 
  2254 ;;  ret             2    0        int 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  2   49[BANK0 ] int 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2264 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;Total ram usage:       12 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:   12
  2271 ;; This function calls:
  2272 ;;		_vfprintf
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text1
  2279  0015BE                     __ptext1:
  2280                           	callstack 0
  2281  0015BE                     _printf:
  2282                           	callstack 18
  2283  0015BE  0E93               	movlw	low (?_printf+2)
  2284  0015C0  0100               	movlb	0	; () banked
  2285  0015C2  6F9B               	movwf	printf@ap& (0+255),b
  2286  0015C4  0E00               	movlw	high (?_printf+2)
  2287  0015C6  6F9C               	movwf	(printf@ap+1)& (0+255),b
  2288  0015C8                     
  2289                           ; BSR set to: 0
  2290  0015C8  0E00               	movlw	0
  2291  0015CA  6F89               	movwf	vfprintf@fp& (0+255),b
  2292  0015CC  0E00               	movlw	0
  2293  0015CE  6F8A               	movwf	(vfprintf@fp+1)& (0+255),b
  2294  0015D0  C091  F08B         	movff	printf@fmt,vfprintf@fmt
  2295  0015D4  C092  F08C         	movff	printf@fmt+1,vfprintf@fmt+1
  2296  0015D8  0E9B               	movlw	low printf@ap
  2297  0015DA  6F8D               	movwf	vfprintf@ap& (0+255),b
  2298  0015DC  0E00               	movlw	high printf@ap
  2299  0015DE  6F8E               	movwf	(vfprintf@ap+1)& (0+255),b
  2300  0015E0  ECBE  F009         	call	_vfprintf	;wreg free
  2301  0015E4  0012               	return		;funcret
  2302  0015E6                     __end_of_printf:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _vfprintf *****************
  2306 ;; Defined at:
  2307 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  fp              2   41[BANK0 ] PTR struct _IO_FILE
  2310 ;;		 -> NULL(0), 
  2311 ;;  fmt             2   43[BANK0 ] PTR const unsigned char 
  2312 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2313 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2314 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2315 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2316 ;;		 -> STR_13(30), STR_12(27), STR_11(15), STR_10(35), 
  2317 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2318 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2319 ;;		 -> STR_1(11), 
  2320 ;;  ap              2   45[BANK0 ] PTR PTR void 
  2321 ;;		 -> printf@ap(2), 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  cfmt            2   47[BANK0 ] PTR unsigned char 
  2324 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2325 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2326 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2327 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2328 ;;		 -> STR_13(30), STR_12(27), STR_11(15), STR_10(35), 
  2329 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2330 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2331 ;;		 -> STR_1(11), 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  2   41[BANK0 ] int 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2341 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;Total ram usage:        8 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:   11
  2348 ;; This function calls:
  2349 ;;		_vfpfcnvrt
  2350 ;; This function is called by:
  2351 ;;		_printf
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text2
  2356  00137C                     __ptext2:
  2357                           	callstack 0
  2358  00137C                     _vfprintf:
  2359                           	callstack 18
  2360  00137C                     
  2361                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2362  00137C  C08B  F08F         	movff	vfprintf@fmt,vfprintf@cfmt
  2363  001380  C08C  F090         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2364  001384                     
  2365                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2366  001384  0E00               	movlw	0
  2367  001386  0100               	movlb	0	; () banked
  2368  001388  6FBD               	movwf	(_nout+1)& (0+255),b
  2369  00138A  0E00               	movlw	0
  2370  00138C  6FBC               	movwf	_nout& (0+255),b
  2371                           
  2372                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2373  00138E  EFDC  F009         	goto	l2950
  2374  001392                     l2948:
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2378  001392  C089  F07A         	movff	vfprintf@fp,vfpfcnvrt@fp
  2379  001396  C08A  F07B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2380  00139A  0E8F               	movlw	low vfprintf@cfmt
  2381  00139C  6F7C               	movwf	vfpfcnvrt@fmt& (0+255),b
  2382  00139E  0E00               	movlw	high vfprintf@cfmt
  2383  0013A0  6F7D               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2384  0013A2  C08D  F07E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2385  0013A6  C08E  F07F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2386  0013AA  ECC3  F004         	call	_vfpfcnvrt	;wreg free
  2387  0013AE  0100               	movlb	0	; () banked
  2388  0013B0  517A               	movf	?_vfpfcnvrt& (0+255),w,b
  2389  0013B2  27BC               	addwf	_nout& (0+255),f,b
  2390  0013B4  517B               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2391  0013B6  23BD               	addwfc	(_nout+1)& (0+255),f,b
  2392  0013B8                     l2950:
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2396  0013B8  C08F  FFF6         	movff	vfprintf@cfmt,tblptrl
  2397  0013BC  C090  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2398  0013C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2399  0013C0  6AF8               	clrf	tblptru,c
  2400  0013C2                     	endif
  2401  0013C2                     	if	0	;tblptru may be non-zero
  2402  0013C2                     	endif
  2403  0013C2  0008               	tblrd		*
  2404  0013C4  50F5               	movf	tablat,w,c
  2405  0013C6  0900               	iorlw	0
  2406  0013C8  A4D8               	btfss	status,2,c
  2407  0013CA  EFE9  F009         	goto	u2271
  2408  0013CE  EFEB  F009         	goto	u2270
  2409  0013D2                     u2271:
  2410  0013D2  EFC9  F009         	goto	l2948
  2411  0013D6                     u2270:
  2412  0013D6                     
  2413                           ; BSR set to: 0
  2414                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2415  0013D6  C0BC  F089         	movff	_nout,?_vfprintf
  2416  0013DA  C0BD  F08A         	movff	_nout+1,?_vfprintf+1
  2417  0013DE                     
  2418                           ; BSR set to: 0
  2419  0013DE  0012               	return		;funcret
  2420  0013E0                     __end_of_vfprintf:
  2421                           	callstack 0
  2422                           
  2423 ;; *************** function _vfpfcnvrt *****************
  2424 ;; Defined at:
  2425 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  2428 ;;		 -> NULL(0), 
  2429 ;;  fmt             2   28[BANK0 ] PTR PTR unsigned char 
  2430 ;;		 -> vfprintf@cfmt(2), 
  2431 ;;  ap              2   30[BANK0 ] PTR PTR void 
  2432 ;;		 -> printf@ap(2), 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  ll              8   32[BANK0 ] long long 
  2435 ;;  llu             8    0        unsigned long long 
  2436 ;;  f               4    0        unsigned long long 
  2437 ;;  vp              3    0        PTR void 
  2438 ;;  ct              3    0        unsigned char [3]
  2439 ;;  cp              3    0        PTR unsigned char 
  2440 ;;  i               2    0        int 
  2441 ;;  done            2    0        int 
  2442 ;;  c               1   40[BANK0 ] unsigned char 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  2   26[BANK0 ] int 
  2445 ;; Registers used:
  2446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2452 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;Total ram usage:       17 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:   10
  2459 ;; This function calls:
  2460 ;;		_ctoa
  2461 ;;		_dtoa
  2462 ;;		_fputc
  2463 ;; This function is called by:
  2464 ;;		_vfprintf
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text3
  2469  000986                     __ptext3:
  2470                           	callstack 0
  2471  000986                     _vfpfcnvrt:
  2472                           	callstack 18
  2473  000986                     
  2474                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2475  000986  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2476  00098A  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2477  00098E  CFDE FFF6          	movff	postinc2,tblptrl
  2478  000992  CFDD FFF7          	movff	postdec2,tblptrh
  2479  000996                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2480  000996  6AF8               	clrf	tblptru,c
  2481  000998                     	endif
  2482  000998                     	if	0	;tblptru may be non-zero
  2483  000998                     	endif
  2484  000998  0008               	tblrd		*
  2485  00099A  50F5               	movf	tablat,w,c
  2486  00099C  0A25               	xorlw	37
  2487  00099E  A4D8               	btfss	status,2,c
  2488  0009A0  EFD4  F004         	goto	u2211
  2489  0009A4  EFD6  F004         	goto	u2210
  2490  0009A8                     u2211:
  2491  0009A8  EFC2  F005         	goto	l2900
  2492  0009AC                     u2210:
  2493  0009AC                     
  2494                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2495  0009AC  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2496  0009B0  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2497  0009B4  2ADE               	incf	postinc2,f,c
  2498  0009B6  0E00               	movlw	0
  2499  0009B8  22DD               	addwfc	postdec2,f,c
  2500  0009BA                     
  2501                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2502  0009BA  0E00               	movlw	0
  2503  0009BC  6E3D               	movwf	(_width+1)^0,c
  2504  0009BE  0E00               	movlw	0
  2505  0009C0  6E3C               	movwf	_width^0,c
  2506  0009C2  C03C  F040         	movff	_width,_flags
  2507  0009C6  C03D  F041         	movff	_width+1,_flags+1
  2508  0009CA                     
  2509                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2510  0009CA  683E               	setf	_prec^0,c
  2511  0009CC  683F               	setf	(_prec+1)^0,c
  2512  0009CE                     
  2513                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2514  0009CE  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2515  0009D2  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2516  0009D6  CFDE FFF6          	movff	postinc2,tblptrl
  2517  0009DA  CFDD FFF7          	movff	postdec2,tblptrh
  2518  0009DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2519  0009DE  6AF8               	clrf	tblptru,c
  2520  0009E0                     	endif
  2521  0009E0                     	if	0	;tblptru may be non-zero
  2522  0009E0                     	endif
  2523  0009E0  0008               	tblrd		*
  2524  0009E2  50F5               	movf	tablat,w,c
  2525  0009E4  0A63               	xorlw	99
  2526  0009E6  A4D8               	btfss	status,2,c
  2527  0009E8  EFF8  F004         	goto	u2221
  2528  0009EC  EFFA  F004         	goto	u2220
  2529  0009F0                     u2221:
  2530  0009F0  EF22  F005         	goto	l2874
  2531  0009F4                     u2220:
  2532  0009F4                     
  2533                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2534  0009F4  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2535  0009F8  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2536  0009FC  2ADE               	incf	postinc2,f,c
  2537  0009FE  0E00               	movlw	0
  2538  000A00  22DD               	addwfc	postdec2,f,c
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2541  000A02  C07E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2542  000A06  C07F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2543  000A0A  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  2544  000A0E  0E02               	movlw	2
  2545  000A10  26DE               	addwf	postinc2,f,c
  2546  000A12  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  2547  000A16  0E00               	movlw	0
  2548  000A18  22DD               	addwfc	postdec2,f,c
  2549  000A1A  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2550  000A1E  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2551  000A22  50DF               	movf	indf2,w,c
  2552  000A24  0100               	movlb	0	; () banked
  2553  000A26  6F88               	movwf	vfpfcnvrt@c& (0+255),b
  2554  000A28                     
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2557  000A28  C07A  F01E         	movff	vfpfcnvrt@fp,ctoa@fp
  2558  000A2C  C07B  F01F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2559  000A30  C088  F020         	movff	vfpfcnvrt@c,ctoa@c
  2560  000A34  EC6E  F008         	call	_ctoa	;wreg free
  2561  000A38  C01E  F07A         	movff	?_ctoa,?_vfpfcnvrt
  2562  000A3C  C01F  F07B         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2563  000A40  EFDE  F005         	goto	l1105
  2564  000A44                     l2874:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2567  000A44  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2568  000A48  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2569  000A4C  CFDE FFF6          	movff	postinc2,tblptrl
  2570  000A50  CFDD FFF7          	movff	postdec2,tblptrh
  2571  000A54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2572  000A54  6AF8               	clrf	tblptru,c
  2573  000A56                     	endif
  2574  000A56                     	if	0	;tblptru may be non-zero
  2575  000A56                     	endif
  2576  000A56  0008               	tblrd		*
  2577  000A58  50F5               	movf	tablat,w,c
  2578  000A5A  0A64               	xorlw	100
  2579  000A5C  B4D8               	btfsc	status,2,c
  2580  000A5E  EF33  F005         	goto	u2231
  2581  000A62  EF35  F005         	goto	u2230
  2582  000A66                     u2231:
  2583  000A66  EF48  F005         	goto	l2878
  2584  000A6A                     u2230:
  2585  000A6A  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2586  000A6E  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2587  000A72  CFDE FFF6          	movff	postinc2,tblptrl
  2588  000A76  CFDD FFF7          	movff	postdec2,tblptrh
  2589  000A7A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2590  000A7A  6AF8               	clrf	tblptru,c
  2591  000A7C                     	endif
  2592  000A7C                     	if	0	;tblptru may be non-zero
  2593  000A7C                     	endif
  2594  000A7C  0008               	tblrd		*
  2595  000A7E  50F5               	movf	tablat,w,c
  2596  000A80  0A69               	xorlw	105
  2597  000A82  A4D8               	btfss	status,2,c
  2598  000A84  EF46  F005         	goto	u2241
  2599  000A88  EF48  F005         	goto	u2240
  2600  000A8C                     u2241:
  2601  000A8C  EF89  F005         	goto	l2884
  2602  000A90                     u2240:
  2603  000A90                     l2878:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2606  000A90  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2607  000A94  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2608  000A98  2ADE               	incf	postinc2,f,c
  2609  000A9A  0E00               	movlw	0
  2610  000A9C  22DD               	addwfc	postdec2,f,c
  2611                           
  2612                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2613  000A9E  C07E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2614  000AA2  C07F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2615  000AA6  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  2616  000AAA  0E02               	movlw	2
  2617  000AAC  26DE               	addwf	postinc2,f,c
  2618  000AAE  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  2619  000AB2  0E00               	movlw	0
  2620  000AB4  22DD               	addwfc	postdec2,f,c
  2621  000AB6  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2622  000ABA  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2623  000ABE  CFDE F080          	movff	postinc2,vfpfcnvrt@ll
  2624  000AC2  CFDD F081          	movff	postdec2,vfpfcnvrt@ll+1
  2625  000AC6  0100               	movlb	0	; () banked
  2626  000AC8  0E00               	movlw	0
  2627  000ACA  BF81               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2628  000ACC  0EFF               	movlw	-1
  2629  000ACE  6F82               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2630  000AD0  6F83               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2631  000AD2  6F84               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2632  000AD4  6F85               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2633  000AD6  6F86               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2634  000AD8  6F87               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2635  000ADA                     
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2638  000ADA  C07A  F030         	movff	vfpfcnvrt@fp,dtoa@fp
  2639  000ADE  C07B  F031         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2640  000AE2  C080  F032         	movff	vfpfcnvrt@ll,dtoa@d
  2641  000AE6  C081  F033         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2642  000AEA  C082  F034         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2643  000AEE  C083  F035         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2644  000AF2  C084  F036         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2645  000AF6  C085  F037         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2646  000AFA  C086  F038         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2647  000AFE  C087  F039         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2648  000B02  EC52  F003         	call	_dtoa	;wreg free
  2649  000B06  C030  F07A         	movff	?_dtoa,?_vfpfcnvrt
  2650  000B0A  C031  F07B         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2651  000B0E  EFDE  F005         	goto	l1105
  2652  000B12                     l2884:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2655  000B12  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2656  000B16  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2657  000B1A  CFDE FFF6          	movff	postinc2,tblptrl
  2658  000B1E  CFDD FFF7          	movff	postdec2,tblptrh
  2659  000B22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2660  000B22  6AF8               	clrf	tblptru,c
  2661  000B24                     	endif
  2662  000B24                     	if	0	;tblptru may be non-zero
  2663  000B24                     	endif
  2664  000B24  0008               	tblrd		*
  2665  000B26  50F5               	movf	tablat,w,c
  2666  000B28  0A25               	xorlw	37
  2667  000B2A  A4D8               	btfss	status,2,c
  2668  000B2C  EF9A  F005         	goto	u2251
  2669  000B30  EF9C  F005         	goto	u2250
  2670  000B34                     u2251:
  2671  000B34  EFB4  F005         	goto	l2894
  2672  000B38                     u2250:
  2673  000B38                     
  2674                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2675  000B38  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2676  000B3C  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2677  000B40  2ADE               	incf	postinc2,f,c
  2678  000B42  0E00               	movlw	0
  2679  000B44  22DD               	addwfc	postdec2,f,c
  2680  000B46                     
  2681                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2682  000B46  0E00               	movlw	0
  2683  000B48  6E16               	movwf	(fputc@c+1)^0,c
  2684  000B4A  0E25               	movlw	37
  2685  000B4C  6E15               	movwf	fputc@c^0,c
  2686  000B4E  C07A  F017         	movff	vfpfcnvrt@fp,fputc@fp
  2687  000B52  C07B  F018         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2688  000B56  EC39  F009         	call	_fputc	;wreg free
  2689  000B5A                     l2890:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2692  000B5A  0E00               	movlw	0
  2693  000B5C  0100               	movlb	0	; () banked
  2694  000B5E  6F7B               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2695  000B60  0E01               	movlw	1
  2696  000B62  6F7A               	movwf	?_vfpfcnvrt& (0+255),b
  2697  000B64  EFDE  F005         	goto	l1105
  2698  000B68                     l2894:
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2701  000B68  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2702  000B6C  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2703  000B70  2ADE               	incf	postinc2,f,c
  2704  000B72  0E00               	movlw	0
  2705  000B74  22DD               	addwfc	postdec2,f,c
  2706  000B76                     
  2707                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2708  000B76  0E00               	movlw	0
  2709  000B78  0100               	movlb	0	; () banked
  2710  000B7A  6F7B               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2711  000B7C  0E00               	movlw	0
  2712  000B7E  6F7A               	movwf	?_vfpfcnvrt& (0+255),b
  2713  000B80  EFDE  F005         	goto	l1105
  2714  000B84                     l2900:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2717  000B84  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2718  000B88  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2719  000B8C  CFDE FFF6          	movff	postinc2,tblptrl
  2720  000B90  CFDD FFF7          	movff	postdec2,tblptrh
  2721  000B94                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2722  000B94  6AF8               	clrf	tblptru,c
  2723  000B96                     	endif
  2724  000B96                     	if	0	;tblptru may be non-zero
  2725  000B96                     	endif
  2726  000B96  0008               	tblrd		*
  2727  000B98  50F5               	movf	tablat,w,c
  2728  000B9A  6E15               	movwf	fputc@c^0,c
  2729  000B9C  6A16               	clrf	(fputc@c+1)^0,c
  2730  000B9E  C07A  F017         	movff	vfpfcnvrt@fp,fputc@fp
  2731  000BA2  C07B  F018         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2732  000BA6  EC39  F009         	call	_fputc	;wreg free
  2733  000BAA                     
  2734                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2735  000BAA  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2736  000BAE  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2737  000BB2  2ADE               	incf	postinc2,f,c
  2738  000BB4  0E00               	movlw	0
  2739  000BB6  22DD               	addwfc	postdec2,f,c
  2740  000BB8  EFAD  F005         	goto	l2890
  2741  000BBC                     l1105:
  2742  000BBC  0012               	return		;funcret
  2743  000BBE                     __end_of_vfpfcnvrt:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function _dtoa *****************
  2747 ;; Defined at:
  2748 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
  2751 ;;		 -> NULL(0), 
  2752 ;;  d               8   49[COMRAM] long long 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  n               8   16[BANK0 ] long long 
  2755 ;;  i               2   24[BANK0 ] int 
  2756 ;;  s               2   14[BANK0 ] int 
  2757 ;;  w               2   12[BANK0 ] int 
  2758 ;;  p               2   10[BANK0 ] int 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  2   47[COMRAM] int 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2768 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;Total ram usage:       36 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    9
  2775 ;; This function calls:
  2776 ;;		___aodiv
  2777 ;;		___aomod
  2778 ;;		_abs
  2779 ;;		_pad
  2780 ;; This function is called by:
  2781 ;;		_vfpfcnvrt
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text4
  2786  0006A4                     __ptext4:
  2787                           	callstack 0
  2788  0006A4                     _dtoa:
  2789                           	callstack 18
  2790  0006A4                     
  2791                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2792  0006A4  C032  F070         	movff	dtoa@d,dtoa@n
  2793  0006A8  C033  F071         	movff	dtoa@d+1,dtoa@n+1
  2794  0006AC  C034  F072         	movff	dtoa@d+2,dtoa@n+2
  2795  0006B0  C035  F073         	movff	dtoa@d+3,dtoa@n+3
  2796  0006B4  C036  F074         	movff	dtoa@d+4,dtoa@n+4
  2797  0006B8  C037  F075         	movff	dtoa@d+5,dtoa@n+5
  2798  0006BC  C038  F076         	movff	dtoa@d+6,dtoa@n+6
  2799  0006C0  C039  F077         	movff	dtoa@d+7,dtoa@n+7
  2800  0006C4                     
  2801                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2802  0006C4  0100               	movlb	0	; () banked
  2803  0006C6  BF77               	btfsc	(dtoa@n+7)& (0+255),7,b
  2804  0006C8  EF68  F003         	goto	u2061
  2805  0006CC  EF6B  F003         	goto	u2060
  2806  0006D0                     u2061:
  2807  0006D0  0E01               	movlw	1
  2808  0006D2  EF6C  F003         	goto	u2070
  2809  0006D6                     u2060:
  2810  0006D6  0E00               	movlw	0
  2811  0006D8                     u2070:
  2812  0006D8  6F6E               	movwf	dtoa@s& (0+255),b
  2813  0006DA  6B6F               	clrf	(dtoa@s+1)& (0+255),b
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2816  0006DC  516E               	movf	dtoa@s& (0+255),w,b
  2817  0006DE  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  2818  0006E0  B4D8               	btfsc	status,2,c
  2819  0006E2  EF75  F003         	goto	u2081
  2820  0006E6  EF77  F003         	goto	u2080
  2821  0006EA                     u2081:
  2822  0006EA  EF87  F003         	goto	l2794
  2823  0006EE                     u2080:
  2824  0006EE                     
  2825                           ; BSR set to: 0
  2826                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2827  0006EE  1F77               	comf	(dtoa@n+7)& (0+255),f,b
  2828  0006F0  1F76               	comf	(dtoa@n+6)& (0+255),f,b
  2829  0006F2  1F75               	comf	(dtoa@n+5)& (0+255),f,b
  2830  0006F4  1F74               	comf	(dtoa@n+4)& (0+255),f,b
  2831  0006F6  1F73               	comf	(dtoa@n+3)& (0+255),f,b
  2832  0006F8  1F72               	comf	(dtoa@n+2)& (0+255),f,b
  2833  0006FA  1F71               	comf	(dtoa@n+1)& (0+255),f,b
  2834  0006FC  6D70               	negf	dtoa@n& (0+255),b
  2835  0006FE  0E00               	movlw	0
  2836  000700  2371               	addwfc	(dtoa@n+1)& (0+255),f,b
  2837  000702  2372               	addwfc	(dtoa@n+2)& (0+255),f,b
  2838  000704  2373               	addwfc	(dtoa@n+3)& (0+255),f,b
  2839  000706  2374               	addwfc	(dtoa@n+4)& (0+255),f,b
  2840  000708  2375               	addwfc	(dtoa@n+5)& (0+255),f,b
  2841  00070A  2376               	addwfc	(dtoa@n+6)& (0+255),f,b
  2842  00070C  2377               	addwfc	(dtoa@n+7)& (0+255),f,b
  2843  00070E                     l2794:
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2847  00070E  BE3F               	btfsc	(_prec+1)^0,7,c
  2848  000710  EF8C  F003         	goto	u2091
  2849  000714  EF8E  F003         	goto	u2090
  2850  000718                     u2091:
  2851  000718  EF8F  F003         	goto	l2798
  2852  00071C                     u2090:
  2853  00071C                     
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2856  00071C  9240               	bcf	_flags^0,1,c
  2857  00071E                     l2798:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2861  00071E  BE3F               	btfsc	(_prec+1)^0,7,c
  2862  000720  EF9C  F003         	goto	u2100
  2863  000724  503F               	movf	(_prec+1)^0,w,c
  2864  000726  E106               	bnz	u2101
  2865  000728  043E               	decf	_prec^0,w,c
  2866  00072A  B0D8               	btfsc	status,0,c
  2867  00072C  EF9A  F003         	goto	u2101
  2868  000730  EF9C  F003         	goto	u2100
  2869  000734                     u2101:
  2870  000734  EFA2  F003         	goto	l1080
  2871  000738                     u2100:
  2872  000738                     
  2873                           ; BSR set to: 0
  2874  000738  0E00               	movlw	0
  2875  00073A  6F6B               	movwf	(dtoa@p+1)& (0+255),b
  2876  00073C  0E01               	movlw	1
  2877  00073E  6F6A               	movwf	dtoa@p& (0+255),b
  2878  000740  EFA6  F003         	goto	l1082
  2879  000744                     l1080:
  2880                           
  2881                           ; BSR set to: 0
  2882  000744  C03E  F06A         	movff	_prec,dtoa@p
  2883  000748  C03F  F06B         	movff	_prec+1,dtoa@p+1
  2884  00074C                     l1082:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2888  00074C  C03C  F06C         	movff	_width,dtoa@w
  2889  000750  C03D  F06D         	movff	_width+1,dtoa@w+1
  2890  000754                     
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2893  000754  516E               	movf	dtoa@s& (0+255),w,b
  2894  000756  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  2895  000758  A4D8               	btfss	status,2,c
  2896  00075A  EFB1  F003         	goto	u2111
  2897  00075E  EFB3  F003         	goto	u2110
  2898  000762                     u2111:
  2899  000762  EFBA  F003         	goto	l2806
  2900  000766                     u2110:
  2901  000766                     
  2902                           ; BSR set to: 0
  2903  000766  A440               	btfss	_flags^0,2,c
  2904  000768  EFB8  F003         	goto	u2121
  2905  00076C  EFBA  F003         	goto	u2120
  2906  000770                     u2121:
  2907  000770  EFBD  F003         	goto	l2808
  2908  000774                     u2120:
  2909  000774                     l2806:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  2913  000774  076C               	decf	dtoa@w& (0+255),f,b
  2914  000776  A0D8               	btfss	status,0,c
  2915  000778  076D               	decf	(dtoa@w+1)& (0+255),f,b
  2916  00077A                     l2808:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2920  00077A  0E00               	movlw	0
  2921  00077C  6F79               	movwf	(dtoa@i+1)& (0+255),b
  2922  00077E  0E1F               	movlw	31
  2923  000780  6F78               	movwf	dtoa@i& (0+255),b
  2924  000782                     
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2927  000782  0E00               	movlw	0
  2928  000784  6FE4               	movwf	(_dbuf+31)& (0+255),b
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2931  000786  EF42  F004         	goto	l2822
  2932  00078A                     l2812:
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  2936  00078A  0778               	decf	dtoa@i& (0+255),f,b
  2937  00078C  A0D8               	btfss	status,0,c
  2938  00078E  0779               	decf	(dtoa@i+1)& (0+255),f,b
  2939  000790                     
  2940                           ; BSR set to: 0
  2941                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2942  000790  0EC5               	movlw	low _dbuf
  2943  000792  2578               	addwf	dtoa@i& (0+255),w,b
  2944  000794  6ED9               	movwf	fsr2l,c
  2945  000796  0E00               	movlw	high _dbuf
  2946  000798  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  2947  00079A  6EDA               	movwf	fsr2h,c
  2948  00079C  C070  F013         	movff	dtoa@n,___aomod@dividend
  2949  0007A0  C071  F014         	movff	dtoa@n+1,___aomod@dividend+1
  2950  0007A4  C072  F015         	movff	dtoa@n+2,___aomod@dividend+2
  2951  0007A8  C073  F016         	movff	dtoa@n+3,___aomod@dividend+3
  2952  0007AC  C074  F017         	movff	dtoa@n+4,___aomod@dividend+4
  2953  0007B0  C075  F018         	movff	dtoa@n+5,___aomod@dividend+5
  2954  0007B4  C076  F019         	movff	dtoa@n+6,___aomod@dividend+6
  2955  0007B8  C077  F01A         	movff	dtoa@n+7,___aomod@dividend+7
  2956  0007BC  0E0A               	movlw	10
  2957  0007BE  6E1B               	movwf	___aomod@divisor^0,c
  2958  0007C0  0E00               	movlw	0
  2959  0007C2  6E1C               	movwf	(___aomod@divisor+1)^0,c
  2960  0007C4  0E00               	movlw	0
  2961  0007C6  6E1D               	movwf	(___aomod@divisor+2)^0,c
  2962  0007C8  0E00               	movlw	0
  2963  0007CA  6E1E               	movwf	(___aomod@divisor+3)^0,c
  2964  0007CC  0E00               	movlw	0
  2965  0007CE  6E1F               	movwf	(___aomod@divisor+4)^0,c
  2966  0007D0  0E00               	movlw	0
  2967  0007D2  6E20               	movwf	(___aomod@divisor+5)^0,c
  2968  0007D4  0E00               	movlw	0
  2969  0007D6  6E21               	movwf	(___aomod@divisor+6)^0,c
  2970  0007D8  0E00               	movlw	0
  2971  0007DA  6E22               	movwf	(___aomod@divisor+7)^0,c
  2972  0007DC  ECA3  F006         	call	___aomod	;wreg free
  2973  0007E0  C013  F060         	movff	?___aomod,??_dtoa
  2974  0007E4  C014  F061         	movff	?___aomod+1,??_dtoa+1
  2975  0007E8  C015  F062         	movff	?___aomod+2,??_dtoa+2
  2976  0007EC  C016  F063         	movff	?___aomod+3,??_dtoa+3
  2977  0007F0  C017  F064         	movff	?___aomod+4,??_dtoa+4
  2978  0007F4  C018  F065         	movff	?___aomod+5,??_dtoa+5
  2979  0007F8  C019  F066         	movff	?___aomod+6,??_dtoa+6
  2980  0007FC  C01A  F067         	movff	?___aomod+7,??_dtoa+7
  2981  000800  C060  F025         	movff	??_dtoa,abs@a
  2982  000804  C062  F026         	movff	??_dtoa+2,abs@a+1
  2983  000808  EC39  F00A         	call	_abs	;wreg free
  2984  00080C  5025               	movf	?_abs^0,w,c
  2985  00080E  0F30               	addlw	48
  2986  000810  6EDF               	movwf	indf2,c
  2987  000812                     
  2988                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2989  000812  0100               	movlb	0	; () banked
  2990  000814  076A               	decf	dtoa@p& (0+255),f,b
  2991  000816  A0D8               	btfss	status,0,c
  2992  000818  076B               	decf	(dtoa@p+1)& (0+255),f,b
  2993  00081A                     
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2996  00081A  076C               	decf	dtoa@w& (0+255),f,b
  2997  00081C  A0D8               	btfss	status,0,c
  2998  00081E  076D               	decf	(dtoa@w+1)& (0+255),f,b
  2999  000820                     
  3000                           ; BSR set to: 0
  3001                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3002  000820  C070  F013         	movff	dtoa@n,___aodiv@dividend
  3003  000824  C071  F014         	movff	dtoa@n+1,___aodiv@dividend+1
  3004  000828  C072  F015         	movff	dtoa@n+2,___aodiv@dividend+2
  3005  00082C  C073  F016         	movff	dtoa@n+3,___aodiv@dividend+3
  3006  000830  C074  F017         	movff	dtoa@n+4,___aodiv@dividend+4
  3007  000834  C075  F018         	movff	dtoa@n+5,___aodiv@dividend+5
  3008  000838  C076  F019         	movff	dtoa@n+6,___aodiv@dividend+6
  3009  00083C  C077  F01A         	movff	dtoa@n+7,___aodiv@dividend+7
  3010  000840  0E0A               	movlw	10
  3011  000842  6E1B               	movwf	___aodiv@divisor^0,c
  3012  000844  0E00               	movlw	0
  3013  000846  6E1C               	movwf	(___aodiv@divisor+1)^0,c
  3014  000848  0E00               	movlw	0
  3015  00084A  6E1D               	movwf	(___aodiv@divisor+2)^0,c
  3016  00084C  0E00               	movlw	0
  3017  00084E  6E1E               	movwf	(___aodiv@divisor+3)^0,c
  3018  000850  0E00               	movlw	0
  3019  000852  6E1F               	movwf	(___aodiv@divisor+4)^0,c
  3020  000854  0E00               	movlw	0
  3021  000856  6E20               	movwf	(___aodiv@divisor+5)^0,c
  3022  000858  0E00               	movlw	0
  3023  00085A  6E21               	movwf	(___aodiv@divisor+6)^0,c
  3024  00085C  0E00               	movlw	0
  3025  00085E  6E22               	movwf	(___aodiv@divisor+7)^0,c
  3026  000860  ECDF  F005         	call	___aodiv	;wreg free
  3027  000864  C013  F070         	movff	?___aodiv,dtoa@n
  3028  000868  C014  F071         	movff	?___aodiv+1,dtoa@n+1
  3029  00086C  C015  F072         	movff	?___aodiv+2,dtoa@n+2
  3030  000870  C016  F073         	movff	?___aodiv+3,dtoa@n+3
  3031  000874  C017  F074         	movff	?___aodiv+4,dtoa@n+4
  3032  000878  C018  F075         	movff	?___aodiv+5,dtoa@n+5
  3033  00087C  C019  F076         	movff	?___aodiv+6,dtoa@n+6
  3034  000880  C01A  F077         	movff	?___aodiv+7,dtoa@n+7
  3035  000884                     l2822:
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3038  000884  0100               	movlb	0	; () banked
  3039  000886  BF79               	btfsc	(dtoa@i+1)& (0+255),7,b
  3040  000888  EF4E  F004         	goto	u2131
  3041  00088C  5179               	movf	(dtoa@i+1)& (0+255),w,b
  3042  00088E  E108               	bnz	u2130
  3043  000890  0578               	decf	dtoa@i& (0+255),w,b
  3044  000892  A0D8               	btfss	status,0,c
  3045  000894  EF4E  F004         	goto	u2131
  3046  000898  EF50  F004         	goto	u2130
  3047  00089C                     u2131:
  3048  00089C  EF80  F004         	goto	l2832
  3049  0008A0                     u2130:
  3050  0008A0                     
  3051                           ; BSR set to: 0
  3052  0008A0  5170               	movf	dtoa@n& (0+255),w,b
  3053  0008A2  1171               	iorwf	(dtoa@n+1)& (0+255),w,b
  3054  0008A4  1172               	iorwf	(dtoa@n+2)& (0+255),w,b
  3055  0008A6  1173               	iorwf	(dtoa@n+3)& (0+255),w,b
  3056  0008A8  1174               	iorwf	(dtoa@n+4)& (0+255),w,b
  3057  0008AA  1175               	iorwf	(dtoa@n+5)& (0+255),w,b
  3058  0008AC  1176               	iorwf	(dtoa@n+6)& (0+255),w,b
  3059  0008AE  1177               	iorwf	(dtoa@n+7)& (0+255),w,b
  3060  0008B0  A4D8               	btfss	status,2,c
  3061  0008B2  EF5D  F004         	goto	u2141
  3062  0008B6  EF5F  F004         	goto	u2140
  3063  0008BA                     u2141:
  3064  0008BA  EFC5  F003         	goto	l2812
  3065  0008BE                     u2140:
  3066  0008BE                     
  3067                           ; BSR set to: 0
  3068  0008BE  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
  3069  0008C0  EF6C  F004         	goto	u2150
  3070  0008C4  516B               	movf	(dtoa@p+1)& (0+255),w,b
  3071  0008C6  E106               	bnz	u2151
  3072  0008C8  056A               	decf	dtoa@p& (0+255),w,b
  3073  0008CA  B0D8               	btfsc	status,0,c
  3074  0008CC  EF6A  F004         	goto	u2151
  3075  0008D0  EF6C  F004         	goto	u2150
  3076  0008D4                     u2151:
  3077  0008D4  EFC5  F003         	goto	l2812
  3078  0008D8                     u2150:
  3079  0008D8                     
  3080                           ; BSR set to: 0
  3081  0008D8  BF6D               	btfsc	(dtoa@w+1)& (0+255),7,b
  3082  0008DA  EF77  F004         	goto	u2161
  3083  0008DE  516D               	movf	(dtoa@w+1)& (0+255),w,b
  3084  0008E0  E108               	bnz	u2160
  3085  0008E2  056C               	decf	dtoa@w& (0+255),w,b
  3086  0008E4  A0D8               	btfss	status,0,c
  3087  0008E6  EF77  F004         	goto	u2161
  3088  0008EA  EF79  F004         	goto	u2160
  3089  0008EE                     u2161:
  3090  0008EE  EF80  F004         	goto	l2832
  3091  0008F2                     u2160:
  3092  0008F2                     
  3093                           ; BSR set to: 0
  3094  0008F2  B240               	btfsc	_flags^0,1,c
  3095  0008F4  EF7E  F004         	goto	u2171
  3096  0008F8  EF80  F004         	goto	u2170
  3097  0008FC                     u2171:
  3098  0008FC  EFC5  F003         	goto	l2812
  3099  000900                     u2170:
  3100  000900                     l2832:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3104  000900  516E               	movf	dtoa@s& (0+255),w,b
  3105  000902  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  3106  000904  A4D8               	btfss	status,2,c
  3107  000906  EF87  F004         	goto	u2181
  3108  00090A  EF89  F004         	goto	u2180
  3109  00090E                     u2181:
  3110  00090E  EF90  F004         	goto	l2836
  3111  000912                     u2180:
  3112  000912                     
  3113                           ; BSR set to: 0
  3114  000912  A440               	btfss	_flags^0,2,c
  3115  000914  EF8E  F004         	goto	u2191
  3116  000918  EF90  F004         	goto	u2190
  3117  00091C                     u2191:
  3118  00091C  EFAE  F004         	goto	l2846
  3119  000920                     u2190:
  3120  000920                     l2836:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  3124  000920  0778               	decf	dtoa@i& (0+255),f,b
  3125  000922  A0D8               	btfss	status,0,c
  3126  000924  0779               	decf	(dtoa@i+1)& (0+255),f,b
  3127  000926                     
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3130  000926  516E               	movf	dtoa@s& (0+255),w,b
  3131  000928  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  3132  00092A  A4D8               	btfss	status,2,c
  3133  00092C  EF9A  F004         	goto	u2201
  3134  000930  EF9C  F004         	goto	u2200
  3135  000934                     u2201:
  3136  000934  EFA2  F004         	goto	l2842
  3137  000938                     u2200:
  3138  000938                     
  3139                           ; BSR set to: 0
  3140  000938  0E00               	movlw	0
  3141  00093A  6F69               	movwf	(_dtoa$1405+1)& (0+255),b
  3142  00093C  0E2B               	movlw	43
  3143  00093E  6F68               	movwf	_dtoa$1405& (0+255),b
  3144  000940  EFA6  F004         	goto	l2844
  3145  000944                     l2842:
  3146                           
  3147                           ; BSR set to: 0
  3148  000944  0E00               	movlw	0
  3149  000946  6F69               	movwf	(_dtoa$1405+1)& (0+255),b
  3150  000948  0E2D               	movlw	45
  3151  00094A  6F68               	movwf	_dtoa$1405& (0+255),b
  3152  00094C                     l2844:
  3153                           
  3154                           ; BSR set to: 0
  3155  00094C  0EC5               	movlw	low _dbuf
  3156  00094E  2578               	addwf	dtoa@i& (0+255),w,b
  3157  000950  6ED9               	movwf	fsr2l,c
  3158  000952  0E00               	movlw	high _dbuf
  3159  000954  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  3160  000956  6EDA               	movwf	fsr2h,c
  3161  000958  C068  FFDF         	movff	_dtoa$1405,indf2
  3162  00095C                     l2846:
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3166  00095C  C030  F025         	movff	dtoa@fp,pad@fp
  3167  000960  C031  F026         	movff	dtoa@fp+1,pad@fp+1
  3168  000964  0EC5               	movlw	low _dbuf
  3169  000966  2578               	addwf	dtoa@i& (0+255),w,b
  3170  000968  6E27               	movwf	pad@buf^0,c
  3171  00096A  0E00               	movlw	high _dbuf
  3172  00096C  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  3173  00096E  6E28               	movwf	(pad@buf+1)^0,c
  3174  000970  C06C  F029         	movff	dtoa@w,pad@p
  3175  000974  C06D  F02A         	movff	dtoa@w+1,pad@p+1
  3176  000978  ECD8  F008         	call	_pad	;wreg free
  3177  00097C  C025  F030         	movff	?_pad,?_dtoa
  3178  000980  C026  F031         	movff	?_pad+1,?_dtoa+1
  3179  000984  0012               	return		;funcret
  3180  000986                     __end_of_dtoa:
  3181                           	callstack 0
  3182                           
  3183 ;; *************** function _pad *****************
  3184 ;; Defined at:
  3185 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  3188 ;;		 -> NULL(0), 
  3189 ;;  buf             2   38[COMRAM] PTR unsigned char 
  3190 ;;		 -> dbuf(32), 
  3191 ;;  p               2   40[COMRAM] int 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  w               2   45[COMRAM] int 
  3194 ;;  i               2   43[COMRAM] int 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  2   36[COMRAM] int 
  3197 ;; Registers used:
  3198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3204 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;Total ram usage:       11 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    8
  3211 ;; This function calls:
  3212 ;;		_fputc
  3213 ;;		_fputs
  3214 ;;		_strlen
  3215 ;; This function is called by:
  3216 ;;		_dtoa
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text5
  3221  0011B0                     __ptext5:
  3222                           	callstack 0
  3223  0011B0                     _pad:
  3224                           	callstack 18
  3225  0011B0                     
  3226                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3227  0011B0  A040               	btfss	_flags^0,0,c
  3228  0011B2  EFDD  F008         	goto	u1961
  3229  0011B6  EFDF  F008         	goto	u1960
  3230  0011BA                     u1961:
  3231  0011BA  EFE9  F008         	goto	l2738
  3232  0011BE                     u1960:
  3233  0011BE                     
  3234                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3235  0011BE  C027  F01E         	movff	pad@buf,fputs@s
  3236  0011C2  C028  F01F         	movff	pad@buf+1,fputs@s+1
  3237  0011C6  C025  F020         	movff	pad@fp,fputs@fp
  3238  0011CA  C026  F021         	movff	pad@fp+1,fputs@fp+1
  3239  0011CE  EC17  F00A         	call	_fputs	;wreg free
  3240  0011D2                     l2738:
  3241                           
  3242                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3243  0011D2  BE2A               	btfsc	(pad@p+1)^0,7,c
  3244  0011D4  EFEE  F008         	goto	u1971
  3245  0011D8  EFF0  F008         	goto	u1970
  3246  0011DC                     u1971:
  3247  0011DC  EFF6  F008         	goto	l2742
  3248  0011E0                     u1970:
  3249  0011E0  C029  F02E         	movff	pad@p,pad@w
  3250  0011E4  C02A  F02F         	movff	pad@p+1,pad@w+1
  3251  0011E8  EFFA  F008         	goto	l1053
  3252  0011EC                     l2742:
  3253  0011EC  0E00               	movlw	0
  3254  0011EE  6E2F               	movwf	(pad@w+1)^0,c
  3255  0011F0  0E00               	movlw	0
  3256  0011F2  6E2E               	movwf	pad@w^0,c
  3257  0011F4                     l1053:
  3258                           
  3259                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3260  0011F4  0E00               	movlw	0
  3261  0011F6  6E2D               	movwf	(pad@i+1)^0,c
  3262  0011F8  0E00               	movlw	0
  3263  0011FA  6E2C               	movwf	pad@i^0,c
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3266  0011FC  EF0C  F009         	goto	l2748
  3267  001200                     l2744:
  3268                           
  3269                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3270  001200  0E00               	movlw	0
  3271  001202  6E16               	movwf	(fputc@c+1)^0,c
  3272  001204  0E20               	movlw	32
  3273  001206  6E15               	movwf	fputc@c^0,c
  3274  001208  C025  F017         	movff	pad@fp,fputc@fp
  3275  00120C  C026  F018         	movff	pad@fp+1,fputc@fp+1
  3276  001210  EC39  F009         	call	_fputc	;wreg free
  3277  001214                     
  3278                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3279  001214  4A2C               	infsnz	pad@i^0,f,c
  3280  001216  2A2D               	incf	(pad@i+1)^0,f,c
  3281  001218                     l2748:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3284  001218  502E               	movf	pad@w^0,w,c
  3285  00121A  5C2C               	subwf	pad@i^0,w,c
  3286  00121C  502D               	movf	(pad@i+1)^0,w,c
  3287  00121E  0A80               	xorlw	128
  3288  001220  6E2B               	movwf	??_pad^0,c
  3289  001222  502F               	movf	(pad@w+1)^0,w,c
  3290  001224  0A80               	xorlw	128
  3291  001226  582B               	subwfb	??_pad^0,w,c
  3292  001228  A0D8               	btfss	status,0,c
  3293  00122A  EF19  F009         	goto	u1981
  3294  00122E  EF1B  F009         	goto	u1980
  3295  001232                     u1981:
  3296  001232  EF00  F009         	goto	l2744
  3297  001236                     u1980:
  3298  001236                     
  3299                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3300  001236  B040               	btfsc	_flags^0,0,c
  3301  001238  EF20  F009         	goto	u1991
  3302  00123C  EF22  F009         	goto	u1990
  3303  001240                     u1991:
  3304  001240  EF2C  F009         	goto	l2752
  3305  001244                     u1990:
  3306  001244                     
  3307                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3308  001244  C027  F01E         	movff	pad@buf,fputs@s
  3309  001248  C028  F01F         	movff	pad@buf+1,fputs@s+1
  3310  00124C  C025  F020         	movff	pad@fp,fputs@fp
  3311  001250  C026  F021         	movff	pad@fp+1,fputs@fp+1
  3312  001254  EC17  F00A         	call	_fputs	;wreg free
  3313  001258                     l2752:
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3316  001258  C027  F013         	movff	pad@buf,strlen@s
  3317  00125C  C028  F014         	movff	pad@buf+1,strlen@s+1
  3318  001260  EC78  F00A         	call	_strlen	;wreg free
  3319  001264  502E               	movf	pad@w^0,w,c
  3320  001266  2413               	addwf	?_strlen^0,w,c
  3321  001268  6E25               	movwf	?_pad^0,c
  3322  00126A  502F               	movf	(pad@w+1)^0,w,c
  3323  00126C  2014               	addwfc	(?_strlen+1)^0,w,c
  3324  00126E  6E26               	movwf	(?_pad+1)^0,c
  3325  001270  0012               	return		;funcret
  3326  001272                     __end_of_pad:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function _strlen *****************
  3330 ;; Defined at:
  3331 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  s               2   18[COMRAM] PTR const unsigned char 
  3334 ;;		 -> dbuf(32), 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  a               2   20[COMRAM] PTR const unsigned char 
  3337 ;;		 -> dbuf(32), 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  2   18[COMRAM] unsigned int 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;Total ram usage:        4 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    4
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_pad
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text6
  3362  0014F0                     __ptext6:
  3363                           	callstack 0
  3364  0014F0                     _strlen:
  3365                           	callstack 21
  3366  0014F0  C013  F015         	movff	strlen@s,strlen@a
  3367  0014F4  C014  F016         	movff	strlen@s+1,strlen@a+1
  3368  0014F8  EF80  F00A         	goto	l2648
  3369  0014FC                     l2646:
  3370  0014FC  4A13               	infsnz	strlen@s^0,f,c
  3371  0014FE  2A14               	incf	(strlen@s+1)^0,f,c
  3372  001500                     l2648:
  3373  001500  C013  FFD9         	movff	strlen@s,fsr2l
  3374  001504  C014  FFDA         	movff	strlen@s+1,fsr2h
  3375  001508  50DF               	movf	indf2,w,c
  3376  00150A  A4D8               	btfss	status,2,c
  3377  00150C  EF8A  F00A         	goto	u1821
  3378  001510  EF8C  F00A         	goto	u1820
  3379  001514                     u1821:
  3380  001514  EF7E  F00A         	goto	l2646
  3381  001518                     u1820:
  3382  001518  5015               	movf	strlen@a^0,w,c
  3383  00151A  5C13               	subwf	strlen@s^0,w,c
  3384  00151C  6E13               	movwf	?_strlen^0,c
  3385  00151E  5016               	movf	(strlen@a+1)^0,w,c
  3386  001520  5814               	subwfb	(strlen@s+1)^0,w,c
  3387  001522  6E14               	movwf	(?_strlen+1)^0,c
  3388  001524  0012               	return		;funcret
  3389  001526                     __end_of_strlen:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _fputs *****************
  3393 ;; Defined at:
  3394 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  s               2   29[COMRAM] PTR const unsigned char 
  3397 ;;		 -> dbuf(32), 
  3398 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3399 ;;		 -> NULL(0), 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  i               2   34[COMRAM] int 
  3402 ;;  c               1   33[COMRAM] unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  2   29[COMRAM] int 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3412 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;Total ram usage:        7 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    7
  3419 ;; This function calls:
  3420 ;;		_fputc
  3421 ;; This function is called by:
  3422 ;;		_pad
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text7
  3427  00142E                     __ptext7:
  3428                           	callstack 0
  3429  00142E                     _fputs:
  3430                           	callstack 18
  3431  00142E  0E00               	movlw	0
  3432  001430  6E24               	movwf	(fputs@i+1)^0,c
  3433  001432  0E00               	movlw	0
  3434  001434  6E23               	movwf	fputs@i^0,c
  3435  001436  EF28  F00A         	goto	l2642
  3436  00143A                     l2638:
  3437  00143A  C022  F015         	movff	fputs@c,fputc@c
  3438  00143E  6A16               	clrf	(fputc@c+1)^0,c
  3439  001440  C020  F017         	movff	fputs@fp,fputc@fp
  3440  001444  C021  F018         	movff	fputs@fp+1,fputc@fp+1
  3441  001448  EC39  F009         	call	_fputc	;wreg free
  3442  00144C  4A23               	infsnz	fputs@i^0,f,c
  3443  00144E  2A24               	incf	(fputs@i+1)^0,f,c
  3444  001450                     l2642:
  3445  001450  5023               	movf	fputs@i^0,w,c
  3446  001452  241E               	addwf	fputs@s^0,w,c
  3447  001454  6ED9               	movwf	fsr2l,c
  3448  001456  5024               	movf	(fputs@i+1)^0,w,c
  3449  001458  201F               	addwfc	(fputs@s+1)^0,w,c
  3450  00145A  6EDA               	movwf	fsr2h,c
  3451  00145C  50DF               	movf	indf2,w,c
  3452  00145E  6E22               	movwf	fputs@c^0,c
  3453  001460  5022               	movf	fputs@c^0,w,c
  3454  001462  A4D8               	btfss	status,2,c
  3455  001464  EF36  F00A         	goto	u1811
  3456  001468  EF38  F00A         	goto	u1810
  3457  00146C                     u1811:
  3458  00146C  EF1D  F00A         	goto	l2638
  3459  001470                     u1810:
  3460  001470  0012               	return		;funcret
  3461  001472                     __end_of_fputs:
  3462                           	callstack 0
  3463                           
  3464 ;; *************** function _abs *****************
  3465 ;; Defined at:
  3466 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  a               2   36[COMRAM] int 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  2   36[COMRAM] int 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;Total ram usage:        4 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    4
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_dtoa
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text8
  3495  001472                     __ptext8:
  3496                           	callstack 0
  3497  001472                     _abs:
  3498                           	callstack 22
  3499  001472  BE26               	btfsc	(abs@a+1)^0,7,c
  3500  001474  EF46  F00A         	goto	u2000
  3501  001478  5026               	movf	(abs@a+1)^0,w,c
  3502  00147A  E106               	bnz	u2001
  3503  00147C  0425               	decf	abs@a^0,w,c
  3504  00147E  B0D8               	btfsc	status,0,c
  3505  001480  EF44  F00A         	goto	u2001
  3506  001484  EF46  F00A         	goto	u2000
  3507  001488                     u2001:
  3508  001488  EF54  F00A         	goto	l1119
  3509  00148C                     u2000:
  3510  00148C  C025  F027         	movff	abs@a,??_abs
  3511  001490  C026  F028         	movff	abs@a+1,??_abs+1
  3512  001494  1E27               	comf	??_abs^0,f,c
  3513  001496  1E28               	comf	(??_abs+1)^0,f,c
  3514  001498  4A27               	infsnz	??_abs^0,f,c
  3515  00149A  2A28               	incf	(??_abs+1)^0,f,c
  3516  00149C  C027  F025         	movff	??_abs,?_abs
  3517  0014A0  C028  F026         	movff	??_abs+1,?_abs+1
  3518  0014A4  EF58  F00A         	goto	l1122
  3519  0014A8                     l1119:
  3520  0014A8  C025  F025         	movff	abs@a,?_abs
  3521  0014AC  C026  F026         	movff	abs@a+1,?_abs+1
  3522  0014B0                     l1122:
  3523  0014B0  0012               	return		;funcret
  3524  0014B2                     __end_of_abs:
  3525                           	callstack 0
  3526                           
  3527 ;; *************** function ___aomod *****************
  3528 ;; Defined at:
  3529 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  dividend        8   18[COMRAM] long long 
  3532 ;;  divisor         8   26[COMRAM] long long 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  sign            1   35[COMRAM] unsigned char 
  3535 ;;  counter         1   34[COMRAM] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  8   18[COMRAM] long long 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3545 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;Total ram usage:       18 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    4
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_dtoa
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text9
  3560  000D46                     __ptext9:
  3561                           	callstack 0
  3562  000D46                     ___aomod:
  3563                           	callstack 22
  3564  000D46  0E00               	movlw	0
  3565  000D48  6E24               	movwf	___aomod@sign^0,c
  3566  000D4A  BE1A               	btfsc	(___aomod@dividend+7)^0,7,c
  3567  000D4C  EFAC  F006         	goto	u1900
  3568  000D50  EFAA  F006         	goto	u1901
  3569  000D54                     u1901:
  3570  000D54  EFBE  F006         	goto	l2706
  3571  000D58                     u1900:
  3572  000D58  1E1A               	comf	(___aomod@dividend+7)^0,f,c
  3573  000D5A  1E19               	comf	(___aomod@dividend+6)^0,f,c
  3574  000D5C  1E18               	comf	(___aomod@dividend+5)^0,f,c
  3575  000D5E  1E17               	comf	(___aomod@dividend+4)^0,f,c
  3576  000D60  1E16               	comf	(___aomod@dividend+3)^0,f,c
  3577  000D62  1E15               	comf	(___aomod@dividend+2)^0,f,c
  3578  000D64  1E14               	comf	(___aomod@dividend+1)^0,f,c
  3579  000D66  6C13               	negf	___aomod@dividend^0,c
  3580  000D68  0E00               	movlw	0
  3581  000D6A  2214               	addwfc	(___aomod@dividend+1)^0,f,c
  3582  000D6C  2215               	addwfc	(___aomod@dividend+2)^0,f,c
  3583  000D6E  2216               	addwfc	(___aomod@dividend+3)^0,f,c
  3584  000D70  2217               	addwfc	(___aomod@dividend+4)^0,f,c
  3585  000D72  2218               	addwfc	(___aomod@dividend+5)^0,f,c
  3586  000D74  2219               	addwfc	(___aomod@dividend+6)^0,f,c
  3587  000D76  221A               	addwfc	(___aomod@dividend+7)^0,f,c
  3588  000D78  0E01               	movlw	1
  3589  000D7A  6E24               	movwf	___aomod@sign^0,c
  3590  000D7C                     l2706:
  3591  000D7C  BE22               	btfsc	(___aomod@divisor+7)^0,7,c
  3592  000D7E  EFC5  F006         	goto	u1910
  3593  000D82  EFC3  F006         	goto	u1911
  3594  000D86                     u1911:
  3595  000D86  EFD5  F006         	goto	l2710
  3596  000D8A                     u1910:
  3597  000D8A  1E22               	comf	(___aomod@divisor+7)^0,f,c
  3598  000D8C  1E21               	comf	(___aomod@divisor+6)^0,f,c
  3599  000D8E  1E20               	comf	(___aomod@divisor+5)^0,f,c
  3600  000D90  1E1F               	comf	(___aomod@divisor+4)^0,f,c
  3601  000D92  1E1E               	comf	(___aomod@divisor+3)^0,f,c
  3602  000D94  1E1D               	comf	(___aomod@divisor+2)^0,f,c
  3603  000D96  1E1C               	comf	(___aomod@divisor+1)^0,f,c
  3604  000D98  6C1B               	negf	___aomod@divisor^0,c
  3605  000D9A  0E00               	movlw	0
  3606  000D9C  221C               	addwfc	(___aomod@divisor+1)^0,f,c
  3607  000D9E  221D               	addwfc	(___aomod@divisor+2)^0,f,c
  3608  000DA0  221E               	addwfc	(___aomod@divisor+3)^0,f,c
  3609  000DA2  221F               	addwfc	(___aomod@divisor+4)^0,f,c
  3610  000DA4  2220               	addwfc	(___aomod@divisor+5)^0,f,c
  3611  000DA6  2221               	addwfc	(___aomod@divisor+6)^0,f,c
  3612  000DA8  2222               	addwfc	(___aomod@divisor+7)^0,f,c
  3613  000DAA                     l2710:
  3614  000DAA  501B               	movf	___aomod@divisor^0,w,c
  3615  000DAC  101C               	iorwf	(___aomod@divisor+1)^0,w,c
  3616  000DAE  101D               	iorwf	(___aomod@divisor+2)^0,w,c
  3617  000DB0  101E               	iorwf	(___aomod@divisor+3)^0,w,c
  3618  000DB2  101F               	iorwf	(___aomod@divisor+4)^0,w,c
  3619  000DB4  1020               	iorwf	(___aomod@divisor+5)^0,w,c
  3620  000DB6  1021               	iorwf	(___aomod@divisor+6)^0,w,c
  3621  000DB8  1022               	iorwf	(___aomod@divisor+7)^0,w,c
  3622  000DBA  B4D8               	btfsc	status,2,c
  3623  000DBC  EFE2  F006         	goto	u1921
  3624  000DC0  EFE4  F006         	goto	u1920
  3625  000DC4                     u1921:
  3626  000DC4  EF2C  F007         	goto	l2726
  3627  000DC8                     u1920:
  3628  000DC8  0E01               	movlw	1
  3629  000DCA  6E23               	movwf	___aomod@counter^0,c
  3630  000DCC  EFF2  F006         	goto	l2716
  3631  000DD0                     l2714:
  3632  000DD0  90D8               	bcf	status,0,c
  3633  000DD2  361B               	rlcf	___aomod@divisor^0,f,c
  3634  000DD4  361C               	rlcf	(___aomod@divisor+1)^0,f,c
  3635  000DD6  361D               	rlcf	(___aomod@divisor+2)^0,f,c
  3636  000DD8  361E               	rlcf	(___aomod@divisor+3)^0,f,c
  3637  000DDA  361F               	rlcf	(___aomod@divisor+4)^0,f,c
  3638  000DDC  3620               	rlcf	(___aomod@divisor+5)^0,f,c
  3639  000DDE  3621               	rlcf	(___aomod@divisor+6)^0,f,c
  3640  000DE0  3622               	rlcf	(___aomod@divisor+7)^0,f,c
  3641  000DE2  2A23               	incf	___aomod@counter^0,f,c
  3642  000DE4                     l2716:
  3643  000DE4  AE22               	btfss	(___aomod@divisor+7)^0,7,c
  3644  000DE6  EFF7  F006         	goto	u1931
  3645  000DEA  EFF9  F006         	goto	u1930
  3646  000DEE                     u1931:
  3647  000DEE  EFE8  F006         	goto	l2714
  3648  000DF2                     u1930:
  3649  000DF2                     l2718:
  3650  000DF2  501B               	movf	___aomod@divisor^0,w,c
  3651  000DF4  5C13               	subwf	___aomod@dividend^0,w,c
  3652  000DF6  501C               	movf	(___aomod@divisor+1)^0,w,c
  3653  000DF8  5814               	subwfb	(___aomod@dividend+1)^0,w,c
  3654  000DFA  501D               	movf	(___aomod@divisor+2)^0,w,c
  3655  000DFC  5815               	subwfb	(___aomod@dividend+2)^0,w,c
  3656  000DFE  501E               	movf	(___aomod@divisor+3)^0,w,c
  3657  000E00  5816               	subwfb	(___aomod@dividend+3)^0,w,c
  3658  000E02  501F               	movf	(___aomod@divisor+4)^0,w,c
  3659  000E04  5817               	subwfb	(___aomod@dividend+4)^0,w,c
  3660  000E06  5020               	movf	(___aomod@divisor+5)^0,w,c
  3661  000E08  5818               	subwfb	(___aomod@dividend+5)^0,w,c
  3662  000E0A  5021               	movf	(___aomod@divisor+6)^0,w,c
  3663  000E0C  5819               	subwfb	(___aomod@dividend+6)^0,w,c
  3664  000E0E  5022               	movf	(___aomod@divisor+7)^0,w,c
  3665  000E10  581A               	subwfb	(___aomod@dividend+7)^0,w,c
  3666  000E12  A0D8               	btfss	status,0,c
  3667  000E14  EF0E  F007         	goto	u1941
  3668  000E18  EF10  F007         	goto	u1940
  3669  000E1C                     u1941:
  3670  000E1C  EF20  F007         	goto	l2722
  3671  000E20                     u1940:
  3672  000E20  501B               	movf	___aomod@divisor^0,w,c
  3673  000E22  5E13               	subwf	___aomod@dividend^0,f,c
  3674  000E24  501C               	movf	(___aomod@divisor+1)^0,w,c
  3675  000E26  5A14               	subwfb	(___aomod@dividend+1)^0,f,c
  3676  000E28  501D               	movf	(___aomod@divisor+2)^0,w,c
  3677  000E2A  5A15               	subwfb	(___aomod@dividend+2)^0,f,c
  3678  000E2C  501E               	movf	(___aomod@divisor+3)^0,w,c
  3679  000E2E  5A16               	subwfb	(___aomod@dividend+3)^0,f,c
  3680  000E30  501F               	movf	(___aomod@divisor+4)^0,w,c
  3681  000E32  5A17               	subwfb	(___aomod@dividend+4)^0,f,c
  3682  000E34  5020               	movf	(___aomod@divisor+5)^0,w,c
  3683  000E36  5A18               	subwfb	(___aomod@dividend+5)^0,f,c
  3684  000E38  5021               	movf	(___aomod@divisor+6)^0,w,c
  3685  000E3A  5A19               	subwfb	(___aomod@dividend+6)^0,f,c
  3686  000E3C  5022               	movf	(___aomod@divisor+7)^0,w,c
  3687  000E3E  5A1A               	subwfb	(___aomod@dividend+7)^0,f,c
  3688  000E40                     l2722:
  3689  000E40  90D8               	bcf	status,0,c
  3690  000E42  3222               	rrcf	(___aomod@divisor+7)^0,f,c
  3691  000E44  3221               	rrcf	(___aomod@divisor+6)^0,f,c
  3692  000E46  3220               	rrcf	(___aomod@divisor+5)^0,f,c
  3693  000E48  321F               	rrcf	(___aomod@divisor+4)^0,f,c
  3694  000E4A  321E               	rrcf	(___aomod@divisor+3)^0,f,c
  3695  000E4C  321D               	rrcf	(___aomod@divisor+2)^0,f,c
  3696  000E4E  321C               	rrcf	(___aomod@divisor+1)^0,f,c
  3697  000E50  321B               	rrcf	___aomod@divisor^0,f,c
  3698  000E52  2E23               	decfsz	___aomod@counter^0,f,c
  3699  000E54  EFF9  F006         	goto	l2718
  3700  000E58                     l2726:
  3701  000E58  5024               	movf	___aomod@sign^0,w,c
  3702  000E5A  B4D8               	btfsc	status,2,c
  3703  000E5C  EF32  F007         	goto	u1951
  3704  000E60  EF34  F007         	goto	u1950
  3705  000E64                     u1951:
  3706  000E64  EF44  F007         	goto	l2730
  3707  000E68                     u1950:
  3708  000E68  1E1A               	comf	(___aomod@dividend+7)^0,f,c
  3709  000E6A  1E19               	comf	(___aomod@dividend+6)^0,f,c
  3710  000E6C  1E18               	comf	(___aomod@dividend+5)^0,f,c
  3711  000E6E  1E17               	comf	(___aomod@dividend+4)^0,f,c
  3712  000E70  1E16               	comf	(___aomod@dividend+3)^0,f,c
  3713  000E72  1E15               	comf	(___aomod@dividend+2)^0,f,c
  3714  000E74  1E14               	comf	(___aomod@dividend+1)^0,f,c
  3715  000E76  6C13               	negf	___aomod@dividend^0,c
  3716  000E78  0E00               	movlw	0
  3717  000E7A  2214               	addwfc	(___aomod@dividend+1)^0,f,c
  3718  000E7C  2215               	addwfc	(___aomod@dividend+2)^0,f,c
  3719  000E7E  2216               	addwfc	(___aomod@dividend+3)^0,f,c
  3720  000E80  2217               	addwfc	(___aomod@dividend+4)^0,f,c
  3721  000E82  2218               	addwfc	(___aomod@dividend+5)^0,f,c
  3722  000E84  2219               	addwfc	(___aomod@dividend+6)^0,f,c
  3723  000E86  221A               	addwfc	(___aomod@dividend+7)^0,f,c
  3724  000E88                     l2730:
  3725  000E88  C013  F013         	movff	___aomod@dividend,?___aomod
  3726  000E8C  C014  F014         	movff	___aomod@dividend+1,?___aomod+1
  3727  000E90  C015  F015         	movff	___aomod@dividend+2,?___aomod+2
  3728  000E94  C016  F016         	movff	___aomod@dividend+3,?___aomod+3
  3729  000E98  C017  F017         	movff	___aomod@dividend+4,?___aomod+4
  3730  000E9C  C018  F018         	movff	___aomod@dividend+5,?___aomod+5
  3731  000EA0  C019  F019         	movff	___aomod@dividend+6,?___aomod+6
  3732  000EA4  C01A  F01A         	movff	___aomod@dividend+7,?___aomod+7
  3733  000EA8  0012               	return		;funcret
  3734  000EAA                     __end_of___aomod:
  3735                           	callstack 0
  3736                           
  3737 ;; *************** function ___aodiv *****************
  3738 ;; Defined at:
  3739 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  dividend        8   18[COMRAM] long long 
  3742 ;;  divisor         8   26[COMRAM] long long 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  quotient        8   36[COMRAM] long long 
  3745 ;;  sign            1   35[COMRAM] unsigned char 
  3746 ;;  counter         1   34[COMRAM] unsigned char 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  8   18[COMRAM] long long 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3756 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;Total ram usage:       26 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    4
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_dtoa
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text10
  3771  000BBE                     __ptext10:
  3772                           	callstack 0
  3773  000BBE                     ___aodiv:
  3774                           	callstack 22
  3775  000BBE  0E00               	movlw	0
  3776  000BC0  6E24               	movwf	___aodiv@sign^0,c
  3777  000BC2  BE22               	btfsc	(___aodiv@divisor+7)^0,7,c
  3778  000BC4  EFE8  F005         	goto	u1830
  3779  000BC8  EFE6  F005         	goto	u1831
  3780  000BCC                     u1831:
  3781  000BCC  EFFA  F005         	goto	l2662
  3782  000BD0                     u1830:
  3783  000BD0  1E22               	comf	(___aodiv@divisor+7)^0,f,c
  3784  000BD2  1E21               	comf	(___aodiv@divisor+6)^0,f,c
  3785  000BD4  1E20               	comf	(___aodiv@divisor+5)^0,f,c
  3786  000BD6  1E1F               	comf	(___aodiv@divisor+4)^0,f,c
  3787  000BD8  1E1E               	comf	(___aodiv@divisor+3)^0,f,c
  3788  000BDA  1E1D               	comf	(___aodiv@divisor+2)^0,f,c
  3789  000BDC  1E1C               	comf	(___aodiv@divisor+1)^0,f,c
  3790  000BDE  6C1B               	negf	___aodiv@divisor^0,c
  3791  000BE0  0E00               	movlw	0
  3792  000BE2  221C               	addwfc	(___aodiv@divisor+1)^0,f,c
  3793  000BE4  221D               	addwfc	(___aodiv@divisor+2)^0,f,c
  3794  000BE6  221E               	addwfc	(___aodiv@divisor+3)^0,f,c
  3795  000BE8  221F               	addwfc	(___aodiv@divisor+4)^0,f,c
  3796  000BEA  2220               	addwfc	(___aodiv@divisor+5)^0,f,c
  3797  000BEC  2221               	addwfc	(___aodiv@divisor+6)^0,f,c
  3798  000BEE  2222               	addwfc	(___aodiv@divisor+7)^0,f,c
  3799  000BF0  0E01               	movlw	1
  3800  000BF2  6E24               	movwf	___aodiv@sign^0,c
  3801  000BF4                     l2662:
  3802  000BF4  BE1A               	btfsc	(___aodiv@dividend+7)^0,7,c
  3803  000BF6  EF01  F006         	goto	u1840
  3804  000BFA  EFFF  F005         	goto	u1841
  3805  000BFE                     u1841:
  3806  000BFE  EF13  F006         	goto	l2668
  3807  000C02                     u1840:
  3808  000C02  1E1A               	comf	(___aodiv@dividend+7)^0,f,c
  3809  000C04  1E19               	comf	(___aodiv@dividend+6)^0,f,c
  3810  000C06  1E18               	comf	(___aodiv@dividend+5)^0,f,c
  3811  000C08  1E17               	comf	(___aodiv@dividend+4)^0,f,c
  3812  000C0A  1E16               	comf	(___aodiv@dividend+3)^0,f,c
  3813  000C0C  1E15               	comf	(___aodiv@dividend+2)^0,f,c
  3814  000C0E  1E14               	comf	(___aodiv@dividend+1)^0,f,c
  3815  000C10  6C13               	negf	___aodiv@dividend^0,c
  3816  000C12  0E00               	movlw	0
  3817  000C14  2214               	addwfc	(___aodiv@dividend+1)^0,f,c
  3818  000C16  2215               	addwfc	(___aodiv@dividend+2)^0,f,c
  3819  000C18  2216               	addwfc	(___aodiv@dividend+3)^0,f,c
  3820  000C1A  2217               	addwfc	(___aodiv@dividend+4)^0,f,c
  3821  000C1C  2218               	addwfc	(___aodiv@dividend+5)^0,f,c
  3822  000C1E  2219               	addwfc	(___aodiv@dividend+6)^0,f,c
  3823  000C20  221A               	addwfc	(___aodiv@dividend+7)^0,f,c
  3824  000C22  0E01               	movlw	1
  3825  000C24  1A24               	xorwf	___aodiv@sign^0,f,c
  3826  000C26                     l2668:
  3827  000C26  EE20  F025         	lfsr	2,___aodiv@quotient
  3828  000C2A  0E07               	movlw	7
  3829  000C2C                     u1851:
  3830  000C2C  6ADE               	clrf	postinc2,c
  3831  000C2E  06E8               	decf	wreg,f,c
  3832  000C30  E2FD               	bc	u1851
  3833  000C32  501B               	movf	___aodiv@divisor^0,w,c
  3834  000C34  101C               	iorwf	(___aodiv@divisor+1)^0,w,c
  3835  000C36  101D               	iorwf	(___aodiv@divisor+2)^0,w,c
  3836  000C38  101E               	iorwf	(___aodiv@divisor+3)^0,w,c
  3837  000C3A  101F               	iorwf	(___aodiv@divisor+4)^0,w,c
  3838  000C3C  1020               	iorwf	(___aodiv@divisor+5)^0,w,c
  3839  000C3E  1021               	iorwf	(___aodiv@divisor+6)^0,w,c
  3840  000C40  1022               	iorwf	(___aodiv@divisor+7)^0,w,c
  3841  000C42  B4D8               	btfsc	status,2,c
  3842  000C44  EF26  F006         	goto	u1861
  3843  000C48  EF28  F006         	goto	u1860
  3844  000C4C                     u1861:
  3845  000C4C  EF7A  F006         	goto	l2690
  3846  000C50                     u1860:
  3847  000C50  0E01               	movlw	1
  3848  000C52  6E23               	movwf	___aodiv@counter^0,c
  3849  000C54  EF36  F006         	goto	l2676
  3850  000C58                     l2674:
  3851  000C58  90D8               	bcf	status,0,c
  3852  000C5A  361B               	rlcf	___aodiv@divisor^0,f,c
  3853  000C5C  361C               	rlcf	(___aodiv@divisor+1)^0,f,c
  3854  000C5E  361D               	rlcf	(___aodiv@divisor+2)^0,f,c
  3855  000C60  361E               	rlcf	(___aodiv@divisor+3)^0,f,c
  3856  000C62  361F               	rlcf	(___aodiv@divisor+4)^0,f,c
  3857  000C64  3620               	rlcf	(___aodiv@divisor+5)^0,f,c
  3858  000C66  3621               	rlcf	(___aodiv@divisor+6)^0,f,c
  3859  000C68  3622               	rlcf	(___aodiv@divisor+7)^0,f,c
  3860  000C6A  2A23               	incf	___aodiv@counter^0,f,c
  3861  000C6C                     l2676:
  3862  000C6C  AE22               	btfss	(___aodiv@divisor+7)^0,7,c
  3863  000C6E  EF3B  F006         	goto	u1871
  3864  000C72  EF3D  F006         	goto	u1870
  3865  000C76                     u1871:
  3866  000C76  EF2C  F006         	goto	l2674
  3867  000C7A                     u1870:
  3868  000C7A                     l2678:
  3869  000C7A  90D8               	bcf	status,0,c
  3870  000C7C  3625               	rlcf	___aodiv@quotient^0,f,c
  3871  000C7E  3626               	rlcf	(___aodiv@quotient+1)^0,f,c
  3872  000C80  3627               	rlcf	(___aodiv@quotient+2)^0,f,c
  3873  000C82  3628               	rlcf	(___aodiv@quotient+3)^0,f,c
  3874  000C84  3629               	rlcf	(___aodiv@quotient+4)^0,f,c
  3875  000C86  362A               	rlcf	(___aodiv@quotient+5)^0,f,c
  3876  000C88  362B               	rlcf	(___aodiv@quotient+6)^0,f,c
  3877  000C8A  362C               	rlcf	(___aodiv@quotient+7)^0,f,c
  3878  000C8C  501B               	movf	___aodiv@divisor^0,w,c
  3879  000C8E  5C13               	subwf	___aodiv@dividend^0,w,c
  3880  000C90  501C               	movf	(___aodiv@divisor+1)^0,w,c
  3881  000C92  5814               	subwfb	(___aodiv@dividend+1)^0,w,c
  3882  000C94  501D               	movf	(___aodiv@divisor+2)^0,w,c
  3883  000C96  5815               	subwfb	(___aodiv@dividend+2)^0,w,c
  3884  000C98  501E               	movf	(___aodiv@divisor+3)^0,w,c
  3885  000C9A  5816               	subwfb	(___aodiv@dividend+3)^0,w,c
  3886  000C9C  501F               	movf	(___aodiv@divisor+4)^0,w,c
  3887  000C9E  5817               	subwfb	(___aodiv@dividend+4)^0,w,c
  3888  000CA0  5020               	movf	(___aodiv@divisor+5)^0,w,c
  3889  000CA2  5818               	subwfb	(___aodiv@dividend+5)^0,w,c
  3890  000CA4  5021               	movf	(___aodiv@divisor+6)^0,w,c
  3891  000CA6  5819               	subwfb	(___aodiv@dividend+6)^0,w,c
  3892  000CA8  5022               	movf	(___aodiv@divisor+7)^0,w,c
  3893  000CAA  581A               	subwfb	(___aodiv@dividend+7)^0,w,c
  3894  000CAC  A0D8               	btfss	status,0,c
  3895  000CAE  EF5B  F006         	goto	u1881
  3896  000CB2  EF5D  F006         	goto	u1880
  3897  000CB6                     u1881:
  3898  000CB6  EF6E  F006         	goto	l2686
  3899  000CBA                     u1880:
  3900  000CBA  501B               	movf	___aodiv@divisor^0,w,c
  3901  000CBC  5E13               	subwf	___aodiv@dividend^0,f,c
  3902  000CBE  501C               	movf	(___aodiv@divisor+1)^0,w,c
  3903  000CC0  5A14               	subwfb	(___aodiv@dividend+1)^0,f,c
  3904  000CC2  501D               	movf	(___aodiv@divisor+2)^0,w,c
  3905  000CC4  5A15               	subwfb	(___aodiv@dividend+2)^0,f,c
  3906  000CC6  501E               	movf	(___aodiv@divisor+3)^0,w,c
  3907  000CC8  5A16               	subwfb	(___aodiv@dividend+3)^0,f,c
  3908  000CCA  501F               	movf	(___aodiv@divisor+4)^0,w,c
  3909  000CCC  5A17               	subwfb	(___aodiv@dividend+4)^0,f,c
  3910  000CCE  5020               	movf	(___aodiv@divisor+5)^0,w,c
  3911  000CD0  5A18               	subwfb	(___aodiv@dividend+5)^0,f,c
  3912  000CD2  5021               	movf	(___aodiv@divisor+6)^0,w,c
  3913  000CD4  5A19               	subwfb	(___aodiv@dividend+6)^0,f,c
  3914  000CD6  5022               	movf	(___aodiv@divisor+7)^0,w,c
  3915  000CD8  5A1A               	subwfb	(___aodiv@dividend+7)^0,f,c
  3916  000CDA  8025               	bsf	___aodiv@quotient^0,0,c
  3917  000CDC                     l2686:
  3918  000CDC  90D8               	bcf	status,0,c
  3919  000CDE  3222               	rrcf	(___aodiv@divisor+7)^0,f,c
  3920  000CE0  3221               	rrcf	(___aodiv@divisor+6)^0,f,c
  3921  000CE2  3220               	rrcf	(___aodiv@divisor+5)^0,f,c
  3922  000CE4  321F               	rrcf	(___aodiv@divisor+4)^0,f,c
  3923  000CE6  321E               	rrcf	(___aodiv@divisor+3)^0,f,c
  3924  000CE8  321D               	rrcf	(___aodiv@divisor+2)^0,f,c
  3925  000CEA  321C               	rrcf	(___aodiv@divisor+1)^0,f,c
  3926  000CEC  321B               	rrcf	___aodiv@divisor^0,f,c
  3927  000CEE  2E23               	decfsz	___aodiv@counter^0,f,c
  3928  000CF0  EF3D  F006         	goto	l2678
  3929  000CF4                     l2690:
  3930  000CF4  5024               	movf	___aodiv@sign^0,w,c
  3931  000CF6  B4D8               	btfsc	status,2,c
  3932  000CF8  EF80  F006         	goto	u1891
  3933  000CFC  EF82  F006         	goto	u1890
  3934  000D00                     u1891:
  3935  000D00  EF92  F006         	goto	l2694
  3936  000D04                     u1890:
  3937  000D04  1E2C               	comf	(___aodiv@quotient+7)^0,f,c
  3938  000D06  1E2B               	comf	(___aodiv@quotient+6)^0,f,c
  3939  000D08  1E2A               	comf	(___aodiv@quotient+5)^0,f,c
  3940  000D0A  1E29               	comf	(___aodiv@quotient+4)^0,f,c
  3941  000D0C  1E28               	comf	(___aodiv@quotient+3)^0,f,c
  3942  000D0E  1E27               	comf	(___aodiv@quotient+2)^0,f,c
  3943  000D10  1E26               	comf	(___aodiv@quotient+1)^0,f,c
  3944  000D12  6C25               	negf	___aodiv@quotient^0,c
  3945  000D14  0E00               	movlw	0
  3946  000D16  2226               	addwfc	(___aodiv@quotient+1)^0,f,c
  3947  000D18  2227               	addwfc	(___aodiv@quotient+2)^0,f,c
  3948  000D1A  2228               	addwfc	(___aodiv@quotient+3)^0,f,c
  3949  000D1C  2229               	addwfc	(___aodiv@quotient+4)^0,f,c
  3950  000D1E  222A               	addwfc	(___aodiv@quotient+5)^0,f,c
  3951  000D20  222B               	addwfc	(___aodiv@quotient+6)^0,f,c
  3952  000D22  222C               	addwfc	(___aodiv@quotient+7)^0,f,c
  3953  000D24                     l2694:
  3954  000D24  C025  F013         	movff	___aodiv@quotient,?___aodiv
  3955  000D28  C026  F014         	movff	___aodiv@quotient+1,?___aodiv+1
  3956  000D2C  C027  F015         	movff	___aodiv@quotient+2,?___aodiv+2
  3957  000D30  C028  F016         	movff	___aodiv@quotient+3,?___aodiv+3
  3958  000D34  C029  F017         	movff	___aodiv@quotient+4,?___aodiv+4
  3959  000D38  C02A  F018         	movff	___aodiv@quotient+5,?___aodiv+5
  3960  000D3C  C02B  F019         	movff	___aodiv@quotient+6,?___aodiv+6
  3961  000D40  C02C  F01A         	movff	___aodiv@quotient+7,?___aodiv+7
  3962  000D44  0012               	return		;funcret
  3963  000D46                     __end_of___aodiv:
  3964                           	callstack 0
  3965                           
  3966 ;; *************** function _ctoa *****************
  3967 ;; Defined at:
  3968 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3971 ;;		 -> NULL(0), 
  3972 ;;  c               1   31[COMRAM] unsigned char 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  w               2   35[COMRAM] int 
  3975 ;;  l               2   33[COMRAM] int 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  2   29[COMRAM] int 
  3978 ;; Registers used:
  3979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3985 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;Total ram usage:        8 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    7
  3992 ;; This function calls:
  3993 ;;		_fputc
  3994 ;; This function is called by:
  3995 ;;		_vfpfcnvrt
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text11
  4000  0010DC                     __ptext11:
  4001                           	callstack 0
  4002  0010DC                     _ctoa:
  4003                           	callstack 20
  4004  0010DC                     
  4005                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  4006  0010DC  503C               	movf	_width^0,w,c
  4007  0010DE  103D               	iorwf	(_width+1)^0,w,c
  4008  0010E0  A4D8               	btfss	status,2,c
  4009  0010E2  EF75  F008         	goto	u2011
  4010  0010E6  EF77  F008         	goto	u2010
  4011  0010EA                     u2011:
  4012  0010EA  EF7D  F008         	goto	l2764
  4013  0010EE                     u2010:
  4014  0010EE  C03C  F024         	movff	_width,ctoa@w
  4015  0010F2  C03D  F025         	movff	_width+1,ctoa@w+1
  4016  0010F6  EF83  F008         	goto	l2766
  4017  0010FA                     l2764:
  4018  0010FA  0EFF               	movlw	255
  4019  0010FC  243C               	addwf	_width^0,w,c
  4020  0010FE  6E24               	movwf	ctoa@w^0,c
  4021  001100  0EFF               	movlw	255
  4022  001102  203D               	addwfc	(_width+1)^0,w,c
  4023  001104  6E25               	movwf	(ctoa@w+1)^0,c
  4024  001106                     l2766:
  4025                           
  4026                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  4027  001106  A040               	btfss	_flags^0,0,c
  4028  001108  EF88  F008         	goto	u2021
  4029  00110C  EF8A  F008         	goto	u2020
  4030  001110                     u2021:
  4031  001110  EF93  F008         	goto	l2770
  4032  001114                     u2020:
  4033  001114                     
  4034                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  4035  001114  C020  F015         	movff	ctoa@c,fputc@c
  4036  001118  6A16               	clrf	(fputc@c+1)^0,c
  4037  00111A  C01E  F017         	movff	ctoa@fp,fputc@fp
  4038  00111E  C01F  F018         	movff	ctoa@fp+1,fputc@fp+1
  4039  001122  EC39  F009         	call	_fputc	;wreg free
  4040  001126                     l2770:
  4041                           
  4042                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  4043  001126  BE25               	btfsc	(ctoa@w+1)^0,7,c
  4044  001128  EF98  F008         	goto	u2031
  4045  00112C  EF9A  F008         	goto	u2030
  4046  001130                     u2031:
  4047  001130  EF9C  F008         	goto	l2774
  4048  001134                     u2030:
  4049  001134  EFA0  F008         	goto	l1069
  4050  001138                     l2774:
  4051  001138  0E00               	movlw	0
  4052  00113A  6E25               	movwf	(ctoa@w+1)^0,c
  4053  00113C  0E00               	movlw	0
  4054  00113E  6E24               	movwf	ctoa@w^0,c
  4055  001140                     l1069:
  4056                           
  4057                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  4058  001140  0E00               	movlw	0
  4059  001142  6E23               	movwf	(ctoa@l+1)^0,c
  4060  001144  0E00               	movlw	0
  4061  001146  6E22               	movwf	ctoa@l^0,c
  4062                           
  4063                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4064  001148  EFB2  F008         	goto	l2780
  4065  00114C                     l2776:
  4066                           
  4067                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  4068  00114C  0E00               	movlw	0
  4069  00114E  6E16               	movwf	(fputc@c+1)^0,c
  4070  001150  0E20               	movlw	32
  4071  001152  6E15               	movwf	fputc@c^0,c
  4072  001154  C01E  F017         	movff	ctoa@fp,fputc@fp
  4073  001158  C01F  F018         	movff	ctoa@fp+1,fputc@fp+1
  4074  00115C  EC39  F009         	call	_fputc	;wreg free
  4075  001160                     
  4076                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  4077  001160  4A22               	infsnz	ctoa@l^0,f,c
  4078  001162  2A23               	incf	(ctoa@l+1)^0,f,c
  4079  001164                     l2780:
  4080                           
  4081                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4082  001164  5024               	movf	ctoa@w^0,w,c
  4083  001166  5C22               	subwf	ctoa@l^0,w,c
  4084  001168  5023               	movf	(ctoa@l+1)^0,w,c
  4085  00116A  0A80               	xorlw	128
  4086  00116C  6E21               	movwf	??_ctoa^0,c
  4087  00116E  5025               	movf	(ctoa@w+1)^0,w,c
  4088  001170  0A80               	xorlw	128
  4089  001172  5821               	subwfb	??_ctoa^0,w,c
  4090  001174  A0D8               	btfss	status,0,c
  4091  001176  EFBF  F008         	goto	u2041
  4092  00117A  EFC1  F008         	goto	u2040
  4093  00117E                     u2041:
  4094  00117E  EFA6  F008         	goto	l2776
  4095  001182                     u2040:
  4096  001182                     
  4097                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  4098  001182  B040               	btfsc	_flags^0,0,c
  4099  001184  EFC6  F008         	goto	u2051
  4100  001188  EFC8  F008         	goto	u2050
  4101  00118C                     u2051:
  4102  00118C  EFD1  F008         	goto	l2784
  4103  001190                     u2050:
  4104  001190                     
  4105                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  4106  001190  C020  F015         	movff	ctoa@c,fputc@c
  4107  001194  6A16               	clrf	(fputc@c+1)^0,c
  4108  001196  C01E  F017         	movff	ctoa@fp,fputc@fp
  4109  00119A  C01F  F018         	movff	ctoa@fp+1,fputc@fp+1
  4110  00119E  EC39  F009         	call	_fputc	;wreg free
  4111  0011A2                     l2784:
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  4114  0011A2  0E01               	movlw	1
  4115  0011A4  2422               	addwf	ctoa@l^0,w,c
  4116  0011A6  6E1E               	movwf	?_ctoa^0,c
  4117  0011A8  0E00               	movlw	0
  4118  0011AA  2023               	addwfc	(ctoa@l+1)^0,w,c
  4119  0011AC  6E1F               	movwf	(?_ctoa+1)^0,c
  4120  0011AE  0012               	return		;funcret
  4121  0011B0                     __end_of_ctoa:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _fputc *****************
  4125 ;; Defined at:
  4126 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  c               2   20[COMRAM] int 
  4129 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4130 ;;		 -> NULL(0), 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  2   20[COMRAM] int 
  4135 ;; Registers used:
  4136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;Total ram usage:        9 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    6
  4149 ;; This function calls:
  4150 ;;		_putch
  4151 ;; This function is called by:
  4152 ;;		_pad
  4153 ;;		_ctoa
  4154 ;;		_vfpfcnvrt
  4155 ;;		_fputs
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text12
  4160  001272                     __ptext12:
  4161                           	callstack 0
  4162  001272                     _fputc:
  4163                           	callstack 21
  4164  001272  5017               	movf	fputc@fp^0,w,c
  4165  001274  1018               	iorwf	(fputc@fp+1)^0,w,c
  4166  001276  B4D8               	btfsc	status,2,c
  4167  001278  EF40  F009         	goto	u1771
  4168  00127C  EF42  F009         	goto	u1770
  4169  001280                     u1771:
  4170  001280  EF4B  F009         	goto	l2626
  4171  001284                     u1770:
  4172  001284  5017               	movf	fputc@fp^0,w,c
  4173  001286  1018               	iorwf	(fputc@fp+1)^0,w,c
  4174  001288  A4D8               	btfss	status,2,c
  4175  00128A  EF49  F009         	goto	u1781
  4176  00128E  EF4B  F009         	goto	u1780
  4177  001292                     u1781:
  4178  001292  EF50  F009         	goto	l2628
  4179  001296                     u1780:
  4180  001296                     l2626:
  4181  001296  5015               	movf	fputc@c^0,w,c
  4182  001298  EC64  F00B         	call	_putch
  4183  00129C  EF83  F009         	goto	l1134
  4184  0012A0                     l2628:
  4185  0012A0  EE20 F004          	lfsr	2,4
  4186  0012A4  5017               	movf	fputc@fp^0,w,c
  4187  0012A6  26D9               	addwf	fsr2l,f,c
  4188  0012A8  5018               	movf	(fputc@fp+1)^0,w,c
  4189  0012AA  22DA               	addwfc	fsr2h,f,c
  4190  0012AC  50DE               	movf	postinc2,w,c
  4191  0012AE  10DE               	iorwf	postinc2,w,c
  4192  0012B0  B4D8               	btfsc	status,2,c
  4193  0012B2  EF5D  F009         	goto	u1791
  4194  0012B6  EF5F  F009         	goto	u1790
  4195  0012BA                     u1791:
  4196  0012BA  EF7A  F009         	goto	l2632
  4197  0012BE                     u1790:
  4198  0012BE  EE20 F004          	lfsr	2,4
  4199  0012C2  5017               	movf	fputc@fp^0,w,c
  4200  0012C4  26D9               	addwf	fsr2l,f,c
  4201  0012C6  5018               	movf	(fputc@fp+1)^0,w,c
  4202  0012C8  22DA               	addwfc	fsr2h,f,c
  4203  0012CA  EE10 F002          	lfsr	1,2
  4204  0012CE  5017               	movf	fputc@fp^0,w,c
  4205  0012D0  26E1               	addwf	fsr1l,f,c
  4206  0012D2  5018               	movf	(fputc@fp+1)^0,w,c
  4207  0012D4  22E2               	addwfc	fsr1h,f,c
  4208  0012D6  50DE               	movf	postinc2,w,c
  4209  0012D8  5CE6               	subwf	postinc1,w,c
  4210  0012DA  50E6               	movf	postinc1,w,c
  4211  0012DC  0A80               	xorlw	128
  4212  0012DE  6E1D               	movwf	(??_fputc+4)^0,c
  4213  0012E0  50DE               	movf	postinc2,w,c
  4214  0012E2  0A80               	xorlw	128
  4215  0012E4  581D               	subwfb	(??_fputc+4)^0,w,c
  4216  0012E6  B0D8               	btfsc	status,0,c
  4217  0012E8  EF78  F009         	goto	u1801
  4218  0012EC  EF7A  F009         	goto	u1800
  4219  0012F0                     u1801:
  4220  0012F0  EF83  F009         	goto	l1134
  4221  0012F4                     u1800:
  4222  0012F4                     l2632:
  4223  0012F4  EE20 F002          	lfsr	2,2
  4224  0012F8  5017               	movf	fputc@fp^0,w,c
  4225  0012FA  26D9               	addwf	fsr2l,f,c
  4226  0012FC  5018               	movf	(fputc@fp+1)^0,w,c
  4227  0012FE  22DA               	addwfc	fsr2h,f,c
  4228  001300  2ADE               	incf	postinc2,f,c
  4229  001302  0E00               	movlw	0
  4230  001304  22DD               	addwfc	postdec2,f,c
  4231  001306                     l1134:
  4232  001306  0012               	return		;funcret
  4233  001308                     __end_of_fputc:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _putch *****************
  4237 ;; Defined at:
  4238 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  txData          1    wreg     unsigned char 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  txData          1   19[COMRAM] unsigned char 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;Total ram usage:        1 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    5
  4259 ;; This function calls:
  4260 ;;		_EUSART1_Write
  4261 ;; This function is called by:
  4262 ;;		_fputc
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text13
  4267  0016C8                     __ptext13:
  4268                           	callstack 0
  4269  0016C8                     _putch:
  4270                           	callstack 21
  4271                           
  4272                           ;incstack = 0
  4273                           ;putch@txData stored from wreg
  4274  0016C8  6E14               	movwf	putch@txData^0,c
  4275  0016CA                     
  4276                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4277  0016CA  5014               	movf	putch@txData^0,w,c
  4278  0016CC  EC44  F00B         	call	_EUSART1_Write
  4279  0016D0  0012               	return		;funcret
  4280  0016D2                     __end_of_putch:
  4281                           	callstack 0
  4282                           
  4283 ;; *************** function _EUSART1_Write *****************
  4284 ;; Defined at:
  4285 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  txData          1    wreg     unsigned char 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  txData          1   18[COMRAM] unsigned char 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;Total ram usage:        1 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    4
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_putch
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text14
  4314  001688                     __ptext14:
  4315                           	callstack 0
  4316  001688                     _EUSART1_Write:
  4317                           	callstack 21
  4318                           
  4319                           ;incstack = 0
  4320                           ;EUSART1_Write@txData stored from wreg
  4321  001688  6E13               	movwf	EUSART1_Write@txData^0,c
  4322  00168A                     l302:
  4323                           
  4324                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4325  00168A  A89E               	btfss	158,4,c	;volatile
  4326  00168C  EF4A  F00B         	goto	u1761
  4327  001690  EF4C  F00B         	goto	u1760
  4328  001694                     u1761:
  4329  001694  EF45  F00B         	goto	l302
  4330  001698                     u1760:
  4331  001698                     
  4332                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4333  001698  C013  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4334  00169C  0012               	return		;funcret
  4335  00169E                     __end_of_EUSART1_Write:
  4336                           	callstack 0
  4337                           
  4338 ;; *************** function ___wmul *****************
  4339 ;; Defined at:
  4340 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  multiplier      2   18[COMRAM] unsigned int 
  4343 ;;  multiplicand    2   20[COMRAM] unsigned int 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  product         2   22[COMRAM] unsigned int 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  2   18[COMRAM] unsigned int 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0, prodl, prodh
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;Total ram usage:        6 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    4
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_main
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text15
  4370  00160E                     __ptext15:
  4371                           	callstack 0
  4372  00160E                     ___wmul:
  4373                           	callstack 26
  4374  00160E  5013               	movf	___wmul@multiplier^0,w,c
  4375  001610  0215               	mulwf	___wmul@multiplicand^0,c
  4376  001612  CFF3 F017          	movff	prodl,___wmul@product
  4377  001616  CFF4 F018          	movff	prodh,___wmul@product+1
  4378  00161A  5013               	movf	___wmul@multiplier^0,w,c
  4379  00161C  0216               	mulwf	(___wmul@multiplicand+1)^0,c
  4380  00161E  50F3               	movf	243,w,c
  4381  001620  2618               	addwf	(___wmul@product+1)^0,f,c
  4382  001622  5014               	movf	(___wmul@multiplier+1)^0,w,c
  4383  001624  0215               	mulwf	___wmul@multiplicand^0,c
  4384  001626  50F3               	movf	243,w,c
  4385  001628  2618               	addwf	(___wmul@product+1)^0,f,c
  4386  00162A  C017  F013         	movff	___wmul@product,?___wmul
  4387  00162E  C018  F014         	movff	___wmul@product+1,?___wmul+1
  4388  001632  0012               	return		;funcret
  4389  001634                     __end_of___wmul:
  4390                           	callstack 0
  4391                           
  4392 ;; *************** function ___lwdiv *****************
  4393 ;; Defined at:
  4394 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  dividend        2   18[COMRAM] unsigned int 
  4397 ;;  divisor         2   20[COMRAM] unsigned int 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  quotient        2   23[COMRAM] unsigned int 
  4400 ;;  counter         1   22[COMRAM] unsigned char 
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  2   18[COMRAM] unsigned int 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;Total ram usage:        7 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; Hardware stack levels required when called:    4
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_main
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text16
  4425  001308                     __ptext16:
  4426                           	callstack 0
  4427  001308                     ___lwdiv:
  4428                           	callstack 26
  4429  001308  0E00               	movlw	0
  4430  00130A  6E19               	movwf	(___lwdiv@quotient+1)^0,c
  4431  00130C  0E00               	movlw	0
  4432  00130E  6E18               	movwf	___lwdiv@quotient^0,c
  4433  001310  5015               	movf	___lwdiv@divisor^0,w,c
  4434  001312  1016               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4435  001314  B4D8               	btfsc	status,2,c
  4436  001316  EF8F  F009         	goto	u2371
  4437  00131A  EF91  F009         	goto	u2370
  4438  00131E                     u2371:
  4439  00131E  EFB9  F009         	goto	l839
  4440  001322                     u2370:
  4441  001322  0E01               	movlw	1
  4442  001324  6E17               	movwf	___lwdiv@counter^0,c
  4443  001326  EF99  F009         	goto	l3048
  4444  00132A                     l3046:
  4445  00132A  90D8               	bcf	status,0,c
  4446  00132C  3615               	rlcf	___lwdiv@divisor^0,f,c
  4447  00132E  3616               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4448  001330  2A17               	incf	___lwdiv@counter^0,f,c
  4449  001332                     l3048:
  4450  001332  AE16               	btfss	(___lwdiv@divisor+1)^0,7,c
  4451  001334  EF9E  F009         	goto	u2381
  4452  001338  EFA0  F009         	goto	u2380
  4453  00133C                     u2381:
  4454  00133C  EF95  F009         	goto	l3046
  4455  001340                     u2380:
  4456  001340                     l3050:
  4457  001340  90D8               	bcf	status,0,c
  4458  001342  3618               	rlcf	___lwdiv@quotient^0,f,c
  4459  001344  3619               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4460  001346  5015               	movf	___lwdiv@divisor^0,w,c
  4461  001348  5C13               	subwf	___lwdiv@dividend^0,w,c
  4462  00134A  5016               	movf	(___lwdiv@divisor+1)^0,w,c
  4463  00134C  5814               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4464  00134E  A0D8               	btfss	status,0,c
  4465  001350  EFAC  F009         	goto	u2391
  4466  001354  EFAE  F009         	goto	u2390
  4467  001358                     u2391:
  4468  001358  EFB3  F009         	goto	l3058
  4469  00135C                     u2390:
  4470  00135C  5015               	movf	___lwdiv@divisor^0,w,c
  4471  00135E  5E13               	subwf	___lwdiv@dividend^0,f,c
  4472  001360  5016               	movf	(___lwdiv@divisor+1)^0,w,c
  4473  001362  5A14               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4474  001364  8018               	bsf	___lwdiv@quotient^0,0,c
  4475  001366                     l3058:
  4476  001366  90D8               	bcf	status,0,c
  4477  001368  3216               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4478  00136A  3215               	rrcf	___lwdiv@divisor^0,f,c
  4479  00136C  2E17               	decfsz	___lwdiv@counter^0,f,c
  4480  00136E  EFA0  F009         	goto	l3050
  4481  001372                     l839:
  4482  001372  C018  F013         	movff	___lwdiv@quotient,?___lwdiv
  4483  001376  C019  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4484  00137A  0012               	return		;funcret
  4485  00137C                     __end_of___lwdiv:
  4486                           	callstack 0
  4487                           
  4488 ;; *************** function ___aldiv *****************
  4489 ;; Defined at:
  4490 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aldiv.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  dividend        4   18[COMRAM] long 
  4493 ;;  divisor         4   22[COMRAM] long 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  quotient        4   28[COMRAM] long 
  4496 ;;  sign            1   27[COMRAM] unsigned char 
  4497 ;;  counter         1   26[COMRAM] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  4   18[COMRAM] long 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4507 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;Total ram usage:       14 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    4
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_main
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text17
  4522  000FD0                     __ptext17:
  4523                           	callstack 0
  4524  000FD0                     ___aldiv:
  4525                           	callstack 26
  4526  000FD0  0E00               	movlw	0
  4527  000FD2  6E1C               	movwf	___aldiv@sign^0,c
  4528  000FD4  BE1A               	btfsc	(___aldiv@divisor+3)^0,7,c
  4529  000FD6  EFF1  F007         	goto	u2310
  4530  000FDA  EFEF  F007         	goto	u2311
  4531  000FDE                     u2311:
  4532  000FDE  EFFB  F007         	goto	l3004
  4533  000FE2                     u2310:
  4534  000FE2  1E1A               	comf	(___aldiv@divisor+3)^0,f,c
  4535  000FE4  1E19               	comf	(___aldiv@divisor+2)^0,f,c
  4536  000FE6  1E18               	comf	(___aldiv@divisor+1)^0,f,c
  4537  000FE8  6C17               	negf	___aldiv@divisor^0,c
  4538  000FEA  0E00               	movlw	0
  4539  000FEC  2218               	addwfc	(___aldiv@divisor+1)^0,f,c
  4540  000FEE  2219               	addwfc	(___aldiv@divisor+2)^0,f,c
  4541  000FF0  221A               	addwfc	(___aldiv@divisor+3)^0,f,c
  4542  000FF2  0E01               	movlw	1
  4543  000FF4  6E1C               	movwf	___aldiv@sign^0,c
  4544  000FF6                     l3004:
  4545  000FF6  BE16               	btfsc	(___aldiv@dividend+3)^0,7,c
  4546  000FF8  EF02  F008         	goto	u2320
  4547  000FFC  EF00  F008         	goto	u2321
  4548  001000                     u2321:
  4549  001000  EF0C  F008         	goto	l3010
  4550  001004                     u2320:
  4551  001004  1E16               	comf	(___aldiv@dividend+3)^0,f,c
  4552  001006  1E15               	comf	(___aldiv@dividend+2)^0,f,c
  4553  001008  1E14               	comf	(___aldiv@dividend+1)^0,f,c
  4554  00100A  6C13               	negf	___aldiv@dividend^0,c
  4555  00100C  0E00               	movlw	0
  4556  00100E  2214               	addwfc	(___aldiv@dividend+1)^0,f,c
  4557  001010  2215               	addwfc	(___aldiv@dividend+2)^0,f,c
  4558  001012  2216               	addwfc	(___aldiv@dividend+3)^0,f,c
  4559  001014  0E01               	movlw	1
  4560  001016  1A1C               	xorwf	___aldiv@sign^0,f,c
  4561  001018                     l3010:
  4562  001018  0E00               	movlw	0
  4563  00101A  6E1D               	movwf	___aldiv@quotient^0,c
  4564  00101C  0E00               	movlw	0
  4565  00101E  6E1E               	movwf	(___aldiv@quotient+1)^0,c
  4566  001020  0E00               	movlw	0
  4567  001022  6E1F               	movwf	(___aldiv@quotient+2)^0,c
  4568  001024  0E00               	movlw	0
  4569  001026  6E20               	movwf	(___aldiv@quotient+3)^0,c
  4570  001028  5017               	movf	___aldiv@divisor^0,w,c
  4571  00102A  1018               	iorwf	(___aldiv@divisor+1)^0,w,c
  4572  00102C  1019               	iorwf	(___aldiv@divisor+2)^0,w,c
  4573  00102E  101A               	iorwf	(___aldiv@divisor+3)^0,w,c
  4574  001030  B4D8               	btfsc	status,2,c
  4575  001032  EF1D  F008         	goto	u2331
  4576  001036  EF1F  F008         	goto	u2330
  4577  00103A                     u2331:
  4578  00103A  EF55  F008         	goto	l3032
  4579  00103E                     u2330:
  4580  00103E  0E01               	movlw	1
  4581  001040  6E1B               	movwf	___aldiv@counter^0,c
  4582  001042  EF29  F008         	goto	l3018
  4583  001046                     l3016:
  4584  001046  90D8               	bcf	status,0,c
  4585  001048  3617               	rlcf	___aldiv@divisor^0,f,c
  4586  00104A  3618               	rlcf	(___aldiv@divisor+1)^0,f,c
  4587  00104C  3619               	rlcf	(___aldiv@divisor+2)^0,f,c
  4588  00104E  361A               	rlcf	(___aldiv@divisor+3)^0,f,c
  4589  001050  2A1B               	incf	___aldiv@counter^0,f,c
  4590  001052                     l3018:
  4591  001052  AE1A               	btfss	(___aldiv@divisor+3)^0,7,c
  4592  001054  EF2E  F008         	goto	u2341
  4593  001058  EF30  F008         	goto	u2340
  4594  00105C                     u2341:
  4595  00105C  EF23  F008         	goto	l3016
  4596  001060                     u2340:
  4597  001060                     l3020:
  4598  001060  90D8               	bcf	status,0,c
  4599  001062  361D               	rlcf	___aldiv@quotient^0,f,c
  4600  001064  361E               	rlcf	(___aldiv@quotient+1)^0,f,c
  4601  001066  361F               	rlcf	(___aldiv@quotient+2)^0,f,c
  4602  001068  3620               	rlcf	(___aldiv@quotient+3)^0,f,c
  4603  00106A  5017               	movf	___aldiv@divisor^0,w,c
  4604  00106C  5C13               	subwf	___aldiv@dividend^0,w,c
  4605  00106E  5018               	movf	(___aldiv@divisor+1)^0,w,c
  4606  001070  5814               	subwfb	(___aldiv@dividend+1)^0,w,c
  4607  001072  5019               	movf	(___aldiv@divisor+2)^0,w,c
  4608  001074  5815               	subwfb	(___aldiv@dividend+2)^0,w,c
  4609  001076  501A               	movf	(___aldiv@divisor+3)^0,w,c
  4610  001078  5816               	subwfb	(___aldiv@dividend+3)^0,w,c
  4611  00107A  A0D8               	btfss	status,0,c
  4612  00107C  EF42  F008         	goto	u2351
  4613  001080  EF44  F008         	goto	u2350
  4614  001084                     u2351:
  4615  001084  EF4D  F008         	goto	l3028
  4616  001088                     u2350:
  4617  001088  5017               	movf	___aldiv@divisor^0,w,c
  4618  00108A  5E13               	subwf	___aldiv@dividend^0,f,c
  4619  00108C  5018               	movf	(___aldiv@divisor+1)^0,w,c
  4620  00108E  5A14               	subwfb	(___aldiv@dividend+1)^0,f,c
  4621  001090  5019               	movf	(___aldiv@divisor+2)^0,w,c
  4622  001092  5A15               	subwfb	(___aldiv@dividend+2)^0,f,c
  4623  001094  501A               	movf	(___aldiv@divisor+3)^0,w,c
  4624  001096  5A16               	subwfb	(___aldiv@dividend+3)^0,f,c
  4625  001098  801D               	bsf	___aldiv@quotient^0,0,c
  4626  00109A                     l3028:
  4627  00109A  90D8               	bcf	status,0,c
  4628  00109C  321A               	rrcf	(___aldiv@divisor+3)^0,f,c
  4629  00109E  3219               	rrcf	(___aldiv@divisor+2)^0,f,c
  4630  0010A0  3218               	rrcf	(___aldiv@divisor+1)^0,f,c
  4631  0010A2  3217               	rrcf	___aldiv@divisor^0,f,c
  4632  0010A4  2E1B               	decfsz	___aldiv@counter^0,f,c
  4633  0010A6  EF30  F008         	goto	l3020
  4634  0010AA                     l3032:
  4635  0010AA  501C               	movf	___aldiv@sign^0,w,c
  4636  0010AC  B4D8               	btfsc	status,2,c
  4637  0010AE  EF5B  F008         	goto	u2361
  4638  0010B2  EF5D  F008         	goto	u2360
  4639  0010B6                     u2361:
  4640  0010B6  EF65  F008         	goto	l3036
  4641  0010BA                     u2360:
  4642  0010BA  1E20               	comf	(___aldiv@quotient+3)^0,f,c
  4643  0010BC  1E1F               	comf	(___aldiv@quotient+2)^0,f,c
  4644  0010BE  1E1E               	comf	(___aldiv@quotient+1)^0,f,c
  4645  0010C0  6C1D               	negf	___aldiv@quotient^0,c
  4646  0010C2  0E00               	movlw	0
  4647  0010C4  221E               	addwfc	(___aldiv@quotient+1)^0,f,c
  4648  0010C6  221F               	addwfc	(___aldiv@quotient+2)^0,f,c
  4649  0010C8  2220               	addwfc	(___aldiv@quotient+3)^0,f,c
  4650  0010CA                     l3036:
  4651  0010CA  C01D  F013         	movff	___aldiv@quotient,?___aldiv
  4652  0010CE  C01E  F014         	movff	___aldiv@quotient+1,?___aldiv+1
  4653  0010D2  C01F  F015         	movff	___aldiv@quotient+2,?___aldiv+2
  4654  0010D6  C020  F016         	movff	___aldiv@quotient+3,?___aldiv+3
  4655  0010DA  0012               	return		;funcret
  4656  0010DC                     __end_of___aldiv:
  4657                           	callstack 0
  4658                           
  4659 ;; *************** function _TMR0_WriteTimer *****************
  4660 ;; Defined at:
  4661 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  timerVal        2   18[COMRAM] unsigned short 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;Total ram usage:        2 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    4
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text18
  4690  0016D2                     __ptext18:
  4691                           	callstack 0
  4692  0016D2                     _TMR0_WriteTimer:
  4693                           	callstack 26
  4694  0016D2                     
  4695                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4696  0016D2  5014               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4697  0016D4  6ED7               	movwf	215,c	;volatile
  4698  0016D6                     
  4699                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4700  0016D6  C013  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4701  0016DA  0012               	return		;funcret
  4702  0016DC                     __end_of_TMR0_WriteTimer:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function _SYSTEM_Initialize *****************
  4706 ;; Defined at:
  4707 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    6
  4728 ;; This function calls:
  4729 ;;		_ADC_Initialize
  4730 ;;		_EUSART1_Initialize
  4731 ;;		_INTERRUPT_Initialize
  4732 ;;		_OSCILLATOR_Initialize
  4733 ;;		_PIN_MANAGER_Initialize
  4734 ;;		_TMR0_Initialize
  4735 ;; This function is called by:
  4736 ;;		_main
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text19
  4741  00166E                     __ptext19:
  4742                           	callstack 0
  4743  00166E                     _SYSTEM_Initialize:
  4744                           	callstack 24
  4745  00166E                     
  4746                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4747  00166E  EC87  F00B         	call	_INTERRUPT_Initialize	;wreg free
  4748  001672                     
  4749                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4750  001672  ECC9  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  4751  001676                     
  4752                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4753  001676  EC29  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  4754  00167A                     
  4755                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  4756  00167A  EC4F  F00B         	call	_ADC_Initialize	;wreg free
  4757  00167E                     
  4758                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4759  00167E  EC93  F00A         	call	_TMR0_Initialize	;wreg free
  4760  001682                     
  4761                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  4762  001682  EC59  F00A         	call	_EUSART1_Initialize	;wreg free
  4763  001686  0012               	return		;funcret
  4764  001688                     __end_of_SYSTEM_Initialize:
  4765                           	callstack 0
  4766                           
  4767 ;; *************** function _TMR0_Initialize *****************
  4768 ;; Defined at:
  4769 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;		None
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      void 
  4776 ;; Registers used:
  4777 ;;		wreg, status,2, status,0, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;Total ram usage:        2 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    5
  4790 ;; This function calls:
  4791 ;;		_TMR0_SetInterruptHandler
  4792 ;; This function is called by:
  4793 ;;		_SYSTEM_Initialize
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text20
  4798  001526                     __ptext20:
  4799                           	callstack 0
  4800  001526                     _TMR0_Initialize:
  4801                           	callstack 24
  4802  001526                     
  4803                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4804  001526  9CD5               	bcf	213,6,c	;volatile
  4805  001528                     
  4806                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  4807  001528  0E00               	movlw	0
  4808  00152A  6ED7               	movwf	215,c	;volatile
  4809                           
  4810                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  4811  00152C  0E00               	movlw	0
  4812  00152E  6ED6               	movwf	214,c	;volatile
  4813  001530                     
  4814                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4815  001530  50D6               	movf	214,w,c	;volatile
  4816  001532  CFD7 F015          	movff	4055,??_TMR0_Initialize	;volatile
  4817  001536  6A16               	clrf	(??_TMR0_Initialize+1)^0,c
  4818  001538  C015  F016         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4819  00153C  6A15               	clrf	??_TMR0_Initialize^0,c
  4820  00153E  1015               	iorwf	??_TMR0_Initialize^0,w,c
  4821  001540  6E44               	movwf	_timer0ReloadVal^0,c	;volatile
  4822  001542  5016               	movf	(??_TMR0_Initialize+1)^0,w,c
  4823  001544  6E45               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4824  001546                     
  4825                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4826  001546  94F2               	bcf	242,2,c	;volatile
  4827  001548                     
  4828                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4829  001548  8AF2               	bsf	242,5,c	;volatile
  4830  00154A                     
  4831                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4832  00154A  0E14               	movlw	low _TMR0_DefaultInterruptHandler
  4833  00154C  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4834  00154E  0E17               	movlw	high _TMR0_DefaultInterruptHandler
  4835  001550  6E14               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4836  001552  EC6E  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  4837  001556                     
  4838                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  4839  001556  0E9F               	movlw	159
  4840  001558  6ED5               	movwf	213,c	;volatile
  4841  00155A  0012               	return		;funcret
  4842  00155C                     __end_of_TMR0_Initialize:
  4843                           	callstack 0
  4844                           
  4845 ;; *************** function _TMR0_SetInterruptHandler *****************
  4846 ;; Defined at:
  4847 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  4850 ;;		 -> TMR0_DefaultInterruptHandler(1), myTMR0ISR(1), 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4866 ;;Total ram usage:        2 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    4
  4869 ;; This function calls:
  4870 ;;		Nothing
  4871 ;; This function is called by:
  4872 ;;		_main
  4873 ;;		_TMR0_Initialize
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text21
  4878  0016DC                     __ptext21:
  4879                           	callstack 0
  4880  0016DC                     _TMR0_SetInterruptHandler:
  4881                           	callstack 26
  4882  0016DC                     
  4883                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4884  0016DC  C013  F046         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4885  0016E0  C014  F047         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4886  0016E4  0012               	return		;funcret
  4887  0016E6                     __end_of_TMR0_SetInterruptHandler:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _PIN_MANAGER_Initialize *****************
  4891 ;; Defined at:
  4892 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;		None
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;Total ram usage:        0 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    4
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_SYSTEM_Initialize
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text22
  4921  001592                     __ptext22:
  4922                           	callstack 0
  4923  001592                     _PIN_MANAGER_Initialize:
  4924                           	callstack 25
  4925  001592                     
  4926                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4927  001592  0E00               	movlw	0
  4928  001594  6E89               	movwf	137,c	;volatile
  4929                           
  4930                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4931  001596  0E00               	movlw	0
  4932  001598  6E8A               	movwf	138,c	;volatile
  4933                           
  4934                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4935  00159A  0E00               	movlw	0
  4936  00159C  6E8B               	movwf	139,c	;volatile
  4937                           
  4938                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  4939  00159E  0EBF               	movlw	191
  4940  0015A0  6E92               	movwf	146,c	;volatile
  4941  0015A2                     
  4942                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  4943  0015A2  6893               	setf	147,c	;volatile
  4944                           
  4945                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  4946  0015A4  0EBF               	movlw	191
  4947  0015A6  6E94               	movwf	148,c	;volatile
  4948                           
  4949                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4950  0015A8  0E3C               	movlw	60
  4951  0015AA  010F               	movlb	15	; () banked
  4952  0015AC  6F3A               	movwf	58,b	;volatile
  4953                           
  4954                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  4955  0015AE  0E3F               	movlw	63
  4956  0015B0  6F39               	movwf	57,b	;volatile
  4957                           
  4958                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4959  0015B2  0E2F               	movlw	47
  4960  0015B4  6F38               	movwf	56,b	;volatile
  4961                           
  4962                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4963  0015B6  0E00               	movlw	0
  4964  0015B8  6E61               	movwf	97,c	;volatile
  4965  0015BA                     
  4966                           ; BSR set to: 15
  4967                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4968  0015BA  8EF1               	bsf	241,7,c	;volatile
  4969  0015BC                     
  4970                           ; BSR set to: 15
  4971  0015BC  0012               	return		;funcret
  4972  0015BE                     __end_of_PIN_MANAGER_Initialize:
  4973                           	callstack 0
  4974                           
  4975 ;; *************** function _OSCILLATOR_Initialize *****************
  4976 ;; Defined at:
  4977 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;		None
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;		None
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  1    wreg      void 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;Total ram usage:        0 bytes
  4996 ;; Hardware stack levels used:    1
  4997 ;; Hardware stack levels required when called:    4
  4998 ;; This function calls:
  4999 ;;		Nothing
  5000 ;; This function is called by:
  5001 ;;		_SYSTEM_Initialize
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text23
  5006  001652                     __ptext23:
  5007                           	callstack 0
  5008  001652                     _OSCILLATOR_Initialize:
  5009                           	callstack 25
  5010  001652                     
  5011                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  5012  001652  0E70               	movlw	112
  5013  001654  6ED3               	movwf	211,c	;volatile
  5014                           
  5015                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  5016  001656  0E04               	movlw	4
  5017  001658  6ED2               	movwf	210,c	;volatile
  5018                           
  5019                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  5020  00165A  0E40               	movlw	64
  5021  00165C  6E9B               	movwf	155,c	;volatile
  5022  00165E                     l192:
  5023                           
  5024                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  5025  00165E  AED2               	btfss	4050,7,c	;volatile
  5026  001660  EF34  F00B         	goto	u2261
  5027  001664  EF36  F00B         	goto	u2260
  5028  001668                     u2261:
  5029  001668  EF2F  F00B         	goto	l192
  5030  00166C                     u2260:
  5031  00166C  0012               	return		;funcret
  5032  00166E                     __end_of_OSCILLATOR_Initialize:
  5033                           	callstack 0
  5034                           
  5035 ;; *************** function _INTERRUPT_Initialize *****************
  5036 ;; Defined at:
  5037 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		None
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5055 ;;Total ram usage:        0 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    4
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_SYSTEM_Initialize
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text24
  5066  00170E                     __ptext24:
  5067                           	callstack 0
  5068  00170E                     _INTERRUPT_Initialize:
  5069                           	callstack 25
  5070  00170E                     
  5071                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5072  00170E  9ED0               	bcf	208,7,c	;volatile
  5073  001710  0012               	return		;funcret
  5074  001712                     __end_of_INTERRUPT_Initialize:
  5075                           	callstack 0
  5076                           
  5077 ;; *************** function _EUSART1_Initialize *****************
  5078 ;; Defined at:
  5079 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;		None
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;		None
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1    wreg      void 
  5086 ;; Registers used:
  5087 ;;		wreg, status,2, status,0, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;Total ram usage:        0 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    5
  5100 ;; This function calls:
  5101 ;;		_EUSART1_SetErrorHandler
  5102 ;;		_EUSART1_SetFramingErrorHandler
  5103 ;;		_EUSART1_SetOverrunErrorHandler
  5104 ;; This function is called by:
  5105 ;;		_SYSTEM_Initialize
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text25
  5110  0014B2                     __ptext25:
  5111                           	callstack 0
  5112  0014B2                     _EUSART1_Initialize:
  5113                           	callstack 24
  5114  0014B2                     
  5115                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5116  0014B2  0E08               	movlw	8
  5117  0014B4  6EB8               	movwf	184,c	;volatile
  5118                           
  5119                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5120  0014B6  0E90               	movlw	144
  5121  0014B8  6EAB               	movwf	171,c	;volatile
  5122                           
  5123                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5124  0014BA  0E24               	movlw	36
  5125  0014BC  6EAC               	movwf	172,c	;volatile
  5126                           
  5127                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5128  0014BE  0E82               	movlw	130
  5129  0014C0  6EAF               	movwf	175,c	;volatile
  5130                           
  5131                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5132  0014C2  0E06               	movlw	6
  5133  0014C4  6EB0               	movwf	176,c	;volatile
  5134  0014C6                     
  5135                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5136  0014C6  0E00               	movlw	0
  5137  0014C8  6E13               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5138  0014CA  0E00               	movlw	0
  5139  0014CC  6E14               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5140  0014CE  EC78  F00B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5141  0014D2                     
  5142                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5143  0014D2  0E00               	movlw	0
  5144  0014D4  6E13               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5145  0014D6  0E00               	movlw	0
  5146  0014D8  6E14               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5147  0014DA  EC73  F00B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5148  0014DE                     
  5149                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5150  0014DE  0E00               	movlw	0
  5151  0014E0  6E13               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5152  0014E2  0E00               	movlw	0
  5153  0014E4  6E14               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5154  0014E6  EC7D  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  5155  0014EA                     
  5156                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5157  0014EA  0E00               	movlw	0
  5158  0014EC  6E4A               	movwf	_eusart1RxLastError^0,c	;volatile
  5159  0014EE  0012               	return		;funcret
  5160  0014F0                     __end_of_EUSART1_Initialize:
  5161                           	callstack 0
  5162                           
  5163 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5164 ;; Defined at:
  5165 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  5168 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;		None
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;Total ram usage:        2 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    4
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_EUSART1_Initialize
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text26
  5195  0016E6                     __ptext26:
  5196                           	callstack 0
  5197  0016E6                     _EUSART1_SetOverrunErrorHandler:
  5198                           	callstack 24
  5199  0016E6                     
  5200                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5201  0016E6  C013  F0C0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5202  0016EA  C014  F0C1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5203  0016EE  0012               	return		;funcret
  5204  0016F0                     __end_of_EUSART1_SetOverrunErrorHandler:
  5205                           	callstack 0
  5206                           
  5207 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5208 ;; Defined at:
  5209 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  5212 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;		None
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      void 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;Total ram usage:        2 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    4
  5231 ;; This function calls:
  5232 ;;		Nothing
  5233 ;; This function is called by:
  5234 ;;		_EUSART1_Initialize
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           	psect	text27
  5239  0016F0                     __ptext27:
  5240                           	callstack 0
  5241  0016F0                     _EUSART1_SetFramingErrorHandler:
  5242                           	callstack 24
  5243  0016F0                     
  5244                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5245  0016F0  C013  F0C2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5246  0016F4  C014  F0C3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5247  0016F8  0012               	return		;funcret
  5248  0016FA                     __end_of_EUSART1_SetFramingErrorHandler:
  5249                           	callstack 0
  5250                           
  5251 ;; *************** function _EUSART1_SetErrorHandler *****************
  5252 ;; Defined at:
  5253 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  5256 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5272 ;;Total ram usage:        2 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    4
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_EUSART1_Initialize
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text28
  5283  0016FA                     __ptext28:
  5284                           	callstack 0
  5285  0016FA                     _EUSART1_SetErrorHandler:
  5286                           	callstack 24
  5287  0016FA                     
  5288                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5289  0016FA  C013  F0BE         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5290  0016FE  C014  F0BF         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5291  001702  0012               	return		;funcret
  5292  001704                     __end_of_EUSART1_SetErrorHandler:
  5293                           	callstack 0
  5294                           
  5295 ;; *************** function _ADC_Initialize *****************
  5296 ;; Defined at:
  5297 ;;		line 62 in file "mcc_generated_files/adc.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;		None
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, status,2
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;Total ram usage:        0 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    4
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_SYSTEM_Initialize
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text29
  5326  00169E                     __ptext29:
  5327                           	callstack 0
  5328  00169E                     _ADC_Initialize:
  5329                           	callstack 25
  5330  00169E                     
  5331                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  5332  00169E  0E00               	movlw	0
  5333  0016A0  6EC1               	movwf	193,c	;volatile
  5334                           
  5335                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  5336  0016A2  0E26               	movlw	38
  5337  0016A4  6EC0               	movwf	192,c	;volatile
  5338                           
  5339                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  5340  0016A6  0E00               	movlw	0
  5341  0016A8  6EC3               	movwf	195,c	;volatile
  5342                           
  5343                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  5344  0016AA  0E00               	movlw	0
  5345  0016AC  6EC4               	movwf	196,c	;volatile
  5346                           
  5347                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  5348  0016AE  0E11               	movlw	17
  5349  0016B0  6EC2               	movwf	194,c	;volatile
  5350  0016B2  0012               	return		;funcret
  5351  0016B4                     __end_of_ADC_Initialize:
  5352                           	callstack 0
  5353                           
  5354 ;; *************** function _EUSART1_is_rx_ready *****************
  5355 ;; Defined at:
  5356 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;		None
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;		None
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      _Bool 
  5363 ;; Registers used:
  5364 ;;		wreg
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5374 ;;Total ram usage:        0 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:    4
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_main
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text30
  5385  0016B4                     __ptext30:
  5386                           	callstack 0
  5387  0016B4                     _EUSART1_is_rx_ready:
  5388                           	callstack 26
  5389  0016B4                     
  5390                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5391  0016B4  BA9E               	btfsc	158,5,c	;volatile
  5392  0016B6  EF5F  F00B         	goto	u2281
  5393  0016BA  EF62  F00B         	goto	u2280
  5394  0016BE                     u2281:
  5395  0016BE  0E01               	movlw	1
  5396  0016C0  EF63  F00B         	goto	u2286
  5397  0016C4                     u2280:
  5398  0016C4  0E00               	movlw	0
  5399  0016C6                     u2286:
  5400  0016C6  0012               	return		;funcret
  5401  0016C8                     __end_of_EUSART1_is_rx_ready:
  5402                           	callstack 0
  5403                           
  5404 ;; *************** function _EUSART1_Read *****************
  5405 ;; Defined at:
  5406 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      unsigned char 
  5413 ;; Registers used:
  5414 ;;		wreg, status,2
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    4
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_main
  5431 ;;		_getch
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text31
  5436  0015E6                     __ptext31:
  5437                           	callstack 0
  5438  0015E6                     _EUSART1_Read:
  5439                           	callstack 26
  5440  0015E6                     l295:
  5441                           
  5442                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5443  0015E6  AA9E               	btfss	158,5,c	;volatile
  5444  0015E8  EFF8  F00A         	goto	u2291
  5445  0015EC  EFFA  F00A         	goto	u2290
  5446  0015F0                     u2291:
  5447  0015F0  EFF3  F00A         	goto	l295
  5448  0015F4                     u2290:
  5449  0015F4                     
  5450                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5451  0015F4  0E00               	movlw	0
  5452  0015F6  6E4A               	movwf	_eusart1RxLastError^0,c	;volatile
  5453  0015F8                     
  5454                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5455  0015F8  A2AB               	btfss	171,1,c	;volatile
  5456  0015FA  EF01  F00B         	goto	u2301
  5457  0015FE  EF03  F00B         	goto	u2300
  5458  001602                     u2301:
  5459  001602  EF05  F00B         	goto	l2986
  5460  001606                     u2300:
  5461  001606                     
  5462                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5463  001606  98AB               	bcf	171,4,c	;volatile
  5464                           
  5465                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5466  001608  88AB               	bsf	171,4,c	;volatile
  5467  00160A                     l2986:
  5468                           
  5469                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5470  00160A  50AE               	movf	174,w,c	;volatile
  5471  00160C  0012               	return		;funcret
  5472  00160E                     __end_of_EUSART1_Read:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _INTERRUPT_InterruptManager *****************
  5476 ;; Defined at:
  5477 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      void 
  5484 ;; Registers used:
  5485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;Total ram usage:        4 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    3
  5498 ;; This function calls:
  5499 ;;		_TMR0_ISR
  5500 ;; This function is called by:
  5501 ;;		Interrupt level 2
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	intcode
  5506  000008                     __pintcode:
  5507                           	callstack 0
  5508  000008                     _INTERRUPT_InterruptManager:
  5509                           	callstack 18
  5510                           
  5511                           ;incstack = 0
  5512  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5513  00000A  CFFA F00F          	movff	pclath,??_INTERRUPT_InterruptManager
  5514  00000E  CFFB F010          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5515  000012  CFD9 F011          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5516  000016  CFDA F012          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5517  00001A                     
  5518                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5519  00001A  AAF2               	btfss	242,5,c	;volatile
  5520  00001C  EF12  F000         	goto	i2u174_41
  5521  000020  EF14  F000         	goto	i2u174_40
  5522  000024                     i2u174_41:
  5523  000024  EF1D  F000         	goto	i2l345
  5524  000028                     i2u174_40:
  5525  000028  A4F2               	btfss	242,2,c	;volatile
  5526  00002A  EF19  F000         	goto	i2u175_41
  5527  00002E  EF1B  F000         	goto	i2u175_40
  5528  000032                     i2u175_41:
  5529  000032  EF1D  F000         	goto	i2l345
  5530  000036                     i2u175_40:
  5531  000036                     
  5532                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5533  000036  ECAE  F00A         	call	_TMR0_ISR	;wreg free
  5534  00003A                     i2l345:
  5535  00003A  C012  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5536  00003E  C011  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5537  000042  C010  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5538  000046  C00F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5539  00004A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5540  00004C  0011               	retfie		f
  5541  00004E                     __end_of_INTERRUPT_InterruptManager:
  5542                           	callstack 0
  5543                           
  5544 ;; *************** function _TMR0_ISR *****************
  5545 ;; Defined at:
  5546 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;		None
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;		None
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  1    wreg      void 
  5553 ;; Registers used:
  5554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;Total ram usage:        0 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    2
  5567 ;; This function calls:
  5568 ;;		Absolute function
  5569 ;;		_TMR0_DefaultInterruptHandler
  5570 ;;		_myTMR0ISR
  5571 ;; This function is called by:
  5572 ;;		_INTERRUPT_InterruptManager
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text33
  5577  00155C                     __ptext33:
  5578                           	callstack 0
  5579  00155C                     _TMR0_ISR:
  5580                           	callstack 18
  5581  00155C                     
  5582                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5583  00155C  94F2               	bcf	242,2,c	;volatile
  5584  00155E                     
  5585                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5586  00155E  5045               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5587  001560  6ED7               	movwf	215,c	;volatile
  5588  001562                     
  5589                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5590  001562  C044  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5591  001566                     
  5592                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5593  001566  5046               	movf	_TMR0_InterruptHandler^0,w,c
  5594  001568  1047               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  5595  00156A  B4D8               	btfsc	status,2,c
  5596  00156C  EFBA  F00A         	goto	i2u149_41
  5597  001570  EFBC  F00A         	goto	i2u149_40
  5598  001574                     i2u149_41:
  5599  001574  EFC8  F00A         	goto	i2l160
  5600  001578                     i2u149_40:
  5601  001578                     
  5602                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  5603  001578  D802               	call	i2u150_48
  5604  00157A  EFC8  F00A         	goto	i2u150_49
  5605  00157E                     i2u150_48:
  5606  00157E  0005               	push	
  5607  001580  6EFA               	movwf	pclath,c
  5608  001582  5046               	movf	_TMR0_InterruptHandler^0,w,c
  5609  001584  6EFD               	movwf	tosl,c
  5610  001586  5047               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  5611  001588  6EFE               	movwf	tosh,c
  5612  00158A  6AFF               	clrf	tosu,c
  5613  00158C  50FA               	movf	pclath,w,c
  5614  00158E  0012               	return		;indir
  5615  001590                     i2u150_49:
  5616  001590                     i2l160:
  5617  001590  0012               	return		;funcret
  5618  001592                     __end_of_TMR0_ISR:
  5619                           	callstack 0
  5620                           
  5621 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5622 ;; Defined at:
  5623 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		None
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;Total ram usage:        0 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; This function calls:
  5644 ;;		Nothing
  5645 ;; This function is called by:
  5646 ;;		_TMR0_Initialize
  5647 ;;		_TMR0_ISR
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text34
  5652  001714                     __ptext34:
  5653                           	callstack 0
  5654  001714                     _TMR0_DefaultInterruptHandler:
  5655                           	callstack 19
  5656  001714  0012               	return		;funcret
  5657  001716                     __end_of_TMR0_DefaultInterruptHandler:
  5658                           	callstack 0
  5659                           
  5660 ;; *************** function _myTMR0ISR *****************
  5661 ;; Defined at:
  5662 ;;		line 228 in file "main.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  micReading      2   12[COMRAM] unsigned short 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;Total ram usage:        4 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    1
  5683 ;; This function calls:
  5684 ;;		_TMR0_ReadTimer
  5685 ;;		i2_TMR0_WriteTimer
  5686 ;; This function is called by:
  5687 ;;		_main
  5688 ;;		_TMR0_ISR
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text35
  5693  000EAA                     __ptext35:
  5694                           	callstack 0
  5695  000EAA                     _myTMR0ISR:
  5696                           	callstack 18
  5697  000EAA                     
  5698                           ;main.c: 231:     uint16_t micReading = ADRESH;
  5699  000EAA  CFC4 F00D          	movff	4036,myTMR0ISR@micReading	;volatile
  5700  000EAE  6A0E               	clrf	(myTMR0ISR@micReading+1)^0,c
  5701                           
  5702                           ;main.c: 236:     ADCON0bits.GO_NOT_DONE = 1;
  5703  000EB0  82C2               	bsf	194,1,c	;volatile
  5704                           
  5705                           ;main.c: 240:     switch(timerState){
  5706  000EB2  EFC3  F007         	goto	i2l2232
  5707  000EB6                     i2l2208:
  5708                           
  5709                           ;main.c: 244:             if(fillBuffer){
  5710  000EB6  504C               	movf	_fillBuffer^0,w,c
  5711  000EB8  B4D8               	btfsc	status,2,c
  5712  000EBA  EF61  F007         	goto	i2u140_41
  5713  000EBE  EF63  F007         	goto	i2u140_40
  5714  000EC2                     i2u140_41:
  5715  000EC2  EFDC  F007         	goto	i2l83
  5716  000EC6                     i2u140_40:
  5717  000EC6                     
  5718                           ;main.c: 245:                 timerState = MIC_WAIT_FOR_TRIGGER;
  5719  000EC6  0E01               	movlw	1
  5720  000EC8  6E4B               	movwf	_timerState^0,c
  5721                           
  5722                           ;main.c: 246:                 bufferIdx = 0;
  5723  000ECA  0E00               	movlw	0
  5724  000ECC  6E49               	movwf	(_bufferIdx+1)^0,c
  5725  000ECE  0E00               	movlw	0
  5726  000ED0  6E48               	movwf	_bufferIdx^0,c
  5727                           
  5728                           ;main.c: 247:                 fillBuffer = 0;
  5729  000ED2  0E00               	movlw	0
  5730  000ED4  6E4C               	movwf	_fillBuffer^0,c
  5731  000ED6  EFDC  F007         	goto	i2l83
  5732  000EDA                     i2l2212:
  5733                           
  5734                           ;main.c: 253:             if(micReading >= 128 + thresholdRange || micReading <= 128 - t
      +                          hresholdRange){
  5735  000EDA  0E80               	movlw	128
  5736  000EDC  0100               	movlb	0	; () banked
  5737  000EDE  25E5               	addwf	_thresholdRange& (0+255),w,b
  5738  000EE0  6E0B               	movwf	??_myTMR0ISR^0,c
  5739  000EE2  0E00               	movlw	0
  5740  000EE4  21E6               	addwfc	(_thresholdRange+1)& (0+255),w,b
  5741  000EE6  6E0C               	movwf	(??_myTMR0ISR+1)^0,c
  5742  000EE8  500B               	movf	??_myTMR0ISR^0,w,c
  5743  000EEA  5C0D               	subwf	myTMR0ISR@micReading^0,w,c
  5744  000EEC  500C               	movf	(??_myTMR0ISR+1)^0,w,c
  5745  000EEE  580E               	subwfb	(myTMR0ISR@micReading+1)^0,w,c
  5746  000EF0  B0D8               	btfsc	status,0,c
  5747  000EF2  EF7D  F007         	goto	i2u141_41
  5748  000EF6  EF7F  F007         	goto	i2u141_40
  5749  000EFA                     i2u141_41:
  5750  000EFA  EF92  F007         	goto	i2l2216
  5751  000EFE                     i2u141_40:
  5752  000EFE                     
  5753                           ; BSR set to: 0
  5754  000EFE  0E80               	movlw	128
  5755  000F00  6E0B               	movwf	??_myTMR0ISR^0,c
  5756  000F02  0E00               	movlw	0
  5757  000F04  6E0C               	movwf	(??_myTMR0ISR+1)^0,c
  5758  000F06  51E5               	movf	_thresholdRange& (0+255),w,b
  5759  000F08  5E0B               	subwf	??_myTMR0ISR^0,f,c
  5760  000F0A  51E6               	movf	(_thresholdRange+1)& (0+255),w,b
  5761  000F0C  5A0C               	subwfb	(??_myTMR0ISR+1)^0,f,c
  5762  000F0E  500D               	movf	myTMR0ISR@micReading^0,w,c
  5763  000F10  5C0B               	subwf	??_myTMR0ISR^0,w,c
  5764  000F12  500E               	movf	(myTMR0ISR@micReading+1)^0,w,c
  5765  000F14  580C               	subwfb	(??_myTMR0ISR+1)^0,w,c
  5766  000F16  A0D8               	btfss	status,0,c
  5767  000F18  EF90  F007         	goto	i2u142_41
  5768  000F1C  EF92  F007         	goto	i2u142_40
  5769  000F20                     i2u142_41:
  5770  000F20  EFDC  F007         	goto	i2l83
  5771  000F24                     i2u142_40:
  5772  000F24                     i2l2216:
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;main.c: 254:                 adc_reading[bufferIdx] = micReading;
  5776  000F24  90D8               	bcf	status,0,c
  5777  000F26  3448               	rlcf	_bufferIdx^0,w,c
  5778  000F28  6ED9               	movwf	fsr2l,c
  5779  000F2A  3449               	rlcf	(_bufferIdx+1)^0,w,c
  5780  000F2C  6EDA               	movwf	fsr2h,c
  5781  000F2E  0E00               	movlw	low _adc_reading
  5782  000F30  26D9               	addwf	fsr2l,f,c
  5783  000F32  0E02               	movlw	high _adc_reading
  5784  000F34  22DA               	addwfc	fsr2h,f,c
  5785  000F36  C00D  FFDE         	movff	myTMR0ISR@micReading,postinc2
  5786  000F3A  C00E  FFDD         	movff	myTMR0ISR@micReading+1,postdec2
  5787  000F3E                     
  5788                           ; BSR set to: 0
  5789                           ;main.c: 255:                 bufferIdx += 1;
  5790  000F3E  4A48               	infsnz	_bufferIdx^0,f,c
  5791  000F40  2A49               	incf	(_bufferIdx+1)^0,f,c
  5792  000F42                     
  5793                           ; BSR set to: 0
  5794                           ;main.c: 256:                 timerState = MIC_ACQUIRE;
  5795  000F42  0E02               	movlw	2
  5796  000F44  6E4B               	movwf	_timerState^0,c
  5797  000F46  EFDC  F007         	goto	i2l83
  5798  000F4A                     i2l2222:
  5799                           
  5800                           ;main.c: 260:             adc_reading[bufferIdx] = micReading;
  5801  000F4A  90D8               	bcf	status,0,c
  5802  000F4C  3448               	rlcf	_bufferIdx^0,w,c
  5803  000F4E  6ED9               	movwf	fsr2l,c
  5804  000F50  3449               	rlcf	(_bufferIdx+1)^0,w,c
  5805  000F52  6EDA               	movwf	fsr2h,c
  5806  000F54  0E00               	movlw	low _adc_reading
  5807  000F56  26D9               	addwf	fsr2l,f,c
  5808  000F58  0E02               	movlw	high _adc_reading
  5809  000F5A  22DA               	addwfc	fsr2h,f,c
  5810  000F5C  C00D  FFDE         	movff	myTMR0ISR@micReading,postinc2
  5811  000F60  C00E  FFDD         	movff	myTMR0ISR@micReading+1,postdec2
  5812  000F64                     
  5813                           ;main.c: 261:             bufferIdx += 1;
  5814  000F64  4A48               	infsnz	_bufferIdx^0,f,c
  5815  000F66  2A49               	incf	(_bufferIdx+1)^0,f,c
  5816  000F68                     
  5817                           ;main.c: 262:             if(bufferIdx >= 256){
  5818  000F68  0449               	decf	(_bufferIdx+1)^0,w,c
  5819  000F6A  A0D8               	btfss	status,0,c
  5820  000F6C  EFBA  F007         	goto	i2u143_41
  5821  000F70  EFBC  F007         	goto	i2u143_40
  5822  000F74                     i2u143_41:
  5823  000F74  EFDC  F007         	goto	i2l83
  5824  000F78                     i2u143_40:
  5825  000F78                     
  5826                           ;main.c: 264:                 samplesCollected = 1;
  5827  000F78  0E01               	movlw	1
  5828  000F7A  0100               	movlb	0	; () banked
  5829  000F7C  6FC4               	movwf	_samplesCollected& (0+255),b
  5830                           
  5831                           ;main.c: 265:                 timerState = MIC_IDLE;
  5832  000F7E  0E00               	movlw	0
  5833  000F80  6E4B               	movwf	_timerState^0,c
  5834  000F82  EFDC  F007         	goto	i2l83
  5835  000F86                     i2l2232:
  5836  000F86  504B               	movf	_timerState^0,w,c
  5837  000F88  6E0B               	movwf	??_myTMR0ISR^0,c
  5838  000F8A  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
  5839                           
  5840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5841                           ; Switch size 1, requested type "simple"
  5842                           ; Number of cases is 1, Range of values is 0 to 0
  5843                           ; switch strategies available:
  5844                           ; Name         Instructions Cycles
  5845                           ; simple_byte            4     3 (average)
  5846                           ;	Chosen strategy is simple_byte
  5847  000F8C  500C               	movf	(??_myTMR0ISR+1)^0,w,c
  5848  000F8E  0A00               	xorlw	0	; case 0
  5849  000F90  B4D8               	btfsc	status,2,c
  5850  000F92  EFCD  F007         	goto	i2l3270
  5851  000F96  EFDC  F007         	goto	i2l83
  5852  000F9A                     i2l3270:
  5853                           
  5854                           ; Switch size 1, requested type "simple"
  5855                           ; Number of cases is 3, Range of values is 0 to 2
  5856                           ; switch strategies available:
  5857                           ; Name         Instructions Cycles
  5858                           ; simple_byte           10     6 (average)
  5859                           ;	Chosen strategy is simple_byte
  5860  000F9A  500B               	movf	??_myTMR0ISR^0,w,c
  5861  000F9C  0A00               	xorlw	0	; case 0
  5862  000F9E  B4D8               	btfsc	status,2,c
  5863  000FA0  EF5B  F007         	goto	i2l2208
  5864  000FA4  0A01               	xorlw	1	; case 1
  5865  000FA6  B4D8               	btfsc	status,2,c
  5866  000FA8  EF6D  F007         	goto	i2l2212
  5867  000FAC  0A03               	xorlw	3	; case 2
  5868  000FAE  B4D8               	btfsc	status,2,c
  5869  000FB0  EFA5  F007         	goto	i2l2222
  5870  000FB4  EFDC  F007         	goto	i2l83
  5871  000FB8                     i2l83:
  5872                           
  5873                           ;main.c: 280:         INTCONbits.TMR0IF = 0;
  5874  000FB8  94F2               	bcf	242,2,c	;volatile
  5875  000FBA                     
  5876                           ;main.c: 281:         TMR0_WriteTimer(0x10000 - (350 - TMR0_ReadTimer()));
  5877  000FBA  EC1A  F00B         	call	_TMR0_ReadTimer	;wreg free
  5878  000FBE  0EA2               	movlw	162
  5879  000FC0  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  5880  000FC2  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  5881  000FC4  0EFE               	movlw	254
  5882  000FC6  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  5883  000FC8  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  5884  000FCA  EC82  F00B         	call	i2_TMR0_WriteTimer	;wreg free
  5885  000FCE  0012               	return		;funcret
  5886  000FD0                     __end_of_myTMR0ISR:
  5887                           	callstack 0
  5888                           
  5889 ;; *************** function i2_TMR0_WriteTimer *****************
  5890 ;; Defined at:
  5891 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  timerVal        2    8[COMRAM] unsigned short 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;		None
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      void 
  5898 ;; Registers used:
  5899 ;;		wreg, status,2
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5909 ;;Total ram usage:        2 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		_myTMR0ISR
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text36
  5919  001704                     __ptext36:
  5920                           	callstack 0
  5921  001704                     i2_TMR0_WriteTimer:
  5922                           	callstack 18
  5923  001704                     
  5924                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5925  001704  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  5926  001706  6ED7               	movwf	215,c	;volatile
  5927  001708                     
  5928                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5929  001708  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  5930  00170C  0012               	return		;funcret
  5931  00170E                     __end_ofi2_TMR0_WriteTimer:
  5932                           	callstack 0
  5933                           
  5934 ;; *************** function _TMR0_ReadTimer *****************
  5935 ;; Defined at:
  5936 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;		None
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  readVal         2    4[COMRAM] unsigned short 
  5941 ;;  readValHigh     1    7[COMRAM] unsigned char 
  5942 ;;  readValLow      1    6[COMRAM] unsigned char 
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  2    0[COMRAM] unsigned short 
  5945 ;; Registers used:
  5946 ;;		wreg, status,2
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5954 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5956 ;;Total ram usage:        8 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_myTMR0ISR
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text37
  5966  001634                     __ptext37:
  5967                           	callstack 0
  5968  001634                     _TMR0_ReadTimer:
  5969                           	callstack 18
  5970  001634                     
  5971                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
  5972  001634  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  5973                           
  5974                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
  5975  001638  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  5976  00163C                     
  5977                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  5978  00163C  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  5979  00163E  6E03               	movwf	??_TMR0_ReadTimer^0,c
  5980  001640  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  5981  001642  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  5982  001644  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  5983  001648                     
  5984                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
  5985  001648  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  5986  00164C  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  5987  001650  0012               	return		;funcret
  5988  001652                     __end_of_TMR0_ReadTimer:
  5989                           	callstack 0
  5990                           
  5991                           	psect	text38
  5992  000000                     __ptext38:
  5993                           	callstack 0
  5994  000000                     
  5995                           	psect	rparam
  5996  0000                     
  5997                           	psect	temp
  5998  00004D                     btemp:
  5999                           	callstack 0
  6000  00004D                     	ds	1
  6001  0000                     int$flags	set	btemp
  6002  0000                     wtemp8	set	btemp+1
  6003  0000                     ttemp5	set	btemp+1
  6004  0000                     ttemp6	set	btemp+4
  6005  0000                     ttemp7	set	btemp+8
  6006                           
  6007                           	psect	idloc
  6008                           
  6009                           ;Config register IDLOC0 @ 0x200000
  6010                           ;	unspecified, using default values
  6011  200000                     	org	2097152
  6012  200000  FF                 	db	255
  6013                           
  6014                           ;Config register IDLOC1 @ 0x200001
  6015                           ;	unspecified, using default values
  6016  200001                     	org	2097153
  6017  200001  FF                 	db	255
  6018                           
  6019                           ;Config register IDLOC2 @ 0x200002
  6020                           ;	unspecified, using default values
  6021  200002                     	org	2097154
  6022  200002  FF                 	db	255
  6023                           
  6024                           ;Config register IDLOC3 @ 0x200003
  6025                           ;	unspecified, using default values
  6026  200003                     	org	2097155
  6027  200003  FF                 	db	255
  6028                           
  6029                           ;Config register IDLOC4 @ 0x200004
  6030                           ;	unspecified, using default values
  6031  200004                     	org	2097156
  6032  200004  FF                 	db	255
  6033                           
  6034                           ;Config register IDLOC5 @ 0x200005
  6035                           ;	unspecified, using default values
  6036  200005                     	org	2097157
  6037  200005  FF                 	db	255
  6038                           
  6039                           ;Config register IDLOC6 @ 0x200006
  6040                           ;	unspecified, using default values
  6041  200006                     	org	2097158
  6042  200006  FF                 	db	255
  6043                           
  6044                           ;Config register IDLOC7 @ 0x200007
  6045                           ;	unspecified, using default values
  6046  200007                     	org	2097159
  6047  200007  FF                 	db	255
  6048                           
  6049                           	psect	config
  6050                           
  6051                           ; Padding undefined space
  6052  300000                     	org	3145728
  6053  300000  FF                 	db	255
  6054                           
  6055                           ;Config register CONFIG1H @ 0x300001
  6056                           ;	Oscillator Selection bits
  6057                           ;	FOSC = INTIO67, Internal oscillator block
  6058                           ;	4X PLL Enable
  6059                           ;	PLLCFG = OFF, Oscillator used directly
  6060                           ;	Primary clock enable bit
  6061                           ;	PRICLKEN = ON, Primary clock enabled
  6062                           ;	Fail-Safe Clock Monitor Enable bit
  6063                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6064                           ;	Internal/External Oscillator Switchover bit
  6065                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6066  300001                     	org	3145729
  6067  300001  28                 	db	40
  6068                           
  6069                           ;Config register CONFIG2L @ 0x300002
  6070                           ;	Power-up Timer Enable bit
  6071                           ;	PWRTEN = OFF, Power up timer disabled
  6072                           ;	Brown-out Reset Enable bits
  6073                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6074                           ;	Brown Out Reset Voltage bits
  6075                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6076  300002                     	org	3145730
  6077  300002  1F                 	db	31
  6078                           
  6079                           ;Config register CONFIG2H @ 0x300003
  6080                           ;	Watchdog Timer Enable bits
  6081                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6082                           ;	Watchdog Timer Postscale Select bits
  6083                           ;	WDTPS = 32768, 1:32768
  6084  300003                     	org	3145731
  6085  300003  3C                 	db	60
  6086                           
  6087                           ; Padding undefined space
  6088  300004                     	org	3145732
  6089  300004  FF                 	db	255
  6090                           
  6091                           ;Config register CONFIG3H @ 0x300005
  6092                           ;	CCP2 MUX bit
  6093                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6094                           ;	PORTB A/D Enable bit
  6095                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6096                           ;	P3A/CCP3 Mux bit
  6097                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6098                           ;	HFINTOSC Fast Start-up
  6099                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6100                           ;	Timer3 Clock input mux bit
  6101                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6102                           ;	ECCP2 B output mux bit
  6103                           ;	P2BMX = PORTB5, P2B is on RB5
  6104                           ;	MCLR Pin Enable bit
  6105                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6106  300005                     	org	3145733
  6107  300005  BF                 	db	191
  6108                           
  6109                           ;Config register CONFIG4L @ 0x300006
  6110                           ;	Stack Full/Underflow Reset Enable bit
  6111                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6112                           ;	Single-Supply ICSP Enable bit
  6113                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6114                           ;	Extended Instruction Set Enable bit
  6115                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6116                           ;	Background Debug
  6117                           ;	DEBUG = OFF, Disabled
  6118  300006                     	org	3145734
  6119  300006  85                 	db	133
  6120                           
  6121                           ; Padding undefined space
  6122  300007                     	org	3145735
  6123  300007  FF                 	db	255
  6124                           
  6125                           ;Config register CONFIG5L @ 0x300008
  6126                           ;	Code Protection Block 0
  6127                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6128                           ;	Code Protection Block 1
  6129                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6130                           ;	Code Protection Block 2
  6131                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6132                           ;	Code Protection Block 3
  6133                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6134  300008                     	org	3145736
  6135  300008  0F                 	db	15
  6136                           
  6137                           ;Config register CONFIG5H @ 0x300009
  6138                           ;	Boot Block Code Protection bit
  6139                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6140                           ;	Data EEPROM Code Protection bit
  6141                           ;	CPD = OFF, Data EEPROM not code-protected
  6142  300009                     	org	3145737
  6143  300009  C0                 	db	192
  6144                           
  6145                           ;Config register CONFIG6L @ 0x30000A
  6146                           ;	Write Protection Block 0
  6147                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6148                           ;	Write Protection Block 1
  6149                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6150                           ;	Write Protection Block 2
  6151                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6152                           ;	Write Protection Block 3
  6153                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6154  30000A                     	org	3145738
  6155  30000A  0F                 	db	15
  6156                           
  6157                           ;Config register CONFIG6H @ 0x30000B
  6158                           ;	Configuration Register Write Protection bit
  6159                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6160                           ;	Boot Block Write Protection bit
  6161                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6162                           ;	Data EEPROM Write Protection bit
  6163                           ;	WRTD = OFF, Data EEPROM not write-protected
  6164  30000B                     	org	3145739
  6165  30000B  E0                 	db	224
  6166                           
  6167                           ;Config register CONFIG7L @ 0x30000C
  6168                           ;	Table Read Protection Block 0
  6169                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6170                           ;	Table Read Protection Block 1
  6171                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6172                           ;	Table Read Protection Block 2
  6173                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6174                           ;	Table Read Protection Block 3
  6175                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6176  30000C                     	org	3145740
  6177  30000C  0F                 	db	15
  6178                           
  6179                           ;Config register CONFIG7H @ 0x30000D
  6180                           ;	Boot Block Table Read Protection bit
  6181                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6182  30000D                     	org	3145741
  6183  30000D  40                 	db	64
  6184                           tosu	equ	0xFFF
  6185                           tosh	equ	0xFFE
  6186                           tosl	equ	0xFFD
  6187                           stkptr	equ	0xFFC
  6188                           pclatu	equ	0xFFB
  6189                           pclath	equ	0xFFA
  6190                           pcl	equ	0xFF9
  6191                           tblptru	equ	0xFF8
  6192                           tblptrh	equ	0xFF7
  6193                           tblptrl	equ	0xFF6
  6194                           tablat	equ	0xFF5
  6195                           prodh	equ	0xFF4
  6196                           prodl	equ	0xFF3
  6197                           indf0	equ	0xFEF
  6198                           postinc0	equ	0xFEE
  6199                           postdec0	equ	0xFED
  6200                           preinc0	equ	0xFEC
  6201                           plusw0	equ	0xFEB
  6202                           fsr0h	equ	0xFEA
  6203                           fsr0l	equ	0xFE9
  6204                           wreg	equ	0xFE8
  6205                           indf1	equ	0xFE7
  6206                           postinc1	equ	0xFE6
  6207                           postdec1	equ	0xFE5
  6208                           preinc1	equ	0xFE4
  6209                           plusw1	equ	0xFE3
  6210                           fsr1h	equ	0xFE2
  6211                           fsr1l	equ	0xFE1
  6212                           bsr	equ	0xFE0
  6213                           indf2	equ	0xFDF
  6214                           postinc2	equ	0xFDE
  6215                           postdec2	equ	0xFDD
  6216                           preinc2	equ	0xFDC
  6217                           plusw2	equ	0xFDB
  6218                           fsr2h	equ	0xFDA
  6219                           fsr2l	equ	0xFD9
  6220                           status	equ	0xFD8

Data Sizes:
    Strings     557
    Constant    0
    Data        2
    BSS         570
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      76
    BANK0           160     92     135
    BANK1           256    256     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1336_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[30]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[30]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[30]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), myTMR0ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), myTMR0ISR(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               287   287      0   18328
                                             61 BANK0     31    31      0
                                              0 BANK1    256   256      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                            ___aldiv
                            ___lwdiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   14342
                                             49 BANK0     12     4      8
                            ___aldiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11645
                                             41 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   11163
                                             57 COMRAM     2     2      0
                                             26 BANK0     15     9      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6701
                                             47 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4435
                                             36 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             29 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             36 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             18 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             18 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             29 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1546
                                             20 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                             19 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     562
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     421
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     625
                                             18 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     207
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             20 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     228
                                             14 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     228
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           4     4      0     228
                                             10 COMRAM     4     4      0
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (13) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   ___aldiv
   ___lwdiv
   ___wmul
   _printf
     ___aldiv (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     200      37       13.1%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      87       5       84.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      4C       1       80.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D3      12        0.0%
DATA                 0      0     3D3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 21 17:50:01 2020

                                            l35 0064                                              l45 0130  
                                            l62 053E                                              l38 00BC  
                           ___wmul@multiplicand 0015                                 _timer0ReloadVal 0044  
                           myTMR0ISR@micReading 000D                                             l117 15BC  
                                           l141 155A                                             l214 16B2  
                                           l302 168A                                             l311 16D0  
                                           l153 16DA                                             l305 169C  
                                           l323 16F8                                             l163 16E4  
                                           l326 16EE                                             l192 165E  
                                           l329 1702                                             l338 1710  
                                           l195 166C                                             l427 10DA  
                                           l348 1632                                             l189 1686  
                                           l286 16C6                                             l278 14EE  
                                           l462 0D44                                             l295 15E6  
                                           l299 160C                                             l475 0EA8  
                                           l846 137A                                             l839 1372  
                                           _abs 1472                                             _pad 11B0  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1100 0984  
                                          l1105 0BBC                                            l1122 14B0  
                                          l1114 13D6                                            l1026 15E4  
                                          l1115 13DE                                            ?_abs 0025  
                                          l1053 11F4                                            l1134 1306  
                                          l1142 1470                                            l1119 14A8  
                                          l3000 0FE2                                            l1072 1182  
                                          l1056 1236                                            l1080 0744  
                                          l3010 1018                                            l3002 0FF2  
                                          l1074 11AE                                            l1058 1270  
                                          l1082 074C                                            l3020 1060  
                                          l3012 1028                                            l3004 0FF6  
                                          l1148 1524                                            l3100 0158  
                                          l1069 1140                                            l3030 10A4  
                                          l3022 106A                                            l3014 103E  
                                          l3006 1004                                            l3102 015E  
                                          l3024 1088                                            l3016 1046  
                                          l3032 10AA                                            l3008 1014  
                                          l3040 1308                                            l3200 0630  
                                          l3120 0212                                            l3104 016E  
                                          l3034 10BA                                            l3026 1098  
                                          l3018 1052                                            l3050 1340  
                                          l3042 1310                                            l3202 0638  
                                          l3130 025C                                            l3122 0216  
                                          l3114 018C                                            l3106 017A  
                                          l3036 10CA                                            l3028 109A  
                                          l3060 136C                                            l3052 1346  
                                          l3044 1322                                            l3140 02A2  
                                          l3132 0262                                            l3124 021A  
                                          l3116 01B6                                            l3108 0184  
                                          l3054 135C                                            l3046 132A  
                                          l3206 064E                                            l3150 03E6  
                                          l3142 0352                                            l3134 0278  
                                          l3126 022A                                            l3118 01E0  
                                          l3070 007E                                            l3062 0052  
                                          l3056 1364                                            l3048 1332  
                                          l3160 047C                                            l3152 0408  
                                          l3144 03B0                                            l3136 028C  
                                          l3128 0236                                            l3080 00AC  
                                          l3072 0080                                            l3064 0056  
                                          l3058 1366                                            l3170 0528  
                                          l3162 04F6                                            l3154 041E  
                                          l3146 03B4                                            l3138 0296  
                                          l3090 00F4                                            l3082 00BA  
                                          l3074 0082                                            l3066 0062  
                                          l2620 16CA                                            l2700 0D4A  
                                          l3172 0534                                            l3164 0506  
                                          l3148 03CA                                            l3156 045C  
                                          l3084 00CA                                            l3076 0090  
                                          l3068 0072                                            l2630 12BE  
                                          l2622 1272                                            l2710 0DAA  
                                          l2702 0D58                                            l3190 0584  
                                          l3182 0566                                            l3166 050E  
                                          l3158 0470                                            l3086 00DC  
                                          l3078 009E                                            l2616 168A  
                                          l2632 12F4                                            l2624 1284  
                                          l2720 0E20                                            l2712 0DC8  
                                          l2704 0D78                                            l2640 144C  
                                          l2800 0738                                            l3192 05B0  
                                          l3184 0572                                            l3176 0544  
                                          l3096 00FE                                            l3088 00E0  
                                          l2618 1698                                            l2626 1296  
                                          l2730 0E88                                            l2722 0E40  
                                          l2714 0DD0                                            l2706 0D7C  
                                          l2642 1450                                            l2650 1518  
                                          l2810 0782                                            l2802 0754  
                                          l3194 05C2                                            l3178 054C  
                                          l3098 011C                                            l2628 12A0  
                                          l2660 0BF0                                            l2724 0E52  
                                          l2716 0DE4                                            l2708 0D8A  
                                          l2636 142E                                            l2644 14F0  
                                          l2740 11E0                                            l2820 0820  
                                          l2812 078A                                            l2804 0766  
                                          l2900 0B84                                            l3268 0662  
                                          l3196 05CA                                            l3188 057C  
                                          l2910 15A2                                            l2670 0C32  
                                          l2662 0BF4                                            l2654 0BBE  
                                          l2718 0DF2                                            l2726 0E58  
                                          l2638 143A                                            l2646 14FC  
                                          l2750 1244                                            l2742 11EC  
                                          l2734 11B0                                            l2830 08F2  
                                          l2814 0790                                            l2822 0884  
                                          l2806 0774                                            l2902 0BAA  
                                          l3198 05F6                                            l2912 15BA  
                                          l2920 1546                                            l2760 10DC  
                                          l2680 0C8C                                            l2672 0C50  
                                          l2664 0C02                                            l2656 0BC2  
                                          l2728 0E68                                            l2648 1500  
                                          l2752 1258                                            l2744 1200  
                                          l2736 11BE                                            l2840 0938  
                                          l2824 08A0                                            l2832 0900  
                                          l2816 0812                                            l2808 077A  
                                          l2930 1652                                            l2850 16DC  
                                          l2922 1548                                            l2914 1526  
                                          l2770 1126                                            l2762 10EE  
                                          l2682 0CBA                                            l2674 0C58  
                                          l2690 0CF4                                            l2666 0C22  
                                          l2658 0BD0                                            l2746 1214  
                                          l2738 11D2                                            l2842 0944  
                                          l2834 0912                                            l2826 08BE  
                                          l2818 081A                                            l2932 169E  
                                          l2852 16F0                                            l2940 14DE  
                                          l2908 1592                                            l2924 154A  
                                          l2916 1528                                            l2780 1164  
                                          l2764 10FA                                            l2692 0D04  
                                          l2684 0CDA                                            l2676 0C6C  
                                          l2668 0C26                                            l2756 1472  
                                          l2748 1218                                            l2844 094C  
                                          l2836 0920                                            l2828 08D8  
                                          l2860 09AC                                            l2854 16E6  
                                          l2942 14EA                                            l2934 14B2  
                                          l2926 1556                                            l2918 1530  
                                          l2782 1190                                            l2774 1138  
                                          l2766 1106                                            l2694 0D24  
                                          l2686 0CDC                                            l2678 0C7A  
                                          l2758 148C                                            l2838 0926  
                                          l2846 095C                                            l2790 06C4  
                                          l2870 0A28                                            l2862 09BA  
                                          l2950 13B8                                            ?_pad 0025  
                                          l2856 16FA                                            l2936 14C6  
                                          l2928 170E                                            l2960 167E  
                                          l2952 166E                                            l2784 11A2  
                                          l2776 114C                                            l2768 1114  
                                          l2688 0CEE                                            l2792 06EE  
                                          l2880 0ADA                                            l2864 09CA  
                                          l2944 137C                                            l2938 14D2  
                                          l2962 1682                                            l2954 1672  
                                          l2778 1160                                            l2698 0D46  
                                          l2794 070E                                            l2890 0B5A  
                                          l2874 0A44                                            l2866 09CE  
                                          l2858 0986                                            l2946 1384  
                                          l2970 15C8                                            l2980 15F4  
                                          l2956 1676                                            l2964 16D2  
                                          l2796 071C                                            l2788 06A4  
                                          l2884 0B12                                            l2876 0A6A  
                                          l2868 09F4                                            l2948 1392  
                                          l2982 15F8                                            l2974 16B4  
                                          l2958 167A                                            l2966 16D6  
                                          l2990 160E                                            l2798 071E  
                                          l2886 0B38                                            l2894 0B68  
                                          l2878 0A90                                            l2984 1606  
                                          l2992 162A                                            l2896 0B76  
                                          l2888 0B46                                            l2968 15BE  
                                          l2986 160A                                            l2978 15E6  
                                          l2996 0FD0                                            l2998 0FD4  
                                          STR_1 FFCD                                            STR_2 FF29  
                                          STR_3 FFD8                                            STR_4 FFFB  
                                          STR_5 FE4D                                            STR_6 FFE1  
                                          STR_7 FFF7                                            STR_8 FE18  
                                          STR_9 FFF7                                            u2000 148C  
                                          u2001 1488                                            u2010 10EE  
                                          u2011 10EA                                            u2020 1114  
                                          u2100 0738                                            u2021 1110  
                                          u2101 0734                                            u2030 1134  
                                          u2110 0766                                            u2031 1130  
                                          u2111 0762                                            u2040 1182  
                                          u2200 0938                                            u2120 0774  
                                          u2041 117E                                            u2201 0934  
                                          u2121 0770                                            u2050 1190  
                                          u2130 08A0                                            u2210 09AC  
                                          u2051 118C                                            u2131 089C  
                                          u2211 09A8                                            u2300 1606  
                                          u2140 08BE                                            u2060 06D6  
                                          u2220 09F4                                            u2301 1602  
                                          u2141 08BA                                            u2061 06D0  
                                          u2221 09F0                                            _LATA 000F89  
                                          u2310 0FE2                                            u2150 08D8  
                                          u2070 06D8                                            u2230 0A6A  
                                          _LATB 000F8A                                            u2311 0FDE  
                                          u2151 08D4                                            u2231 0A66  
                                          _LATC 000F8B                                            u2320 1004  
                                          u2160 08F2                                            u2080 06EE  
                                          u2240 0A90                                            u2400 0072  
                                          u2321 1000                                            u2161 08EE  
                                          u2081 06EA                                            u2241 0A8C  
                                          u2401 006E                                            u2330 103E  
                                          u2170 0900                                            u2090 071C  
                                          u2250 0B38                                            u2410 00CA  
                                          u2331 103A                                            u2171 08FC  
                                          u2091 0718                                            u2251 0B34  
                                          u2411 00C6                                            u2260 166C  
                                          u2340 1060                                            u2180 0912  
                                          u2500 0470                                            u2420 00DC  
                                          u2261 1668                                            u2341 105C  
                                          u2181 090E                                            u2501 046C  
                                          u2421 00D8                                            u2350 1088  
                                          u2190 0920                                            u2270 13D6  
                                          u2510 0524                                            u2430 011C  
                                          u2351 1084                                            u2191 091C  
                                          u2271 13D2                                            u2511 0520  
                                          u2431 0118                                            u2280 16C4  
                                          u2360 10BA                                            u1800 12F4  
                                          u2520 0562                                            u2440 016E  
                                          u2281 16BE                                            u2361 10B6  
                                          u1801 12F0                                            u2521 055E  
                                          u2441 016A                                            u2290 15F4  
                                          u2370 1322                                            u1810 1470  
                                          u2530 05C2                                            u2450 01B6  
                                          u2291 15F0                                            u2371 131E  
                                          u1811 146C                                            u2531 05BE  
                                          u2451 01B2                                            u2380 1340  
                                          u1900 0D58                                            u1820 1518  
                                          u2460 01E0                                            u2381 133C  
                                          u1901 0D54                                            u1821 1514  
                                          u2461 01DC                                            u2286 16C6  
                                          u2390 135C                                            u1830 0BD0  
                                          u1910 0D8A                                            u2470 022A  
                                          u2391 1358                                            u1831 0BCC  
                                          u1911 0D86                                            u2471 0226  
                                          u1760 1698                                            u1840 0C02  
                                          u1920 0DC8                                            u2480 0278  
                                          u1761 1694                                            u1841 0BFE  
                                          u1921 0DC4                                            u2481 0274  
                                          u1770 1284                                            u1930 0DF2  
                                          u2490 03CA                                            u1771 1280  
                                          u1851 0C2C                                            u1931 0DEE  
                                          u2491 03C6                                            u1780 1296  
                                          u1860 0C50                                            u1940 0E20  
                                          u1781 1292                                            u1861 0C4C  
                                          u1941 0E1C                                            u1790 12BE  
                                          u1870 0C7A                                            u1950 0E68  
                                          u1791 12BA                                            u1871 0C76  
                                          u1951 0E64                                            u1880 0CBA  
                                          u1960 11BE                                            u1881 0CB6  
                                          u1961 11BA                                            u1890 0D04  
                                          u1970 11E0                                            u1891 0D00  
                                          u1971 11DC                                            u1980 1236  
                                          u1981 1232                                            u1990 1244  
                                          u1991 1240                                            i2l90 0FCE  
                                          i2l83 0FB8                                            _WPUB 000F61  
                                 _EUSART1_Write 1688                                            abs@a 0025  
                                          _dbuf 00C5                                            _ctoa 10DC  
                                          _main 0052                                            _dtoa 06A4  
                                 ?_EUSART1_Read 0001                                            _prec 003E  
                                          _nout 00BC                                            pad@i 002C  
                                          pad@p 0029                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002E  
                                          fsr2l 000FD9                                            btemp 004D  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 004E                                    ___param_bank 000000  
                                         ??_abs 0027                                           ??_pad 002B  
                       __end_of_TMR0_Initialize 155C                  ??_TMR0_DefaultInterruptHandler 0001  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 166E  
                               __end_of___aldiv 10DC                                 __end_of___aodiv 0D46  
                                         ?_ctoa 001E                                           ?_main 0001  
                                         ?_dtoa 0030                                 __end_of___aomod 0EAA  
                                         STR_10 FEAC                                           STR_11 FFAF  
                                         STR_12 FF0E                                           STR_20 FDD1  
                                         STR_21 FECF                                           STR_13 FEF0  
                                         STR_22 FFF1                                           STR_14 FECF  
                                         STR_23 FE7F                                           STR_15 FFBE  
                                         STR_24 FFF4                                           STR_16 FFEA  
                                         STR_17 FF89                                           STR_25 FF42  
                                         STR_26 FF42                                           STR_18 FF5A  
                                         STR_27 FF42                                           STR_19 FE81  
                                         STR_28 FF72                                           STR_29 FF9E  
                     TMR0_ReadTimer@readValHigh 0008                                           _T0CON 000FD5  
                               __end_of___lwdiv 137C                                           i2l150 1650  
                                         i2l160 1590                                           i2l153 170C  
                               _TMR0_WriteTimer 16D2                                           i2l166 1714  
                                         i2l345 003A                                    vfpfcnvrt@fmt 007C  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94               __size_of_TMR0_SetInterruptHandler 000A  
                     ?_TMR0_SetInterruptHandler 0013                                __end_of_TMR0_ISR 1592  
                                         _flags 0040                                           _fputc 1272  
                                         _fputs 142E                                           pad@fp 0025  
                                         _width 003C                                           ctoa@c 0020  
                                         _putch 16C8                                           ctoa@l 0022  
                                         ctoa@w 0024                                           main@i 00B2  
                                         dtoa@d 0032                                           dtoa@i 0078  
                                         dtoa@n 0070                                           dtoa@p 006A  
                                         dtoa@s 006E                                           dtoa@w 006C  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         tablat 000FF5                                  ??_EUSART1_Read 0013  
                                         plusw2 000FDB                                           ttemp5 004E  
                                         ttemp6 0051                                           ttemp7 0055  
                                         status 000FD8                                           wtemp8 004E  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 13E0  
                                  __end_of_ctoa 11B0                      __end_of_EUSART1_Initialize 14F0  
                                  __end_of_main 06A4                                    __end_of_dtoa 0986  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 0021  
                                        ??_main 009D                                          ??_dtoa 0060  
                                 __activetblptr 000003                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0015                                          ?_fputs 001E  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l2202 1704  
                                        i2l2210 0EC6                                          i2l2140 163C  
                                        i2l2204 1708                                          i2l2220 0F42  
                                        i2l2212 0EDA                                          i2l2142 1648  
                                        i2l2222 0F4A                                          i2l2214 0EFE  
                                        i2l2206 0EAA                                          i2l2224 0F64  
                                        i2l2216 0F24                                          i2l2208 0EB6  
                                        i2l2232 0F86                                          i2l2138 1634  
                                        i2l2234 0FBA                                          i2l2226 0F68  
                                        i2l2218 0F3E                                          i2l2330 1578  
                                        i2l2322 155C                                          i2l2228 0F78  
                                        i2l2324 155E                                          i2l2326 1562  
                                        i2l2328 1566                                          i2l3270 0F9A  
                                        i2l2560 001A                                          i2l2562 0028  
                                        i2l2564 0036                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   main@crossings 0100  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    vfprintf@cfmt 008F  
                                     ??___aldiv 001B                                       ??___aodiv 0023  
                                     ??___aomod 0023                                          ___wmul 160E  
                                 main@periodSum 00AB                         __end_of_TMR0_WriteTimer 16DC  
                                     ??___lwdiv 0017                       i2TMR0_WriteTimer@timerVal 0009  
                      ?_EUSART1_SetErrorHandler 0013                                ?_TMR0_Initialize 0001  
                                        clear_0 1400                                          clear_1 1412  
                                        clear_2 141E                                          _printf 15BE  
                                        pad@buf 0027                ??_EUSART1_SetOverrunErrorHandler 0015  
               ?_EUSART1_SetOverrunErrorHandler 0013                                          ctoa@fp 001E  
                                        dtoa@fp 0030                                          _strlen 14F0  
                                        fputc@c 0015                                          fputs@c 0022  
                                        fputs@i 0023                                          fputs@s 001E  
                                  __mediumconst FDD0                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 13E0                                 ??_EUSART1_Write 0013  
      TMR0_SetInterruptHandler@InterruptHandler 0013                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 166E                                      __accesstop 0060  
                       __end_of__initialization 1424                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 1712                             ??_SYSTEM_Initialize 0017  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 1308  
                                 __end_of_fputs 1472                                   __end_of_putch 16D2  
                       __size_of_TMR0_ReadTimer 001E                            __end_of_EUSART1_Read 160E  
                                       ??_fputc 0019                       __end_of_SYSTEM_Initialize 1688  
                                       ??_fputs 0022                              __size_of_myTMR0ISR 0126  
                                       ??_putch 0014                                      __pbssBANK0 00BC  
               __end_of_EUSART1_SetErrorHandler 1704                __end_of_TMR0_SetInterruptHandler 16E6  
                                       ?___wmul 0013                                      ??_TMR0_ISR 000F  
                              ?_TMR0_WriteTimer 0013                                      _fillBuffer 004C  
                                       ?_printf 0091                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 0013          __end_of_EUSART1_SetFramingErrorHandler 16FA  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 16F0  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0238  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                          _ADC_InterruptHandler 0042                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aldiv 0FD0  
                                       ___aodiv 0BBE                                         ___aomod 0D46  
                               __size_of___wmul 0026                                         ___lwdiv 1308  
                             __end_of_myTMR0ISR 0FD0                                       ?_vfprintf 0089  
                           _EUSART1_is_rx_ready 16B4                                         __pcinit 13E0  
                                       __ramtop 1000                                         __ptext0 0052  
                                       __ptext1 15BE                                         __ptext2 137C  
                                       __ptext3 0986                                         __ptext4 06A4  
                                       __ptext5 11B0                                         __ptext6 14F0  
                                       __ptext7 142E                                         __ptext8 1472  
                                       __ptext9 0D46                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize 1652                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                ___aldiv@dividend 0013  
                            _EUSART1_Initialize 14B2                        ??_PIN_MANAGER_Initialize 0013  
                                       main@cmd 00AF                      __size_of_SYSTEM_Initialize 001A  
                          end_of_initialization 1424                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0017  
                   _EUSART1_OverrunErrorHandler 00C0                                         fputs@fp 0020  
                             __end_of_vfpfcnvrt 0BBE                           TMR0_ReadTimer@readVal 0005  
                              ___aldiv@quotient 001D                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                      ??_vfprintf 003C  
                                _TMR0_ReadTimer 1634                            ??_EUSART1_Initialize 0015  
                                       strlen@a 0015                                         strlen@s 0013  
                                    _timerState 004B                        _TMR0_SetInterruptHandler 16DC  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0013  
                         ??_EUSART1_is_rx_ready 0013                                    _EUSART1_Read 15E6  
                        __end_of_TMR0_ReadTimer 1652                    __end_of_INTERRUPT_Initialize 1712  
                                   vfpfcnvrt@ap 007E                                     vfpfcnvrt@fp 007A  
                                   vfpfcnvrt@ll 0080                                  __end_of___wmul 1634  
                             __size_of_TMR0_ISR 0036                                  _ADC_Initialize 169E  
                                   _adc_reading 0200                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 15E6                                  __end_of_strlen 1526  
                           start_initialization 13E0                        __size_of_TMR0_Initialize 0036  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 14B2  
                                   __end_of_pad 1272                                     putch@txData 0014  
                         __end_of_EUSART1_Write 169E                                     vfprintf@fmt 008B  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0017  
                        __end_of_ADC_Initialize 16B4                                     __pdataBANK0 00E5  
                               main@avgPeriodUs 00AD                                        ??_printf 003C  
                                      ??_strlen 0015                                     __pbssBIGRAM 0200  
                                   __pbssCOMRAM 003C                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                ___aodiv@dividend 0013  
              ??_EUSART1_SetFramingErrorHandler 0015                 ?_EUSART1_SetFramingErrorHandler 0013  
                         _TMR0_InterruptHandler 0046                                ___lwdiv@dividend 0013  
                        _PIN_MANAGER_Initialize 1592                                       _dtoa$1405 0068  
                                     __pintcode 0008                                   __pmediumconst FDD0  
                                      ?___aldiv 0013                                        ?___aodiv 0013  
                                      ?___aomod 0013                                ___aodiv@quotient 0025  
                                      ?___lwdiv 0013                                 ?_ADC_Initialize 0001  
                                     _bufferIdx 0048                    ??_INTERRUPT_InterruptManager 000F  
                             __size_of_vfprintf 0064                                       _myTMR0ISR 0EAA  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 00BE  
                       _EUSART1_SetErrorHandler 16FA                                ___lwdiv@quotient 0018  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 170E  
                               ___aldiv@divisor 0017                               ??_TMR0_Initialize 0015  
                               ___aldiv@counter 001B                                  ___wmul@product 0017  
       EUSART1_SetErrorHandler@interruptHandler 0013                                        i2u140_40 0EC6  
                                      i2u140_41 0EC2                                        i2u141_40 0EFE  
                                      i2u141_41 0EFA                                        i2u142_40 0F24  
                                      i2u142_41 0F20                                        i2u143_40 0F78  
                                      i2u150_48 157E                                        i2u143_41 0F74  
                                      i2u150_49 1590             __size_of_INTERRUPT_InterruptManager 0046  
                                      i2u149_40 1578                      ??_TMR0_SetInterruptHandler 0015  
                                      i2u149_41 1574                                        i2u174_40 0028  
                                      i2u174_41 0024                                        i2u175_40 0036  
                                      i2u175_41 0032                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 155C  
                                     _vfpfcnvrt 0986                        TMR0_ReadTimer@readValLow 0007  
                                    _ADCON0bits 000FC2                                       main@i_224 00B8  
                                     main@i_225 00B0                                       main@i_218 00B4  
                                     main@i_229 00BA                               ___wmul@multiplier 0013  
                                    ?_myTMR0ISR 0001                                       main@crIdx 00B6  
                             i2_TMR0_WriteTimer 1704                                      vfpfcnvrt@c 0088  
                            ?i2_TMR0_WriteTimer 0009                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                             ??i2_TMR0_WriteTimer 000B  
                                      __Hrparam 0000                                      vfprintf@ap 008D  
                                      __Lrparam 0000                                      vfprintf@fp 0089  
                       ??_OSCILLATOR_Initialize 0013                                __size_of___aldiv 010C  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                   __size_of_EUSART1_Initialize 003E                                      ?_vfpfcnvrt 007A  
                              __size_of___lwdiv 0074                                 ___aodiv@divisor 001B  
                               ___aodiv@counter 0023                       __end_ofi2_TMR0_WriteTimer 170E  
                     ??_EUSART1_SetErrorHandler 0015                     _EUSART1_DefaultErrorHandler 000000  
                               main@periodSumUs 00A9                     __end_of_EUSART1_is_rx_ready 16C8  
                               ___lwdiv@divisor 0015                                 ___lwdiv@counter 0017  
                                      __ptext10 0BBE                                        __ptext11 10DC  
                                      __ptext20 1526                                        __ptext12 1272  
                                      __ptext21 16DC                                        __ptext13 16C8  
                                      __ptext30 16B4                                        __ptext22 1592  
                                      __ptext14 1688                                        __ptext31 15E6  
                                      __ptext23 1652                                        __ptext15 160E  
                                      __ptext24 170E                                        __ptext16 1308  
                                      __ptext33 155C                                        __ptext25 14B2  
                                      __ptext17 0FD0                                        __ptext34 1714  
                                      __ptext26 16E6                                        __ptext18 16D2  
                                      __ptext35 0EAA                                        __ptext27 16F0  
                                      __ptext19 166E                                        __ptext36 1704  
                                      __ptext28 16FA                                        __ptext37 1634  
                                      __ptext29 169E                                        __ptext38 0000  
                       TMR0_WriteTimer@timerVal 0013                               ??_TMR0_WriteTimer 0015  
                                 __size_of_ctoa 00D4                                   __size_of_main 0652  
                                 __size_of_dtoa 02E2                                ??_TMR0_ReadTimer 0003  
          __end_of_TMR0_DefaultInterruptHandler 1716           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 1714  EUSART1_SetOverrunErrorHandler@interruptHandler 0013  
                                      int$flags 004D                                        _vfprintf 137C  
            __end_of_INTERRUPT_InterruptManager 004E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 0091                     _EUSART1_FramingErrorHandler 00C2  
                              ___aomod@dividend 0013                                     ??_myTMR0ISR 000B  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 0013  
                                      intlevel2 0000                                _samplesCollected 00C4  
                                _thresholdRange 00E5                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 16F0         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 16E6                                      _RCSTA1bits 000FAB  
                              ??_ADC_Initialize 0013                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 009B  
EUSART1_SetFramingErrorHandler@interruptHandler 0013                                 ___aomod@divisor 001B  
                                   ??_vfpfcnvrt 003A                                 ___aomod@counter 0023  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 004A  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 1526  
                                  ___aldiv@sign 001C                                    ___aodiv@sign 0024  
                __end_of_PIN_MANAGER_Initialize 15BE                                    ___aomod@sign 0024  
                                  fp__myTMR0ISR 0000  
