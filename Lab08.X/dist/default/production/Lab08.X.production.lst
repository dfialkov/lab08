

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Oct 20 11:22:24 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 05/05/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F26K22 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    96  0000                     
    97 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    98  0000                     
    99 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   100  0000                     
   101                           	psect	idataBANK1
   102  001582                     __pidataBANK1:
   103                           	callstack 0
   104                           
   105                           ;initializer for _thresholdRange
   106  001582  000A               	dw	10
   107  0000                     _ANSELA	set	3896
   108  0000                     _ANSELB	set	3897
   109  0000                     _ANSELC	set	3898
   110  0000                     _RCONbits	set	4048
   111  0000                     _TXREG1	set	4013
   112  0000                     _RCREG1	set	4014
   113  0000                     _RCSTA1bits	set	4011
   114  0000                     _TXSTA1bits	set	4012
   115  0000                     _PIR1bits	set	3998
   116  0000                     _SPBRGH1	set	4016
   117  0000                     _SPBRG1	set	4015
   118  0000                     _TXSTA1	set	4012
   119  0000                     _RCSTA1	set	4011
   120  0000                     _BAUDCON1	set	4024
   121  0000                     _ADCON0	set	4034
   122  0000                     _ADRESL	set	4035
   123  0000                     _ADCON2	set	4032
   124  0000                     _ADCON1	set	4033
   125  0000                     _OSCTUNE	set	3995
   126  0000                     _OSCCON2	set	4050
   127  0000                     _OSCCON	set	4051
   128  0000                     _T0CON	set	4053
   129  0000                     _TMR0L	set	4054
   130  0000                     _TMR0H	set	4055
   131  0000                     _T0CONbits	set	4053
   132  0000                     _INTCON2bits	set	4081
   133  0000                     _WPUB	set	3937
   134  0000                     _TRISC	set	3988
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISA	set	3986
   137  0000                     _LATC	set	3979
   138  0000                     _LATB	set	3978
   139  0000                     _LATA	set	3977
   140  0000                     _ADRESH	set	4036
   141  0000                     _ADCON0bits	set	4034
   142  0000                     _INTCONbits	set	4082
   143  0000                     _PLLRDY	set	32407
   144                           
   145                           	psect	mediumconst
   146  00FDEC                     __pmediumconst:
   147                           	callstack 0
   148  00FDEC  00                 	db	0
   149  00FDED                     STR_19:
   150  00FDED  66                 	db	102	;'f'
   151  00FDEE  3A                 	db	58	;':'
   152  00FDEF  20                 	db	32
   153  00FDF0  67                 	db	103	;'g'
   154  00FDF1  61                 	db	97	;'a'
   155  00FDF2  74                 	db	116	;'t'
   156  00FDF3  68                 	db	104	;'h'
   157  00FDF4  65                 	db	101	;'e'
   158  00FDF5  72                 	db	114	;'r'
   159  00FDF6  20                 	db	32
   160  00FDF7  35                 	db	53	;'5'
   161  00FDF8  31                 	db	49	;'1'
   162  00FDF9  32                 	db	50	;'2'
   163  00FDFA  20                 	db	32
   164  00FDFB  73                 	db	115	;'s'
   165  00FDFC  61                 	db	97	;'a'
   166  00FDFD  6D                 	db	109	;'m'
   167  00FDFE  70                 	db	112	;'p'
   168  00FDFF  6C                 	db	108	;'l'
   169  00FE00  65                 	db	101	;'e'
   170  00FE01  73                 	db	115	;'s'
   171  00FE02  20                 	db	32
   172  00FE03  66                 	db	102	;'f'
   173  00FE04  72                 	db	114	;'r'
   174  00FE05  6F                 	db	111	;'o'
   175  00FE06  6D                 	db	109	;'m'
   176  00FE07  20                 	db	32
   177  00FE08  74                 	db	116	;'t'
   178  00FE09  68                 	db	104	;'h'
   179  00FE0A  65                 	db	101	;'e'
   180  00FE0B  20                 	db	32
   181  00FE0C  6D                 	db	109	;'m'
   182  00FE0D  69                 	db	105	;'i'
   183  00FE0E  63                 	db	99	;'c'
   184  00FE0F  72                 	db	114	;'r'
   185  00FE10  6F                 	db	111	;'o'
   186  00FE11  70                 	db	112	;'p'
   187  00FE12  68                 	db	104	;'h'
   188  00FE13  6F                 	db	111	;'o'
   189  00FE14  6E                 	db	110	;'n'
   190  00FE15  65                 	db	101	;'e'
   191  00FE16  20                 	db	32
   192  00FE17  61                 	db	97	;'a'
   193  00FE18  6E                 	db	110	;'n'
   194  00FE19  64                 	db	100	;'d'
   195  00FE1A  20                 	db	32
   196  00FE1B  63                 	db	99	;'c'
   197  00FE1C  61                 	db	97	;'a'
   198  00FE1D  6C                 	db	108	;'l'
   199  00FE1E  63                 	db	99	;'c'
   200  00FE1F  75                 	db	117	;'u'
   201  00FE20  6C                 	db	108	;'l'
   202  00FE21  61                 	db	97	;'a'
   203  00FE22  74                 	db	116	;'t'
   204  00FE23  65                 	db	101	;'e'
   205  00FE24  20                 	db	32
   206  00FE25  74                 	db	116	;'t'
   207  00FE26  68                 	db	104	;'h'
   208  00FE27  65                 	db	101	;'e'
   209  00FE28  20                 	db	32
   210  00FE29  66                 	db	102	;'f'
   211  00FE2A  72                 	db	114	;'r'
   212  00FE2B  65                 	db	101	;'e'
   213  00FE2C  71                 	db	113	;'q'
   214  00FE2D  75                 	db	117	;'u'
   215  00FE2E  65                 	db	101	;'e'
   216  00FE2F  6E                 	db	110	;'n'
   217  00FE30  63                 	db	99	;'c'
   218  00FE31  79                 	db	121	;'y'
   219  00FE32  0D                 	db	13
   220  00FE33  0A                 	db	10
   221  00FE34  00                 	db	0
   222  00FE35                     STR_5:
   223  00FE35  54                 	db	84	;'T'
   224  00FE36  68                 	db	104	;'h'
   225  00FE37  65                 	db	101	;'e'
   226  00FE38  20                 	db	32
   227  00FE39  6C                 	db	108	;'l'
   228  00FE3A  61                 	db	97	;'a'
   229  00FE3B  73                 	db	115	;'s'
   230  00FE3C  74                 	db	116	;'t'
   231  00FE3D  20                 	db	32
   232  00FE3E  32                 	db	50	;'2'
   233  00FE3F  35                 	db	53	;'5'
   234  00FE40  36                 	db	54	;'6'
   235  00FE41  20                 	db	32
   236  00FE42  41                 	db	65	;'A'
   237  00FE43  44                 	db	68	;'D'
   238  00FE44  43                 	db	67	;'C'
   239  00FE45  20                 	db	32
   240  00FE46  73                 	db	115	;'s'
   241  00FE47  61                 	db	97	;'a'
   242  00FE48  6D                 	db	109	;'m'
   243  00FE49  70                 	db	112	;'p'
   244  00FE4A  6C                 	db	108	;'l'
   245  00FE4B  65                 	db	101	;'e'
   246  00FE4C  73                 	db	115	;'s'
   247  00FE4D  20                 	db	32
   248  00FE4E  66                 	db	102	;'f'
   249  00FE4F  72                 	db	114	;'r'
   250  00FE50  6F                 	db	111	;'o'
   251  00FE51  6D                 	db	109	;'m'
   252  00FE52  20                 	db	32
   253  00FE53  74                 	db	116	;'t'
   254  00FE54  68                 	db	104	;'h'
   255  00FE55  65                 	db	101	;'e'
   256  00FE56  20                 	db	32
   257  00FE57  6D                 	db	109	;'m'
   258  00FE58  69                 	db	105	;'i'
   259  00FE59  63                 	db	99	;'c'
   260  00FE5A  72                 	db	114	;'r'
   261  00FE5B  6F                 	db	111	;'o'
   262  00FE5C  70                 	db	112	;'p'
   263  00FE5D  68                 	db	104	;'h'
   264  00FE5E  6F                 	db	111	;'o'
   265  00FE5F  6E                 	db	110	;'n'
   266  00FE60  65                 	db	101	;'e'
   267  00FE61  20                 	db	32
   268  00FE62  61                 	db	97	;'a'
   269  00FE63  72                 	db	114	;'r'
   270  00FE64  65                 	db	101	;'e'
   271  00FE65  3A                 	db	58	;':'
   272  00FE66  20                 	db	32
   273  00FE67  0D                 	db	13
   274  00FE68  0A                 	db	10
   275  00FE69  00                 	db	0
   276  00FE6A                     STR_8:
   277  00FE6A  0D                 	db	13
   278  00FE6B  0A                 	db	10
   279  00FE6C  54                 	db	84	;'T'
   280  00FE6D  68                 	db	104	;'h'
   281  00FE6E  65                 	db	101	;'e'
   282  00FE6F  20                 	db	32
   283  00FE70  73                 	db	115	;'s'
   284  00FE71  6F                 	db	111	;'o'
   285  00FE72  75                 	db	117	;'u'
   286  00FE73  6E                 	db	110	;'n'
   287  00FE74  64                 	db	100	;'d'
   288  00FE75  20                 	db	32
   289  00FE76  77                 	db	119	;'w'
   290  00FE77  61                 	db	97	;'a'
   291  00FE78  76                 	db	118	;'v'
   292  00FE79  65                 	db	101	;'e'
   293  00FE7A  20                 	db	32
   294  00FE7B  63                 	db	99	;'c'
   295  00FE7C  72                 	db	114	;'r'
   296  00FE7D  6F                 	db	111	;'o'
   297  00FE7E  73                 	db	115	;'s'
   298  00FE7F  73                 	db	115	;'s'
   299  00FE80  65                 	db	101	;'e'
   300  00FE81  64                 	db	100	;'d'
   301  00FE82  20                 	db	32
   302  00FE83  61                 	db	97	;'a'
   303  00FE84  74                 	db	116	;'t'
   304  00FE85  20                 	db	32
   305  00FE86  74                 	db	116	;'t'
   306  00FE87  68                 	db	104	;'h'
   307  00FE88  65                 	db	101	;'e'
   308  00FE89  20                 	db	32
   309  00FE8A  66                 	db	102	;'f'
   310  00FE8B  6F                 	db	111	;'o'
   311  00FE8C  6C                 	db	108	;'l'
   312  00FE8D  6C                 	db	108	;'l'
   313  00FE8E  6F                 	db	111	;'o'
   314  00FE8F  77                 	db	119	;'w'
   315  00FE90  69                 	db	105	;'i'
   316  00FE91  6E                 	db	110	;'n'
   317  00FE92  67                 	db	103	;'g'
   318  00FE93  20                 	db	32
   319  00FE94  69                 	db	105	;'i'
   320  00FE95  6E                 	db	110	;'n'
   321  00FE96  64                 	db	100	;'d'
   322  00FE97  69                 	db	105	;'i'
   323  00FE98  63                 	db	99	;'c'
   324  00FE99  65                 	db	101	;'e'
   325  00FE9A  73                 	db	115	;'s'
   326  00FE9B  3A                 	db	58	;':'
   327  00FE9C  0D                 	db	13
   328  00FE9D  0A                 	db	10
   329  00FE9E  00                 	db	0
   330  00FE9F                     STR_18:
   331  00FE9F  54                 	db	84	;'T'
   332  00FEA0  2F                 	db	47
   333  00FEA1  74                 	db	116	;'t'
   334  00FEA2  3A                 	db	58	;':'
   335  00FEA3  20                 	db	32
   336  00FEA4  49                 	db	73	;'I'
   337  00FEA5  6E                 	db	110	;'n'
   338  00FEA6  63                 	db	99	;'c'
   339  00FEA7  72                 	db	114	;'r'
   340  00FEA8  65                 	db	101	;'e'
   341  00FEA9  61                 	db	97	;'a'
   342  00FEAA  73                 	db	115	;'s'
   343  00FEAB  65                 	db	101	;'e'
   344  00FEAC  2F                 	db	47
   345  00FEAD  64                 	db	100	;'d'
   346  00FEAE  65                 	db	101	;'e'
   347  00FEAF  63                 	db	99	;'c'
   348  00FEB0  72                 	db	114	;'r'
   349  00FEB1  65                 	db	101	;'e'
   350  00FEB2  61                 	db	97	;'a'
   351  00FEB3  73                 	db	115	;'s'
   352  00FEB4  65                 	db	101	;'e'
   353  00FEB5  20                 	db	32
   354  00FEB6  74                 	db	116	;'t'
   355  00FEB7  68                 	db	104	;'h'
   356  00FEB8  72                 	db	114	;'r'
   357  00FEB9  65                 	db	101	;'e'
   358  00FEBA  73                 	db	115	;'s'
   359  00FEBB  68                 	db	104	;'h'
   360  00FEBC  6F                 	db	111	;'o'
   361  00FEBD  6C                 	db	108	;'l'
   362  00FEBE  64                 	db	100	;'d'
   363  00FEBF  20                 	db	32
   364  00FEC0  31                 	db	49	;'1'
   365  00FEC1  33                 	db	51	;'3'
   366  00FEC2  38                 	db	56	;'8'
   367  00FEC3  2D                 	db	45
   368  00FEC4  31                 	db	49	;'1'
   369  00FEC5  31                 	db	49	;'1'
   370  00FEC6  38                 	db	56	;'8'
   371  00FEC7  0D                 	db	13
   372  00FEC8  0A                 	db	10
   373  00FEC9  00                 	db	0
   374  00FECA                     STR_10:
   375  00FECA  0D                 	db	13
   376  00FECB  0A                 	db	10
   377  00FECC  54                 	db	84	;'T'
   378  00FECD  68                 	db	104	;'h'
   379  00FECE  65                 	db	101	;'e'
   380  00FECF  20                 	db	32
   381  00FED0  73                 	db	115	;'s'
   382  00FED1  6F                 	db	111	;'o'
   383  00FED2  75                 	db	117	;'u'
   384  00FED3  6E                 	db	110	;'n'
   385  00FED4  64                 	db	100	;'d'
   386  00FED5  20                 	db	32
   387  00FED6  77                 	db	119	;'w'
   388  00FED7  61                 	db	97	;'a'
   389  00FED8  76                 	db	118	;'v'
   390  00FED9  65                 	db	101	;'e'
   391  00FEDA  20                 	db	32
   392  00FEDB  68                 	db	104	;'h'
   393  00FEDC  61                 	db	97	;'a'
   394  00FEDD  64                 	db	100	;'d'
   395  00FEDE  20                 	db	32
   396  00FEDF  25                 	db	37
   397  00FEE0  64                 	db	100	;'d'
   398  00FEE1  20                 	db	32
   399  00FEE2  70                 	db	112	;'p'
   400  00FEE3  65                 	db	101	;'e'
   401  00FEE4  72                 	db	114	;'r'
   402  00FEE5  69                 	db	105	;'i'
   403  00FEE6  6F                 	db	111	;'o'
   404  00FEE7  64                 	db	100	;'d'
   405  00FEE8  73                 	db	115	;'s'
   406  00FEE9  3A                 	db	58	;':'
   407  00FEEA  0D                 	db	13
   408  00FEEB  0A                 	db	10
   409  00FEEC  00                 	db	0
   410  00FEED                     STR_13:
   411  00FEED  2D                 	db	45
   412  00FEEE  2D                 	db	45
   413  00FEEF  2D                 	db	45
   414  00FEF0  2D                 	db	45
   415  00FEF1  2D                 	db	45
   416  00FEF2  2D                 	db	45
   417  00FEF3  2D                 	db	45
   418  00FEF4  2D                 	db	45
   419  00FEF5  2D                 	db	45
   420  00FEF6  2D                 	db	45
   421  00FEF7  2D                 	db	45
   422  00FEF8  2D                 	db	45
   423  00FEF9  2D                 	db	45
   424  00FEFA  2D                 	db	45
   425  00FEFB  2D                 	db	45
   426  00FEFC  2D                 	db	45
   427  00FEFD  2D                 	db	45
   428  00FEFE  2D                 	db	45
   429  00FEFF  2D                 	db	45
   430  00FF00  2D                 	db	45
   431  00FF01  2D                 	db	45
   432  00FF02  2D                 	db	45
   433  00FF03  2D                 	db	45
   434  00FF04  2D                 	db	45
   435  00FF05  2D                 	db	45
   436  00FF06  2D                 	db	45
   437  00FF07  2D                 	db	45
   438  00FF08  2D                 	db	45
   439  00FF09  2D                 	db	45
   440  00FF0A  2D                 	db	45
   441  00FF0B  0D                 	db	13
   442  00FF0C  0A                 	db	10
   443  00FF0D  00                 	db	0
   444  00FF0E                     STR_12:
   445  00FF0E  0D                 	db	13
   446  00FF0F  0A                 	db	10
   447  00FF10  61                 	db	97	;'a'
   448  00FF11  76                 	db	118	;'v'
   449  00FF12  65                 	db	101	;'e'
   450  00FF13  72                 	db	114	;'r'
   451  00FF14  61                 	db	97	;'a'
   452  00FF15  67                 	db	103	;'g'
   453  00FF16  65                 	db	101	;'e'
   454  00FF17  20                 	db	32
   455  00FF18  70                 	db	112	;'p'
   456  00FF19  65                 	db	101	;'e'
   457  00FF1A  72                 	db	114	;'r'
   458  00FF1B  69                 	db	105	;'i'
   459  00FF1C  6F                 	db	111	;'o'
   460  00FF1D  64                 	db	100	;'d'
   461  00FF1E  20                 	db	32
   462  00FF1F  3D                 	db	61	;'='
   463  00FF20  20                 	db	32
   464  00FF21  25                 	db	37
   465  00FF22  64                 	db	100	;'d'
   466  00FF23  20                 	db	32
   467  00FF24  75                 	db	117	;'u'
   468  00FF25  73                 	db	115	;'s'
   469  00FF26  0D                 	db	13
   470  00FF27  0A                 	db	10
   471  00FF28  00                 	db	0
   472  00FF29                     STR_2:
   473  00FF29  4D                 	db	77	;'M'
   474  00FF2A  69                 	db	105	;'i'
   475  00FF2B  63                 	db	99	;'c'
   476  00FF2C  72                 	db	114	;'r'
   477  00FF2D  6F                 	db	111	;'o'
   478  00FF2E  70                 	db	112	;'p'
   479  00FF2F  68                 	db	104	;'h'
   480  00FF30  6F                 	db	111	;'o'
   481  00FF31  6E                 	db	110	;'n'
   482  00FF32  65                 	db	101	;'e'
   483  00FF33  20                 	db	32
   484  00FF34  65                 	db	101	;'e'
   485  00FF35  78                 	db	120	;'x'
   486  00FF36  70                 	db	112	;'p'
   487  00FF37  65                 	db	101	;'e'
   488  00FF38  72                 	db	114	;'r'
   489  00FF39  69                 	db	105	;'i'
   490  00FF3A  6D                 	db	109	;'m'
   491  00FF3B  65                 	db	101	;'e'
   492  00FF3C  6E                 	db	110	;'n'
   493  00FF3D  74                 	db	116	;'t'
   494  00FF3E  73                 	db	115	;'s'
   495  00FF3F  0D                 	db	13
   496  00FF40  0A                 	db	10
   497  00FF41  00                 	db	0
   498  00FF42                     STR_24:
   499  00FF42  56                 	db	86	;'V'
   500  00FF43  6F                 	db	111	;'o'
   501  00FF44  6C                 	db	108	;'l'
   502  00FF45  75                 	db	117	;'u'
   503  00FF46  6D                 	db	109	;'m'
   504  00FF47  65                 	db	101	;'e'
   505  00FF48  20                 	db	32
   506  00FF49  72                 	db	114	;'r'
   507  00FF4A  61                 	db	97	;'a'
   508  00FF4B  6E                 	db	110	;'n'
   509  00FF4C  67                 	db	103	;'g'
   510  00FF4D  65                 	db	101	;'e'
   511  00FF4E  3A                 	db	58	;':'
   512  00FF4F  20                 	db	32
   513  00FF50  25                 	db	37
   514  00FF51  64                 	db	100	;'d'
   515  00FF52  20                 	db	32
   516  00FF53  2D                 	db	45
   517  00FF54  20                 	db	32
   518  00FF55  25                 	db	37
   519  00FF56  64                 	db	100	;'d'
   520  00FF57  0D                 	db	13
   521  00FF58  0A                 	db	10
   522  00FF59  00                 	db	0
   523  00FF5A                     STR_17:
   524  00FF5A  7A                 	db	122	;'z'
   525  00FF5B  3A                 	db	58	;':'
   526  00FF5C  20                 	db	32
   527  00FF5D  43                 	db	67	;'C'
   528  00FF5E  6C                 	db	108	;'l'
   529  00FF5F  65                 	db	101	;'e'
   530  00FF60  61                 	db	97	;'a'
   531  00FF61  72                 	db	114	;'r'
   532  00FF62  20                 	db	32
   533  00FF63  74                 	db	116	;'t'
   534  00FF64  68                 	db	104	;'h'
   535  00FF65  65                 	db	101	;'e'
   536  00FF66  20                 	db	32
   537  00FF67  74                 	db	116	;'t'
   538  00FF68  65                 	db	101	;'e'
   539  00FF69  72                 	db	114	;'r'
   540  00FF6A  6D                 	db	109	;'m'
   541  00FF6B  69                 	db	105	;'i'
   542  00FF6C  6E                 	db	110	;'n'
   543  00FF6D  61                 	db	97	;'a'
   544  00FF6E  6C                 	db	108	;'l'
   545  00FF6F  0D                 	db	13
   546  00FF70  0A                 	db	10
   547  00FF71  00                 	db	0
   548  00FF72                     STR_27:
   549  00FF72  54                 	db	84	;'T'
   550  00FF73  68                 	db	104	;'h'
   551  00FF74  72                 	db	114	;'r'
   552  00FF75  65                 	db	101	;'e'
   553  00FF76  73                 	db	115	;'s'
   554  00FF77  68                 	db	104	;'h'
   555  00FF78  6F                 	db	111	;'o'
   556  00FF79  6C                 	db	108	;'l'
   557  00FF7A  64                 	db	100	;'d'
   558  00FF7B  20                 	db	32
   559  00FF7C  61                 	db	97	;'a'
   560  00FF7D  74                 	db	116	;'t'
   561  00FF7E  20                 	db	32
   562  00FF7F  6D                 	db	109	;'m'
   563  00FF80  69                 	db	105	;'i'
   564  00FF81  6E                 	db	110	;'n'
   565  00FF82  69                 	db	105	;'i'
   566  00FF83  6D                 	db	109	;'m'
   567  00FF84  75                 	db	117	;'u'
   568  00FF85  6D                 	db	109	;'m'
   569  00FF86  0D                 	db	13
   570  00FF87  0A                 	db	10
   571  00FF88  00                 	db	0
   572  00FF89                     STR_16:
   573  00FF89  5A                 	db	90	;'Z'
   574  00FF8A  3A                 	db	58	;':'
   575  00FF8B  20                 	db	32
   576  00FF8C  52                 	db	82	;'R'
   577  00FF8D  65                 	db	101	;'e'
   578  00FF8E  73                 	db	115	;'s'
   579  00FF8F  65                 	db	101	;'e'
   580  00FF90  74                 	db	116	;'t'
   581  00FF91  20                 	db	32
   582  00FF92  70                 	db	112	;'p'
   583  00FF93  72                 	db	114	;'r'
   584  00FF94  6F                 	db	111	;'o'
   585  00FF95  63                 	db	99	;'c'
   586  00FF96  65                 	db	101	;'e'
   587  00FF97  73                 	db	115	;'s'
   588  00FF98  73                 	db	115	;'s'
   589  00FF99  6F                 	db	111	;'o'
   590  00FF9A  72                 	db	114	;'r'
   591  00FF9B  0D                 	db	13
   592  00FF9C  0A                 	db	10
   593  00FF9D  00                 	db	0
   594  00FF9E                     STR_28:
   595  00FF9E  55                 	db	85	;'U'
   596  00FF9F  6E                 	db	110	;'n'
   597  00FFA0  6B                 	db	107	;'k'
   598  00FFA1  6E                 	db	110	;'n'
   599  00FFA2  6F                 	db	111	;'o'
   600  00FFA3  77                 	db	119	;'w'
   601  00FFA4  6E                 	db	110	;'n'
   602  00FFA5  20                 	db	32
   603  00FFA6  6B                 	db	107	;'k'
   604  00FFA7  65                 	db	101	;'e'
   605  00FFA8  79                 	db	121	;'y'
   606  00FFA9  20                 	db	32
   607  00FFAA  25                 	db	37
   608  00FFAB  63                 	db	99	;'c'
   609  00FFAC  0D                 	db	13
   610  00FFAD  0A                 	db	10
   611  00FFAE  00                 	db	0
   612  00FFAF                     STR_11:
   613  00FFAF  25                 	db	37
   614  00FFB0  64                 	db	100	;'d'
   615  00FFB1  20                 	db	32
   616  00FFB2  2D                 	db	45
   617  00FFB3  20                 	db	32
   618  00FFB4  25                 	db	37
   619  00FFB5  64                 	db	100	;'d'
   620  00FFB6  20                 	db	32
   621  00FFB7  3D                 	db	61	;'='
   622  00FFB8  20                 	db	32
   623  00FFB9  25                 	db	37
   624  00FFBA  64                 	db	100	;'d'
   625  00FFBB  0D                 	db	13
   626  00FFBC  0A                 	db	10
   627  00FFBD  00                 	db	0
   628  00FFBE                     STR_14:
   629  00FFBE  3F                 	db	63	;'?'
   630  00FFBF  3A                 	db	58	;':'
   631  00FFC0  20                 	db	32
   632  00FFC1  48                 	db	72	;'H'
   633  00FFC2  65                 	db	101	;'e'
   634  00FFC3  6C                 	db	108	;'l'
   635  00FFC4  70                 	db	112	;'p'
   636  00FFC5  20                 	db	32
   637  00FFC6  6D                 	db	109	;'m'
   638  00FFC7  65                 	db	101	;'e'
   639  00FFC8  6E                 	db	110	;'n'
   640  00FFC9  75                 	db	117	;'u'
   641  00FFCA  0D                 	db	13
   642  00FFCB  0A                 	db	10
   643  00FFCC  00                 	db	0
   644  00FFCD                     STR_1:
   645  00FFCD  69                 	db	105	;'i'
   646  00FFCE  6E                 	db	110	;'n'
   647  00FFCF  4C                 	db	76	;'L'
   648  00FFD0  61                 	db	97	;'a'
   649  00FFD1  62                 	db	98	;'b'
   650  00FFD2  20                 	db	32
   651  00FFD3  30                 	db	48	;'0'
   652  00FFD4  38                 	db	56	;'8'
   653  00FFD5  0D                 	db	13
   654  00FFD6  0A                 	db	10
   655  00FFD7  00                 	db	0
   656  00FFD8                     STR_3:
   657  00FFD8  44                 	db	68	;'D'
   658  00FFD9  65                 	db	101	;'e'
   659  00FFDA  76                 	db	118	;'v'
   660  00FFDB  27                 	db	39
   661  00FFDC  32                 	db	50	;'2'
   662  00FFDD  31                 	db	49	;'1'
   663  00FFDE  0D                 	db	13
   664  00FFDF  0A                 	db	10
   665  00FFE0  00                 	db	0
   666  00FFE1                     STR_6:
   667  00FFE1  0D                 	db	13
   668  00FFE2  0A                 	db	10
   669  00FFE3  53                 	db	83	;'S'
   670  00FFE4  5B                 	db	91	;'['
   671  00FFE5  25                 	db	37
   672  00FFE6  64                 	db	100	;'d'
   673  00FFE7  5D                 	db	93	;']'
   674  00FFE8  20                 	db	32
   675  00FFE9  00                 	db	0
   676  00FFEA                     STR_15:
   677  00FFEA  6F                 	db	111	;'o'
   678  00FFEB  3A                 	db	58	;':'
   679  00FFEC  20                 	db	32
   680  00FFED  6B                 	db	107	;'k'
   681  00FFEE  0D                 	db	13
   682  00FFEF  0A                 	db	10
   683  00FFF0  00                 	db	0
   684  00FFF1                     STR_21:
   685  00FFF1  20                 	db	32
   686  00FFF2  6B                 	db	107	;'k'
   687  00FFF3  0D                 	db	13
   688  00FFF4  0A                 	db	10
   689  00FFF5  3E                 	db	62	;'>'
   690  00FFF6  00                 	db	0
   691  00FFF7                     STR_7:
   692  00FFF7  25                 	db	37
   693  00FFF8  64                 	db	100	;'d'
   694  00FFF9  20                 	db	32
   695  00FFFA  00                 	db	0
   696  00FFFB                     STR_4:
   697  00FFFB  3E                 	db	62	;'>'
   698  00FFFC  20                 	db	32
   699  00FFFD  00                 	db	0
   700  00FFFE  00                 	db	0	; dummy byte at the end
   701  0000                     
   702                           ; #config settings
   703                           
   704                           	psect	cinit
   705  00124C                     __pcinit:
   706                           	callstack 0
   707  00124C                     start_initialization:
   708                           	callstack 0
   709  00124C                     __initialization:
   710                           	callstack 0
   711                           
   712                           ; Initialize objects allocated to BANK1 (2 bytes)
   713                           ; load TBLPTR registers with __pidataBANK1
   714  00124C  0E82               	movlw	low __pidataBANK1
   715  00124E  6EF6               	movwf	tblptrl,c
   716  001250  0E15               	movlw	high __pidataBANK1
   717  001252  6EF7               	movwf	tblptrh,c
   718  001254  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   719  001256  6EF8               	movwf	tblptru,c
   720  001258  0009               	tblrd		*+	;fetch initializer
   721  00125A  CFF5 F193          	movff	tablat,__pdataBANK1
   722  00125E  0009               	tblrd		*+	;fetch initializer
   723  001260  CFF5 F194          	movff	tablat,__pdataBANK1+1
   724                           
   725                           ; Clear objects allocated to BANK2 (256 bytes)
   726  001264  EE02  F000         	lfsr	0,__pbssBANK2
   727  001268  EE11 F000          	lfsr	1,256
   728  00126C                     clear_0:
   729  00126C  6AEE               	clrf	postinc0,c
   730  00126E  50E5               	movf	postdec1,w,c
   731  001270  50E1               	movf	fsr1l,w,c
   732  001272  E1FC               	bnz	clear_0
   733  001274  50E2               	movf	fsr1h,w,c
   734  001276  E1FA               	bnz	clear_0
   735                           
   736                           ; Clear objects allocated to BANK1 (1 bytes)
   737  001278  0101               	movlb	1
   738  00127A  6B95               	clrf	__pbssBANK1& (0+255),b
   739                           
   740                           ; Clear objects allocated to BANK0 (38 bytes)
   741  00127C  EE00  F0AD         	lfsr	0,__pbssBANK0
   742  001280  0E26               	movlw	38
   743  001282                     clear_1:
   744  001282  6AEE               	clrf	postinc0,c
   745  001284  06E8               	decf	wreg,f,c
   746  001286  E1FD               	bnz	clear_1
   747                           
   748                           ; Clear objects allocated to COMRAM (19 bytes)
   749  001288  EE00  F039         	lfsr	0,__pbssCOMRAM
   750  00128C  0E13               	movlw	19
   751  00128E                     clear_2:
   752  00128E  6AEE               	clrf	postinc0,c
   753  001290  06E8               	decf	wreg,f,c
   754  001292  E1FD               	bnz	clear_2
   755  001294                     end_of_initialization:
   756                           	callstack 0
   757  001294                     __end_of__initialization:
   758                           	callstack 0
   759  001294  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   760  001296  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   761  001298  0100               	movlb	0
   762  00129A  EF29  F000         	goto	_main	;jump to C main() function
   763                           
   764                           	psect	bssCOMRAM
   765  000039                     __pbssCOMRAM:
   766                           	callstack 0
   767  000039                     _width:
   768                           	callstack 0
   769  000039                     	ds	2
   770  00003B                     _prec:
   771                           	callstack 0
   772  00003B                     	ds	2
   773  00003D                     _flags:
   774                           	callstack 0
   775  00003D                     	ds	2
   776  00003F                     _EUSART1_FramingErrorHandler:
   777                           	callstack 0
   778  00003F                     	ds	2
   779  000041                     _ADC_InterruptHandler:
   780                           	callstack 0
   781  000041                     	ds	2
   782  000043                     _timer0ReloadVal:
   783                           	callstack 0
   784  000043                     	ds	2
   785  000045                     _TMR0_InterruptHandler:
   786                           	callstack 0
   787  000045                     	ds	2
   788  000047                     _bufferIdx:
   789                           	callstack 0
   790  000047                     	ds	2
   791  000049                     _eusart1RxLastError:
   792                           	callstack 0
   793  000049                     	ds	1
   794  00004A                     _timerState:
   795                           	callstack 0
   796  00004A                     	ds	1
   797  00004B                     _fillBuffer:
   798                           	callstack 0
   799  00004B                     	ds	1
   800                           
   801                           	psect	bssBANK0
   802  0000AD                     __pbssBANK0:
   803                           	callstack 0
   804  0000AD                     _nout:
   805                           	callstack 0
   806  0000AD                     	ds	2
   807  0000AF                     _EUSART1_ErrorHandler:
   808                           	callstack 0
   809  0000AF                     	ds	2
   810  0000B1                     _EUSART1_OverrunErrorHandler:
   811                           	callstack 0
   812  0000B1                     	ds	2
   813  0000B3                     _dbuf:
   814                           	callstack 0
   815  0000B3                     	ds	32
   816                           
   817                           	psect	bssBANK1
   818  000195                     __pbssBANK1:
   819                           	callstack 0
   820  000195                     _samplesCollected:
   821                           	callstack 0
   822  000195                     	ds	1
   823                           
   824                           	psect	dataBANK1
   825  000193                     __pdataBANK1:
   826                           	callstack 0
   827  000193                     _thresholdRange:
   828                           	callstack 0
   829  000193                     	ds	2
   830                           
   831                           	psect	bssBANK2
   832  000200                     __pbssBANK2:
   833                           	callstack 0
   834  000200                     _adc_reading:
   835                           	callstack 0
   836  000200                     	ds	256
   837                           
   838                           	psect	cstackBANK1
   839  000100                     __pcstackBANK1:
   840                           	callstack 0
   841  000100                     main@crossings:
   842                           	callstack 0
   843                           
   844                           ; 128 bytes @ 0x0
   845  000100                     	ds	128
   846  000180                     main@avgPeriod:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x80
   850  000180                     	ds	2
   851  000182                     main@avgPeriodUs:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x82
   855  000182                     	ds	2
   856  000184                     main@periodSum:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x84
   860  000184                     	ds	2
   861  000186                     main@cmd:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x86
   865  000186                     	ds	1
   866  000187                     main@i_225:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x87
   870  000187                     	ds	2
   871  000189                     main@i:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x89
   875  000189                     	ds	2
   876  00018B                     main@i_218:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x8B
   880  00018B                     	ds	2
   881  00018D                     main@crIdx:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x8D
   885  00018D                     	ds	2
   886  00018F                     main@i_224:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x8F
   890  00018F                     	ds	2
   891  000191                     main@i_229:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x91
   895  000191                     	ds	2
   896                           
   897                           	psect	cstackBANK0
   898  000060                     __pcstackBANK0:
   899                           	callstack 0
   900  000060                     ?_dtoa:
   901                           	callstack 0
   902  000060                     dtoa@fp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x0
   906  000060                     	ds	2
   907  000062                     dtoa@d:
   908                           	callstack 0
   909                           
   910                           ; 8 bytes @ 0x2
   911  000062                     	ds	8
   912  00006A                     _dtoa$1404:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0xA
   916  00006A                     	ds	2
   917  00006C                     dtoa@p:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0xC
   921  00006C                     	ds	2
   922  00006E                     dtoa@w:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0xE
   926  00006E                     	ds	2
   927  000070                     dtoa@s:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x10
   931  000070                     	ds	2
   932  000072                     dtoa@n:
   933                           	callstack 0
   934                           
   935                           ; 8 bytes @ 0x12
   936  000072                     	ds	8
   937  00007A                     dtoa@i:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x1A
   941  00007A                     	ds	2
   942  00007C                     ?_vfpfcnvrt:
   943                           	callstack 0
   944  00007C                     vfpfcnvrt@fp:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x1C
   948  00007C                     	ds	2
   949  00007E                     vfpfcnvrt@fmt:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x1E
   953  00007E                     	ds	2
   954  000080                     vfpfcnvrt@ap:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x20
   958  000080                     	ds	2
   959  000082                     ??_vfpfcnvrt:
   960                           
   961                           ; 1 bytes @ 0x22
   962  000082                     	ds	2
   963  000084                     vfpfcnvrt@ll:
   964                           	callstack 0
   965                           
   966                           ; 8 bytes @ 0x24
   967  000084                     	ds	8
   968  00008C                     vfpfcnvrt@c:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0x2C
   972  00008C                     	ds	1
   973  00008D                     ?_vfprintf:
   974                           	callstack 0
   975  00008D                     vfprintf@fp:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x2D
   979  00008D                     	ds	2
   980  00008F                     vfprintf@fmt:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x2F
   984  00008F                     	ds	2
   985  000091                     vfprintf@ap:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x31
   989  000091                     	ds	2
   990  000093                     vfprintf@cfmt:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x33
   994  000093                     	ds	2
   995  000095                     ?_printf:
   996                           	callstack 0
   997  000095                     printf@fmt:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x35
  1001  000095                     	ds	10
  1002  00009F                     printf@ap:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x3F
  1006  00009F                     	ds	2
  1007  0000A1                     ??_main:
  1008                           
  1009                           ; 1 bytes @ 0x41
  1010  0000A1                     	ds	12
  1011                           
  1012                           	psect	cstackCOMRAM
  1013  000001                     __pcstackCOMRAM:
  1014                           	callstack 0
  1015  000001                     ?_TMR0_ReadTimer:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x0
  1019  000001                     	ds	2
  1020  000003                     ??_TMR0_ReadTimer:
  1021                           
  1022                           ; 1 bytes @ 0x2
  1023  000003                     	ds	2
  1024  000005                     TMR0_ReadTimer@readVal:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x4
  1028  000005                     	ds	2
  1029  000007                     TMR0_ReadTimer@readValLow:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x6
  1033  000007                     	ds	1
  1034  000008                     TMR0_ReadTimer@readValHigh:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x7
  1038  000008                     	ds	1
  1039  000009                     i2TMR0_WriteTimer@timerVal:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x8
  1043  000009                     	ds	2
  1044  00000B                     ??_myTMR0ISR:
  1045  00000B                     
  1046                           ; 1 bytes @ 0xA
  1047  00000B                     	ds	4
  1048  00000F                     myTMR0ISR@micReading:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0xE
  1052  00000F                     	ds	1
  1053  000010                     ??_INTERRUPT_InterruptManager:
  1054                           
  1055                           ; 1 bytes @ 0xF
  1056  000010                     	ds	4
  1057  000014                     ?_strlen:
  1058                           	callstack 0
  1059  000014                     ?___wmul:
  1060                           	callstack 0
  1061  000014                     ?___lwdiv:
  1062                           	callstack 0
  1063  000014                     ?___aodiv:
  1064                           	callstack 0
  1065  000014                     ?___aomod:
  1066                           	callstack 0
  1067  000014                     EUSART1_Write@txData:
  1068                           	callstack 0
  1069  000014                     TMR0_WriteTimer@timerVal:
  1070                           	callstack 0
  1071  000014                     TMR0_SetInterruptHandler@InterruptHandler:
  1072                           	callstack 0
  1073  000014                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1074                           	callstack 0
  1075  000014                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1076                           	callstack 0
  1077  000014                     EUSART1_SetErrorHandler@interruptHandler:
  1078                           	callstack 0
  1079  000014                     ___wmul@multiplier:
  1080                           	callstack 0
  1081  000014                     ___lwdiv@dividend:
  1082                           	callstack 0
  1083  000014                     strlen@s:
  1084                           	callstack 0
  1085  000014                     ___aodiv@dividend:
  1086                           	callstack 0
  1087  000014                     ___aomod@dividend:
  1088                           	callstack 0
  1089                           
  1090                           ; 8 bytes @ 0x13
  1091  000014                     	ds	1
  1092  000015                     putch@txData:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x14
  1096  000015                     	ds	1
  1097  000016                     ??_TMR0_Initialize:
  1098  000016                     ___wmul@multiplicand:
  1099                           	callstack 0
  1100  000016                     ___lwdiv@divisor:
  1101                           	callstack 0
  1102  000016                     fputc@c:
  1103                           	callstack 0
  1104  000016                     strlen@a:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x15
  1108  000016                     	ds	2
  1109  000018                     ___wmul@product:
  1110                           	callstack 0
  1111  000018                     ___lwdiv@quotient:
  1112                           	callstack 0
  1113  000018                     fputc@fp:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x17
  1117  000018                     	ds	2
  1118  00001A                     ??_fputc:
  1119  00001A                     ___lwdiv@counter:
  1120                           	callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x19
  1123  00001A                     	ds	2
  1124  00001C                     ___aodiv@divisor:
  1125                           	callstack 0
  1126  00001C                     ___aomod@divisor:
  1127                           	callstack 0
  1128                           
  1129                           ; 8 bytes @ 0x1B
  1130  00001C                     	ds	3
  1131  00001F                     ?_ctoa:
  1132                           	callstack 0
  1133  00001F                     ctoa@fp:
  1134                           	callstack 0
  1135  00001F                     fputs@s:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x1E
  1139  00001F                     	ds	2
  1140  000021                     ctoa@c:
  1141                           	callstack 0
  1142  000021                     fputs@fp:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x20
  1146  000021                     	ds	1
  1147  000022                     ??_ctoa:
  1148                           
  1149                           ; 1 bytes @ 0x21
  1150  000022                     	ds	1
  1151  000023                     fputs@c:
  1152                           	callstack 0
  1153  000023                     ctoa@l:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x22
  1157  000023                     	ds	1
  1158  000024                     ___aodiv@counter:
  1159                           	callstack 0
  1160  000024                     ___aomod@counter:
  1161                           	callstack 0
  1162  000024                     fputs@i:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x23
  1166  000024                     	ds	1
  1167  000025                     ___aodiv@sign:
  1168                           	callstack 0
  1169  000025                     ___aomod@sign:
  1170                           	callstack 0
  1171  000025                     ctoa@w:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x24
  1175  000025                     	ds	1
  1176  000026                     ?_abs:
  1177                           	callstack 0
  1178  000026                     ?_pad:
  1179                           	callstack 0
  1180  000026                     pad@fp:
  1181                           	callstack 0
  1182  000026                     abs@a:
  1183                           	callstack 0
  1184  000026                     ___aodiv@quotient:
  1185                           	callstack 0
  1186                           
  1187                           ; 8 bytes @ 0x25
  1188  000026                     	ds	2
  1189  000028                     ??_abs:
  1190  000028                     pad@buf:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x27
  1194  000028                     	ds	2
  1195  00002A                     pad@p:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x29
  1199  00002A                     	ds	2
  1200  00002C                     ??_pad:
  1201                           
  1202                           ; 1 bytes @ 0x2B
  1203  00002C                     	ds	1
  1204  00002D                     pad@i:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x2C
  1208  00002D                     	ds	2
  1209  00002F                     pad@w:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x2E
  1213  00002F                     	ds	2
  1214  000031                     ??_dtoa:
  1215                           
  1216                           ; 1 bytes @ 0x30
  1217  000031                     	ds	8
  1218  000039                     
  1219                           ; 1 bytes @ 0x38
  1220 ;;
  1221 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1222 ;;
  1223 ;; *************** function _main *****************
  1224 ;; Defined at:
  1225 ;;		line 45 in file "main.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  i               2  145[BANK1 ] unsigned short 
  1230 ;;  i               2  135[BANK1 ] unsigned short 
  1231 ;;  i               2  143[BANK1 ] unsigned short 
  1232 ;;  i               2  139[BANK1 ] unsigned short 
  1233 ;;  crossings     128    0[BANK1 ] unsigned char [128]
  1234 ;;  crIdx           2  141[BANK1 ] unsigned short 
  1235 ;;  periodSum       2  132[BANK1 ] unsigned short 
  1236 ;;  avgPeriodUs     2  130[BANK1 ] unsigned short 
  1237 ;;  avgPeriod       2  128[BANK1 ] unsigned short 
  1238 ;;  i               2  137[BANK1 ] unsigned short 
  1239 ;;  cmd             1  134[BANK1 ] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Locals:         0       0     147       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Totals:         0      12     147       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;Total ram usage:      159 bytes
  1254 ;; Hardware stack levels required when called:   13
  1255 ;; This function calls:
  1256 ;;		_EUSART1_Read
  1257 ;;		_EUSART1_is_rx_ready
  1258 ;;		_SYSTEM_Initialize
  1259 ;;		_TMR0_SetInterruptHandler
  1260 ;;		_TMR0_WriteTimer
  1261 ;;		___lwdiv
  1262 ;;		___wmul
  1263 ;;		_printf
  1264 ;; This function is called by:
  1265 ;;		Startup code after reset
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text0
  1270  000052                     __ptext0:
  1271                           	callstack 0
  1272  000052                     _main:
  1273                           	callstack 18
  1274  000052                     
  1275                           ;main.c: 47: ;main.c: 48:     for (;;) {;main.c: 50:             samplesCollected = 0;
  1276  000052  EC6F  F00A         	call	_SYSTEM_Initialize	;wreg free
  1277  000056                     
  1278                           ;main.c: 55:                     printf("\r\nS[%d] ", i);
  1279  000056  0E00               	movlw	0
  1280  000058  6E15               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1281  00005A  0E00               	movlw	0
  1282  00005C  6E14               	movwf	TMR0_WriteTimer@timerVal^0,c
  1283  00005E  ECA1  F00A         	call	_TMR0_WriteTimer	;wreg free
  1284  000062                     
  1285                           ;main.c: 56:                 }
  1286  000062  94F2               	bcf	242,2,c	;volatile
  1287  000064                     l35:
  1288  000064  A4F2               	btfss	242,2,c	;volatile
  1289  000066  EF37  F000         	goto	u1851
  1290  00006A  EF39  F000         	goto	u1850
  1291  00006E                     u1851:
  1292  00006E  EF32  F000         	goto	l35
  1293  000072                     u1850:
  1294  000072                     
  1295                           ;main.c: 59:             printf("\r\nThe sound wave crossed at the following indices:\r\
      +                          n");
  1296  000072  0E42               	movlw	low _myTMR0ISR
  1297  000074  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1298  000076  0E0E               	movlw	high _myTMR0ISR
  1299  000078  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1300  00007A  ECA6  F00A         	call	_TMR0_SetInterruptHandler	;wreg free
  1301  00007E                     
  1302                           ;main.c: 60:             uint8_t crossings[256/2];
  1303  00007E  8EF2               	bsf	242,7,c	;volatile
  1304  000080                     
  1305                           ;main.c: 61:             uint16_t crIdx = 0;
  1306  000080  8CF2               	bsf	242,6,c	;volatile
  1307  000082                     
  1308                           ;main.c: 63:                 if(adc_reading[i-1] <= 128 && adc_reading[i] > 128){
  1309  000082  0ECD               	movlw	low STR_1
  1310  000084  0100               	movlb	0	; () banked
  1311  000086  6F95               	movwf	printf@fmt& (0+255),b
  1312  000088  0EFF               	movlw	high STR_1
  1313  00008A  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1314  00008C  EC17  F00A         	call	_printf	;wreg free
  1315  000090                     
  1316                           ;main.c: 64:                     crossings[crIdx] = i - 1;
  1317  000090  0E29               	movlw	low STR_2
  1318  000092  0100               	movlb	0	; () banked
  1319  000094  6F95               	movwf	printf@fmt& (0+255),b
  1320  000096  0EFF               	movlw	high STR_2
  1321  000098  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1322  00009A  EC17  F00A         	call	_printf	;wreg free
  1323  00009E                     
  1324                           ;main.c: 65:                     crIdx += 1;
  1325  00009E  0ED8               	movlw	low STR_3
  1326  0000A0  0100               	movlb	0	; () banked
  1327  0000A2  6F95               	movwf	printf@fmt& (0+255),b
  1328  0000A4  0EFF               	movlw	high STR_3
  1329  0000A6  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1330  0000A8  EC17  F00A         	call	_printf	;wreg free
  1331  0000AC                     
  1332                           ;main.c: 66:                 }
  1333  0000AC  0EFB               	movlw	low STR_4
  1334  0000AE  0100               	movlb	0	; () banked
  1335  0000B0  6F95               	movwf	printf@fmt& (0+255),b
  1336  0000B2  0EFF               	movlw	high STR_4
  1337  0000B4  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1338  0000B6  EC17  F00A         	call	_printf	;wreg free
  1339  0000BA                     
  1340                           ;main.c: 70:             }
  1341  0000BA  82C2               	bsf	194,1,c	;volatile
  1342  0000BC                     l38:
  1343  0000BC  B2C2               	btfsc	194,1,c	;volatile
  1344  0000BE  EF63  F000         	goto	u1861
  1345  0000C2  EF65  F000         	goto	u1860
  1346  0000C6                     u1861:
  1347  0000C6  EF5E  F000         	goto	l38
  1348  0000CA                     u1860:
  1349  0000CA                     l2682:
  1350                           
  1351                           ;main.c: 75:                 periodSum += crossings[i] - crossings[i-1];
  1352  0000CA  0101               	movlb	1	; () banked
  1353  0000CC  5195               	movf	_samplesCollected& (0+255),w,b
  1354  0000CE  B4D8               	btfsc	status,2,c
  1355  0000D0  EF6C  F000         	goto	u1871
  1356  0000D4  EF6E  F000         	goto	u1870
  1357  0000D8                     u1871:
  1358  0000D8  EFE2  F001         	goto	l2752
  1359  0000DC                     u1870:
  1360  0000DC                     
  1361                           ; BSR set to: 1
  1362                           ;main.c: 76:             }
  1363  0000DC  0E00               	movlw	0
  1364  0000DE  6F95               	movwf	_samplesCollected& (0+255),b
  1365  0000E0                     
  1366                           ; BSR set to: 1
  1367                           ;main.c: 77:             uint16_t avgPeriod = periodSum/crIdx;
  1368  0000E0  0E35               	movlw	low STR_5
  1369  0000E2  0100               	movlb	0	; () banked
  1370  0000E4  6F95               	movwf	printf@fmt& (0+255),b
  1371  0000E6  0EFE               	movlw	high STR_5
  1372  0000E8  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1373  0000EA  EC17  F00A         	call	_printf	;wreg free
  1374  0000EE                     
  1375                           ;main.c: 79:             printf("\r\naverage period = %d us\r\n", avgPeriodUs);
  1376  0000EE  0E00               	movlw	0
  1377  0000F0  0101               	movlb	1	; () banked
  1378  0000F2  6F8C               	movwf	(main@i_218+1)& (0+255),b
  1379  0000F4  0E00               	movlw	0
  1380  0000F6  6F8B               	movwf	main@i_218& (0+255),b
  1381  0000F8                     l2694:
  1382                           
  1383                           ; BSR set to: 1
  1384                           ;main.c: 80: 
  1385  0000F8  0E0F               	movlw	15
  1386  0000FA  158B               	andwf	main@i_218& (0+255),w,b
  1387  0000FC  0100               	movlb	0	; () banked
  1388  0000FE  6FA1               	movwf	??_main& (0+255),b
  1389  000100  0E00               	movlw	0
  1390  000102  0101               	movlb	1	; () banked
  1391  000104  158C               	andwf	(main@i_218+1)& (0+255),w,b
  1392  000106  0100               	movlb	0	; () banked
  1393  000108  6FA2               	movwf	(??_main+1)& (0+255),b
  1394  00010A  51A1               	movf	??_main& (0+255),w,b
  1395  00010C  11A2               	iorwf	(??_main+1)& (0+255),w,b
  1396  00010E  A4D8               	btfss	status,2,c
  1397  000110  EF8C  F000         	goto	u1881
  1398  000114  EF8E  F000         	goto	u1880
  1399  000118                     u1881:
  1400  000118  EF98  F000         	goto	l45
  1401  00011C                     u1880:
  1402  00011C                     
  1403                           ; BSR set to: 0
  1404                           ;main.c: 81:         }
  1405  00011C  0EE1               	movlw	low STR_6
  1406  00011E  6F95               	movwf	printf@fmt& (0+255),b
  1407  000120  0EFF               	movlw	high STR_6
  1408  000122  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1409  000124  C18B  F097         	movff	main@i_218,?_printf+2
  1410  000128  C18C  F098         	movff	main@i_218+1,?_printf+3
  1411  00012C  EC17  F00A         	call	_printf	;wreg free
  1412  000130                     l45:
  1413                           
  1414                           ;main.c: 83:         if ((EUSART1_is_rx_ready())) {
  1415  000130  0EF7               	movlw	low STR_7
  1416  000132  0100               	movlb	0	; () banked
  1417  000134  6F95               	movwf	printf@fmt& (0+255),b
  1418  000136  0EFF               	movlw	high STR_7
  1419  000138  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1420  00013A  0E00               	movlw	low _adc_reading
  1421  00013C  0101               	movlb	1	; () banked
  1422  00013E  258B               	addwf	main@i_218& (0+255),w,b
  1423  000140  6ED9               	movwf	fsr2l,c
  1424  000142  0E02               	movlw	high _adc_reading
  1425  000144  218C               	addwfc	(main@i_218+1)& (0+255),w,b
  1426  000146  6EDA               	movwf	fsr2h,c
  1427  000148  50DF               	movf	indf2,w,c
  1428  00014A  0100               	movlb	0	; () banked
  1429  00014C  6FA1               	movwf	??_main& (0+255),b
  1430  00014E  51A1               	movf	??_main& (0+255),w,b
  1431  000150  6F97               	movwf	(?_printf+2)& (0+255),b
  1432  000152  6B98               	clrf	(?_printf+3)& (0+255),b
  1433  000154  EC17  F00A         	call	_printf	;wreg free
  1434  000158                     
  1435                           ;main.c: 84:             cmd = EUSART1_Read();
  1436  000158  0101               	movlb	1	; () banked
  1437  00015A  4B8B               	infsnz	main@i_218& (0+255),f,b
  1438  00015C  2B8C               	incf	(main@i_218+1)& (0+255),f,b
  1439  00015E                     
  1440                           ; BSR set to: 1
  1441  00015E  058C               	decf	(main@i_218+1)& (0+255),w,b
  1442  000160  A0D8               	btfss	status,0,c
  1443  000162  EFB5  F000         	goto	u1891
  1444  000166  EFB7  F000         	goto	u1890
  1445  00016A                     u1891:
  1446  00016A  EF7C  F000         	goto	l2694
  1447  00016E                     u1890:
  1448  00016E                     
  1449                           ; BSR set to: 1
  1450                           ;main.c: 85:             switch (cmd) {
  1451  00016E  0E6A               	movlw	low STR_8
  1452  000170  0100               	movlb	0	; () banked
  1453  000172  6F95               	movwf	printf@fmt& (0+255),b
  1454  000174  0EFE               	movlw	high STR_8
  1455  000176  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1456  000178  EC17  F00A         	call	_printf	;wreg free
  1457  00017C                     
  1458                           ;main.c: 86: ;main.c: 87:                 case '?':
  1459  00017C  0E00               	movlw	0
  1460  00017E  0101               	movlb	1	; () banked
  1461  000180  6F8E               	movwf	(main@crIdx+1)& (0+255),b
  1462  000182  0E00               	movlw	0
  1463  000184  6F8D               	movwf	main@crIdx& (0+255),b
  1464  000186                     
  1465                           ; BSR set to: 1
  1466                           ;main.c: 88:                     printf("------------------------------\r\n");
  1467  000186  0E00               	movlw	0
  1468  000188  6F90               	movwf	(main@i_224+1)& (0+255),b
  1469  00018A  0E01               	movlw	1
  1470  00018C  6F8F               	movwf	main@i_224& (0+255),b
  1471  00018E                     l2712:
  1472                           
  1473                           ; BSR set to: 1
  1474                           ;main.c: 89:                     printf("?: Help menu\r\n");
  1475  00018E  0EFF               	movlw	low (_adc_reading+65535)
  1476  000190  258F               	addwf	main@i_224& (0+255),w,b
  1477  000192  6ED9               	movwf	fsr2l,c
  1478  000194  0E01               	movlw	high (_adc_reading+65535)
  1479  000196  2190               	addwfc	(main@i_224+1)& (0+255),w,b
  1480  000198  6EDA               	movwf	fsr2h,c
  1481  00019A  0E81               	movlw	129
  1482  00019C  60DF               	cpfslt	indf2,c
  1483  00019E  EFD3  F000         	goto	u1901
  1484  0001A2  EFD5  F000         	goto	u1900
  1485  0001A6                     u1901:
  1486  0001A6  EFED  F000         	goto	l2720
  1487  0001AA                     u1900:
  1488  0001AA                     
  1489                           ; BSR set to: 1
  1490  0001AA  0E00               	movlw	low _adc_reading
  1491  0001AC  258F               	addwf	main@i_224& (0+255),w,b
  1492  0001AE  6ED9               	movwf	fsr2l,c
  1493  0001B0  0E02               	movlw	high _adc_reading
  1494  0001B2  2190               	addwfc	(main@i_224+1)& (0+255),w,b
  1495  0001B4  6EDA               	movwf	fsr2h,c
  1496  0001B6  0E80               	movlw	128
  1497  0001B8  64DF               	cpfsgt	indf2,c
  1498  0001BA  EFE1  F000         	goto	u1911
  1499  0001BE  EFE3  F000         	goto	u1910
  1500  0001C2                     u1911:
  1501  0001C2  EFED  F000         	goto	l2720
  1502  0001C6                     u1910:
  1503  0001C6                     
  1504                           ; BSR set to: 1
  1505                           ;main.c: 90:                     printf("o: k\r\n");
  1506  0001C6  0E00               	movlw	low main@crossings
  1507  0001C8  258D               	addwf	main@crIdx& (0+255),w,b
  1508  0001CA  6ED9               	movwf	fsr2l,c
  1509  0001CC  0E01               	movlw	high main@crossings
  1510  0001CE  218E               	addwfc	(main@crIdx+1)& (0+255),w,b
  1511  0001D0  6EDA               	movwf	fsr2h,c
  1512  0001D2  058F               	decf	main@i_224& (0+255),w,b
  1513  0001D4  6EDF               	movwf	indf2,c
  1514  0001D6                     
  1515                           ; BSR set to: 1
  1516                           ;main.c: 91:                     printf("Z: Reset processor\r\n");
  1517  0001D6  4B8D               	infsnz	main@crIdx& (0+255),f,b
  1518  0001D8  2B8E               	incf	(main@crIdx+1)& (0+255),f,b
  1519  0001DA                     l2720:
  1520                           
  1521                           ; BSR set to: 1
  1522                           ;main.c: 93:                     printf("T/t: Increase/decrease threshold 138-118\r\n");
  1523  0001DA  4B8F               	infsnz	main@i_224& (0+255),f,b
  1524  0001DC  2B90               	incf	(main@i_224+1)& (0+255),f,b
  1525  0001DE                     
  1526                           ; BSR set to: 1
  1527  0001DE  0590               	decf	(main@i_224+1)& (0+255),w,b
  1528  0001E0  A0D8               	btfss	status,0,c
  1529  0001E2  EFF5  F000         	goto	u1921
  1530  0001E6  EFF7  F000         	goto	u1920
  1531  0001EA                     u1921:
  1532  0001EA  EFC7  F000         	goto	l2712
  1533  0001EE                     u1920:
  1534  0001EE                     
  1535                           ; BSR set to: 1
  1536                           ;main.c: 94:                     printf("f: gather 512 samples from the microphone and c
      +                          alculate the frequency\r\n");
  1537  0001EE  0E00               	movlw	0
  1538  0001F0  6F88               	movwf	(main@i_225+1)& (0+255),b
  1539  0001F2  0E00               	movlw	0
  1540  0001F4  6F87               	movwf	main@i_225& (0+255),b
  1541  0001F6  EF14  F001         	goto	l2730
  1542  0001FA                     l2726:
  1543                           
  1544                           ; BSR set to: 1
  1545                           ;main.c: 95: 
  1546  0001FA  0EF7               	movlw	low STR_7
  1547  0001FC  0100               	movlb	0	; () banked
  1548  0001FE  6F95               	movwf	printf@fmt& (0+255),b
  1549  000200  0EFF               	movlw	high STR_7
  1550  000202  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1551  000204  0E00               	movlw	low main@crossings
  1552  000206  0101               	movlb	1	; () banked
  1553  000208  2587               	addwf	main@i_225& (0+255),w,b
  1554  00020A  6ED9               	movwf	fsr2l,c
  1555  00020C  0E01               	movlw	high main@crossings
  1556  00020E  2188               	addwfc	(main@i_225+1)& (0+255),w,b
  1557  000210  6EDA               	movwf	fsr2h,c
  1558  000212  50DF               	movf	indf2,w,c
  1559  000214  0100               	movlb	0	; () banked
  1560  000216  6FA1               	movwf	??_main& (0+255),b
  1561  000218  51A1               	movf	??_main& (0+255),w,b
  1562  00021A  6F97               	movwf	(?_printf+2)& (0+255),b
  1563  00021C  6B98               	clrf	(?_printf+3)& (0+255),b
  1564  00021E  EC17  F00A         	call	_printf	;wreg free
  1565  000222                     
  1566                           ;main.c: 96:                     printf("------------------------------\r\n");
  1567  000222  0101               	movlb	1	; () banked
  1568  000224  4B87               	infsnz	main@i_225& (0+255),f,b
  1569  000226  2B88               	incf	(main@i_225+1)& (0+255),f,b
  1570  000228                     l2730:
  1571                           
  1572                           ; BSR set to: 1
  1573  000228  518D               	movf	main@crIdx& (0+255),w,b
  1574  00022A  5D87               	subwf	main@i_225& (0+255),w,b
  1575  00022C  518E               	movf	(main@crIdx+1)& (0+255),w,b
  1576  00022E  5988               	subwfb	(main@i_225+1)& (0+255),w,b
  1577  000230  A0D8               	btfss	status,0,c
  1578  000232  EF1D  F001         	goto	u1931
  1579  000236  EF1F  F001         	goto	u1930
  1580  00023A                     u1931:
  1581  00023A  EFFD  F000         	goto	l2726
  1582  00023E                     u1930:
  1583  00023E                     
  1584                           ; BSR set to: 1
  1585                           ;main.c: 97:                     break;
  1586  00023E  0ECA               	movlw	low STR_10
  1587  000240  0100               	movlb	0	; () banked
  1588  000242  6F95               	movwf	printf@fmt& (0+255),b
  1589  000244  0EFE               	movlw	high STR_10
  1590  000246  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1591  000248  C18D  F097         	movff	main@crIdx,?_printf+2
  1592  00024C  C18E  F098         	movff	main@crIdx+1,?_printf+3
  1593  000250  EC17  F00A         	call	_printf	;wreg free
  1594  000254                     
  1595                           ;main.c: 98: 
  1596  000254  0E00               	movlw	0
  1597  000256  0101               	movlb	1	; () banked
  1598  000258  6F85               	movwf	(main@periodSum+1)& (0+255),b
  1599  00025A  0E00               	movlw	0
  1600  00025C  6F84               	movwf	main@periodSum& (0+255),b
  1601  00025E                     
  1602                           ; BSR set to: 1
  1603                           ;main.c: 99: 
  1604  00025E  0E00               	movlw	0
  1605  000260  6F92               	movwf	(main@i_229+1)& (0+255),b
  1606  000262  0E01               	movlw	1
  1607  000264  6F91               	movwf	main@i_229& (0+255),b
  1608  000266  EFB0  F001         	goto	l2744
  1609  00026A                     l2738:
  1610                           
  1611                           ; BSR set to: 1
  1612                           ;main.c: 100: 
  1613  00026A  0EAF               	movlw	low STR_11
  1614  00026C  0100               	movlb	0	; () banked
  1615  00026E  6F95               	movwf	printf@fmt& (0+255),b
  1616  000270  0EFF               	movlw	high STR_11
  1617  000272  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1618  000274  0E00               	movlw	low main@crossings
  1619  000276  0101               	movlb	1	; () banked
  1620  000278  2591               	addwf	main@i_229& (0+255),w,b
  1621  00027A  6ED9               	movwf	fsr2l,c
  1622  00027C  0E01               	movlw	high main@crossings
  1623  00027E  2192               	addwfc	(main@i_229+1)& (0+255),w,b
  1624  000280  6EDA               	movwf	fsr2h,c
  1625  000282  50DF               	movf	indf2,w,c
  1626  000284  0100               	movlb	0	; () banked
  1627  000286  6FA1               	movwf	??_main& (0+255),b
  1628  000288  51A1               	movf	??_main& (0+255),w,b
  1629  00028A  6F97               	movwf	(?_printf+2)& (0+255),b
  1630  00028C  6B98               	clrf	(?_printf+3)& (0+255),b
  1631  00028E  0EFF               	movlw	255
  1632  000290  6FA2               	movwf	(??_main+1)& (0+255),b
  1633  000292  0EFF               	movlw	255
  1634  000294  6FA3               	movwf	(??_main+2)& (0+255),b
  1635  000296  C191  F0A4         	movff	main@i_229,??_main+3
  1636  00029A  C192  F0A5         	movff	main@i_229+1,??_main+4
  1637  00029E  51A2               	movf	(??_main+1)& (0+255),w,b
  1638  0002A0  27A4               	addwf	(??_main+3)& (0+255),f,b
  1639  0002A2  51A3               	movf	(??_main+2)& (0+255),w,b
  1640  0002A4  23A5               	addwfc	(??_main+4)& (0+255),f,b
  1641  0002A6  0E00               	movlw	low main@crossings
  1642  0002A8  25A4               	addwf	(??_main+3)& (0+255),w,b
  1643  0002AA  6ED9               	movwf	fsr2l,c
  1644  0002AC  0E01               	movlw	high main@crossings
  1645  0002AE  21A5               	addwfc	(??_main+4)& (0+255),w,b
  1646  0002B0  6EDA               	movwf	fsr2h,c
  1647  0002B2  50DF               	movf	indf2,w,c
  1648  0002B4  6FA6               	movwf	(??_main+5)& (0+255),b
  1649  0002B6  51A6               	movf	(??_main+5)& (0+255),w,b
  1650  0002B8  6F99               	movwf	(?_printf+4)& (0+255),b
  1651  0002BA  6B9A               	clrf	(?_printf+5)& (0+255),b
  1652  0002BC  0E00               	movlw	low main@crossings
  1653  0002BE  0101               	movlb	1	; () banked
  1654  0002C0  2591               	addwf	main@i_229& (0+255),w,b
  1655  0002C2  6ED9               	movwf	fsr2l,c
  1656  0002C4  0E01               	movlw	high main@crossings
  1657  0002C6  2192               	addwfc	(main@i_229+1)& (0+255),w,b
  1658  0002C8  6EDA               	movwf	fsr2h,c
  1659  0002CA  50DF               	movf	indf2,w,c
  1660  0002CC  0100               	movlb	0	; () banked
  1661  0002CE  6FA7               	movwf	(??_main+6)& (0+255),b
  1662  0002D0  0EFF               	movlw	255
  1663  0002D2  6FA8               	movwf	(??_main+7)& (0+255),b
  1664  0002D4  0EFF               	movlw	255
  1665  0002D6  6FA9               	movwf	(??_main+8)& (0+255),b
  1666  0002D8  C191  F0AA         	movff	main@i_229,??_main+9
  1667  0002DC  C192  F0AB         	movff	main@i_229+1,??_main+10
  1668  0002E0  51A8               	movf	(??_main+7)& (0+255),w,b
  1669  0002E2  27AA               	addwf	(??_main+9)& (0+255),f,b
  1670  0002E4  51A9               	movf	(??_main+8)& (0+255),w,b
  1671  0002E6  23AB               	addwfc	(??_main+10)& (0+255),f,b
  1672  0002E8  0E00               	movlw	low main@crossings
  1673  0002EA  25AA               	addwf	(??_main+9)& (0+255),w,b
  1674  0002EC  6ED9               	movwf	fsr2l,c
  1675  0002EE  0E01               	movlw	high main@crossings
  1676  0002F0  21AB               	addwfc	(??_main+10)& (0+255),w,b
  1677  0002F2  6EDA               	movwf	fsr2h,c
  1678  0002F4  50DF               	movf	indf2,w,c
  1679  0002F6  6FAC               	movwf	(??_main+11)& (0+255),b
  1680  0002F8  51AC               	movf	(??_main+11)& (0+255),w,b
  1681  0002FA  5DA7               	subwf	(??_main+6)& (0+255),w,b
  1682  0002FC  6F9B               	movwf	(?_printf+6)& (0+255),b
  1683  0002FE  6B9C               	clrf	(?_printf+7)& (0+255),b
  1684  000300  A0D8               	btfss	status,0,c
  1685  000302  079C               	decf	(?_printf+7)& (0+255),f,b
  1686  000304  EC17  F00A         	call	_printf	;wreg free
  1687  000308                     
  1688                           ;main.c: 101: 
  1689  000308  0E00               	movlw	low main@crossings
  1690  00030A  0101               	movlb	1	; () banked
  1691  00030C  2591               	addwf	main@i_229& (0+255),w,b
  1692  00030E  6ED9               	movwf	fsr2l,c
  1693  000310  0E01               	movlw	high main@crossings
  1694  000312  2192               	addwfc	(main@i_229+1)& (0+255),w,b
  1695  000314  6EDA               	movwf	fsr2h,c
  1696  000316  50DF               	movf	indf2,w,c
  1697  000318  0100               	movlb	0	; () banked
  1698  00031A  6FA1               	movwf	??_main& (0+255),b
  1699  00031C  6BA2               	clrf	(??_main+1)& (0+255),b
  1700  00031E  0EFF               	movlw	255
  1701  000320  6FA3               	movwf	(??_main+2)& (0+255),b
  1702  000322  0EFF               	movlw	255
  1703  000324  6FA4               	movwf	(??_main+3)& (0+255),b
  1704  000326  C191  F0A5         	movff	main@i_229,??_main+4
  1705  00032A  C192  F0A6         	movff	main@i_229+1,??_main+5
  1706  00032E  51A3               	movf	(??_main+2)& (0+255),w,b
  1707  000330  27A5               	addwf	(??_main+4)& (0+255),f,b
  1708  000332  51A4               	movf	(??_main+3)& (0+255),w,b
  1709  000334  23A6               	addwfc	(??_main+5)& (0+255),f,b
  1710  000336  0E00               	movlw	low main@crossings
  1711  000338  25A5               	addwf	(??_main+4)& (0+255),w,b
  1712  00033A  6ED9               	movwf	fsr2l,c
  1713  00033C  0E01               	movlw	high main@crossings
  1714  00033E  21A6               	addwfc	(??_main+5)& (0+255),w,b
  1715  000340  6EDA               	movwf	fsr2h,c
  1716  000342  50DF               	movf	indf2,w,c
  1717  000344  6FA7               	movwf	(??_main+6)& (0+255),b
  1718  000346  51A7               	movf	(??_main+6)& (0+255),w,b
  1719  000348  5FA1               	subwf	??_main& (0+255),f,b
  1720  00034A  0E00               	movlw	0
  1721  00034C  5BA2               	subwfb	(??_main+1)& (0+255),f,b
  1722  00034E  51A1               	movf	??_main& (0+255),w,b
  1723  000350  0101               	movlb	1	; () banked
  1724  000352  2784               	addwf	main@periodSum& (0+255),f,b
  1725  000354  0100               	movlb	0	; () banked
  1726  000356  51A2               	movf	(??_main+1)& (0+255),w,b
  1727  000358  0101               	movlb	1	; () banked
  1728  00035A  2385               	addwfc	(main@periodSum+1)& (0+255),f,b
  1729  00035C                     
  1730                           ; BSR set to: 1
  1731                           ;main.c: 102:                 case 'o':
  1732  00035C  4B91               	infsnz	main@i_229& (0+255),f,b
  1733  00035E  2B92               	incf	(main@i_229+1)& (0+255),f,b
  1734  000360                     l2744:
  1735                           
  1736                           ; BSR set to: 1
  1737  000360  518D               	movf	main@crIdx& (0+255),w,b
  1738  000362  5D91               	subwf	main@i_229& (0+255),w,b
  1739  000364  518E               	movf	(main@crIdx+1)& (0+255),w,b
  1740  000366  5992               	subwfb	(main@i_229+1)& (0+255),w,b
  1741  000368  A0D8               	btfss	status,0,c
  1742  00036A  EFB9  F001         	goto	u1941
  1743  00036E  EFBB  F001         	goto	u1940
  1744  000372                     u1941:
  1745  000372  EF35  F001         	goto	l2738
  1746  000376                     u1940:
  1747  000376                     
  1748                           ; BSR set to: 1
  1749                           ;main.c: 103:                     printf(" k\r\n>");
  1750  000376  C184  F014         	movff	main@periodSum,___lwdiv@dividend
  1751  00037A  C185  F015         	movff	main@periodSum+1,___lwdiv@dividend+1
  1752  00037E  C18D  F016         	movff	main@crIdx,___lwdiv@divisor
  1753  000382  C18E  F017         	movff	main@crIdx+1,___lwdiv@divisor+1
  1754  000386  ECBA  F008         	call	___lwdiv	;wreg free
  1755  00038A  C014  F180         	movff	?___lwdiv,main@avgPeriod
  1756  00038E  C015  F181         	movff	?___lwdiv+1,main@avgPeriod+1
  1757  000392                     
  1758                           ;main.c: 104:                     break;
  1759  000392  C180  F014         	movff	main@avgPeriod,___wmul@multiplier
  1760  000396  C181  F015         	movff	main@avgPeriod+1,___wmul@multiplier+1
  1761  00039A  0E00               	movlw	0
  1762  00039C  6E17               	movwf	(___wmul@multiplicand+1)^0,c
  1763  00039E  0E19               	movlw	25
  1764  0003A0  6E16               	movwf	___wmul@multiplicand^0,c
  1765  0003A2  EC3F  F00A         	call	___wmul	;wreg free
  1766  0003A6  C014  F182         	movff	?___wmul,main@avgPeriodUs
  1767  0003AA  C015  F183         	movff	?___wmul+1,main@avgPeriodUs+1
  1768  0003AE                     
  1769                           ;main.c: 105: 
  1770  0003AE  0E0E               	movlw	low STR_12
  1771  0003B0  0100               	movlb	0	; () banked
  1772  0003B2  6F95               	movwf	printf@fmt& (0+255),b
  1773  0003B4  0EFF               	movlw	high STR_12
  1774  0003B6  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1775  0003B8  C182  F097         	movff	main@avgPeriodUs,?_printf+2
  1776  0003BC  C183  F098         	movff	main@avgPeriodUs+1,?_printf+3
  1777  0003C0  EC17  F00A         	call	_printf	;wreg free
  1778  0003C4                     l2752:
  1779                           
  1780                           ;main.c: 109:                 case 'Z':
  1781  0003C4  EC92  F00A         	call	_EUSART1_is_rx_ready	;wreg free
  1782  0003C8  0900               	iorlw	0
  1783  0003CA  B4D8               	btfsc	status,2,c
  1784  0003CC  EFEA  F001         	goto	u1951
  1785  0003D0  EFEC  F001         	goto	u1950
  1786  0003D4                     u1951:
  1787  0003D4  EF65  F000         	goto	l2682
  1788  0003D8                     u1950:
  1789  0003D8                     
  1790                           ;main.c: 110:                     for (i = 0; i < 40; i++) printf("\n");
  1791  0003D8  EC2B  F00A         	call	_EUSART1_Read	;wreg free
  1792  0003DC  0101               	movlb	1	; () banked
  1793  0003DE  6F86               	movwf	main@cmd& (0+255),b
  1794                           
  1795                           ;main.c: 111:                     __asm("reset");
  1796  0003E0  EFF2  F002         	goto	l2802
  1797  0003E4                     l2756:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;main.c: 114: 
  1801  0003E4  0EED               	movlw	low STR_13
  1802  0003E6  6F95               	movwf	printf@fmt& (0+255),b
  1803  0003E8  0EFE               	movlw	high STR_13
  1804  0003EA  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1805  0003EC  EC17  F00A         	call	_printf	;wreg free
  1806                           
  1807                           ;main.c: 115: 
  1808  0003F0  0EBE               	movlw	low STR_14
  1809  0003F2  0100               	movlb	0	; () banked
  1810  0003F4  6F95               	movwf	printf@fmt& (0+255),b
  1811  0003F6  0EFF               	movlw	high STR_14
  1812  0003F8  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1813  0003FA  EC17  F00A         	call	_printf	;wreg free
  1814                           
  1815                           ;main.c: 116: 
  1816  0003FE  0EEA               	movlw	low STR_15
  1817  000400  0100               	movlb	0	; () banked
  1818  000402  6F95               	movwf	printf@fmt& (0+255),b
  1819  000404  0EFF               	movlw	high STR_15
  1820  000406  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1821  000408  EC17  F00A         	call	_printf	;wreg free
  1822                           
  1823                           ;main.c: 117:                 case 'z':
  1824  00040C  0E89               	movlw	low STR_16
  1825  00040E  0100               	movlb	0	; () banked
  1826  000410  6F95               	movwf	printf@fmt& (0+255),b
  1827  000412  0EFF               	movlw	high STR_16
  1828  000414  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1829  000416  EC17  F00A         	call	_printf	;wreg free
  1830                           
  1831                           ;main.c: 118:                     for (i = 0; i < 40; i++) printf("\n>");
  1832  00041A  0E5A               	movlw	low STR_17
  1833  00041C  0100               	movlb	0	; () banked
  1834  00041E  6F95               	movwf	printf@fmt& (0+255),b
  1835  000420  0EFF               	movlw	high STR_17
  1836  000422  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1837  000424  EC17  F00A         	call	_printf	;wreg free
  1838                           
  1839                           ;main.c: 119:                     break;
  1840  000428  0E9F               	movlw	low STR_18
  1841  00042A  0100               	movlb	0	; () banked
  1842  00042C  6F95               	movwf	printf@fmt& (0+255),b
  1843  00042E  0EFE               	movlw	high STR_18
  1844  000430  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1845  000432  EC17  F00A         	call	_printf	;wreg free
  1846                           
  1847                           ;main.c: 120: 
  1848  000436  0EED               	movlw	low STR_19
  1849  000438  0100               	movlb	0	; () banked
  1850  00043A  6F95               	movwf	printf@fmt& (0+255),b
  1851  00043C  0EFD               	movlw	high STR_19
  1852  00043E  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1853  000440  EC17  F00A         	call	_printf	;wreg free
  1854                           
  1855                           ;main.c: 122:                     thresholdRange += 5;
  1856  000444  0EED               	movlw	low STR_13
  1857  000446  0100               	movlb	0	; () banked
  1858  000448  6F95               	movwf	printf@fmt& (0+255),b
  1859  00044A  0EFE               	movlw	high STR_13
  1860  00044C  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1861  00044E  EC17  F00A         	call	_printf	;wreg free
  1862                           
  1863                           ;main.c: 123:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRan
      +                          ge, 128 + thresholdRange);
  1864  000452  EF65  F000         	goto	l2682
  1865  000456                     l2758:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;main.c: 129:                     }
  1869  000456  0EF1               	movlw	low STR_21
  1870  000458  6F95               	movwf	printf@fmt& (0+255),b
  1871  00045A  0EFF               	movlw	high STR_21
  1872  00045C  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1873  00045E  EC17  F00A         	call	_printf	;wreg free
  1874                           
  1875                           ;main.c: 130:                     else{
  1876  000462  EF65  F000         	goto	l2682
  1877  000466                     l2760:
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;main.c: 136:                 case 'f':
  1881  000466  0E00               	movlw	0
  1882  000468  0101               	movlb	1	; () banked
  1883  00046A  6F8A               	movwf	(main@i+1)& (0+255),b
  1884  00046C  0E00               	movlw	0
  1885  00046E  6F89               	movwf	main@i& (0+255),b
  1886  000470                     l2766:
  1887                           
  1888                           ; BSR set to: 1
  1889  000470  0E68               	movlw	low (STR_5+51)
  1890  000472  0100               	movlb	0	; () banked
  1891  000474  6F95               	movwf	printf@fmt& (0+255),b
  1892  000476  0EFE               	movlw	high (STR_5+51)
  1893  000478  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1894  00047A  EC17  F00A         	call	_printf	;wreg free
  1895  00047E  0101               	movlb	1	; () banked
  1896  000480  4B89               	infsnz	main@i& (0+255),f,b
  1897  000482  2B8A               	incf	(main@i+1)& (0+255),f,b
  1898  000484                     
  1899                           ; BSR set to: 1
  1900  000484  518A               	movf	(main@i+1)& (0+255),w,b
  1901  000486  E109               	bnz	u1960
  1902  000488  0E28               	movlw	40
  1903  00048A  5D89               	subwf	main@i& (0+255),w,b
  1904  00048C  A0D8               	btfss	status,0,c
  1905  00048E  EF4B  F002         	goto	u1961
  1906  000492  EF4D  F002         	goto	u1960
  1907  000496                     u1961:
  1908  000496  EF38  F002         	goto	l2766
  1909  00049A                     u1960:
  1910  00049A                     
  1911                           ; BSR set to: 1
  1912  00049A  00FF               	reset		;# 
  1913                           
  1914                           ;main.c: 138:                     fillBuffer = 1;
  1915  00049C  EF65  F000         	goto	l2682
  1916  0004A0                     l2772:
  1917                           
  1918                           ; BSR set to: 0
  1919  0004A0  0E00               	movlw	0
  1920  0004A2  0101               	movlb	1	; () banked
  1921  0004A4  6F8A               	movwf	(main@i+1)& (0+255),b
  1922  0004A6  0E00               	movlw	0
  1923  0004A8  6F89               	movwf	main@i& (0+255),b
  1924  0004AA                     l2778:
  1925                           
  1926                           ; BSR set to: 1
  1927  0004AA  0EF4               	movlw	low (STR_21+3)
  1928  0004AC  0100               	movlb	0	; () banked
  1929  0004AE  6F95               	movwf	printf@fmt& (0+255),b
  1930  0004B0  0EFF               	movlw	high (STR_21+3)
  1931  0004B2  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1932  0004B4  EC17  F00A         	call	_printf	;wreg free
  1933  0004B8  0101               	movlb	1	; () banked
  1934  0004BA  4B89               	infsnz	main@i& (0+255),f,b
  1935  0004BC  2B8A               	incf	(main@i+1)& (0+255),f,b
  1936  0004BE                     
  1937                           ; BSR set to: 1
  1938  0004BE  518A               	movf	(main@i+1)& (0+255),w,b
  1939  0004C0  E109               	bnz	u1970
  1940  0004C2  0E28               	movlw	40
  1941  0004C4  5D89               	subwf	main@i& (0+255),w,b
  1942  0004C6  A0D8               	btfss	status,0,c
  1943  0004C8  EF68  F002         	goto	u1971
  1944  0004CC  EF6A  F002         	goto	u1970
  1945  0004D0                     u1971:
  1946  0004D0  EF55  F002         	goto	l2778
  1947  0004D4                     u1970:
  1948  0004D4  EF65  F000         	goto	l2682
  1949  0004D8                     l2784:
  1950                           
  1951                           ; BSR set to: 0
  1952  0004D8  0E05               	movlw	5
  1953  0004DA  0101               	movlb	1	; () banked
  1954  0004DC  2793               	addwf	_thresholdRange& (0+255),f,b
  1955  0004DE  0E00               	movlw	0
  1956  0004E0  2394               	addwfc	(_thresholdRange+1)& (0+255),f,b
  1957  0004E2                     
  1958                           ; BSR set to: 1
  1959  0004E2  0E42               	movlw	low STR_24
  1960  0004E4  0100               	movlb	0	; () banked
  1961  0004E6  6F95               	movwf	printf@fmt& (0+255),b
  1962  0004E8  0EFF               	movlw	high STR_24
  1963  0004EA  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1964  0004EC  0101               	movlb	1	; () banked
  1965  0004EE  5193               	movf	_thresholdRange& (0+255),w,b
  1966  0004F0  0880               	sublw	128
  1967  0004F2  0100               	movlb	0	; () banked
  1968  0004F4  6F97               	movwf	(?_printf+2)& (0+255),b
  1969  0004F6  0101               	movlb	1	; () banked
  1970  0004F8  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  1971  0004FA  A0D8               	btfss	status,0,c
  1972  0004FC  2AE8               	incf	wreg,f,c
  1973  0004FE  0800               	sublw	0
  1974  000500  0100               	movlb	0	; () banked
  1975  000502  6F98               	movwf	(?_printf+3)& (0+255),b
  1976  000504  0E80               	movlw	128
  1977  000506  0101               	movlb	1	; () banked
  1978  000508  2593               	addwf	_thresholdRange& (0+255),w,b
  1979  00050A  0100               	movlb	0	; () banked
  1980  00050C  6F99               	movwf	(?_printf+4)& (0+255),b
  1981  00050E  0E00               	movlw	0
  1982  000510  0101               	movlb	1	; () banked
  1983  000512  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1984  000514  0100               	movlb	0	; () banked
  1985  000516  6F9A               	movwf	(?_printf+5)& (0+255),b
  1986  000518  EC17  F00A         	call	_printf	;wreg free
  1987  00051C  EF65  F000         	goto	l2682
  1988  000520                     l2788:
  1989                           
  1990                           ; BSR set to: 0
  1991  000520  0101               	movlb	1	; () banked
  1992  000522  5193               	movf	_thresholdRange& (0+255),w,b
  1993  000524  1194               	iorwf	(_thresholdRange+1)& (0+255),w,b
  1994  000526  B4D8               	btfsc	status,2,c
  1995  000528  EF98  F002         	goto	u1981
  1996  00052C  EF9A  F002         	goto	u1980
  1997  000530                     u1981:
  1998  000530  EFBD  F002         	goto	l2794
  1999  000534                     u1980:
  2000  000534                     
  2001                           ; BSR set to: 1
  2002  000534  0E05               	movlw	5
  2003  000536  5F93               	subwf	_thresholdRange& (0+255),f,b
  2004  000538  0E00               	movlw	0
  2005  00053A  5B94               	subwfb	(_thresholdRange+1)& (0+255),f,b
  2006  00053C                     
  2007                           ; BSR set to: 1
  2008  00053C  0E42               	movlw	low STR_24
  2009  00053E  0100               	movlb	0	; () banked
  2010  000540  6F95               	movwf	printf@fmt& (0+255),b
  2011  000542  0EFF               	movlw	high STR_24
  2012  000544  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2013  000546  0101               	movlb	1	; () banked
  2014  000548  5193               	movf	_thresholdRange& (0+255),w,b
  2015  00054A  0880               	sublw	128
  2016  00054C  0100               	movlb	0	; () banked
  2017  00054E  6F97               	movwf	(?_printf+2)& (0+255),b
  2018  000550  0101               	movlb	1	; () banked
  2019  000552  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  2020  000554  A0D8               	btfss	status,0,c
  2021  000556  2AE8               	incf	wreg,f,c
  2022  000558  0800               	sublw	0
  2023  00055A  0100               	movlb	0	; () banked
  2024  00055C  6F98               	movwf	(?_printf+3)& (0+255),b
  2025  00055E  0E80               	movlw	128
  2026  000560  0101               	movlb	1	; () banked
  2027  000562  2593               	addwf	_thresholdRange& (0+255),w,b
  2028  000564  0100               	movlb	0	; () banked
  2029  000566  6F99               	movwf	(?_printf+4)& (0+255),b
  2030  000568  0E00               	movlw	0
  2031  00056A  0101               	movlb	1	; () banked
  2032  00056C  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2033  00056E  0100               	movlb	0	; () banked
  2034  000570  6F9A               	movwf	(?_printf+5)& (0+255),b
  2035  000572  EC17  F00A         	call	_printf	;wreg free
  2036  000576  EF65  F000         	goto	l2682
  2037  00057A                     l2794:
  2038                           
  2039                           ; BSR set to: 1
  2040  00057A  0E42               	movlw	low STR_24
  2041  00057C  0100               	movlb	0	; () banked
  2042  00057E  6F95               	movwf	printf@fmt& (0+255),b
  2043  000580  0EFF               	movlw	high STR_24
  2044  000582  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2045  000584  0101               	movlb	1	; () banked
  2046  000586  5193               	movf	_thresholdRange& (0+255),w,b
  2047  000588  0880               	sublw	128
  2048  00058A  0100               	movlb	0	; () banked
  2049  00058C  6F97               	movwf	(?_printf+2)& (0+255),b
  2050  00058E  0101               	movlb	1	; () banked
  2051  000590  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  2052  000592  A0D8               	btfss	status,0,c
  2053  000594  2AE8               	incf	wreg,f,c
  2054  000596  0800               	sublw	0
  2055  000598  0100               	movlb	0	; () banked
  2056  00059A  6F98               	movwf	(?_printf+3)& (0+255),b
  2057  00059C  0E80               	movlw	128
  2058  00059E  0101               	movlb	1	; () banked
  2059  0005A0  2593               	addwf	_thresholdRange& (0+255),w,b
  2060  0005A2  0100               	movlb	0	; () banked
  2061  0005A4  6F99               	movwf	(?_printf+4)& (0+255),b
  2062  0005A6  0E00               	movlw	0
  2063  0005A8  0101               	movlb	1	; () banked
  2064  0005AA  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2065  0005AC  0100               	movlb	0	; () banked
  2066  0005AE  6F9A               	movwf	(?_printf+5)& (0+255),b
  2067  0005B0  EC17  F00A         	call	_printf	;wreg free
  2068  0005B4  0E72               	movlw	low STR_27
  2069  0005B6  0100               	movlb	0	; () banked
  2070  0005B8  6F95               	movwf	printf@fmt& (0+255),b
  2071  0005BA  0EFF               	movlw	high STR_27
  2072  0005BC  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2073  0005BE  EC17  F00A         	call	_printf	;wreg free
  2074  0005C2  EF65  F000         	goto	l2682
  2075  0005C6                     l2796:
  2076                           
  2077                           ; BSR set to: 0
  2078  0005C6  0E01               	movlw	1
  2079  0005C8  6E4B               	movwf	_fillBuffer^0,c
  2080  0005CA  EF65  F000         	goto	l2682
  2081  0005CE                     l2798:
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;main.c: 203:                     printf("Unknown key %c\r\n", cmd);
  2085  0005CE  0E9E               	movlw	low STR_28
  2086  0005D0  6F95               	movwf	printf@fmt& (0+255),b
  2087  0005D2  0EFF               	movlw	high STR_28
  2088  0005D4  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2089  0005D6  C186  F097         	movff	main@cmd,?_printf+2
  2090  0005DA  6B98               	clrf	(?_printf+3)& (0+255),b
  2091  0005DC  EC17  F00A         	call	_printf	;wreg free
  2092                           
  2093                           ;main.c: 204:                     break;
  2094  0005E0  EF65  F000         	goto	l2682
  2095  0005E4                     l2802:
  2096                           
  2097                           ; BSR set to: 1
  2098  0005E4  5186               	movf	main@cmd& (0+255),w,b
  2099  0005E6  0100               	movlb	0	; () banked
  2100  0005E8  6FA1               	movwf	??_main& (0+255),b
  2101  0005EA  6BA2               	clrf	(??_main+1)& (0+255),b
  2102                           
  2103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2104                           ; Switch size 1, requested type "simple"
  2105                           ; Number of cases is 1, Range of values is 0 to 0
  2106                           ; switch strategies available:
  2107                           ; Name         Instructions Cycles
  2108                           ; simple_byte            4     3 (average)
  2109                           ;	Chosen strategy is simple_byte
  2110  0005EC  51A2               	movf	(??_main+1)& (0+255),w,b
  2111  0005EE  0A00               	xorlw	0	; case 0
  2112  0005F0  B4D8               	btfsc	status,2,c
  2113  0005F2  EFFD  F002         	goto	l2860
  2114  0005F6  EFE7  F002         	goto	l2798
  2115  0005FA                     l2860:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ; Switch size 1, requested type "simple"
  2119                           ; Number of cases is 7, Range of values is 63 to 122
  2120                           ; switch strategies available:
  2121                           ; Name         Instructions Cycles
  2122                           ; simple_byte           22    12 (average)
  2123                           ;	Chosen strategy is simple_byte
  2124  0005FA  51A1               	movf	??_main& (0+255),w,b
  2125  0005FC  0A3F               	xorlw	63	; case 63
  2126  0005FE  B4D8               	btfsc	status,2,c
  2127  000600  EFF2  F001         	goto	l2756
  2128  000604  0A6B               	xorlw	107	; case 84
  2129  000606  B4D8               	btfsc	status,2,c
  2130  000608  EF6C  F002         	goto	l2784
  2131  00060C  0A0E               	xorlw	14	; case 90
  2132  00060E  B4D8               	btfsc	status,2,c
  2133  000610  EF33  F002         	goto	l2760
  2134  000614  0A3C               	xorlw	60	; case 102
  2135  000616  B4D8               	btfsc	status,2,c
  2136  000618  EFE3  F002         	goto	l2796
  2137  00061C  0A09               	xorlw	9	; case 111
  2138  00061E  B4D8               	btfsc	status,2,c
  2139  000620  EF2B  F002         	goto	l2758
  2140  000624  0A1B               	xorlw	27	; case 116
  2141  000626  B4D8               	btfsc	status,2,c
  2142  000628  EF90  F002         	goto	l2788
  2143  00062C  0A0E               	xorlw	14	; case 122
  2144  00062E  B4D8               	btfsc	status,2,c
  2145  000630  EF50  F002         	goto	l2772
  2146  000634  EFE7  F002         	goto	l2798
  2147  000638  EF27  F000         	goto	start
  2148  00063C                     __end_of_main:
  2149                           	callstack 0
  2150                           
  2151 ;; *************** function _printf *****************
  2152 ;; Defined at:
  2153 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  2156 ;;		 -> STR_28(17), STR_27(23), STR_26(24), STR_25(24), 
  2157 ;;		 -> STR_24(24), STR_23(3), STR_22(2), STR_21(6), 
  2158 ;;		 -> STR_20(33), STR_19(72), STR_18(43), STR_17(24), 
  2159 ;;		 -> STR_16(21), STR_15(7), STR_14(15), STR_13(33), 
  2160 ;;		 -> STR_12(27), STR_11(15), STR_10(35), STR_9(4), 
  2161 ;;		 -> STR_8(53), STR_7(4), STR_6(9), STR_5(53), 
  2162 ;;		 -> STR_4(3), STR_3(9), STR_2(25), STR_1(11), 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  ap              2   63[BANK0 ] PTR void [1]
  2165 ;;		 -> ?_printf(2), 
  2166 ;;  ret             2    0        int 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  2   53[BANK0 ] int 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:       12 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:   12
  2183 ;; This function calls:
  2184 ;;		_vfprintf
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text1
  2191  00142E                     __ptext1:
  2192                           	callstack 0
  2193  00142E                     _printf:
  2194                           	callstack 18
  2195  00142E  0E97               	movlw	low (?_printf+2)
  2196  001430  0100               	movlb	0	; () banked
  2197  001432  6F9F               	movwf	printf@ap& (0+255),b
  2198  001434  0E00               	movlw	high (?_printf+2)
  2199  001436  6FA0               	movwf	(printf@ap+1)& (0+255),b
  2200  001438                     
  2201                           ; BSR set to: 0
  2202  001438  0E00               	movlw	0
  2203  00143A  6F8D               	movwf	vfprintf@fp& (0+255),b
  2204  00143C  0E00               	movlw	0
  2205  00143E  6F8E               	movwf	(vfprintf@fp+1)& (0+255),b
  2206  001440  C095  F08F         	movff	printf@fmt,vfprintf@fmt
  2207  001444  C096  F090         	movff	printf@fmt+1,vfprintf@fmt+1
  2208  001448  0E9F               	movlw	low printf@ap
  2209  00144A  6F91               	movwf	vfprintf@ap& (0+255),b
  2210  00144C  0E00               	movlw	high printf@ap
  2211  00144E  6F92               	movwf	(vfprintf@ap+1)& (0+255),b
  2212  001450  ECF4  F008         	call	_vfprintf	;wreg free
  2213  001454  0012               	return		;funcret
  2214  001456                     __end_of_printf:
  2215                           	callstack 0
  2216                           
  2217 ;; *************** function _vfprintf *****************
  2218 ;; Defined at:
  2219 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  2222 ;;		 -> NULL(0), 
  2223 ;;  fmt             2   47[BANK0 ] PTR const unsigned char 
  2224 ;;		 -> STR_28(17), STR_27(23), STR_26(24), STR_25(24), 
  2225 ;;		 -> STR_24(24), STR_23(3), STR_22(2), STR_21(6), 
  2226 ;;		 -> STR_20(33), STR_19(72), STR_18(43), STR_17(24), 
  2227 ;;		 -> STR_16(21), STR_15(7), STR_14(15), STR_13(33), 
  2228 ;;		 -> STR_12(27), STR_11(15), STR_10(35), STR_9(4), 
  2229 ;;		 -> STR_8(53), STR_7(4), STR_6(9), STR_5(53), 
  2230 ;;		 -> STR_4(3), STR_3(9), STR_2(25), STR_1(11), 
  2231 ;;  ap              2   49[BANK0 ] PTR PTR void 
  2232 ;;		 -> printf@ap(2), 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  cfmt            2   51[BANK0 ] PTR unsigned char 
  2235 ;;		 -> STR_28(17), STR_27(23), STR_26(24), STR_25(24), 
  2236 ;;		 -> STR_24(24), STR_23(3), STR_22(2), STR_21(6), 
  2237 ;;		 -> STR_20(33), STR_19(72), STR_18(43), STR_17(24), 
  2238 ;;		 -> STR_16(21), STR_15(7), STR_14(15), STR_13(33), 
  2239 ;;		 -> STR_12(27), STR_11(15), STR_10(35), STR_9(4), 
  2240 ;;		 -> STR_8(53), STR_7(4), STR_6(9), STR_5(53), 
  2241 ;;		 -> STR_4(3), STR_3(9), STR_2(25), STR_1(11), 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  2   45[BANK0 ] int 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2251 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;Total ram usage:        8 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:   11
  2258 ;; This function calls:
  2259 ;;		_vfpfcnvrt
  2260 ;; This function is called by:
  2261 ;;		_printf
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text2
  2266  0011E8                     __ptext2:
  2267                           	callstack 0
  2268  0011E8                     _vfprintf:
  2269                           	callstack 18
  2270  0011E8                     
  2271                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2272  0011E8  C08F  F093         	movff	vfprintf@fmt,vfprintf@cfmt
  2273  0011EC  C090  F094         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2274  0011F0                     
  2275                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2276  0011F0  0E00               	movlw	0
  2277  0011F2  0100               	movlb	0	; () banked
  2278  0011F4  6FAE               	movwf	(_nout+1)& (0+255),b
  2279  0011F6  0E00               	movlw	0
  2280  0011F8  6FAD               	movwf	_nout& (0+255),b
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2283  0011FA  EF12  F009         	goto	l2652
  2284  0011FE                     l2650:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2288  0011FE  C08D  F07C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2289  001202  C08E  F07D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2290  001206  0E93               	movlw	low vfprintf@cfmt
  2291  001208  6F7E               	movwf	vfpfcnvrt@fmt& (0+255),b
  2292  00120A  0E00               	movlw	high vfprintf@cfmt
  2293  00120C  6F7F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2294  00120E  C091  F080         	movff	vfprintf@ap,vfpfcnvrt@ap
  2295  001212  C092  F081         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2296  001216  EC8F  F004         	call	_vfpfcnvrt	;wreg free
  2297  00121A  0100               	movlb	0	; () banked
  2298  00121C  517C               	movf	?_vfpfcnvrt& (0+255),w,b
  2299  00121E  27AD               	addwf	_nout& (0+255),f,b
  2300  001220  517D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2301  001222  23AE               	addwfc	(_nout+1)& (0+255),f,b
  2302  001224                     l2652:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2306  001224  C093  FFF6         	movff	vfprintf@cfmt,tblptrl
  2307  001228  C094  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2308  00122C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2309  00122C  6AF8               	clrf	tblptru,c
  2310  00122E                     	endif
  2311  00122E                     	if	0	;tblptru may be non-zero
  2312  00122E                     	endif
  2313  00122E  0008               	tblrd		*
  2314  001230  50F5               	movf	tablat,w,c
  2315  001232  0900               	iorlw	0
  2316  001234  A4D8               	btfss	status,2,c
  2317  001236  EF1F  F009         	goto	u1841
  2318  00123A  EF21  F009         	goto	u1840
  2319  00123E                     u1841:
  2320  00123E  EFFF  F008         	goto	l2650
  2321  001242                     u1840:
  2322  001242                     
  2323                           ; BSR set to: 0
  2324                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2325  001242  C0AD  F08D         	movff	_nout,?_vfprintf
  2326  001246  C0AE  F08E         	movff	_nout+1,?_vfprintf+1
  2327  00124A                     
  2328                           ; BSR set to: 0
  2329  00124A  0012               	return		;funcret
  2330  00124C                     __end_of_vfprintf:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _vfpfcnvrt *****************
  2334 ;; Defined at:
  2335 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  2338 ;;		 -> NULL(0), 
  2339 ;;  fmt             2   30[BANK0 ] PTR PTR unsigned char 
  2340 ;;		 -> vfprintf@cfmt(2), 
  2341 ;;  ap              2   32[BANK0 ] PTR PTR void 
  2342 ;;		 -> printf@ap(2), 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  ll              8   36[BANK0 ] long long 
  2345 ;;  llu             8    0        unsigned long long 
  2346 ;;  f               4    0        unsigned long long 
  2347 ;;  vp              3    0        PTR void 
  2348 ;;  ct              3    0        unsigned char [3]
  2349 ;;  cp              3    0        PTR unsigned char 
  2350 ;;  i               2    0        int 
  2351 ;;  done            2    0        int 
  2352 ;;  c               1   44[BANK0 ] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  2   28[BANK0 ] int 
  2355 ;; Registers used:
  2356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2362 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;Total ram usage:       17 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:   10
  2369 ;; This function calls:
  2370 ;;		_ctoa
  2371 ;;		_dtoa
  2372 ;;		_fputc
  2373 ;; This function is called by:
  2374 ;;		_vfprintf
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text3
  2379  00091E                     __ptext3:
  2380                           	callstack 0
  2381  00091E                     _vfpfcnvrt:
  2382                           	callstack 18
  2383  00091E                     
  2384                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2385  00091E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2386  000922  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2387  000926  CFDE FFF6          	movff	postinc2,tblptrl
  2388  00092A  CFDD FFF7          	movff	postdec2,tblptrh
  2389  00092E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2390  00092E  6AF8               	clrf	tblptru,c
  2391  000930                     	endif
  2392  000930                     	if	0	;tblptru may be non-zero
  2393  000930                     	endif
  2394  000930  0008               	tblrd		*
  2395  000932  50F5               	movf	tablat,w,c
  2396  000934  0A25               	xorlw	37
  2397  000936  A4D8               	btfss	status,2,c
  2398  000938  EFA0  F004         	goto	u1791
  2399  00093C  EFA2  F004         	goto	u1790
  2400  000940                     u1791:
  2401  000940  EF8E  F005         	goto	l2638
  2402  000944                     u1790:
  2403  000944                     
  2404                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2405  000944  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2406  000948  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2407  00094C  2ADE               	incf	postinc2,f,c
  2408  00094E  0E00               	movlw	0
  2409  000950  22DD               	addwfc	postdec2,f,c
  2410  000952                     
  2411                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2412  000952  0E00               	movlw	0
  2413  000954  6E3A               	movwf	(_width+1)^0,c
  2414  000956  0E00               	movlw	0
  2415  000958  6E39               	movwf	_width^0,c
  2416  00095A  C039  F03D         	movff	_width,_flags
  2417  00095E  C03A  F03E         	movff	_width+1,_flags+1
  2418  000962                     
  2419                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2420  000962  683B               	setf	_prec^0,c
  2421  000964  683C               	setf	(_prec+1)^0,c
  2422  000966                     
  2423                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2424  000966  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2425  00096A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2426  00096E  CFDE FFF6          	movff	postinc2,tblptrl
  2427  000972  CFDD FFF7          	movff	postdec2,tblptrh
  2428  000976                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2429  000976  6AF8               	clrf	tblptru,c
  2430  000978                     	endif
  2431  000978                     	if	0	;tblptru may be non-zero
  2432  000978                     	endif
  2433  000978  0008               	tblrd		*
  2434  00097A  50F5               	movf	tablat,w,c
  2435  00097C  0A63               	xorlw	99
  2436  00097E  A4D8               	btfss	status,2,c
  2437  000980  EFC4  F004         	goto	u1801
  2438  000984  EFC6  F004         	goto	u1800
  2439  000988                     u1801:
  2440  000988  EFEE  F004         	goto	l2612
  2441  00098C                     u1800:
  2442  00098C                     
  2443                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2444  00098C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2445  000990  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2446  000994  2ADE               	incf	postinc2,f,c
  2447  000996  0E00               	movlw	0
  2448  000998  22DD               	addwfc	postdec2,f,c
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2451  00099A  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2452  00099E  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2453  0009A2  CFDF F082          	movff	indf2,??_vfpfcnvrt
  2454  0009A6  0E02               	movlw	2
  2455  0009A8  26DE               	addwf	postinc2,f,c
  2456  0009AA  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  2457  0009AE  0E00               	movlw	0
  2458  0009B0  22DD               	addwfc	postdec2,f,c
  2459  0009B2  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2460  0009B6  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2461  0009BA  50DF               	movf	indf2,w,c
  2462  0009BC  0100               	movlb	0	; () banked
  2463  0009BE  6F8C               	movwf	vfpfcnvrt@c& (0+255),b
  2464  0009C0                     
  2465                           ; BSR set to: 0
  2466                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2467  0009C0  C07C  F01F         	movff	vfpfcnvrt@fp,ctoa@fp
  2468  0009C4  C07D  F020         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2469  0009C8  C08C  F021         	movff	vfpfcnvrt@c,ctoa@c
  2470  0009CC  ECA4  F007         	call	_ctoa	;wreg free
  2471  0009D0  C01F  F07C         	movff	?_ctoa,?_vfpfcnvrt
  2472  0009D4  C020  F07D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2473  0009D8  EFAA  F005         	goto	l1103
  2474  0009DC                     l2612:
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2477  0009DC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2478  0009E0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2479  0009E4  CFDE FFF6          	movff	postinc2,tblptrl
  2480  0009E8  CFDD FFF7          	movff	postdec2,tblptrh
  2481  0009EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2482  0009EC  6AF8               	clrf	tblptru,c
  2483  0009EE                     	endif
  2484  0009EE                     	if	0	;tblptru may be non-zero
  2485  0009EE                     	endif
  2486  0009EE  0008               	tblrd		*
  2487  0009F0  50F5               	movf	tablat,w,c
  2488  0009F2  0A64               	xorlw	100
  2489  0009F4  B4D8               	btfsc	status,2,c
  2490  0009F6  EFFF  F004         	goto	u1811
  2491  0009FA  EF01  F005         	goto	u1810
  2492  0009FE                     u1811:
  2493  0009FE  EF14  F005         	goto	l2616
  2494  000A02                     u1810:
  2495  000A02  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2496  000A06  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2497  000A0A  CFDE FFF6          	movff	postinc2,tblptrl
  2498  000A0E  CFDD FFF7          	movff	postdec2,tblptrh
  2499  000A12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2500  000A12  6AF8               	clrf	tblptru,c
  2501  000A14                     	endif
  2502  000A14                     	if	0	;tblptru may be non-zero
  2503  000A14                     	endif
  2504  000A14  0008               	tblrd		*
  2505  000A16  50F5               	movf	tablat,w,c
  2506  000A18  0A69               	xorlw	105
  2507  000A1A  A4D8               	btfss	status,2,c
  2508  000A1C  EF12  F005         	goto	u1821
  2509  000A20  EF14  F005         	goto	u1820
  2510  000A24                     u1821:
  2511  000A24  EF55  F005         	goto	l2622
  2512  000A28                     u1820:
  2513  000A28                     l2616:
  2514                           
  2515                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2516  000A28  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2517  000A2C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2518  000A30  2ADE               	incf	postinc2,f,c
  2519  000A32  0E00               	movlw	0
  2520  000A34  22DD               	addwfc	postdec2,f,c
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2523  000A36  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2524  000A3A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2525  000A3E  CFDF F082          	movff	indf2,??_vfpfcnvrt
  2526  000A42  0E02               	movlw	2
  2527  000A44  26DE               	addwf	postinc2,f,c
  2528  000A46  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  2529  000A4A  0E00               	movlw	0
  2530  000A4C  22DD               	addwfc	postdec2,f,c
  2531  000A4E  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2532  000A52  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2533  000A56  CFDE F084          	movff	postinc2,vfpfcnvrt@ll
  2534  000A5A  CFDD F085          	movff	postdec2,vfpfcnvrt@ll+1
  2535  000A5E  0100               	movlb	0	; () banked
  2536  000A60  0E00               	movlw	0
  2537  000A62  BF85               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2538  000A64  0EFF               	movlw	-1
  2539  000A66  6F86               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2540  000A68  6F87               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2541  000A6A  6F88               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2542  000A6C  6F89               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2543  000A6E  6F8A               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2544  000A70  6F8B               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2545  000A72                     
  2546                           ; BSR set to: 0
  2547                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2548  000A72  C07C  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  2549  000A76  C07D  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2550  000A7A  C084  F062         	movff	vfpfcnvrt@ll,dtoa@d
  2551  000A7E  C085  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2552  000A82  C086  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2553  000A86  C087  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2554  000A8A  C088  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2555  000A8E  C089  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2556  000A92  C08A  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2557  000A96  C08B  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2558  000A9A  EC1E  F003         	call	_dtoa	;wreg free
  2559  000A9E  C060  F07C         	movff	?_dtoa,?_vfpfcnvrt
  2560  000AA2  C061  F07D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2561  000AA6  EFAA  F005         	goto	l1103
  2562  000AAA                     l2622:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2565  000AAA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2566  000AAE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2567  000AB2  CFDE FFF6          	movff	postinc2,tblptrl
  2568  000AB6  CFDD FFF7          	movff	postdec2,tblptrh
  2569  000ABA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2570  000ABA  6AF8               	clrf	tblptru,c
  2571  000ABC                     	endif
  2572  000ABC                     	if	0	;tblptru may be non-zero
  2573  000ABC                     	endif
  2574  000ABC  0008               	tblrd		*
  2575  000ABE  50F5               	movf	tablat,w,c
  2576  000AC0  0A25               	xorlw	37
  2577  000AC2  A4D8               	btfss	status,2,c
  2578  000AC4  EF66  F005         	goto	u1831
  2579  000AC8  EF68  F005         	goto	u1830
  2580  000ACC                     u1831:
  2581  000ACC  EF80  F005         	goto	l2632
  2582  000AD0                     u1830:
  2583  000AD0                     
  2584                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2585  000AD0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2586  000AD4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2587  000AD8  2ADE               	incf	postinc2,f,c
  2588  000ADA  0E00               	movlw	0
  2589  000ADC  22DD               	addwfc	postdec2,f,c
  2590  000ADE                     
  2591                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2592  000ADE  0E00               	movlw	0
  2593  000AE0  6E17               	movwf	(fputc@c+1)^0,c
  2594  000AE2  0E25               	movlw	37
  2595  000AE4  6E16               	movwf	fputc@c^0,c
  2596  000AE6  C07C  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2597  000AEA  C07D  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2598  000AEE  EC6F  F008         	call	_fputc	;wreg free
  2599  000AF2                     l2628:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2602  000AF2  0E00               	movlw	0
  2603  000AF4  0100               	movlb	0	; () banked
  2604  000AF6  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2605  000AF8  0E01               	movlw	1
  2606  000AFA  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  2607  000AFC  EFAA  F005         	goto	l1103
  2608  000B00                     l2632:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2611  000B00  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2612  000B04  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2613  000B08  2ADE               	incf	postinc2,f,c
  2614  000B0A  0E00               	movlw	0
  2615  000B0C  22DD               	addwfc	postdec2,f,c
  2616  000B0E                     
  2617                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2618  000B0E  0E00               	movlw	0
  2619  000B10  0100               	movlb	0	; () banked
  2620  000B12  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2621  000B14  0E00               	movlw	0
  2622  000B16  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  2623  000B18  EFAA  F005         	goto	l1103
  2624  000B1C                     l2638:
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2627  000B1C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2628  000B20  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2629  000B24  CFDE FFF6          	movff	postinc2,tblptrl
  2630  000B28  CFDD FFF7          	movff	postdec2,tblptrh
  2631  000B2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2632  000B2C  6AF8               	clrf	tblptru,c
  2633  000B2E                     	endif
  2634  000B2E                     	if	0	;tblptru may be non-zero
  2635  000B2E                     	endif
  2636  000B2E  0008               	tblrd		*
  2637  000B30  50F5               	movf	tablat,w,c
  2638  000B32  6E16               	movwf	fputc@c^0,c
  2639  000B34  6A17               	clrf	(fputc@c+1)^0,c
  2640  000B36  C07C  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2641  000B3A  C07D  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2642  000B3E  EC6F  F008         	call	_fputc	;wreg free
  2643  000B42                     
  2644                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2645  000B42  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2646  000B46  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2647  000B4A  2ADE               	incf	postinc2,f,c
  2648  000B4C  0E00               	movlw	0
  2649  000B4E  22DD               	addwfc	postdec2,f,c
  2650  000B50  EF79  F005         	goto	l2628
  2651  000B54                     l1103:
  2652  000B54  0012               	return		;funcret
  2653  000B56                     __end_of_vfpfcnvrt:
  2654                           	callstack 0
  2655                           
  2656 ;; *************** function _dtoa *****************
  2657 ;; Defined at:
  2658 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2661 ;;		 -> NULL(0), 
  2662 ;;  d               8    2[BANK0 ] long long 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  n               8   18[BANK0 ] long long 
  2665 ;;  i               2   26[BANK0 ] int 
  2666 ;;  s               2   16[BANK0 ] int 
  2667 ;;  w               2   14[BANK0 ] int 
  2668 ;;  p               2   12[BANK0 ] int 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  2    0[BANK0 ] int 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2678 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;Total ram usage:       36 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    9
  2685 ;; This function calls:
  2686 ;;		___aodiv
  2687 ;;		___aomod
  2688 ;;		_abs
  2689 ;;		_pad
  2690 ;; This function is called by:
  2691 ;;		_vfpfcnvrt
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text4
  2696  00063C                     __ptext4:
  2697                           	callstack 0
  2698  00063C                     _dtoa:
  2699                           	callstack 18
  2700  00063C                     
  2701                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2702  00063C  C062  F072         	movff	dtoa@d,dtoa@n
  2703  000640  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  2704  000644  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  2705  000648  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  2706  00064C  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  2707  000650  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  2708  000654  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  2709  000658  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  2710  00065C                     
  2711                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2712  00065C  0100               	movlb	0	; () banked
  2713  00065E  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  2714  000660  EF34  F003         	goto	u1641
  2715  000664  EF37  F003         	goto	u1640
  2716  000668                     u1641:
  2717  000668  0E01               	movlw	1
  2718  00066A  EF38  F003         	goto	u1650
  2719  00066E                     u1640:
  2720  00066E  0E00               	movlw	0
  2721  000670                     u1650:
  2722  000670  6F70               	movwf	dtoa@s& (0+255),b
  2723  000672  6B71               	clrf	(dtoa@s+1)& (0+255),b
  2724                           
  2725                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2726  000674  5170               	movf	dtoa@s& (0+255),w,b
  2727  000676  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  2728  000678  B4D8               	btfsc	status,2,c
  2729  00067A  EF41  F003         	goto	u1661
  2730  00067E  EF43  F003         	goto	u1660
  2731  000682                     u1661:
  2732  000682  EF53  F003         	goto	l2540
  2733  000686                     u1660:
  2734  000686                     
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2737  000686  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  2738  000688  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  2739  00068A  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  2740  00068C  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  2741  00068E  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  2742  000690  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  2743  000692  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  2744  000694  6D72               	negf	dtoa@n& (0+255),b
  2745  000696  0E00               	movlw	0
  2746  000698  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  2747  00069A  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  2748  00069C  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  2749  00069E  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  2750  0006A0  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  2751  0006A2  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  2752  0006A4  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  2753  0006A6                     l2540:
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2757  0006A6  BE3C               	btfsc	(_prec+1)^0,7,c
  2758  0006A8  EF58  F003         	goto	u1671
  2759  0006AC  EF5A  F003         	goto	u1670
  2760  0006B0                     u1671:
  2761  0006B0  EF5B  F003         	goto	l2544
  2762  0006B4                     u1670:
  2763  0006B4                     
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2766  0006B4  923D               	bcf	_flags^0,1,c
  2767  0006B6                     l2544:
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2771  0006B6  BE3C               	btfsc	(_prec+1)^0,7,c
  2772  0006B8  EF68  F003         	goto	u1680
  2773  0006BC  503C               	movf	(_prec+1)^0,w,c
  2774  0006BE  E106               	bnz	u1681
  2775  0006C0  043B               	decf	_prec^0,w,c
  2776  0006C2  B0D8               	btfsc	status,0,c
  2777  0006C4  EF66  F003         	goto	u1681
  2778  0006C8  EF68  F003         	goto	u1680
  2779  0006CC                     u1681:
  2780  0006CC  EF6E  F003         	goto	l1078
  2781  0006D0                     u1680:
  2782  0006D0                     
  2783                           ; BSR set to: 0
  2784  0006D0  0E00               	movlw	0
  2785  0006D2  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  2786  0006D4  0E01               	movlw	1
  2787  0006D6  6F6C               	movwf	dtoa@p& (0+255),b
  2788  0006D8  EF72  F003         	goto	l1080
  2789  0006DC                     l1078:
  2790                           
  2791                           ; BSR set to: 0
  2792  0006DC  C03B  F06C         	movff	_prec,dtoa@p
  2793  0006E0  C03C  F06D         	movff	_prec+1,dtoa@p+1
  2794  0006E4                     l1080:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2798  0006E4  C039  F06E         	movff	_width,dtoa@w
  2799  0006E8  C03A  F06F         	movff	_width+1,dtoa@w+1
  2800  0006EC                     
  2801                           ; BSR set to: 0
  2802                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2803  0006EC  5170               	movf	dtoa@s& (0+255),w,b
  2804  0006EE  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  2805  0006F0  A4D8               	btfss	status,2,c
  2806  0006F2  EF7D  F003         	goto	u1691
  2807  0006F6  EF7F  F003         	goto	u1690
  2808  0006FA                     u1691:
  2809  0006FA  EF86  F003         	goto	l2552
  2810  0006FE                     u1690:
  2811  0006FE                     
  2812                           ; BSR set to: 0
  2813  0006FE  A43D               	btfss	_flags^0,2,c
  2814  000700  EF84  F003         	goto	u1701
  2815  000704  EF86  F003         	goto	u1700
  2816  000708                     u1701:
  2817  000708  EF89  F003         	goto	l2554
  2818  00070C                     u1700:
  2819  00070C                     l2552:
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  2823  00070C  076E               	decf	dtoa@w& (0+255),f,b
  2824  00070E  A0D8               	btfss	status,0,c
  2825  000710  076F               	decf	(dtoa@w+1)& (0+255),f,b
  2826  000712                     l2554:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2830  000712  0E00               	movlw	0
  2831  000714  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  2832  000716  0E1F               	movlw	31
  2833  000718  6F7A               	movwf	dtoa@i& (0+255),b
  2834  00071A                     
  2835                           ; BSR set to: 0
  2836                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2837  00071A  0E00               	movlw	0
  2838  00071C  6FD2               	movwf	(_dbuf+31)& (0+255),b
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2841  00071E  EF0E  F004         	goto	l2568
  2842  000722                     l2558:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  2846  000722  077A               	decf	dtoa@i& (0+255),f,b
  2847  000724  A0D8               	btfss	status,0,c
  2848  000726  077B               	decf	(dtoa@i+1)& (0+255),f,b
  2849  000728                     
  2850                           ; BSR set to: 0
  2851                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2852  000728  0EB3               	movlw	low _dbuf
  2853  00072A  257A               	addwf	dtoa@i& (0+255),w,b
  2854  00072C  6ED9               	movwf	fsr2l,c
  2855  00072E  0E00               	movlw	high _dbuf
  2856  000730  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  2857  000732  6EDA               	movwf	fsr2h,c
  2858  000734  C072  F014         	movff	dtoa@n,___aomod@dividend
  2859  000738  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  2860  00073C  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  2861  000740  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  2862  000744  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  2863  000748  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  2864  00074C  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  2865  000750  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  2866  000754  0E0A               	movlw	10
  2867  000756  6E1C               	movwf	___aomod@divisor^0,c
  2868  000758  0E00               	movlw	0
  2869  00075A  6E1D               	movwf	(___aomod@divisor+1)^0,c
  2870  00075C  0E00               	movlw	0
  2871  00075E  6E1E               	movwf	(___aomod@divisor+2)^0,c
  2872  000760  0E00               	movlw	0
  2873  000762  6E1F               	movwf	(___aomod@divisor+3)^0,c
  2874  000764  0E00               	movlw	0
  2875  000766  6E20               	movwf	(___aomod@divisor+4)^0,c
  2876  000768  0E00               	movlw	0
  2877  00076A  6E21               	movwf	(___aomod@divisor+5)^0,c
  2878  00076C  0E00               	movlw	0
  2879  00076E  6E22               	movwf	(___aomod@divisor+6)^0,c
  2880  000770  0E00               	movlw	0
  2881  000772  6E23               	movwf	(___aomod@divisor+7)^0,c
  2882  000774  EC6F  F006         	call	___aomod	;wreg free
  2883  000778  C014  F031         	movff	?___aomod,??_dtoa
  2884  00077C  C015  F032         	movff	?___aomod+1,??_dtoa+1
  2885  000780  C016  F033         	movff	?___aomod+2,??_dtoa+2
  2886  000784  C017  F034         	movff	?___aomod+3,??_dtoa+3
  2887  000788  C018  F035         	movff	?___aomod+4,??_dtoa+4
  2888  00078C  C019  F036         	movff	?___aomod+5,??_dtoa+5
  2889  000790  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  2890  000794  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  2891  000798  C031  F026         	movff	??_dtoa,abs@a
  2892  00079C  C033  F027         	movff	??_dtoa+2,abs@a+1
  2893  0007A0  EC71  F009         	call	_abs	;wreg free
  2894  0007A4  5026               	movf	?_abs^0,w,c
  2895  0007A6  0F30               	addlw	48
  2896  0007A8  6EDF               	movwf	indf2,c
  2897  0007AA                     
  2898                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2899  0007AA  0100               	movlb	0	; () banked
  2900  0007AC  076C               	decf	dtoa@p& (0+255),f,b
  2901  0007AE  A0D8               	btfss	status,0,c
  2902  0007B0  076D               	decf	(dtoa@p+1)& (0+255),f,b
  2903  0007B2                     
  2904                           ; BSR set to: 0
  2905                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2906  0007B2  076E               	decf	dtoa@w& (0+255),f,b
  2907  0007B4  A0D8               	btfss	status,0,c
  2908  0007B6  076F               	decf	(dtoa@w+1)& (0+255),f,b
  2909  0007B8                     
  2910                           ; BSR set to: 0
  2911                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2912  0007B8  C072  F014         	movff	dtoa@n,___aodiv@dividend
  2913  0007BC  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  2914  0007C0  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  2915  0007C4  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  2916  0007C8  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  2917  0007CC  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  2918  0007D0  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  2919  0007D4  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  2920  0007D8  0E0A               	movlw	10
  2921  0007DA  6E1C               	movwf	___aodiv@divisor^0,c
  2922  0007DC  0E00               	movlw	0
  2923  0007DE  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  2924  0007E0  0E00               	movlw	0
  2925  0007E2  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  2926  0007E4  0E00               	movlw	0
  2927  0007E6  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  2928  0007E8  0E00               	movlw	0
  2929  0007EA  6E20               	movwf	(___aodiv@divisor+4)^0,c
  2930  0007EC  0E00               	movlw	0
  2931  0007EE  6E21               	movwf	(___aodiv@divisor+5)^0,c
  2932  0007F0  0E00               	movlw	0
  2933  0007F2  6E22               	movwf	(___aodiv@divisor+6)^0,c
  2934  0007F4  0E00               	movlw	0
  2935  0007F6  6E23               	movwf	(___aodiv@divisor+7)^0,c
  2936  0007F8  ECAB  F005         	call	___aodiv	;wreg free
  2937  0007FC  C014  F072         	movff	?___aodiv,dtoa@n
  2938  000800  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  2939  000804  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  2940  000808  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  2941  00080C  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  2942  000810  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  2943  000814  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  2944  000818  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  2945  00081C                     l2568:
  2946                           
  2947                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2948  00081C  0100               	movlb	0	; () banked
  2949  00081E  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  2950  000820  EF1A  F004         	goto	u1711
  2951  000824  517B               	movf	(dtoa@i+1)& (0+255),w,b
  2952  000826  E108               	bnz	u1710
  2953  000828  057A               	decf	dtoa@i& (0+255),w,b
  2954  00082A  A0D8               	btfss	status,0,c
  2955  00082C  EF1A  F004         	goto	u1711
  2956  000830  EF1C  F004         	goto	u1710
  2957  000834                     u1711:
  2958  000834  EF4C  F004         	goto	l2578
  2959  000838                     u1710:
  2960  000838                     
  2961                           ; BSR set to: 0
  2962  000838  5172               	movf	dtoa@n& (0+255),w,b
  2963  00083A  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  2964  00083C  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  2965  00083E  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  2966  000840  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  2967  000842  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  2968  000844  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  2969  000846  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  2970  000848  A4D8               	btfss	status,2,c
  2971  00084A  EF29  F004         	goto	u1721
  2972  00084E  EF2B  F004         	goto	u1720
  2973  000852                     u1721:
  2974  000852  EF91  F003         	goto	l2558
  2975  000856                     u1720:
  2976  000856                     
  2977                           ; BSR set to: 0
  2978  000856  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  2979  000858  EF38  F004         	goto	u1730
  2980  00085C  516D               	movf	(dtoa@p+1)& (0+255),w,b
  2981  00085E  E106               	bnz	u1731
  2982  000860  056C               	decf	dtoa@p& (0+255),w,b
  2983  000862  B0D8               	btfsc	status,0,c
  2984  000864  EF36  F004         	goto	u1731
  2985  000868  EF38  F004         	goto	u1730
  2986  00086C                     u1731:
  2987  00086C  EF91  F003         	goto	l2558
  2988  000870                     u1730:
  2989  000870                     
  2990                           ; BSR set to: 0
  2991  000870  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  2992  000872  EF43  F004         	goto	u1741
  2993  000876  516F               	movf	(dtoa@w+1)& (0+255),w,b
  2994  000878  E108               	bnz	u1740
  2995  00087A  056E               	decf	dtoa@w& (0+255),w,b
  2996  00087C  A0D8               	btfss	status,0,c
  2997  00087E  EF43  F004         	goto	u1741
  2998  000882  EF45  F004         	goto	u1740
  2999  000886                     u1741:
  3000  000886  EF4C  F004         	goto	l2578
  3001  00088A                     u1740:
  3002  00088A                     
  3003                           ; BSR set to: 0
  3004  00088A  B23D               	btfsc	_flags^0,1,c
  3005  00088C  EF4A  F004         	goto	u1751
  3006  000890  EF4C  F004         	goto	u1750
  3007  000894                     u1751:
  3008  000894  EF91  F003         	goto	l2558
  3009  000898                     u1750:
  3010  000898                     l2578:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3014  000898  5170               	movf	dtoa@s& (0+255),w,b
  3015  00089A  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  3016  00089C  A4D8               	btfss	status,2,c
  3017  00089E  EF53  F004         	goto	u1761
  3018  0008A2  EF55  F004         	goto	u1760
  3019  0008A6                     u1761:
  3020  0008A6  EF5C  F004         	goto	l2582
  3021  0008AA                     u1760:
  3022  0008AA                     
  3023                           ; BSR set to: 0
  3024  0008AA  A43D               	btfss	_flags^0,2,c
  3025  0008AC  EF5A  F004         	goto	u1771
  3026  0008B0  EF5C  F004         	goto	u1770
  3027  0008B4                     u1771:
  3028  0008B4  EF7A  F004         	goto	l2592
  3029  0008B8                     u1770:
  3030  0008B8                     l2582:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  3034  0008B8  077A               	decf	dtoa@i& (0+255),f,b
  3035  0008BA  A0D8               	btfss	status,0,c
  3036  0008BC  077B               	decf	(dtoa@i+1)& (0+255),f,b
  3037  0008BE                     
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3040  0008BE  5170               	movf	dtoa@s& (0+255),w,b
  3041  0008C0  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  3042  0008C2  A4D8               	btfss	status,2,c
  3043  0008C4  EF66  F004         	goto	u1781
  3044  0008C8  EF68  F004         	goto	u1780
  3045  0008CC                     u1781:
  3046  0008CC  EF6E  F004         	goto	l2588
  3047  0008D0                     u1780:
  3048  0008D0                     
  3049                           ; BSR set to: 0
  3050  0008D0  0E00               	movlw	0
  3051  0008D2  6F6B               	movwf	(_dtoa$1404+1)& (0+255),b
  3052  0008D4  0E2B               	movlw	43
  3053  0008D6  6F6A               	movwf	_dtoa$1404& (0+255),b
  3054  0008D8  EF72  F004         	goto	l2590
  3055  0008DC                     l2588:
  3056                           
  3057                           ; BSR set to: 0
  3058  0008DC  0E00               	movlw	0
  3059  0008DE  6F6B               	movwf	(_dtoa$1404+1)& (0+255),b
  3060  0008E0  0E2D               	movlw	45
  3061  0008E2  6F6A               	movwf	_dtoa$1404& (0+255),b
  3062  0008E4                     l2590:
  3063                           
  3064                           ; BSR set to: 0
  3065  0008E4  0EB3               	movlw	low _dbuf
  3066  0008E6  257A               	addwf	dtoa@i& (0+255),w,b
  3067  0008E8  6ED9               	movwf	fsr2l,c
  3068  0008EA  0E00               	movlw	high _dbuf
  3069  0008EC  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  3070  0008EE  6EDA               	movwf	fsr2h,c
  3071  0008F0  C06A  FFDF         	movff	_dtoa$1404,indf2
  3072  0008F4                     l2592:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3076  0008F4  C060  F026         	movff	dtoa@fp,pad@fp
  3077  0008F8  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  3078  0008FC  0EB3               	movlw	low _dbuf
  3079  0008FE  257A               	addwf	dtoa@i& (0+255),w,b
  3080  000900  6E28               	movwf	pad@buf^0,c
  3081  000902  0E00               	movlw	high _dbuf
  3082  000904  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  3083  000906  6E29               	movwf	(pad@buf+1)^0,c
  3084  000908  C06E  F02A         	movff	dtoa@w,pad@p
  3085  00090C  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  3086  000910  EC0E  F008         	call	_pad	;wreg free
  3087  000914  C026  F060         	movff	?_pad,?_dtoa
  3088  000918  C027  F061         	movff	?_pad+1,?_dtoa+1
  3089  00091C  0012               	return		;funcret
  3090  00091E                     __end_of_dtoa:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function _pad *****************
  3094 ;; Defined at:
  3095 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  3098 ;;		 -> NULL(0), 
  3099 ;;  buf             2   39[COMRAM] PTR unsigned char 
  3100 ;;		 -> dbuf(32), 
  3101 ;;  p               2   41[COMRAM] int 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  w               2   46[COMRAM] int 
  3104 ;;  i               2   44[COMRAM] int 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  2   37[COMRAM] int 
  3107 ;; Registers used:
  3108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3114 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;Total ram usage:       11 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    8
  3121 ;; This function calls:
  3122 ;;		_fputc
  3123 ;;		_fputs
  3124 ;;		_strlen
  3125 ;; This function is called by:
  3126 ;;		_dtoa
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text5
  3131  00101C                     __ptext5:
  3132                           	callstack 0
  3133  00101C                     _pad:
  3134                           	callstack 18
  3135  00101C                     
  3136                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3137  00101C  A03D               	btfss	_flags^0,0,c
  3138  00101E  EF13  F008         	goto	u1041
  3139  001022  EF15  F008         	goto	u1040
  3140  001026                     u1041:
  3141  001026  EF1F  F008         	goto	l1988
  3142  00102A                     u1040:
  3143  00102A                     
  3144                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3145  00102A  C028  F01F         	movff	pad@buf,fputs@s
  3146  00102E  C029  F020         	movff	pad@buf+1,fputs@s+1
  3147  001032  C026  F021         	movff	pad@fp,fputs@fp
  3148  001036  C027  F022         	movff	pad@fp+1,fputs@fp+1
  3149  00103A  EC4F  F009         	call	_fputs	;wreg free
  3150  00103E                     l1988:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3153  00103E  BE2B               	btfsc	(pad@p+1)^0,7,c
  3154  001040  EF24  F008         	goto	u1051
  3155  001044  EF26  F008         	goto	u1050
  3156  001048                     u1051:
  3157  001048  EF2C  F008         	goto	l1992
  3158  00104C                     u1050:
  3159  00104C  C02A  F02F         	movff	pad@p,pad@w
  3160  001050  C02B  F030         	movff	pad@p+1,pad@w+1
  3161  001054  EF30  F008         	goto	l1051
  3162  001058                     l1992:
  3163  001058  0E00               	movlw	0
  3164  00105A  6E30               	movwf	(pad@w+1)^0,c
  3165  00105C  0E00               	movlw	0
  3166  00105E  6E2F               	movwf	pad@w^0,c
  3167  001060                     l1051:
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3170  001060  0E00               	movlw	0
  3171  001062  6E2E               	movwf	(pad@i+1)^0,c
  3172  001064  0E00               	movlw	0
  3173  001066  6E2D               	movwf	pad@i^0,c
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3176  001068  EF42  F008         	goto	l1998
  3177  00106C                     l1994:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3180  00106C  0E00               	movlw	0
  3181  00106E  6E17               	movwf	(fputc@c+1)^0,c
  3182  001070  0E20               	movlw	32
  3183  001072  6E16               	movwf	fputc@c^0,c
  3184  001074  C026  F018         	movff	pad@fp,fputc@fp
  3185  001078  C027  F019         	movff	pad@fp+1,fputc@fp+1
  3186  00107C  EC6F  F008         	call	_fputc	;wreg free
  3187  001080                     
  3188                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3189  001080  4A2D               	infsnz	pad@i^0,f,c
  3190  001082  2A2E               	incf	(pad@i+1)^0,f,c
  3191  001084                     l1998:
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3194  001084  502F               	movf	pad@w^0,w,c
  3195  001086  5C2D               	subwf	pad@i^0,w,c
  3196  001088  502E               	movf	(pad@i+1)^0,w,c
  3197  00108A  0A80               	xorlw	128
  3198  00108C  6E2C               	movwf	??_pad^0,c
  3199  00108E  5030               	movf	(pad@w+1)^0,w,c
  3200  001090  0A80               	xorlw	128
  3201  001092  582C               	subwfb	??_pad^0,w,c
  3202  001094  A0D8               	btfss	status,0,c
  3203  001096  EF4F  F008         	goto	u1061
  3204  00109A  EF51  F008         	goto	u1060
  3205  00109E                     u1061:
  3206  00109E  EF36  F008         	goto	l1994
  3207  0010A2                     u1060:
  3208  0010A2                     
  3209                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3210  0010A2  B03D               	btfsc	_flags^0,0,c
  3211  0010A4  EF56  F008         	goto	u1071
  3212  0010A8  EF58  F008         	goto	u1070
  3213  0010AC                     u1071:
  3214  0010AC  EF62  F008         	goto	l2002
  3215  0010B0                     u1070:
  3216  0010B0                     
  3217                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3218  0010B0  C028  F01F         	movff	pad@buf,fputs@s
  3219  0010B4  C029  F020         	movff	pad@buf+1,fputs@s+1
  3220  0010B8  C026  F021         	movff	pad@fp,fputs@fp
  3221  0010BC  C027  F022         	movff	pad@fp+1,fputs@fp+1
  3222  0010C0  EC4F  F009         	call	_fputs	;wreg free
  3223  0010C4                     l2002:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3226  0010C4  C028  F014         	movff	pad@buf,strlen@s
  3227  0010C8  C029  F015         	movff	pad@buf+1,strlen@s+1
  3228  0010CC  ECB0  F009         	call	_strlen	;wreg free
  3229  0010D0  502F               	movf	pad@w^0,w,c
  3230  0010D2  2414               	addwf	?_strlen^0,w,c
  3231  0010D4  6E26               	movwf	?_pad^0,c
  3232  0010D6  5030               	movf	(pad@w+1)^0,w,c
  3233  0010D8  2015               	addwfc	(?_strlen+1)^0,w,c
  3234  0010DA  6E27               	movwf	(?_pad+1)^0,c
  3235  0010DC  0012               	return		;funcret
  3236  0010DE                     __end_of_pad:
  3237                           	callstack 0
  3238                           
  3239 ;; *************** function _strlen *****************
  3240 ;; Defined at:
  3241 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  s               2   19[COMRAM] PTR const unsigned char 
  3244 ;;		 -> dbuf(32), 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  a               2   21[COMRAM] PTR const unsigned char 
  3247 ;;		 -> dbuf(32), 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  2   19[COMRAM] unsigned int 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;Total ram usage:        4 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; Hardware stack levels required when called:    4
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_pad
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text6
  3272  001360                     __ptext6:
  3273                           	callstack 0
  3274  001360                     _strlen:
  3275                           	callstack 21
  3276  001360  C014  F016         	movff	strlen@s,strlen@a
  3277  001364  C015  F017         	movff	strlen@s+1,strlen@a+1
  3278  001368  EFB8  F009         	goto	l1898
  3279  00136C                     l1896:
  3280  00136C  4A14               	infsnz	strlen@s^0,f,c
  3281  00136E  2A15               	incf	(strlen@s+1)^0,f,c
  3282  001370                     l1898:
  3283  001370  C014  FFD9         	movff	strlen@s,fsr2l
  3284  001374  C015  FFDA         	movff	strlen@s+1,fsr2h
  3285  001378  50DF               	movf	indf2,w,c
  3286  00137A  A4D8               	btfss	status,2,c
  3287  00137C  EFC2  F009         	goto	u901
  3288  001380  EFC4  F009         	goto	u900
  3289  001384                     u901:
  3290  001384  EFB6  F009         	goto	l1896
  3291  001388                     u900:
  3292  001388  5016               	movf	strlen@a^0,w,c
  3293  00138A  5C14               	subwf	strlen@s^0,w,c
  3294  00138C  6E14               	movwf	?_strlen^0,c
  3295  00138E  5017               	movf	(strlen@a+1)^0,w,c
  3296  001390  5815               	subwfb	(strlen@s+1)^0,w,c
  3297  001392  6E15               	movwf	(?_strlen+1)^0,c
  3298  001394  0012               	return		;funcret
  3299  001396                     __end_of_strlen:
  3300                           	callstack 0
  3301                           
  3302 ;; *************** function _fputs *****************
  3303 ;; Defined at:
  3304 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  s               2   30[COMRAM] PTR const unsigned char 
  3307 ;;		 -> dbuf(32), 
  3308 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  3309 ;;		 -> NULL(0), 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  i               2   35[COMRAM] int 
  3312 ;;  c               1   34[COMRAM] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  2   30[COMRAM] int 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;Total ram usage:        7 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    7
  3329 ;; This function calls:
  3330 ;;		_fputc
  3331 ;; This function is called by:
  3332 ;;		_pad
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text7
  3337  00129E                     __ptext7:
  3338                           	callstack 0
  3339  00129E                     _fputs:
  3340                           	callstack 18
  3341  00129E  0E00               	movlw	0
  3342  0012A0  6E25               	movwf	(fputs@i+1)^0,c
  3343  0012A2  0E00               	movlw	0
  3344  0012A4  6E24               	movwf	fputs@i^0,c
  3345  0012A6  EF60  F009         	goto	l1892
  3346  0012AA                     l1888:
  3347  0012AA  C023  F016         	movff	fputs@c,fputc@c
  3348  0012AE  6A17               	clrf	(fputc@c+1)^0,c
  3349  0012B0  C021  F018         	movff	fputs@fp,fputc@fp
  3350  0012B4  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  3351  0012B8  EC6F  F008         	call	_fputc	;wreg free
  3352  0012BC  4A24               	infsnz	fputs@i^0,f,c
  3353  0012BE  2A25               	incf	(fputs@i+1)^0,f,c
  3354  0012C0                     l1892:
  3355  0012C0  5024               	movf	fputs@i^0,w,c
  3356  0012C2  241F               	addwf	fputs@s^0,w,c
  3357  0012C4  6ED9               	movwf	fsr2l,c
  3358  0012C6  5025               	movf	(fputs@i+1)^0,w,c
  3359  0012C8  2020               	addwfc	(fputs@s+1)^0,w,c
  3360  0012CA  6EDA               	movwf	fsr2h,c
  3361  0012CC  50DF               	movf	indf2,w,c
  3362  0012CE  6E23               	movwf	fputs@c^0,c
  3363  0012D0  5023               	movf	fputs@c^0,w,c
  3364  0012D2  A4D8               	btfss	status,2,c
  3365  0012D4  EF6E  F009         	goto	u891
  3366  0012D8  EF70  F009         	goto	u890
  3367  0012DC                     u891:
  3368  0012DC  EF55  F009         	goto	l1888
  3369  0012E0                     u890:
  3370  0012E0  0012               	return		;funcret
  3371  0012E2                     __end_of_fputs:
  3372                           	callstack 0
  3373                           
  3374 ;; *************** function _abs *****************
  3375 ;; Defined at:
  3376 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  a               2   37[COMRAM] int 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  2   37[COMRAM] int 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;Total ram usage:        4 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    4
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_dtoa
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text8
  3405  0012E2                     __ptext8:
  3406                           	callstack 0
  3407  0012E2                     _abs:
  3408                           	callstack 22
  3409  0012E2  BE27               	btfsc	(abs@a+1)^0,7,c
  3410  0012E4  EF7E  F009         	goto	u1080
  3411  0012E8  5027               	movf	(abs@a+1)^0,w,c
  3412  0012EA  E106               	bnz	u1081
  3413  0012EC  0426               	decf	abs@a^0,w,c
  3414  0012EE  B0D8               	btfsc	status,0,c
  3415  0012F0  EF7C  F009         	goto	u1081
  3416  0012F4  EF7E  F009         	goto	u1080
  3417  0012F8                     u1081:
  3418  0012F8  EF8C  F009         	goto	l1117
  3419  0012FC                     u1080:
  3420  0012FC  C026  F028         	movff	abs@a,??_abs
  3421  001300  C027  F029         	movff	abs@a+1,??_abs+1
  3422  001304  1E28               	comf	??_abs^0,f,c
  3423  001306  1E29               	comf	(??_abs+1)^0,f,c
  3424  001308  4A28               	infsnz	??_abs^0,f,c
  3425  00130A  2A29               	incf	(??_abs+1)^0,f,c
  3426  00130C  C028  F026         	movff	??_abs,?_abs
  3427  001310  C029  F027         	movff	??_abs+1,?_abs+1
  3428  001314  EF90  F009         	goto	l1120
  3429  001318                     l1117:
  3430  001318  C026  F026         	movff	abs@a,?_abs
  3431  00131C  C027  F027         	movff	abs@a+1,?_abs+1
  3432  001320                     l1120:
  3433  001320  0012               	return		;funcret
  3434  001322                     __end_of_abs:
  3435                           	callstack 0
  3436                           
  3437 ;; *************** function ___aomod *****************
  3438 ;; Defined at:
  3439 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  dividend        8   19[COMRAM] long long 
  3442 ;;  divisor         8   27[COMRAM] long long 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  sign            1   36[COMRAM] unsigned char 
  3445 ;;  counter         1   35[COMRAM] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  8   19[COMRAM] long long 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3455 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;Total ram usage:       18 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    4
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_dtoa
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text9
  3470  000CDE                     __ptext9:
  3471                           	callstack 0
  3472  000CDE                     ___aomod:
  3473                           	callstack 22
  3474  000CDE  0E00               	movlw	0
  3475  000CE0  6E25               	movwf	___aomod@sign^0,c
  3476  000CE2  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  3477  000CE4  EF78  F006         	goto	u980
  3478  000CE8  EF76  F006         	goto	u981
  3479  000CEC                     u981:
  3480  000CEC  EF8A  F006         	goto	l1956
  3481  000CF0                     u980:
  3482  000CF0  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3483  000CF2  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3484  000CF4  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3485  000CF6  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3486  000CF8  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3487  000CFA  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3488  000CFC  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3489  000CFE  6C14               	negf	___aomod@dividend^0,c
  3490  000D00  0E00               	movlw	0
  3491  000D02  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3492  000D04  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3493  000D06  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3494  000D08  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3495  000D0A  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3496  000D0C  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3497  000D0E  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3498  000D10  0E01               	movlw	1
  3499  000D12  6E25               	movwf	___aomod@sign^0,c
  3500  000D14                     l1956:
  3501  000D14  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  3502  000D16  EF91  F006         	goto	u990
  3503  000D1A  EF8F  F006         	goto	u991
  3504  000D1E                     u991:
  3505  000D1E  EFA1  F006         	goto	l1960
  3506  000D22                     u990:
  3507  000D22  1E23               	comf	(___aomod@divisor+7)^0,f,c
  3508  000D24  1E22               	comf	(___aomod@divisor+6)^0,f,c
  3509  000D26  1E21               	comf	(___aomod@divisor+5)^0,f,c
  3510  000D28  1E20               	comf	(___aomod@divisor+4)^0,f,c
  3511  000D2A  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  3512  000D2C  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  3513  000D2E  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  3514  000D30  6C1C               	negf	___aomod@divisor^0,c
  3515  000D32  0E00               	movlw	0
  3516  000D34  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  3517  000D36  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  3518  000D38  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  3519  000D3A  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  3520  000D3C  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  3521  000D3E  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  3522  000D40  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  3523  000D42                     l1960:
  3524  000D42  501C               	movf	___aomod@divisor^0,w,c
  3525  000D44  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  3526  000D46  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  3527  000D48  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  3528  000D4A  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  3529  000D4C  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  3530  000D4E  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  3531  000D50  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  3532  000D52  B4D8               	btfsc	status,2,c
  3533  000D54  EFAE  F006         	goto	u1001
  3534  000D58  EFB0  F006         	goto	u1000
  3535  000D5C                     u1001:
  3536  000D5C  EFF8  F006         	goto	l1976
  3537  000D60                     u1000:
  3538  000D60  0E01               	movlw	1
  3539  000D62  6E24               	movwf	___aomod@counter^0,c
  3540  000D64  EFBE  F006         	goto	l1966
  3541  000D68                     l1964:
  3542  000D68  90D8               	bcf	status,0,c
  3543  000D6A  361C               	rlcf	___aomod@divisor^0,f,c
  3544  000D6C  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  3545  000D6E  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  3546  000D70  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  3547  000D72  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  3548  000D74  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  3549  000D76  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  3550  000D78  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  3551  000D7A  2A24               	incf	___aomod@counter^0,f,c
  3552  000D7C                     l1966:
  3553  000D7C  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  3554  000D7E  EFC3  F006         	goto	u1011
  3555  000D82  EFC5  F006         	goto	u1010
  3556  000D86                     u1011:
  3557  000D86  EFB4  F006         	goto	l1964
  3558  000D8A                     u1010:
  3559  000D8A                     l1968:
  3560  000D8A  501C               	movf	___aomod@divisor^0,w,c
  3561  000D8C  5C14               	subwf	___aomod@dividend^0,w,c
  3562  000D8E  501D               	movf	(___aomod@divisor+1)^0,w,c
  3563  000D90  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  3564  000D92  501E               	movf	(___aomod@divisor+2)^0,w,c
  3565  000D94  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  3566  000D96  501F               	movf	(___aomod@divisor+3)^0,w,c
  3567  000D98  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  3568  000D9A  5020               	movf	(___aomod@divisor+4)^0,w,c
  3569  000D9C  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  3570  000D9E  5021               	movf	(___aomod@divisor+5)^0,w,c
  3571  000DA0  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  3572  000DA2  5022               	movf	(___aomod@divisor+6)^0,w,c
  3573  000DA4  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  3574  000DA6  5023               	movf	(___aomod@divisor+7)^0,w,c
  3575  000DA8  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  3576  000DAA  A0D8               	btfss	status,0,c
  3577  000DAC  EFDA  F006         	goto	u1021
  3578  000DB0  EFDC  F006         	goto	u1020
  3579  000DB4                     u1021:
  3580  000DB4  EFEC  F006         	goto	l1972
  3581  000DB8                     u1020:
  3582  000DB8  501C               	movf	___aomod@divisor^0,w,c
  3583  000DBA  5E14               	subwf	___aomod@dividend^0,f,c
  3584  000DBC  501D               	movf	(___aomod@divisor+1)^0,w,c
  3585  000DBE  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  3586  000DC0  501E               	movf	(___aomod@divisor+2)^0,w,c
  3587  000DC2  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  3588  000DC4  501F               	movf	(___aomod@divisor+3)^0,w,c
  3589  000DC6  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  3590  000DC8  5020               	movf	(___aomod@divisor+4)^0,w,c
  3591  000DCA  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  3592  000DCC  5021               	movf	(___aomod@divisor+5)^0,w,c
  3593  000DCE  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  3594  000DD0  5022               	movf	(___aomod@divisor+6)^0,w,c
  3595  000DD2  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  3596  000DD4  5023               	movf	(___aomod@divisor+7)^0,w,c
  3597  000DD6  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  3598  000DD8                     l1972:
  3599  000DD8  90D8               	bcf	status,0,c
  3600  000DDA  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  3601  000DDC  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  3602  000DDE  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  3603  000DE0  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  3604  000DE2  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  3605  000DE4  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  3606  000DE6  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  3607  000DE8  321C               	rrcf	___aomod@divisor^0,f,c
  3608  000DEA  2E24               	decfsz	___aomod@counter^0,f,c
  3609  000DEC  EFC5  F006         	goto	l1968
  3610  000DF0                     l1976:
  3611  000DF0  5025               	movf	___aomod@sign^0,w,c
  3612  000DF2  B4D8               	btfsc	status,2,c
  3613  000DF4  EFFE  F006         	goto	u1031
  3614  000DF8  EF00  F007         	goto	u1030
  3615  000DFC                     u1031:
  3616  000DFC  EF10  F007         	goto	l1980
  3617  000E00                     u1030:
  3618  000E00  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3619  000E02  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3620  000E04  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3621  000E06  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3622  000E08  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3623  000E0A  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3624  000E0C  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3625  000E0E  6C14               	negf	___aomod@dividend^0,c
  3626  000E10  0E00               	movlw	0
  3627  000E12  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3628  000E14  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3629  000E16  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3630  000E18  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3631  000E1A  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3632  000E1C  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3633  000E1E  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3634  000E20                     l1980:
  3635  000E20  C014  F014         	movff	___aomod@dividend,?___aomod
  3636  000E24  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  3637  000E28  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  3638  000E2C  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  3639  000E30  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  3640  000E34  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  3641  000E38  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  3642  000E3C  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  3643  000E40  0012               	return		;funcret
  3644  000E42                     __end_of___aomod:
  3645                           	callstack 0
  3646                           
  3647 ;; *************** function ___aodiv *****************
  3648 ;; Defined at:
  3649 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  dividend        8   19[COMRAM] long long 
  3652 ;;  divisor         8   27[COMRAM] long long 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  quotient        8   37[COMRAM] long long 
  3655 ;;  sign            1   36[COMRAM] unsigned char 
  3656 ;;  counter         1   35[COMRAM] unsigned char 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  8   19[COMRAM] long long 
  3659 ;; Registers used:
  3660 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3666 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;Total ram usage:       26 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    4
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_dtoa
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text10
  3681  000B56                     __ptext10:
  3682                           	callstack 0
  3683  000B56                     ___aodiv:
  3684                           	callstack 22
  3685  000B56  0E00               	movlw	0
  3686  000B58  6E25               	movwf	___aodiv@sign^0,c
  3687  000B5A  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  3688  000B5C  EFB4  F005         	goto	u910
  3689  000B60  EFB2  F005         	goto	u911
  3690  000B64                     u911:
  3691  000B64  EFC6  F005         	goto	l1912
  3692  000B68                     u910:
  3693  000B68  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  3694  000B6A  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  3695  000B6C  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  3696  000B6E  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  3697  000B70  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  3698  000B72  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  3699  000B74  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  3700  000B76  6C1C               	negf	___aodiv@divisor^0,c
  3701  000B78  0E00               	movlw	0
  3702  000B7A  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  3703  000B7C  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  3704  000B7E  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  3705  000B80  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  3706  000B82  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  3707  000B84  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  3708  000B86  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  3709  000B88  0E01               	movlw	1
  3710  000B8A  6E25               	movwf	___aodiv@sign^0,c
  3711  000B8C                     l1912:
  3712  000B8C  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  3713  000B8E  EFCD  F005         	goto	u920
  3714  000B92  EFCB  F005         	goto	u921
  3715  000B96                     u921:
  3716  000B96  EFDF  F005         	goto	l1918
  3717  000B9A                     u920:
  3718  000B9A  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  3719  000B9C  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  3720  000B9E  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  3721  000BA0  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  3722  000BA2  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  3723  000BA4  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  3724  000BA6  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  3725  000BA8  6C14               	negf	___aodiv@dividend^0,c
  3726  000BAA  0E00               	movlw	0
  3727  000BAC  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  3728  000BAE  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  3729  000BB0  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  3730  000BB2  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  3731  000BB4  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  3732  000BB6  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  3733  000BB8  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  3734  000BBA  0E01               	movlw	1
  3735  000BBC  1A25               	xorwf	___aodiv@sign^0,f,c
  3736  000BBE                     l1918:
  3737  000BBE  EE20  F026         	lfsr	2,___aodiv@quotient
  3738  000BC2  0E07               	movlw	7
  3739  000BC4                     u931:
  3740  000BC4  6ADE               	clrf	postinc2,c
  3741  000BC6  06E8               	decf	wreg,f,c
  3742  000BC8  E2FD               	bc	u931
  3743  000BCA  501C               	movf	___aodiv@divisor^0,w,c
  3744  000BCC  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  3745  000BCE  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  3746  000BD0  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  3747  000BD2  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  3748  000BD4  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  3749  000BD6  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  3750  000BD8  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  3751  000BDA  B4D8               	btfsc	status,2,c
  3752  000BDC  EFF2  F005         	goto	u941
  3753  000BE0  EFF4  F005         	goto	u940
  3754  000BE4                     u941:
  3755  000BE4  EF46  F006         	goto	l1940
  3756  000BE8                     u940:
  3757  000BE8  0E01               	movlw	1
  3758  000BEA  6E24               	movwf	___aodiv@counter^0,c
  3759  000BEC  EF02  F006         	goto	l1926
  3760  000BF0                     l1924:
  3761  000BF0  90D8               	bcf	status,0,c
  3762  000BF2  361C               	rlcf	___aodiv@divisor^0,f,c
  3763  000BF4  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  3764  000BF6  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  3765  000BF8  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  3766  000BFA  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  3767  000BFC  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  3768  000BFE  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  3769  000C00  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  3770  000C02  2A24               	incf	___aodiv@counter^0,f,c
  3771  000C04                     l1926:
  3772  000C04  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  3773  000C06  EF07  F006         	goto	u951
  3774  000C0A  EF09  F006         	goto	u950
  3775  000C0E                     u951:
  3776  000C0E  EFF8  F005         	goto	l1924
  3777  000C12                     u950:
  3778  000C12                     l1928:
  3779  000C12  90D8               	bcf	status,0,c
  3780  000C14  3626               	rlcf	___aodiv@quotient^0,f,c
  3781  000C16  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  3782  000C18  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  3783  000C1A  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  3784  000C1C  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  3785  000C1E  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  3786  000C20  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  3787  000C22  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  3788  000C24  501C               	movf	___aodiv@divisor^0,w,c
  3789  000C26  5C14               	subwf	___aodiv@dividend^0,w,c
  3790  000C28  501D               	movf	(___aodiv@divisor+1)^0,w,c
  3791  000C2A  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  3792  000C2C  501E               	movf	(___aodiv@divisor+2)^0,w,c
  3793  000C2E  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  3794  000C30  501F               	movf	(___aodiv@divisor+3)^0,w,c
  3795  000C32  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  3796  000C34  5020               	movf	(___aodiv@divisor+4)^0,w,c
  3797  000C36  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  3798  000C38  5021               	movf	(___aodiv@divisor+5)^0,w,c
  3799  000C3A  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  3800  000C3C  5022               	movf	(___aodiv@divisor+6)^0,w,c
  3801  000C3E  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  3802  000C40  5023               	movf	(___aodiv@divisor+7)^0,w,c
  3803  000C42  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  3804  000C44  A0D8               	btfss	status,0,c
  3805  000C46  EF27  F006         	goto	u961
  3806  000C4A  EF29  F006         	goto	u960
  3807  000C4E                     u961:
  3808  000C4E  EF3A  F006         	goto	l1936
  3809  000C52                     u960:
  3810  000C52  501C               	movf	___aodiv@divisor^0,w,c
  3811  000C54  5E14               	subwf	___aodiv@dividend^0,f,c
  3812  000C56  501D               	movf	(___aodiv@divisor+1)^0,w,c
  3813  000C58  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  3814  000C5A  501E               	movf	(___aodiv@divisor+2)^0,w,c
  3815  000C5C  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  3816  000C5E  501F               	movf	(___aodiv@divisor+3)^0,w,c
  3817  000C60  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  3818  000C62  5020               	movf	(___aodiv@divisor+4)^0,w,c
  3819  000C64  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  3820  000C66  5021               	movf	(___aodiv@divisor+5)^0,w,c
  3821  000C68  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  3822  000C6A  5022               	movf	(___aodiv@divisor+6)^0,w,c
  3823  000C6C  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  3824  000C6E  5023               	movf	(___aodiv@divisor+7)^0,w,c
  3825  000C70  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  3826  000C72  8026               	bsf	___aodiv@quotient^0,0,c
  3827  000C74                     l1936:
  3828  000C74  90D8               	bcf	status,0,c
  3829  000C76  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  3830  000C78  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  3831  000C7A  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  3832  000C7C  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  3833  000C7E  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  3834  000C80  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  3835  000C82  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  3836  000C84  321C               	rrcf	___aodiv@divisor^0,f,c
  3837  000C86  2E24               	decfsz	___aodiv@counter^0,f,c
  3838  000C88  EF09  F006         	goto	l1928
  3839  000C8C                     l1940:
  3840  000C8C  5025               	movf	___aodiv@sign^0,w,c
  3841  000C8E  B4D8               	btfsc	status,2,c
  3842  000C90  EF4C  F006         	goto	u971
  3843  000C94  EF4E  F006         	goto	u970
  3844  000C98                     u971:
  3845  000C98  EF5E  F006         	goto	l1944
  3846  000C9C                     u970:
  3847  000C9C  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  3848  000C9E  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  3849  000CA0  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  3850  000CA2  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  3851  000CA4  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  3852  000CA6  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  3853  000CA8  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  3854  000CAA  6C26               	negf	___aodiv@quotient^0,c
  3855  000CAC  0E00               	movlw	0
  3856  000CAE  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  3857  000CB0  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  3858  000CB2  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  3859  000CB4  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  3860  000CB6  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  3861  000CB8  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  3862  000CBA  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  3863  000CBC                     l1944:
  3864  000CBC  C026  F014         	movff	___aodiv@quotient,?___aodiv
  3865  000CC0  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  3866  000CC4  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  3867  000CC8  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  3868  000CCC  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  3869  000CD0  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  3870  000CD4  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  3871  000CD8  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  3872  000CDC  0012               	return		;funcret
  3873  000CDE                     __end_of___aodiv:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function _ctoa *****************
  3877 ;; Defined at:
  3878 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  3881 ;;		 -> NULL(0), 
  3882 ;;  c               1   32[COMRAM] unsigned char 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  w               2   36[COMRAM] int 
  3885 ;;  l               2   34[COMRAM] int 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  2   30[COMRAM] int 
  3888 ;; Registers used:
  3889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3895 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;Total ram usage:        8 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; Hardware stack levels required when called:    7
  3902 ;; This function calls:
  3903 ;;		_fputc
  3904 ;; This function is called by:
  3905 ;;		_vfpfcnvrt
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text11
  3910  000F48                     __ptext11:
  3911                           	callstack 0
  3912  000F48                     _ctoa:
  3913                           	callstack 20
  3914  000F48                     
  3915                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3916  000F48  5039               	movf	_width^0,w,c
  3917  000F4A  103A               	iorwf	(_width+1)^0,w,c
  3918  000F4C  A4D8               	btfss	status,2,c
  3919  000F4E  EFAB  F007         	goto	u1091
  3920  000F52  EFAD  F007         	goto	u1090
  3921  000F56                     u1091:
  3922  000F56  EFB3  F007         	goto	l2014
  3923  000F5A                     u1090:
  3924  000F5A  C039  F025         	movff	_width,ctoa@w
  3925  000F5E  C03A  F026         	movff	_width+1,ctoa@w+1
  3926  000F62  EFB9  F007         	goto	l2016
  3927  000F66                     l2014:
  3928  000F66  0EFF               	movlw	255
  3929  000F68  2439               	addwf	_width^0,w,c
  3930  000F6A  6E25               	movwf	ctoa@w^0,c
  3931  000F6C  0EFF               	movlw	255
  3932  000F6E  203A               	addwfc	(_width+1)^0,w,c
  3933  000F70  6E26               	movwf	(ctoa@w+1)^0,c
  3934  000F72                     l2016:
  3935                           
  3936                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3937  000F72  A03D               	btfss	_flags^0,0,c
  3938  000F74  EFBE  F007         	goto	u1101
  3939  000F78  EFC0  F007         	goto	u1100
  3940  000F7C                     u1101:
  3941  000F7C  EFC9  F007         	goto	l2020
  3942  000F80                     u1100:
  3943  000F80                     
  3944                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3945  000F80  C021  F016         	movff	ctoa@c,fputc@c
  3946  000F84  6A17               	clrf	(fputc@c+1)^0,c
  3947  000F86  C01F  F018         	movff	ctoa@fp,fputc@fp
  3948  000F8A  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
  3949  000F8E  EC6F  F008         	call	_fputc	;wreg free
  3950  000F92                     l2020:
  3951                           
  3952                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3953  000F92  BE26               	btfsc	(ctoa@w+1)^0,7,c
  3954  000F94  EFCE  F007         	goto	u1111
  3955  000F98  EFD0  F007         	goto	u1110
  3956  000F9C                     u1111:
  3957  000F9C  EFD2  F007         	goto	l2024
  3958  000FA0                     u1110:
  3959  000FA0  EFD6  F007         	goto	l1067
  3960  000FA4                     l2024:
  3961  000FA4  0E00               	movlw	0
  3962  000FA6  6E26               	movwf	(ctoa@w+1)^0,c
  3963  000FA8  0E00               	movlw	0
  3964  000FAA  6E25               	movwf	ctoa@w^0,c
  3965  000FAC                     l1067:
  3966                           
  3967                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3968  000FAC  0E00               	movlw	0
  3969  000FAE  6E24               	movwf	(ctoa@l+1)^0,c
  3970  000FB0  0E00               	movlw	0
  3971  000FB2  6E23               	movwf	ctoa@l^0,c
  3972                           
  3973                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3974  000FB4  EFE8  F007         	goto	l2030
  3975  000FB8                     l2026:
  3976                           
  3977                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3978  000FB8  0E00               	movlw	0
  3979  000FBA  6E17               	movwf	(fputc@c+1)^0,c
  3980  000FBC  0E20               	movlw	32
  3981  000FBE  6E16               	movwf	fputc@c^0,c
  3982  000FC0  C01F  F018         	movff	ctoa@fp,fputc@fp
  3983  000FC4  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
  3984  000FC8  EC6F  F008         	call	_fputc	;wreg free
  3985  000FCC                     
  3986                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3987  000FCC  4A23               	infsnz	ctoa@l^0,f,c
  3988  000FCE  2A24               	incf	(ctoa@l+1)^0,f,c
  3989  000FD0                     l2030:
  3990                           
  3991                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3992  000FD0  5025               	movf	ctoa@w^0,w,c
  3993  000FD2  5C23               	subwf	ctoa@l^0,w,c
  3994  000FD4  5024               	movf	(ctoa@l+1)^0,w,c
  3995  000FD6  0A80               	xorlw	128
  3996  000FD8  6E22               	movwf	??_ctoa^0,c
  3997  000FDA  5026               	movf	(ctoa@w+1)^0,w,c
  3998  000FDC  0A80               	xorlw	128
  3999  000FDE  5822               	subwfb	??_ctoa^0,w,c
  4000  000FE0  A0D8               	btfss	status,0,c
  4001  000FE2  EFF5  F007         	goto	u1121
  4002  000FE6  EFF7  F007         	goto	u1120
  4003  000FEA                     u1121:
  4004  000FEA  EFDC  F007         	goto	l2026
  4005  000FEE                     u1120:
  4006  000FEE                     
  4007                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  4008  000FEE  B03D               	btfsc	_flags^0,0,c
  4009  000FF0  EFFC  F007         	goto	u1131
  4010  000FF4  EFFE  F007         	goto	u1130
  4011  000FF8                     u1131:
  4012  000FF8  EF07  F008         	goto	l2034
  4013  000FFC                     u1130:
  4014  000FFC                     
  4015                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  4016  000FFC  C021  F016         	movff	ctoa@c,fputc@c
  4017  001000  6A17               	clrf	(fputc@c+1)^0,c
  4018  001002  C01F  F018         	movff	ctoa@fp,fputc@fp
  4019  001006  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
  4020  00100A  EC6F  F008         	call	_fputc	;wreg free
  4021  00100E                     l2034:
  4022                           
  4023                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  4024  00100E  0E01               	movlw	1
  4025  001010  2423               	addwf	ctoa@l^0,w,c
  4026  001012  6E1F               	movwf	?_ctoa^0,c
  4027  001014  0E00               	movlw	0
  4028  001016  2024               	addwfc	(ctoa@l+1)^0,w,c
  4029  001018  6E20               	movwf	(?_ctoa+1)^0,c
  4030  00101A  0012               	return		;funcret
  4031  00101C                     __end_of_ctoa:
  4032                           	callstack 0
  4033                           
  4034 ;; *************** function _fputc *****************
  4035 ;; Defined at:
  4036 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  c               2   21[COMRAM] int 
  4039 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  4040 ;;		 -> NULL(0), 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  2   21[COMRAM] int 
  4045 ;; Registers used:
  4046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;Total ram usage:        9 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:    6
  4059 ;; This function calls:
  4060 ;;		_putch
  4061 ;; This function is called by:
  4062 ;;		_pad
  4063 ;;		_ctoa
  4064 ;;		_vfpfcnvrt
  4065 ;;		_fputs
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text12
  4070  0010DE                     __ptext12:
  4071                           	callstack 0
  4072  0010DE                     _fputc:
  4073                           	callstack 21
  4074  0010DE  5018               	movf	fputc@fp^0,w,c
  4075  0010E0  1019               	iorwf	(fputc@fp+1)^0,w,c
  4076  0010E2  B4D8               	btfsc	status,2,c
  4077  0010E4  EF76  F008         	goto	u851
  4078  0010E8  EF78  F008         	goto	u850
  4079  0010EC                     u851:
  4080  0010EC  EF81  F008         	goto	l1876
  4081  0010F0                     u850:
  4082  0010F0  5018               	movf	fputc@fp^0,w,c
  4083  0010F2  1019               	iorwf	(fputc@fp+1)^0,w,c
  4084  0010F4  A4D8               	btfss	status,2,c
  4085  0010F6  EF7F  F008         	goto	u861
  4086  0010FA  EF81  F008         	goto	u860
  4087  0010FE                     u861:
  4088  0010FE  EF86  F008         	goto	l1878
  4089  001102                     u860:
  4090  001102                     l1876:
  4091  001102  5016               	movf	fputc@c^0,w,c
  4092  001104  EC9C  F00A         	call	_putch
  4093  001108  EFB9  F008         	goto	l1132
  4094  00110C                     l1878:
  4095  00110C  EE20 F004          	lfsr	2,4
  4096  001110  5018               	movf	fputc@fp^0,w,c
  4097  001112  26D9               	addwf	fsr2l,f,c
  4098  001114  5019               	movf	(fputc@fp+1)^0,w,c
  4099  001116  22DA               	addwfc	fsr2h,f,c
  4100  001118  50DE               	movf	postinc2,w,c
  4101  00111A  10DE               	iorwf	postinc2,w,c
  4102  00111C  B4D8               	btfsc	status,2,c
  4103  00111E  EF93  F008         	goto	u871
  4104  001122  EF95  F008         	goto	u870
  4105  001126                     u871:
  4106  001126  EFB0  F008         	goto	l1882
  4107  00112A                     u870:
  4108  00112A  EE20 F004          	lfsr	2,4
  4109  00112E  5018               	movf	fputc@fp^0,w,c
  4110  001130  26D9               	addwf	fsr2l,f,c
  4111  001132  5019               	movf	(fputc@fp+1)^0,w,c
  4112  001134  22DA               	addwfc	fsr2h,f,c
  4113  001136  EE10 F002          	lfsr	1,2
  4114  00113A  5018               	movf	fputc@fp^0,w,c
  4115  00113C  26E1               	addwf	fsr1l,f,c
  4116  00113E  5019               	movf	(fputc@fp+1)^0,w,c
  4117  001140  22E2               	addwfc	fsr1h,f,c
  4118  001142  50DE               	movf	postinc2,w,c
  4119  001144  5CE6               	subwf	postinc1,w,c
  4120  001146  50E6               	movf	postinc1,w,c
  4121  001148  0A80               	xorlw	128
  4122  00114A  6E1E               	movwf	(??_fputc+4)^0,c
  4123  00114C  50DE               	movf	postinc2,w,c
  4124  00114E  0A80               	xorlw	128
  4125  001150  581E               	subwfb	(??_fputc+4)^0,w,c
  4126  001152  B0D8               	btfsc	status,0,c
  4127  001154  EFAE  F008         	goto	u881
  4128  001158  EFB0  F008         	goto	u880
  4129  00115C                     u881:
  4130  00115C  EFB9  F008         	goto	l1132
  4131  001160                     u880:
  4132  001160                     l1882:
  4133  001160  EE20 F002          	lfsr	2,2
  4134  001164  5018               	movf	fputc@fp^0,w,c
  4135  001166  26D9               	addwf	fsr2l,f,c
  4136  001168  5019               	movf	(fputc@fp+1)^0,w,c
  4137  00116A  22DA               	addwfc	fsr2h,f,c
  4138  00116C  2ADE               	incf	postinc2,f,c
  4139  00116E  0E00               	movlw	0
  4140  001170  22DD               	addwfc	postdec2,f,c
  4141  001172                     l1132:
  4142  001172  0012               	return		;funcret
  4143  001174                     __end_of_fputc:
  4144                           	callstack 0
  4145                           
  4146 ;; *************** function _putch *****************
  4147 ;; Defined at:
  4148 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  txData          1    wreg     unsigned char 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  txData          1   20[COMRAM] unsigned char 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;Total ram usage:        1 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    5
  4169 ;; This function calls:
  4170 ;;		_EUSART1_Write
  4171 ;; This function is called by:
  4172 ;;		_fputc
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text13
  4177  001538                     __ptext13:
  4178                           	callstack 0
  4179  001538                     _putch:
  4180                           	callstack 21
  4181                           
  4182                           ;incstack = 0
  4183                           ;putch@txData stored from wreg
  4184  001538  6E15               	movwf	putch@txData^0,c
  4185  00153A                     
  4186                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4187  00153A  5015               	movf	putch@txData^0,w,c
  4188  00153C  EC7C  F00A         	call	_EUSART1_Write
  4189  001540  0012               	return		;funcret
  4190  001542                     __end_of_putch:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _EUSART1_Write *****************
  4194 ;; Defined at:
  4195 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  txData          1    wreg     unsigned char 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  txData          1   19[COMRAM] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;Total ram usage:        1 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    4
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_putch
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text14
  4224  0014F8                     __ptext14:
  4225                           	callstack 0
  4226  0014F8                     _EUSART1_Write:
  4227                           	callstack 21
  4228                           
  4229                           ;incstack = 0
  4230                           ;EUSART1_Write@txData stored from wreg
  4231  0014F8  6E14               	movwf	EUSART1_Write@txData^0,c
  4232  0014FA                     l300:
  4233                           
  4234                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4235  0014FA  A89E               	btfss	158,4,c	;volatile
  4236  0014FC  EF82  F00A         	goto	u841
  4237  001500  EF84  F00A         	goto	u840
  4238  001504                     u841:
  4239  001504  EF7D  F00A         	goto	l300
  4240  001508                     u840:
  4241  001508                     
  4242                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4243  001508  C014  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4244  00150C  0012               	return		;funcret
  4245  00150E                     __end_of_EUSART1_Write:
  4246                           	callstack 0
  4247                           
  4248 ;; *************** function ___wmul *****************
  4249 ;; Defined at:
  4250 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  multiplier      2   19[COMRAM] unsigned int 
  4253 ;;  multiplicand    2   21[COMRAM] unsigned int 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  product         2   23[COMRAM] unsigned int 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  2   19[COMRAM] unsigned int 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0, prodl, prodh
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;Total ram usage:        6 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    4
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text15
  4280  00147E                     __ptext15:
  4281                           	callstack 0
  4282  00147E                     ___wmul:
  4283                           	callstack 26
  4284  00147E  5014               	movf	___wmul@multiplier^0,w,c
  4285  001480  0216               	mulwf	___wmul@multiplicand^0,c
  4286  001482  CFF3 F018          	movff	prodl,___wmul@product
  4287  001486  CFF4 F019          	movff	prodh,___wmul@product+1
  4288  00148A  5014               	movf	___wmul@multiplier^0,w,c
  4289  00148C  0217               	mulwf	(___wmul@multiplicand+1)^0,c
  4290  00148E  50F3               	movf	243,w,c
  4291  001490  2619               	addwf	(___wmul@product+1)^0,f,c
  4292  001492  5015               	movf	(___wmul@multiplier+1)^0,w,c
  4293  001494  0216               	mulwf	___wmul@multiplicand^0,c
  4294  001496  50F3               	movf	243,w,c
  4295  001498  2619               	addwf	(___wmul@product+1)^0,f,c
  4296  00149A  C018  F014         	movff	___wmul@product,?___wmul
  4297  00149E  C019  F015         	movff	___wmul@product+1,?___wmul+1
  4298  0014A2  0012               	return		;funcret
  4299  0014A4                     __end_of___wmul:
  4300                           	callstack 0
  4301                           
  4302 ;; *************** function ___lwdiv *****************
  4303 ;; Defined at:
  4304 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  dividend        2   19[COMRAM] unsigned int 
  4307 ;;  divisor         2   21[COMRAM] unsigned int 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  quotient        2   23[COMRAM] unsigned int 
  4310 ;;  counter         1   25[COMRAM] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  2   19[COMRAM] unsigned int 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;Total ram usage:        7 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    4
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_main
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text16
  4335  001174                     __ptext16:
  4336                           	callstack 0
  4337  001174                     ___lwdiv:
  4338                           	callstack 26
  4339  001174  0E00               	movlw	0
  4340  001176  6E19               	movwf	(___lwdiv@quotient+1)^0,c
  4341  001178  0E00               	movlw	0
  4342  00117A  6E18               	movwf	___lwdiv@quotient^0,c
  4343  00117C  5016               	movf	___lwdiv@divisor^0,w,c
  4344  00117E  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4345  001180  B4D8               	btfsc	status,2,c
  4346  001182  EFC5  F008         	goto	u1451
  4347  001186  EFC7  F008         	goto	u1450
  4348  00118A                     u1451:
  4349  00118A  EFEF  F008         	goto	l837
  4350  00118E                     u1450:
  4351  00118E  0E01               	movlw	1
  4352  001190  6E1A               	movwf	___lwdiv@counter^0,c
  4353  001192  EFCF  F008         	goto	l2310
  4354  001196                     l2308:
  4355  001196  90D8               	bcf	status,0,c
  4356  001198  3616               	rlcf	___lwdiv@divisor^0,f,c
  4357  00119A  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4358  00119C  2A1A               	incf	___lwdiv@counter^0,f,c
  4359  00119E                     l2310:
  4360  00119E  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  4361  0011A0  EFD4  F008         	goto	u1461
  4362  0011A4  EFD6  F008         	goto	u1460
  4363  0011A8                     u1461:
  4364  0011A8  EFCB  F008         	goto	l2308
  4365  0011AC                     u1460:
  4366  0011AC                     l2312:
  4367  0011AC  90D8               	bcf	status,0,c
  4368  0011AE  3618               	rlcf	___lwdiv@quotient^0,f,c
  4369  0011B0  3619               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4370  0011B2  5016               	movf	___lwdiv@divisor^0,w,c
  4371  0011B4  5C14               	subwf	___lwdiv@dividend^0,w,c
  4372  0011B6  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  4373  0011B8  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4374  0011BA  A0D8               	btfss	status,0,c
  4375  0011BC  EFE2  F008         	goto	u1471
  4376  0011C0  EFE4  F008         	goto	u1470
  4377  0011C4                     u1471:
  4378  0011C4  EFE9  F008         	goto	l2320
  4379  0011C8                     u1470:
  4380  0011C8  5016               	movf	___lwdiv@divisor^0,w,c
  4381  0011CA  5E14               	subwf	___lwdiv@dividend^0,f,c
  4382  0011CC  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  4383  0011CE  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4384  0011D0  8018               	bsf	___lwdiv@quotient^0,0,c
  4385  0011D2                     l2320:
  4386  0011D2  90D8               	bcf	status,0,c
  4387  0011D4  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4388  0011D6  3216               	rrcf	___lwdiv@divisor^0,f,c
  4389  0011D8  2E1A               	decfsz	___lwdiv@counter^0,f,c
  4390  0011DA  EFD6  F008         	goto	l2312
  4391  0011DE                     l837:
  4392  0011DE  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  4393  0011E2  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4394  0011E6  0012               	return		;funcret
  4395  0011E8                     __end_of___lwdiv:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _TMR0_WriteTimer *****************
  4399 ;; Defined at:
  4400 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  timerVal        2   19[COMRAM] unsigned short 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;Total ram usage:        2 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    4
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_main
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text17
  4429  001542                     __ptext17:
  4430                           	callstack 0
  4431  001542                     _TMR0_WriteTimer:
  4432                           	callstack 26
  4433  001542                     
  4434                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4435  001542  5015               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4436  001544  6ED7               	movwf	215,c	;volatile
  4437  001546                     
  4438                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4439  001546  C014  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4440  00154A  0012               	return		;funcret
  4441  00154C                     __end_of_TMR0_WriteTimer:
  4442                           	callstack 0
  4443                           
  4444 ;; *************** function _SYSTEM_Initialize *****************
  4445 ;; Defined at:
  4446 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    6
  4467 ;; This function calls:
  4468 ;;		_ADC_Initialize
  4469 ;;		_EUSART1_Initialize
  4470 ;;		_INTERRUPT_Initialize
  4471 ;;		_OSCILLATOR_Initialize
  4472 ;;		_PIN_MANAGER_Initialize
  4473 ;;		_TMR0_Initialize
  4474 ;; This function is called by:
  4475 ;;		_main
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text18
  4480  0014DE                     __ptext18:
  4481                           	callstack 0
  4482  0014DE                     _SYSTEM_Initialize:
  4483                           	callstack 24
  4484  0014DE                     
  4485                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4486  0014DE  ECBF  F00A         	call	_INTERRUPT_Initialize	;wreg free
  4487  0014E2                     
  4488                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4489  0014E2  EC01  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  4490  0014E6                     
  4491                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4492  0014E6  EC61  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  4493  0014EA                     
  4494                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  4495  0014EA  EC87  F00A         	call	_ADC_Initialize	;wreg free
  4496  0014EE                     
  4497                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4498  0014EE  ECCB  F009         	call	_TMR0_Initialize	;wreg free
  4499  0014F2                     
  4500                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  4501  0014F2  EC91  F009         	call	_EUSART1_Initialize	;wreg free
  4502  0014F6  0012               	return		;funcret
  4503  0014F8                     __end_of_SYSTEM_Initialize:
  4504                           	callstack 0
  4505                           
  4506 ;; *************** function _TMR0_Initialize *****************
  4507 ;; Defined at:
  4508 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;Total ram usage:        2 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    5
  4529 ;; This function calls:
  4530 ;;		_TMR0_SetInterruptHandler
  4531 ;; This function is called by:
  4532 ;;		_SYSTEM_Initialize
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text19
  4537  001396                     __ptext19:
  4538                           	callstack 0
  4539  001396                     _TMR0_Initialize:
  4540                           	callstack 24
  4541  001396                     
  4542                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4543  001396  9CD5               	bcf	213,6,c	;volatile
  4544  001398                     
  4545                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  4546  001398  0E00               	movlw	0
  4547  00139A  6ED7               	movwf	215,c	;volatile
  4548                           
  4549                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  4550  00139C  0E00               	movlw	0
  4551  00139E  6ED6               	movwf	214,c	;volatile
  4552  0013A0                     
  4553                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4554  0013A0  50D6               	movf	214,w,c	;volatile
  4555  0013A2  CFD7 F016          	movff	4055,??_TMR0_Initialize	;volatile
  4556  0013A6  6A17               	clrf	(??_TMR0_Initialize+1)^0,c
  4557  0013A8  C016  F017         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4558  0013AC  6A16               	clrf	??_TMR0_Initialize^0,c
  4559  0013AE  1016               	iorwf	??_TMR0_Initialize^0,w,c
  4560  0013B0  6E43               	movwf	_timer0ReloadVal^0,c	;volatile
  4561  0013B2  5017               	movf	(??_TMR0_Initialize+1)^0,w,c
  4562  0013B4  6E44               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4563  0013B6                     
  4564                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4565  0013B6  94F2               	bcf	242,2,c	;volatile
  4566  0013B8                     
  4567                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4568  0013B8  8AF2               	bsf	242,5,c	;volatile
  4569  0013BA                     
  4570                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4571  0013BA  0E84               	movlw	low _TMR0_DefaultInterruptHandler
  4572  0013BC  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4573  0013BE  0E15               	movlw	high _TMR0_DefaultInterruptHandler
  4574  0013C0  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4575  0013C2  ECA6  F00A         	call	_TMR0_SetInterruptHandler	;wreg free
  4576  0013C6                     
  4577                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  4578  0013C6  0E9F               	movlw	159
  4579  0013C8  6ED5               	movwf	213,c	;volatile
  4580  0013CA  0012               	return		;funcret
  4581  0013CC                     __end_of_TMR0_Initialize:
  4582                           	callstack 0
  4583                           
  4584 ;; *************** function _TMR0_SetInterruptHandler *****************
  4585 ;; Defined at:
  4586 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  4589 ;;		 -> TMR0_DefaultInterruptHandler(1), myTMR0ISR(1), 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;Total ram usage:        2 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    4
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_main
  4612 ;;		_TMR0_Initialize
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text20
  4617  00154C                     __ptext20:
  4618                           	callstack 0
  4619  00154C                     _TMR0_SetInterruptHandler:
  4620                           	callstack 26
  4621  00154C                     
  4622                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4623  00154C  C014  F045         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4624  001550  C015  F046         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4625  001554  0012               	return		;funcret
  4626  001556                     __end_of_TMR0_SetInterruptHandler:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function _PIN_MANAGER_Initialize *****************
  4630 ;; Defined at:
  4631 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    4
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_SYSTEM_Initialize
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text21
  4660  001402                     __ptext21:
  4661                           	callstack 0
  4662  001402                     _PIN_MANAGER_Initialize:
  4663                           	callstack 25
  4664  001402                     
  4665                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4666  001402  0E00               	movlw	0
  4667  001404  6E89               	movwf	137,c	;volatile
  4668                           
  4669                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4670  001406  0E00               	movlw	0
  4671  001408  6E8A               	movwf	138,c	;volatile
  4672                           
  4673                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4674  00140A  0E00               	movlw	0
  4675  00140C  6E8B               	movwf	139,c	;volatile
  4676                           
  4677                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  4678  00140E  0EBF               	movlw	191
  4679  001410  6E92               	movwf	146,c	;volatile
  4680  001412                     
  4681                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  4682  001412  6893               	setf	147,c	;volatile
  4683                           
  4684                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  4685  001414  0EBF               	movlw	191
  4686  001416  6E94               	movwf	148,c	;volatile
  4687                           
  4688                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4689  001418  0E3C               	movlw	60
  4690  00141A  010F               	movlb	15	; () banked
  4691  00141C  6F3A               	movwf	58,b	;volatile
  4692                           
  4693                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  4694  00141E  0E3F               	movlw	63
  4695  001420  6F39               	movwf	57,b	;volatile
  4696                           
  4697                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4698  001422  0E2F               	movlw	47
  4699  001424  6F38               	movwf	56,b	;volatile
  4700                           
  4701                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4702  001426  0E00               	movlw	0
  4703  001428  6E61               	movwf	97,c	;volatile
  4704  00142A                     
  4705                           ; BSR set to: 15
  4706                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4707  00142A  8EF1               	bsf	241,7,c	;volatile
  4708  00142C                     
  4709                           ; BSR set to: 15
  4710  00142C  0012               	return		;funcret
  4711  00142E                     __end_of_PIN_MANAGER_Initialize:
  4712                           	callstack 0
  4713                           
  4714 ;; *************** function _OSCILLATOR_Initialize *****************
  4715 ;; Defined at:
  4716 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;Total ram usage:        0 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    4
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_SYSTEM_Initialize
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text22
  4745  0014C2                     __ptext22:
  4746                           	callstack 0
  4747  0014C2                     _OSCILLATOR_Initialize:
  4748                           	callstack 25
  4749  0014C2                     
  4750                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4751  0014C2  0E70               	movlw	112
  4752  0014C4  6ED3               	movwf	211,c	;volatile
  4753                           
  4754                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  4755  0014C6  0E04               	movlw	4
  4756  0014C8  6ED2               	movwf	210,c	;volatile
  4757                           
  4758                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  4759  0014CA  0E40               	movlw	64
  4760  0014CC  6E9B               	movwf	155,c	;volatile
  4761  0014CE                     l190:
  4762                           
  4763                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  4764  0014CE  AED2               	btfss	4050,7,c	;volatile
  4765  0014D0  EF6C  F00A         	goto	u1381
  4766  0014D4  EF6E  F00A         	goto	u1380
  4767  0014D8                     u1381:
  4768  0014D8  EF67  F00A         	goto	l190
  4769  0014DC                     u1380:
  4770  0014DC  0012               	return		;funcret
  4771  0014DE                     __end_of_OSCILLATOR_Initialize:
  4772                           	callstack 0
  4773                           
  4774 ;; *************** function _INTERRUPT_Initialize *****************
  4775 ;; Defined at:
  4776 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;		None
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;		None
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		None
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        0 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    4
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_SYSTEM_Initialize
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text23
  4805  00157E                     __ptext23:
  4806                           	callstack 0
  4807  00157E                     _INTERRUPT_Initialize:
  4808                           	callstack 25
  4809  00157E                     
  4810                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4811  00157E  9ED0               	bcf	208,7,c	;volatile
  4812  001580  0012               	return		;funcret
  4813  001582                     __end_of_INTERRUPT_Initialize:
  4814                           	callstack 0
  4815                           
  4816 ;; *************** function _EUSART1_Initialize *****************
  4817 ;; Defined at:
  4818 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;Total ram usage:        0 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    5
  4839 ;; This function calls:
  4840 ;;		_EUSART1_SetErrorHandler
  4841 ;;		_EUSART1_SetFramingErrorHandler
  4842 ;;		_EUSART1_SetOverrunErrorHandler
  4843 ;; This function is called by:
  4844 ;;		_SYSTEM_Initialize
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text24
  4849  001322                     __ptext24:
  4850                           	callstack 0
  4851  001322                     _EUSART1_Initialize:
  4852                           	callstack 24
  4853  001322                     
  4854                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4855  001322  0E08               	movlw	8
  4856  001324  6EB8               	movwf	184,c	;volatile
  4857                           
  4858                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4859  001326  0E90               	movlw	144
  4860  001328  6EAB               	movwf	171,c	;volatile
  4861                           
  4862                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4863  00132A  0E24               	movlw	36
  4864  00132C  6EAC               	movwf	172,c	;volatile
  4865                           
  4866                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  4867  00132E  0E82               	movlw	130
  4868  001330  6EAF               	movwf	175,c	;volatile
  4869                           
  4870                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  4871  001332  0E06               	movlw	6
  4872  001334  6EB0               	movwf	176,c	;volatile
  4873  001336                     
  4874                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4875  001336  0E00               	movlw	0
  4876  001338  6E14               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4877  00133A  0E00               	movlw	0
  4878  00133C  6E15               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4879  00133E  ECB0  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4880  001342                     
  4881                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4882  001342  0E00               	movlw	0
  4883  001344  6E14               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4884  001346  0E00               	movlw	0
  4885  001348  6E15               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4886  00134A  ECAB  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4887  00134E                     
  4888                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4889  00134E  0E00               	movlw	0
  4890  001350  6E14               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4891  001352  0E00               	movlw	0
  4892  001354  6E15               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4893  001356  ECB5  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  4894  00135A                     
  4895                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4896  00135A  0E00               	movlw	0
  4897  00135C  6E49               	movwf	_eusart1RxLastError^0,c	;volatile
  4898  00135E  0012               	return		;funcret
  4899  001360                     __end_of_EUSART1_Initialize:
  4900                           	callstack 0
  4901                           
  4902 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4903 ;; Defined at:
  4904 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  4907 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;Total ram usage:        2 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    4
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_EUSART1_Initialize
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text25
  4934  001556                     __ptext25:
  4935                           	callstack 0
  4936  001556                     _EUSART1_SetOverrunErrorHandler:
  4937                           	callstack 24
  4938  001556                     
  4939                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4940  001556  C014  F0B1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4941  00155A  C015  F0B2         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4942  00155E  0012               	return		;funcret
  4943  001560                     __end_of_EUSART1_SetOverrunErrorHandler:
  4944                           	callstack 0
  4945                           
  4946 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4947 ;; Defined at:
  4948 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  4951 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2, status,0
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;Total ram usage:        2 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    4
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_EUSART1_Initialize
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           	psect	text26
  4978  001560                     __ptext26:
  4979                           	callstack 0
  4980  001560                     _EUSART1_SetFramingErrorHandler:
  4981                           	callstack 24
  4982  001560                     
  4983                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4984  001560  C014  F03F         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4985  001564  C015  F040         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4986  001568  0012               	return		;funcret
  4987  00156A                     __end_of_EUSART1_SetFramingErrorHandler:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _EUSART1_SetErrorHandler *****************
  4991 ;; Defined at:
  4992 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  4995 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;Total ram usage:        2 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    4
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_EUSART1_Initialize
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text27
  5022  00156A                     __ptext27:
  5023                           	callstack 0
  5024  00156A                     _EUSART1_SetErrorHandler:
  5025                           	callstack 24
  5026  00156A                     
  5027                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5028  00156A  C014  F0AF         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5029  00156E  C015  F0B0         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5030  001572  0012               	return		;funcret
  5031  001574                     __end_of_EUSART1_SetErrorHandler:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function _ADC_Initialize *****************
  5035 ;; Defined at:
  5036 ;;		line 62 in file "mcc_generated_files/adc.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;		None
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;Total ram usage:        0 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    4
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_SYSTEM_Initialize
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text28
  5065  00150E                     __ptext28:
  5066                           	callstack 0
  5067  00150E                     _ADC_Initialize:
  5068                           	callstack 25
  5069  00150E                     
  5070                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  5071  00150E  0E00               	movlw	0
  5072  001510  6EC1               	movwf	193,c	;volatile
  5073                           
  5074                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  5075  001512  0E26               	movlw	38
  5076  001514  6EC0               	movwf	192,c	;volatile
  5077                           
  5078                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  5079  001516  0E00               	movlw	0
  5080  001518  6EC3               	movwf	195,c	;volatile
  5081                           
  5082                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  5083  00151A  0E00               	movlw	0
  5084  00151C  6EC4               	movwf	196,c	;volatile
  5085                           
  5086                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  5087  00151E  0E11               	movlw	17
  5088  001520  6EC2               	movwf	194,c	;volatile
  5089  001522  0012               	return		;funcret
  5090  001524                     __end_of_ADC_Initialize:
  5091                           	callstack 0
  5092                           
  5093 ;; *************** function _EUSART1_is_rx_ready *****************
  5094 ;; Defined at:
  5095 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;		None
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;		None
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      _Bool 
  5102 ;; Registers used:
  5103 ;;		wreg
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;Total ram usage:        0 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:    4
  5116 ;; This function calls:
  5117 ;;		Nothing
  5118 ;; This function is called by:
  5119 ;;		_main
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text29
  5124  001524                     __ptext29:
  5125                           	callstack 0
  5126  001524                     _EUSART1_is_rx_ready:
  5127                           	callstack 26
  5128  001524                     
  5129                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5130  001524  BA9E               	btfsc	158,5,c	;volatile
  5131  001526  EF97  F00A         	goto	u1401
  5132  00152A  EF9A  F00A         	goto	u1400
  5133  00152E                     u1401:
  5134  00152E  0E01               	movlw	1
  5135  001530  EF9B  F00A         	goto	u1406
  5136  001534                     u1400:
  5137  001534  0E00               	movlw	0
  5138  001536                     u1406:
  5139  001536  0012               	return		;funcret
  5140  001538                     __end_of_EUSART1_is_rx_ready:
  5141                           	callstack 0
  5142                           
  5143 ;; *************** function _EUSART1_Read *****************
  5144 ;; Defined at:
  5145 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      unsigned char 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;Total ram usage:        0 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    4
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_main
  5170 ;;		_getch
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text30
  5175  001456                     __ptext30:
  5176                           	callstack 0
  5177  001456                     _EUSART1_Read:
  5178                           	callstack 26
  5179  001456                     l293:
  5180                           
  5181                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5182  001456  AA9E               	btfss	158,5,c	;volatile
  5183  001458  EF30  F00A         	goto	u1411
  5184  00145C  EF32  F00A         	goto	u1410
  5185  001460                     u1411:
  5186  001460  EF2B  F00A         	goto	l293
  5187  001464                     u1410:
  5188  001464                     
  5189                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5190  001464  0E00               	movlw	0
  5191  001466  6E49               	movwf	_eusart1RxLastError^0,c	;volatile
  5192  001468                     
  5193                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5194  001468  A2AB               	btfss	171,1,c	;volatile
  5195  00146A  EF39  F00A         	goto	u1421
  5196  00146E  EF3B  F00A         	goto	u1420
  5197  001472                     u1421:
  5198  001472  EF3D  F00A         	goto	l2282
  5199  001476                     u1420:
  5200  001476                     
  5201                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5202  001476  98AB               	bcf	171,4,c	;volatile
  5203                           
  5204                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5205  001478  88AB               	bsf	171,4,c	;volatile
  5206  00147A                     l2282:
  5207                           
  5208                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5209  00147A  50AE               	movf	174,w,c	;volatile
  5210  00147C  0012               	return		;funcret
  5211  00147E                     __end_of_EUSART1_Read:
  5212                           	callstack 0
  5213                           
  5214 ;; *************** function _INTERRUPT_InterruptManager *****************
  5215 ;; Defined at:
  5216 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;		None
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;		None
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      void 
  5223 ;; Registers used:
  5224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;Total ram usage:        4 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    3
  5237 ;; This function calls:
  5238 ;;		_TMR0_ISR
  5239 ;; This function is called by:
  5240 ;;		Interrupt level 2
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	intcode
  5245  000008                     __pintcode:
  5246                           	callstack 0
  5247  000008                     _INTERRUPT_InterruptManager:
  5248                           	callstack 18
  5249                           
  5250                           ;incstack = 0
  5251  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5252  00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
  5253  00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5254  000012  CFD9 F012          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5255  000016  CFDA F013          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5256  00001A                     
  5257                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5258  00001A  AAF2               	btfss	242,5,c	;volatile
  5259  00001C  EF12  F000         	goto	i2u162_41
  5260  000020  EF14  F000         	goto	i2u162_40
  5261  000024                     i2u162_41:
  5262  000024  EF1D  F000         	goto	i2l343
  5263  000028                     i2u162_40:
  5264  000028  A4F2               	btfss	242,2,c	;volatile
  5265  00002A  EF19  F000         	goto	i2u163_41
  5266  00002E  EF1B  F000         	goto	i2u163_40
  5267  000032                     i2u163_41:
  5268  000032  EF1D  F000         	goto	i2l343
  5269  000036                     i2u163_40:
  5270  000036                     
  5271                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5272  000036  ECE6  F009         	call	_TMR0_ISR	;wreg free
  5273  00003A                     i2l343:
  5274  00003A  C013  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5275  00003E  C012  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5276  000042  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5277  000046  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5278  00004A  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5279  00004C  0011               	retfie		f
  5280  00004E                     __end_of_INTERRUPT_InterruptManager:
  5281                           	callstack 0
  5282                           
  5283 ;; *************** function _TMR0_ISR *****************
  5284 ;; Defined at:
  5285 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;		None
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;Total ram usage:        0 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    2
  5306 ;; This function calls:
  5307 ;;		Absolute function
  5308 ;;		_TMR0_DefaultInterruptHandler
  5309 ;;		_myTMR0ISR
  5310 ;; This function is called by:
  5311 ;;		_INTERRUPT_InterruptManager
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text32
  5316  0013CC                     __ptext32:
  5317                           	callstack 0
  5318  0013CC                     _TMR0_ISR:
  5319                           	callstack 18
  5320  0013CC                     
  5321                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5322  0013CC  94F2               	bcf	242,2,c	;volatile
  5323  0013CE                     
  5324                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5325  0013CE  5044               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5326  0013D0  6ED7               	movwf	215,c	;volatile
  5327  0013D2                     
  5328                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5329  0013D2  C043  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5330  0013D6                     
  5331                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5332  0013D6  5045               	movf	_TMR0_InterruptHandler^0,w,c
  5333  0013D8  1046               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  5334  0013DA  B4D8               	btfsc	status,2,c
  5335  0013DC  EFF2  F009         	goto	i2u143_41
  5336  0013E0  EFF4  F009         	goto	i2u143_40
  5337  0013E4                     i2u143_41:
  5338  0013E4  EF00  F00A         	goto	i2l158
  5339  0013E8                     i2u143_40:
  5340  0013E8                     
  5341                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  5342  0013E8  D802               	call	i2u144_48
  5343  0013EA  EF00  F00A         	goto	i2u144_49
  5344  0013EE                     i2u144_48:
  5345  0013EE  0005               	push	
  5346  0013F0  6EFA               	movwf	pclath,c
  5347  0013F2  5045               	movf	_TMR0_InterruptHandler^0,w,c
  5348  0013F4  6EFD               	movwf	tosl,c
  5349  0013F6  5046               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  5350  0013F8  6EFE               	movwf	tosh,c
  5351  0013FA  6AFF               	clrf	tosu,c
  5352  0013FC  50FA               	movf	pclath,w,c
  5353  0013FE  0012               	return		;indir
  5354  001400                     i2u144_49:
  5355  001400                     i2l158:
  5356  001400  0012               	return		;funcret
  5357  001402                     __end_of_TMR0_ISR:
  5358                           	callstack 0
  5359                           
  5360 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5361 ;; Defined at:
  5362 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		None
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;Total ram usage:        0 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_TMR0_Initialize
  5386 ;;		_TMR0_ISR
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text33
  5391  001584                     __ptext33:
  5392                           	callstack 0
  5393  001584                     _TMR0_DefaultInterruptHandler:
  5394                           	callstack 19
  5395  001584  0012               	return		;funcret
  5396  001586                     __end_of_TMR0_DefaultInterruptHandler:
  5397                           	callstack 0
  5398                           
  5399 ;; *************** function _myTMR0ISR *****************
  5400 ;; Defined at:
  5401 ;;		line 219 in file "main.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;		None
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  micReading      1   14[COMRAM] unsigned char 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;Total ram usage:        5 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    1
  5422 ;; This function calls:
  5423 ;;		_TMR0_ReadTimer
  5424 ;;		i2_TMR0_WriteTimer
  5425 ;; This function is called by:
  5426 ;;		_main
  5427 ;;		_TMR0_ISR
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	text34
  5432  000E42                     __ptext34:
  5433                           	callstack 0
  5434  000E42                     _myTMR0ISR:
  5435                           	callstack 18
  5436  000E42                     
  5437                           ;main.c: 222:     uint8_t micReading = ADRESH;
  5438  000E42  CFC4 F00F          	movff	4036,myTMR0ISR@micReading	;volatile
  5439                           
  5440                           ;main.c: 227:     ADCON0bits.GO_NOT_DONE = 1;
  5441  000E46  82C2               	bsf	194,1,c	;volatile
  5442                           
  5443                           ;main.c: 231:     switch(timerState){
  5444  000E48  EF8A  F007         	goto	i2l2198
  5445  000E4C                     i2l2172:
  5446                           
  5447                           ;main.c: 235:             if(fillBuffer){
  5448  000E4C  504B               	movf	_fillBuffer^0,w,c
  5449  000E4E  B4D8               	btfsc	status,2,c
  5450  000E50  EF2C  F007         	goto	i2u134_41
  5451  000E54  EF2E  F007         	goto	i2u134_40
  5452  000E58                     i2u134_41:
  5453  000E58  EFA3  F007         	goto	i2l88
  5454  000E5C                     i2u134_40:
  5455  000E5C                     
  5456                           ;main.c: 236:                 timerState = MIC_WAIT_FOR_TRIGGER;
  5457  000E5C  0E01               	movlw	1
  5458  000E5E  6E4A               	movwf	_timerState^0,c
  5459                           
  5460                           ;main.c: 237:                 bufferIdx = 0;
  5461  000E60  0E00               	movlw	0
  5462  000E62  6E48               	movwf	(_bufferIdx+1)^0,c
  5463  000E64  0E00               	movlw	0
  5464  000E66  6E47               	movwf	_bufferIdx^0,c
  5465                           
  5466                           ;main.c: 238:                 fillBuffer = 0;
  5467  000E68  0E00               	movlw	0
  5468  000E6A  6E4B               	movwf	_fillBuffer^0,c
  5469  000E6C  EFA3  F007         	goto	i2l88
  5470  000E70                     i2l2176:
  5471                           
  5472                           ;main.c: 244:             if(micReading <= 128 + thresholdRange && micReading >= 128 - t
      +                          hresholdRange){
  5473  000E70  500F               	movf	myTMR0ISR@micReading^0,w,c
  5474  000E72  6E0B               	movwf	??_myTMR0ISR^0,c
  5475  000E74  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
  5476  000E76  0E80               	movlw	128
  5477  000E78  0101               	movlb	1	; () banked
  5478  000E7A  2593               	addwf	_thresholdRange& (0+255),w,b
  5479  000E7C  6E0D               	movwf	(??_myTMR0ISR+2)^0,c
  5480  000E7E  0E00               	movlw	0
  5481  000E80  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  5482  000E82  6E0E               	movwf	(??_myTMR0ISR+3)^0,c
  5483  000E84  500B               	movf	??_myTMR0ISR^0,w,c
  5484  000E86  5C0D               	subwf	(??_myTMR0ISR+2)^0,w,c
  5485  000E88  500C               	movf	(??_myTMR0ISR+1)^0,w,c
  5486  000E8A  580E               	subwfb	(??_myTMR0ISR+3)^0,w,c
  5487  000E8C  A0D8               	btfss	status,0,c
  5488  000E8E  EF4B  F007         	goto	i2u135_41
  5489  000E92  EF4D  F007         	goto	i2u135_40
  5490  000E96                     i2u135_41:
  5491  000E96  EFA3  F007         	goto	i2l88
  5492  000E9A                     i2u135_40:
  5493  000E9A                     
  5494                           ; BSR set to: 1
  5495  000E9A  0E80               	movlw	128
  5496  000E9C  6E0B               	movwf	??_myTMR0ISR^0,c
  5497  000E9E  0E00               	movlw	0
  5498  000EA0  6E0C               	movwf	(??_myTMR0ISR+1)^0,c
  5499  000EA2  5193               	movf	_thresholdRange& (0+255),w,b
  5500  000EA4  5E0B               	subwf	??_myTMR0ISR^0,f,c
  5501  000EA6  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  5502  000EA8  5A0C               	subwfb	(??_myTMR0ISR+1)^0,f,c
  5503  000EAA  500F               	movf	myTMR0ISR@micReading^0,w,c
  5504  000EAC  6E0D               	movwf	(??_myTMR0ISR+2)^0,c
  5505  000EAE  6A0E               	clrf	(??_myTMR0ISR+3)^0,c
  5506  000EB0  500B               	movf	??_myTMR0ISR^0,w,c
  5507  000EB2  5C0D               	subwf	(??_myTMR0ISR+2)^0,w,c
  5508  000EB4  500C               	movf	(??_myTMR0ISR+1)^0,w,c
  5509  000EB6  580E               	subwfb	(??_myTMR0ISR+3)^0,w,c
  5510  000EB8  A0D8               	btfss	status,0,c
  5511  000EBA  EF61  F007         	goto	i2u136_41
  5512  000EBE  EF63  F007         	goto	i2u136_40
  5513  000EC2                     i2u136_41:
  5514  000EC2  EFA3  F007         	goto	i2l88
  5515  000EC6                     i2u136_40:
  5516  000EC6                     
  5517                           ; BSR set to: 1
  5518                           ;main.c: 245:                 adc_reading[bufferIdx] = micReading;
  5519  000EC6  0E00               	movlw	low _adc_reading
  5520  000EC8  2447               	addwf	_bufferIdx^0,w,c
  5521  000ECA  6ED9               	movwf	fsr2l,c
  5522  000ECC  0E02               	movlw	high _adc_reading
  5523  000ECE  2048               	addwfc	(_bufferIdx+1)^0,w,c
  5524  000ED0  6EDA               	movwf	fsr2h,c
  5525  000ED2  C00F  FFDF         	movff	myTMR0ISR@micReading,indf2
  5526  000ED6                     
  5527                           ; BSR set to: 1
  5528                           ;main.c: 246:                 bufferIdx += 1;
  5529  000ED6  4A47               	infsnz	_bufferIdx^0,f,c
  5530  000ED8  2A48               	incf	(_bufferIdx+1)^0,f,c
  5531  000EDA                     
  5532                           ; BSR set to: 1
  5533                           ;main.c: 247:                 timerState = MIC_ACQUIRE;
  5534  000EDA  0E02               	movlw	2
  5535  000EDC  6E4A               	movwf	_timerState^0,c
  5536  000EDE  EFA3  F007         	goto	i2l88
  5537  000EE2                     i2l2186:
  5538                           
  5539                           ;main.c: 251:             adc_reading[bufferIdx] = micReading;
  5540  000EE2  0E00               	movlw	low _adc_reading
  5541  000EE4  2447               	addwf	_bufferIdx^0,w,c
  5542  000EE6  6ED9               	movwf	fsr2l,c
  5543  000EE8  0E02               	movlw	high _adc_reading
  5544  000EEA  2048               	addwfc	(_bufferIdx+1)^0,w,c
  5545  000EEC  6EDA               	movwf	fsr2h,c
  5546  000EEE  C00F  FFDF         	movff	myTMR0ISR@micReading,indf2
  5547  000EF2                     
  5548                           ;main.c: 252:             bufferIdx += 1;
  5549  000EF2  4A47               	infsnz	_bufferIdx^0,f,c
  5550  000EF4  2A48               	incf	(_bufferIdx+1)^0,f,c
  5551  000EF6                     
  5552                           ;main.c: 253:             if(bufferIdx >= 256){
  5553  000EF6  0448               	decf	(_bufferIdx+1)^0,w,c
  5554  000EF8  A0D8               	btfss	status,0,c
  5555  000EFA  EF81  F007         	goto	i2u137_41
  5556  000EFE  EF83  F007         	goto	i2u137_40
  5557  000F02                     i2u137_41:
  5558  000F02  EFA3  F007         	goto	i2l88
  5559  000F06                     i2u137_40:
  5560  000F06                     
  5561                           ;main.c: 255:                 samplesCollected = 1;
  5562  000F06  0E01               	movlw	1
  5563  000F08  0101               	movlb	1	; () banked
  5564  000F0A  6F95               	movwf	_samplesCollected& (0+255),b
  5565                           
  5566                           ;main.c: 256:                 timerState = MIC_IDLE;
  5567  000F0C  0E00               	movlw	0
  5568  000F0E  6E4A               	movwf	_timerState^0,c
  5569  000F10  EFA3  F007         	goto	i2l88
  5570  000F14                     i2l2198:
  5571  000F14  504A               	movf	_timerState^0,w,c
  5572  000F16  6E0B               	movwf	??_myTMR0ISR^0,c
  5573  000F18  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
  5574                           
  5575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5576                           ; Switch size 1, requested type "simple"
  5577                           ; Number of cases is 1, Range of values is 0 to 0
  5578                           ; switch strategies available:
  5579                           ; Name         Instructions Cycles
  5580                           ; simple_byte            4     3 (average)
  5581                           ;	Chosen strategy is simple_byte
  5582  000F1A  500C               	movf	(??_myTMR0ISR+1)^0,w,c
  5583  000F1C  0A00               	xorlw	0	; case 0
  5584  000F1E  B4D8               	btfsc	status,2,c
  5585  000F20  EF94  F007         	goto	i2l2862
  5586  000F24  EFA3  F007         	goto	i2l88
  5587  000F28                     i2l2862:
  5588                           
  5589                           ; Switch size 1, requested type "simple"
  5590                           ; Number of cases is 3, Range of values is 0 to 2
  5591                           ; switch strategies available:
  5592                           ; Name         Instructions Cycles
  5593                           ; simple_byte           10     6 (average)
  5594                           ;	Chosen strategy is simple_byte
  5595  000F28  500B               	movf	??_myTMR0ISR^0,w,c
  5596  000F2A  0A00               	xorlw	0	; case 0
  5597  000F2C  B4D8               	btfsc	status,2,c
  5598  000F2E  EF26  F007         	goto	i2l2172
  5599  000F32  0A01               	xorlw	1	; case 1
  5600  000F34  B4D8               	btfsc	status,2,c
  5601  000F36  EF38  F007         	goto	i2l2176
  5602  000F3A  0A03               	xorlw	3	; case 2
  5603  000F3C  B4D8               	btfsc	status,2,c
  5604  000F3E  EF71  F007         	goto	i2l2186
  5605  000F42  EFA3  F007         	goto	i2l88
  5606  000F46                     i2l88:
  5607  000F46  0012               	return		;funcret
  5608  000F48                     __end_of_myTMR0ISR:
  5609                           	callstack 0
  5610                           
  5611 ;; *************** function i2_TMR0_WriteTimer *****************
  5612 ;; Defined at:
  5613 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  timerVal        2    8[COMRAM] unsigned short 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;		None
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5631 ;;Total ram usage:        2 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_myTMR0ISR
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text35
  5641  001574                     __ptext35:
  5642                           	callstack 0
  5643  001574                     i2_TMR0_WriteTimer:
  5644                           	callstack 18
  5645  001574                     
  5646                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5647  001574  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  5648  001576  6ED7               	movwf	215,c	;volatile
  5649  001578                     
  5650                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5651  001578  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  5652  00157C  0012               	return		;funcret
  5653  00157E                     __end_ofi2_TMR0_WriteTimer:
  5654                           	callstack 0
  5655                           
  5656 ;; *************** function _TMR0_ReadTimer *****************
  5657 ;; Defined at:
  5658 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;		None
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  readVal         2    4[COMRAM] unsigned short 
  5663 ;;  readValHigh     1    7[COMRAM] unsigned char 
  5664 ;;  readValLow      1    6[COMRAM] unsigned char 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  2    0[COMRAM] unsigned short 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;Total ram usage:        8 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		_myTMR0ISR
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text36
  5688  0014A4                     __ptext36:
  5689                           	callstack 0
  5690  0014A4                     _TMR0_ReadTimer:
  5691                           	callstack 18
  5692  0014A4                     
  5693                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
  5694  0014A4  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  5695                           
  5696                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
  5697  0014A8  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  5698  0014AC                     
  5699                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  5700  0014AC  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  5701  0014AE  6E03               	movwf	??_TMR0_ReadTimer^0,c
  5702  0014B0  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  5703  0014B2  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  5704  0014B4  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  5705  0014B8                     
  5706                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
  5707  0014B8  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  5708  0014BC  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  5709  0014C0  0012               	return		;funcret
  5710  0014C2                     __end_of_TMR0_ReadTimer:
  5711                           	callstack 0
  5712                           
  5713                           	psect	text37
  5714  000000                     __ptext37:
  5715                           	callstack 0
  5716  000000                     
  5717                           	psect	rparam
  5718  0000                     
  5719                           	psect	temp
  5720  00004C                     btemp:
  5721                           	callstack 0
  5722  00004C                     	ds	1
  5723  0000                     int$flags	set	btemp
  5724  0000                     wtemp8	set	btemp+1
  5725  0000                     ttemp5	set	btemp+1
  5726  0000                     ttemp6	set	btemp+4
  5727  0000                     ttemp7	set	btemp+8
  5728                           
  5729                           	psect	idloc
  5730                           
  5731                           ;Config register IDLOC0 @ 0x200000
  5732                           ;	unspecified, using default values
  5733  200000                     	org	2097152
  5734  200000  FF                 	db	255
  5735                           
  5736                           ;Config register IDLOC1 @ 0x200001
  5737                           ;	unspecified, using default values
  5738  200001                     	org	2097153
  5739  200001  FF                 	db	255
  5740                           
  5741                           ;Config register IDLOC2 @ 0x200002
  5742                           ;	unspecified, using default values
  5743  200002                     	org	2097154
  5744  200002  FF                 	db	255
  5745                           
  5746                           ;Config register IDLOC3 @ 0x200003
  5747                           ;	unspecified, using default values
  5748  200003                     	org	2097155
  5749  200003  FF                 	db	255
  5750                           
  5751                           ;Config register IDLOC4 @ 0x200004
  5752                           ;	unspecified, using default values
  5753  200004                     	org	2097156
  5754  200004  FF                 	db	255
  5755                           
  5756                           ;Config register IDLOC5 @ 0x200005
  5757                           ;	unspecified, using default values
  5758  200005                     	org	2097157
  5759  200005  FF                 	db	255
  5760                           
  5761                           ;Config register IDLOC6 @ 0x200006
  5762                           ;	unspecified, using default values
  5763  200006                     	org	2097158
  5764  200006  FF                 	db	255
  5765                           
  5766                           ;Config register IDLOC7 @ 0x200007
  5767                           ;	unspecified, using default values
  5768  200007                     	org	2097159
  5769  200007  FF                 	db	255
  5770                           
  5771                           	psect	config
  5772                           
  5773                           ; Padding undefined space
  5774  300000                     	org	3145728
  5775  300000  FF                 	db	255
  5776                           
  5777                           ;Config register CONFIG1H @ 0x300001
  5778                           ;	Oscillator Selection bits
  5779                           ;	FOSC = INTIO67, Internal oscillator block
  5780                           ;	4X PLL Enable
  5781                           ;	PLLCFG = OFF, Oscillator used directly
  5782                           ;	Primary clock enable bit
  5783                           ;	PRICLKEN = ON, Primary clock enabled
  5784                           ;	Fail-Safe Clock Monitor Enable bit
  5785                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5786                           ;	Internal/External Oscillator Switchover bit
  5787                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5788  300001                     	org	3145729
  5789  300001  28                 	db	40
  5790                           
  5791                           ;Config register CONFIG2L @ 0x300002
  5792                           ;	Power-up Timer Enable bit
  5793                           ;	PWRTEN = OFF, Power up timer disabled
  5794                           ;	Brown-out Reset Enable bits
  5795                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5796                           ;	Brown Out Reset Voltage bits
  5797                           ;	BORV = 190, VBOR set to 1.90 V nominal
  5798  300002                     	org	3145730
  5799  300002  1F                 	db	31
  5800                           
  5801                           ;Config register CONFIG2H @ 0x300003
  5802                           ;	Watchdog Timer Enable bits
  5803                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5804                           ;	Watchdog Timer Postscale Select bits
  5805                           ;	WDTPS = 32768, 1:32768
  5806  300003                     	org	3145731
  5807  300003  3C                 	db	60
  5808                           
  5809                           ; Padding undefined space
  5810  300004                     	org	3145732
  5811  300004  FF                 	db	255
  5812                           
  5813                           ;Config register CONFIG3H @ 0x300005
  5814                           ;	CCP2 MUX bit
  5815                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5816                           ;	PORTB A/D Enable bit
  5817                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  5818                           ;	P3A/CCP3 Mux bit
  5819                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  5820                           ;	HFINTOSC Fast Start-up
  5821                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  5822                           ;	Timer3 Clock input mux bit
  5823                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5824                           ;	ECCP2 B output mux bit
  5825                           ;	P2BMX = PORTB5, P2B is on RB5
  5826                           ;	MCLR Pin Enable bit
  5827                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5828  300005                     	org	3145733
  5829  300005  BF                 	db	191
  5830                           
  5831                           ;Config register CONFIG4L @ 0x300006
  5832                           ;	Stack Full/Underflow Reset Enable bit
  5833                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5834                           ;	Single-Supply ICSP Enable bit
  5835                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  5836                           ;	Extended Instruction Set Enable bit
  5837                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5838                           ;	Background Debug
  5839                           ;	DEBUG = OFF, Disabled
  5840  300006                     	org	3145734
  5841  300006  85                 	db	133
  5842                           
  5843                           ; Padding undefined space
  5844  300007                     	org	3145735
  5845  300007  FF                 	db	255
  5846                           
  5847                           ;Config register CONFIG5L @ 0x300008
  5848                           ;	Code Protection Block 0
  5849                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5850                           ;	Code Protection Block 1
  5851                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5852                           ;	Code Protection Block 2
  5853                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5854                           ;	Code Protection Block 3
  5855                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5856  300008                     	org	3145736
  5857  300008  0F                 	db	15
  5858                           
  5859                           ;Config register CONFIG5H @ 0x300009
  5860                           ;	Boot Block Code Protection bit
  5861                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5862                           ;	Data EEPROM Code Protection bit
  5863                           ;	CPD = OFF, Data EEPROM not code-protected
  5864  300009                     	org	3145737
  5865  300009  C0                 	db	192
  5866                           
  5867                           ;Config register CONFIG6L @ 0x30000A
  5868                           ;	Write Protection Block 0
  5869                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5870                           ;	Write Protection Block 1
  5871                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5872                           ;	Write Protection Block 2
  5873                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5874                           ;	Write Protection Block 3
  5875                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5876  30000A                     	org	3145738
  5877  30000A  0F                 	db	15
  5878                           
  5879                           ;Config register CONFIG6H @ 0x30000B
  5880                           ;	Configuration Register Write Protection bit
  5881                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5882                           ;	Boot Block Write Protection bit
  5883                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5884                           ;	Data EEPROM Write Protection bit
  5885                           ;	WRTD = OFF, Data EEPROM not write-protected
  5886  30000B                     	org	3145739
  5887  30000B  E0                 	db	224
  5888                           
  5889                           ;Config register CONFIG7L @ 0x30000C
  5890                           ;	Table Read Protection Block 0
  5891                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5892                           ;	Table Read Protection Block 1
  5893                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5894                           ;	Table Read Protection Block 2
  5895                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5896                           ;	Table Read Protection Block 3
  5897                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5898  30000C                     	org	3145740
  5899  30000C  0F                 	db	15
  5900                           
  5901                           ;Config register CONFIG7H @ 0x30000D
  5902                           ;	Boot Block Table Read Protection bit
  5903                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5904  30000D                     	org	3145741
  5905  30000D  40                 	db	64
  5906                           tosu	equ	0xFFF
  5907                           tosh	equ	0xFFE
  5908                           tosl	equ	0xFFD
  5909                           stkptr	equ	0xFFC
  5910                           pclatu	equ	0xFFB
  5911                           pclath	equ	0xFFA
  5912                           pcl	equ	0xFF9
  5913                           tblptru	equ	0xFF8
  5914                           tblptrh	equ	0xFF7
  5915                           tblptrl	equ	0xFF6
  5916                           tablat	equ	0xFF5
  5917                           prodh	equ	0xFF4
  5918                           prodl	equ	0xFF3
  5919                           indf0	equ	0xFEF
  5920                           postinc0	equ	0xFEE
  5921                           postdec0	equ	0xFED
  5922                           preinc0	equ	0xFEC
  5923                           plusw0	equ	0xFEB
  5924                           fsr0h	equ	0xFEA
  5925                           fsr0l	equ	0xFE9
  5926                           wreg	equ	0xFE8
  5927                           indf1	equ	0xFE7
  5928                           postinc1	equ	0xFE6
  5929                           postdec1	equ	0xFE5
  5930                           preinc1	equ	0xFE4
  5931                           plusw1	equ	0xFE3
  5932                           fsr1h	equ	0xFE2
  5933                           fsr1l	equ	0xFE1
  5934                           bsr	equ	0xFE0
  5935                           indf2	equ	0xFDF
  5936                           postinc2	equ	0xFDE
  5937                           postdec2	equ	0xFDD
  5938                           preinc2	equ	0xFDC
  5939                           plusw2	equ	0xFDB
  5940                           fsr2h	equ	0xFDA
  5941                           fsr2l	equ	0xFD9
  5942                           status	equ	0xFD8

Data Sizes:
    Strings     529
    Constant    0
    Data        2
    BSS         314
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      75
    BANK0           160     77     115
    BANK1           256    147     150
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1335_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_28(CODE[17]), STR_27(CODE[23]), STR_26(CODE[24]), STR_25(CODE[24]), 
		 -> STR_24(CODE[24]), STR_23(CODE[3]), STR_22(CODE[2]), STR_21(CODE[6]), 
		 -> STR_20(CODE[33]), STR_19(CODE[72]), STR_18(CODE[43]), STR_17(CODE[24]), 
		 -> STR_16(CODE[21]), STR_15(CODE[7]), STR_14(CODE[15]), STR_13(CODE[33]), 
		 -> STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), STR_9(CODE[4]), 
		 -> STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[53]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 72
		 -> STR_28(CODE[17]), STR_27(CODE[23]), STR_26(CODE[24]), STR_25(CODE[24]), 
		 -> STR_24(CODE[24]), STR_23(CODE[3]), STR_22(CODE[2]), STR_21(CODE[6]), 
		 -> STR_20(CODE[33]), STR_19(CODE[72]), STR_18(CODE[43]), STR_17(CODE[24]), 
		 -> STR_16(CODE[21]), STR_15(CODE[7]), STR_14(CODE[15]), STR_13(CODE[33]), 
		 -> STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), STR_9(CODE[4]), 
		 -> STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[53]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_28(CODE[17]), STR_27(CODE[23]), STR_26(CODE[24]), STR_25(CODE[24]), 
		 -> STR_24(CODE[24]), STR_23(CODE[3]), STR_22(CODE[2]), STR_21(CODE[6]), 
		 -> STR_20(CODE[33]), STR_19(CODE[72]), STR_18(CODE[43]), STR_17(CODE[24]), 
		 -> STR_16(CODE[21]), STR_15(CODE[7]), STR_14(CODE[15]), STR_13(CODE[33]), 
		 -> STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), STR_9(CODE[4]), 
		 -> STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[53]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), myTMR0ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), myTMR0ISR(), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               159   159      0   15270
                                             65 BANK0     12    12      0
                                              0 BANK1    147   147      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                            ___lwdiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   12340
                                             53 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9733
                                             45 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    9251
                                             28 BANK0     17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5464
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3577
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1669
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1623
                                             30 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1268
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                             20 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     449
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             21 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     228
                                             15 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     228
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           5     5      0     228
                                             10 COMRAM     5     5      0
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (13) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   ___lwdiv
   ___wmul
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     93      96       7       58.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4D      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      4B       1       79.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     254      12        0.0%
DATA                 0      0     254       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Oct 20 11:22:24 2020

                                            l35 0064                                              l45 0130  
                                            l62 049A                                              l38 00BC  
                           ___wmul@multiplicand 0016                                 _timer0ReloadVal 0043  
                           myTMR0ISR@micReading 000F                                             l115 142C  
                                           l212 1522                                             l300 14FA  
                                           l151 154A                                             l303 150C  
                                           l321 1568                                             l161 1554  
                                           l139 13CA                                             l324 155E  
                                           l309 1540                                             l190 14CE  
                                           l327 1572                                             l336 1580  
                                           l193 14DC                                             l346 14A2  
                                           l187 14F6                                             l284 1536  
                                           l276 135E                                             l460 0CDC  
                                           l293 1456                                             l297 147C  
                                           l473 0E40                                             l844 11E6  
                                           l837 11DE                                             u900 1388  
                                           u901 1384                                             u910 0B68  
                                           u911 0B64                                             u840 1508  
                                           u920 0B9A                                             u841 1504  
                                           u921 0B96                                             u850 10F0  
                                           u851 10EC                                             u931 0BC4  
                                           u860 1102                                             u940 0BE8  
                                           u861 10FE                                             u941 0BE4  
                                           u870 112A                                             u950 0C12  
                                           u871 1126                                             u951 0C0E  
                                           u880 1160                                             u960 0C52  
                                           u881 115C                                             u961 0C4E  
                                           u970 0C9C                                             u890 12E0  
                                           u971 0C98                                             u891 12DC  
                                           u980 0CF0                                             u981 0CEC  
                                           u990 0D22                                             u991 0D1E  
                                           _abs 12E2                                             _pad 101C  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1103 0B54  
                                          l1120 1320                                            l2000 10B0  
                                          l1112 1242                                            l1024 1454  
                                          l1113 124A                                            l2010 0F48  
                                          l2002 10C4                                            l1051 1060  
                                          ?_abs 0026                                            l2100 154C  
                                          l1132 1172                                            l2020 0F92  
                                          l2012 0F5A                                            l1140 12E0  
                                          l1117 1318                                            l2110 1560  
                                          l1070 0FEE                                            l2030 0FD0  
                                          l2014 0F66                                            l2006 12E2  
                                          l1054 10A2                                            l2112 1556  
                                          l1072 101A                                            l2032 0FFC  
                                          l2024 0FA4                                            l2016 0F72  
                                          l2008 12FC                                            l1056 10DC  
                                          l1080 06E4                                            l2114 156A  
                                          l2210 1396                                            l2034 100E  
                                          l2026 0FB8                                            l2018 0F80  
                                          l1146 1394                                            l1067 0FAC  
                                          l2204 1402                                            l2220 13BA  
                                          l2212 1398                                            l2028 0FCC  
                                          l2230 1322                                            l2206 1412  
                                          l2222 13C6                                            l2214 13A0  
                                          l2310 119E                                            l2302 1174  
                                          l1078 06DC                                            l2232 1336  
                                          l2224 157E                                            l2208 142A  
                                          l2216 13B6                                            l2320 11D2  
                                          l2312 11AC                                            l2304 117C  
                                          l2234 1342                                            l2226 14C2  
                                          l2218 13B8                                            l2250 14E2  
                                          l2322 11D8                                            l2314 11B2  
                                          l2306 118E                                            l1098 091C  
                                          l2228 150E                                            l2236 134E  
                                          l2252 14E6                                            l2260 1542  
                                          l2316 11C8                                            l2308 1196  
                                          l2270 1524                                            l2238 135A  
                                          l2254 14EA                                            l2262 1546  
                                          l2318 11D0                                            l2280 1476  
                                          l2256 14EE                                            l2248 14DE  
                                          l2600 0952                                            l2282 147A  
                                          l2274 1456                                            l2258 14F2  
                                          l2602 0962                                            l2276 1464  
                                          l1900 1388                                            l2540 06A6  
                                          l2612 09DC                                            l2604 0966  
                                          l2700 015E                                            l2278 1468  
                                          l1910 0B88                                            l2550 06FE  
                                          l2542 06B4                                            l2534 063C  
                                          l2622 0AAA                                            l2614 0A02  
                                          l2606 098C                                            l2702 016E  
                                          l2296 147E                                            l1920 0BCA  
                                          l1912 0B8C                                            l1904 0B56  
                                          l2560 0728                                            l2552 070C  
                                          l2544 06B6                                            l2536 065C  
                                          l2640 0B42                                            l2624 0AD0  
                                          l2632 0B00                                            l2616 0A28  
                                          l2608 09C0                                            l2720 01DA  
                                          l2712 018E                                            l2704 017C  
                                          l2298 149A                                            l1930 0C24  
                                          l1922 0BE8                                            l1914 0B9A  
                                          l1906 0B5A                                            l2570 0838  
                                          l2562 07AA                                            l2554 0712  
                                          l2546 06D0                                            l2538 0686  
                                          l2634 0B0E                                            l2626 0ADE  
                                          l2618 0A72                                            l2650 11FE  
                                          l2802 05E4                                            l2730 0228  
                                          l2722 01DE                                            l2714 01AA  
                                          l2706 0186                                            l1932 0C52  
                                          l1924 0BF0                                            l1940 0C8C  
                                          l1916 0BBA                                            l1908 0B68  
                                          l2580 08AA                                            l2572 0856  
                                          l2564 07B2                                            l2556 071A  
                                          l2548 06EC                                            l2628 0AF2  
                                          l2652 1224                                            l2740 0308  
                                          l2732 023E                                            l2724 01EE  
                                          l2716 01C6                                            l2660 0052  
                                          l1870 153A                                            l1942 0C9C  
                                          l1934 0C72                                            l1926 0C04  
                                          l1918 0BBE                                            l1950 0CE2  
                                          l2590 08E4                                            l2582 08B8  
                                          l2574 0870                                            l2566 07B8  
                                          l2558 0722                                            l2638 0B1C  
                                          l2646 11E8                                            l2654 142E  
                                          l2750 03AE                                            l2742 035C  
                                          l2734 0254                                            l2726 01FA  
                                          l2718 01D6                                            l2670 0080  
                                          l2662 0056                                            l1880 112A  
                                          l1872 10DE                                            l1944 0CBC  
                                          l1936 0C74                                            l1928 0C12  
                                          l1960 0D42                                            l1952 0CF0  
                                          l2584 08BE                                            l2592 08F4  
                                          l2576 088A                                            l2568 081C  
                                          l2648 11F0                                            l2656 1438  
                                          l2760 0466                                            l2744 0360  
                                          l2736 025E                                            l2728 0222  
                                          l2752 03C4                                            l2680 00BA  
                                          l2672 0082                                            l2664 0062  
                                          l1866 14FA                                            l1882 1160  
                                          l1874 10F0                                            l1938 0C86  
                                          l1970 0DB8                                            l1962 0D60  
                                          l1954 0D10                                            l1890 12BC  
                                          l2586 08D0                                            l2578 0898  
                                          l2770 0484                                            l2754 03D8  
                                          l2746 0376                                            l2738 026A  
                                          l2682 00CA                                            l2674 0090  
                                          l2666 0072                                            l1868 1508  
                                          l1876 1102                                            l1980 0E20  
                                          l1972 0DD8                                            l1964 0D68  
                                          l1956 0D14                                            l1948 0CDE  
                                          l1892 12C0                                            l2588 08DC  
                                          l2596 091E                                            l2860 05FA  
                                          l2780 04B8                                            l2772 04A0  
                                          l2756 03E4                                            l2748 0392  
                                          l2684 00DC                                            l2676 009E  
                                          l2668 007E                                            l1878 110C  
                                          l1974 0DEA                                            l1966 0D7C  
                                          l1958 0D22                                            l1886 129E  
                                          l1894 1360                                            l1990 104C  
                                          l2598 0944                                            l2790 0534  
                                          l2782 04BE                                            l2766 0470  
                                          l2758 0456                                            l2694 00F8  
                                          l2686 00E0                                            l2678 00AC  
                                          ?_pad 0026                                            l1968 0D8A  
                                          l1976 0DF0                                            l1888 12AA  
                                          l1896 136C                                            l1992 1058  
                                          l1984 101C                                            l2792 053C  
                                          l2784 04D8                                            l2768 047E  
                                          l2696 011C                                            l2688 00EE  
                                          l1978 0E00                                            l1898 1370  
                                          l1994 106C                                            l1986 102A  
                                          l2794 057A                                            l2786 04E2  
                                          l2778 04AA                                            l2698 0158  
                                          l1996 1080                                            l1988 103E  
                                          l2796 05C6                                            l2788 0520  
                                          l1998 1084                                            l2798 05CE  
                                          STR_1 FFCD                                            STR_2 FF29  
                                          STR_3 FFD8                                            STR_4 FFFB  
                                          STR_5 FE35                                            STR_6 FFE1  
                                          STR_7 FFF7                                            STR_8 FE6A  
                                          STR_9 FFF7                                            u1000 0D60  
                                          u1001 0D5C                                            u1010 0D8A  
                                          u1011 0D86                                            u1100 0F80  
                                          u1020 0DB8                                            u1101 0F7C  
                                          u1021 0DB4                                            u1110 0FA0  
                                          u1030 0E00                                            u1111 0F9C  
                                          u1031 0DFC                                            u1120 0FEE  
                                          u1040 102A                                            u1121 0FEA  
                                          u1041 1026                                            u1130 0FFC  
                                          u1050 104C                                            u1131 0FF8  
                                          u1051 1048                                            u1060 10A2  
                                          u1061 109E                                            u1070 10B0  
                                          u1071 10AC                                            u1400 1534  
                                          u1080 12FC                                            u1401 152E  
                                          u1081 12F8                                            u1410 1464  
                                          u1090 0F5A                                            u1411 1460  
                                          u1091 0F56                                            u1420 1476  
                                          u1421 1472                                            _LATA 000F89  
                                          u1406 1536                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u1450 118E  
                                          u1451 118A                                            u1380 14DC  
                                          u1460 11AC                                            u1700 070C  
                                          u1381 14D8                                            u1461 11A8  
                                          u1701 0708                                            u1470 11C8  
                                          u1710 0838                                            u1471 11C4  
                                          u1711 0834                                            u1720 0856  
                                          u1640 066E                                            u1800 098C  
                                          u1721 0852                                            u1641 0668  
                                          u1801 0988                                            u1730 0870  
                                          u1650 0670                                            u1810 0A02  
                                          u1731 086C                                            u1811 09FE  
                                          u1740 088A                                            u1660 0686  
                                          u1820 0A28                                            u1900 01AA  
                                          u1741 0886                                            u1661 0682  
                                          u1821 0A24                                            u1901 01A6  
                                          u1750 0898                                            u1670 06B4  
                                          u1830 0AD0                                            u1910 01C6  
                                          u1751 0894                                            u1671 06B0  
                                          u1831 0ACC                                            u1911 01C2  
                                          u1760 08AA                                            u1680 06D0  
                                          u1840 1242                                            u1920 01EE  
                                          u1761 08A6                                            u1681 06CC  
                                          u1841 123E                                            u1921 01EA  
                                          u1770 08B8                                            u1690 06FE  
                                          u1930 023E                                            u1850 0072  
                                          u1771 08B4                                            u1691 06FA  
                                          u1931 023A                                            u1851 006E  
                                          u1780 08D0                                            u1940 0376  
                                          u1860 00CA                                            u1781 08CC  
                                          u1941 0372                                            u1861 00C6  
                                          u1790 0944                                            u1950 03D8  
                                          u1870 00DC                                            u1791 0940  
                                          u1951 03D4                                            u1871 00D8  
                                          u1960 049A                                            u1880 011C  
                                          u1961 0496                                            u1881 0118  
                                          u1970 04D4                                            u1890 016E  
                                          u1971 04D0                                            u1891 016A  
                                          u1980 0534                                            u1981 0530  
                                          i2l88 0F46                                            _WPUB 000F61  
                                 _EUSART1_Write 14F8                                            abs@a 0026  
                                          _dbuf 00B3                                            _ctoa 0F48  
                                          _main 0052                                            _dtoa 063C  
                                 ?_EUSART1_Read 0001                                            _prec 003B  
                                          _nout 00AD                                            pad@i 002D  
                                          pad@p 002A                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002F  
                                          fsr2l 000FD9                                            btemp 004C  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 004E                                    ___param_bank 000000  
                                         ??_abs 0028                                           ??_pad 002C  
                       __end_of_TMR0_Initialize 13CC                  ??_TMR0_DefaultInterruptHandler 0001  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 14DE  
                               __end_of___aodiv 0CDE                                           ?_ctoa 001F  
                                         ?_main 0001                                           ?_dtoa 0060  
                               __end_of___aomod 0E42                                           STR_10 FECA  
                                         STR_11 FFAF                                           STR_20 FEED  
                                         STR_12 FF0E                                           STR_21 FFF1  
                                         STR_13 FEED                                           STR_22 FE68  
                                         STR_14 FFBE                                           STR_23 FFF4  
                                         STR_15 FFEA                                           STR_16 FF89  
                                         STR_24 FF42                                           STR_25 FF42  
                                         STR_17 FF5A                                           STR_26 FF42  
                                         STR_18 FE9F                                           STR_27 FF72  
                                         STR_19 FDED                                           STR_28 FF9E  
                     TMR0_ReadTimer@readValHigh 0008                                           _T0CON 000FD5  
                               __end_of___lwdiv 11E8                                           i2l151 157C  
                                         i2l148 14C0                                           i2l164 1584  
                               _TMR0_WriteTimer 1542                                           i2l158 1400  
                                         i2l343 003A                                    vfpfcnvrt@fmt 007E  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94               __size_of_TMR0_SetInterruptHandler 000A  
                     ?_TMR0_SetInterruptHandler 0014                                __end_of_TMR0_ISR 1402  
                                         _flags 003D                                           _fputc 10DE  
                                         _fputs 129E                                           pad@fp 0026  
                                         _width 0039                                           ctoa@c 0021  
                                         _putch 1538                                           ctoa@l 0023  
                                         ctoa@w 0025                                           main@i 0189  
                                         dtoa@d 0062                                           dtoa@i 007A  
                                         dtoa@n 0072                                           dtoa@p 006C  
                                         dtoa@s 0070                                           dtoa@w 006E  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         tablat 000FF5                                  ??_EUSART1_Read 0014  
                                         ttemp5 004D                                           ttemp6 0050  
                                         ttemp7 0054                                           status 000FD8  
                                         wtemp8 004D              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 124C                                    __end_of_ctoa 101C  
                    __end_of_EUSART1_Initialize 1360                                    __end_of_main 063C  
                                  __end_of_dtoa 091E                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_ctoa 0022                                          ??_main 00A1  
                                        ??_dtoa 0031                                   main@avgPeriod 0180  
                                 __activetblptr 000003                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0016                                          ?_fputs 001F  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l2102 14A4  
                                        i2l2104 14AC                                          i2l2106 14B8  
                                        i2l2170 0E42                                          i2l2180 0EC6  
                                        i2l2172 0E4C                                          i2l2166 1574  
                                        i2l2190 0EF6                                          i2l2182 0ED6  
                                        i2l2174 0E5C                                          i2l2168 1578  
                                        i2l2192 0F06                                          i2l2184 0EDA  
                                        i2l2176 0E70                                          i2l2186 0EE2  
                                        i2l2178 0E9A                                          i2l2290 13D2  
                                        i2l2188 0EF2                                          i2l2292 13D6  
                                        i2l2198 0F14                                          i2l2294 13E8  
                                        i2l2286 13CC                                          i2l2288 13CE  
                                        i2l2480 0028                                          i2l2482 0036  
                                        i2l2478 001A                                          i2l2862 0F28  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 main@crossings 0100                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                  vfprintf@cfmt 0093                                       ??___aodiv 0024  
                                     ??___aomod 0024                                          ___wmul 147E  
                                 main@periodSum 0184                         __end_of_TMR0_WriteTimer 154C  
                                     ??___lwdiv 0018                       i2TMR0_WriteTimer@timerVal 0009  
                      ?_EUSART1_SetErrorHandler 0014                                ?_TMR0_Initialize 0001  
                                        clear_0 126C                                          clear_1 1282  
                                        clear_2 128E                                          _printf 142E  
                                        pad@buf 0028                ??_EUSART1_SetOverrunErrorHandler 0016  
               ?_EUSART1_SetOverrunErrorHandler 0014                                          ctoa@fp 001F  
                                        dtoa@fp 0060                                          _strlen 1360  
                                        fputc@c 0016                                          fputs@c 0023  
                                        fputs@i 0024                                          fputs@s 001F  
                                  __mediumconst FDEC                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 124C                                 ??_EUSART1_Write 0014  
      TMR0_SetInterruptHandler@InterruptHandler 0014                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 14DE                                      __accesstop 0060  
                       __end_of__initialization 1294                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0001  
                                  __pidataBANK1 1582                             ??_SYSTEM_Initialize 0018  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 1174  
                                 __end_of_fputs 12E2                                   __end_of_putch 1542  
                       __size_of_TMR0_ReadTimer 001E                            __end_of_EUSART1_Read 147E  
                                       ??_fputc 001A                       __end_of_SYSTEM_Initialize 14F8  
                                       ??_fputs 0023                              __size_of_myTMR0ISR 0106  
                                       ??_putch 0015                                      __pbssBANK0 00AD  
                                    __pbssBANK1 0195                                      __pbssBANK2 0200  
               __end_of_EUSART1_SetErrorHandler 1574                __end_of_TMR0_SetInterruptHandler 1556  
                                       ?___wmul 0014                                      ??_TMR0_ISR 0010  
                              ?_TMR0_WriteTimer 0014                                      _fillBuffer 004B  
                                       ?_printf 0095                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 0014          __end_of_EUSART1_SetFramingErrorHandler 156A  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 1560  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0238  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                          _ADC_InterruptHandler 0041                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 0B56  
                                       ___aomod 0CDE                                 __size_of___wmul 0026  
                                       ___lwdiv 1174                               __end_of_myTMR0ISR 0F48  
                                     ?_vfprintf 008D                             _EUSART1_is_rx_ready 1524  
                                       __pcinit 124C                                         __ramtop 1000  
                                       __ptext0 0052                                         __ptext1 142E  
                                       __ptext2 11E8                                         __ptext3 091E  
                                       __ptext4 063C                                         __ptext5 101C  
                                       __ptext6 1360                                         __ptext7 129E  
                                       __ptext8 12E2                                         __ptext9 0CDE  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 14C2  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                            _EUSART1_Initialize 1322                        ??_PIN_MANAGER_Initialize 0014  
                                       main@cmd 0186                      __size_of_SYSTEM_Initialize 001A  
                          end_of_initialization 1294                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0018  
                   _EUSART1_OverrunErrorHandler 00B1                                         fputs@fp 0021  
                             __end_of_vfpfcnvrt 0B56                           TMR0_ReadTimer@readVal 0005  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0028  
                                    ??_vfprintf 0039                                  _TMR0_ReadTimer 14A4  
                          ??_EUSART1_Initialize 0016                                         strlen@a 0016  
                                       strlen@s 0014                                      _timerState 004A  
                      _TMR0_SetInterruptHandler 154C                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0014                           ??_EUSART1_is_rx_ready 0014  
                                  _EUSART1_Read 1456                          __end_of_TMR0_ReadTimer 14C2  
                  __end_of_INTERRUPT_Initialize 1582                                     vfpfcnvrt@ap 0080  
                                   vfpfcnvrt@fp 007C                                     vfpfcnvrt@ll 0084  
                                __end_of___wmul 14A4                               __size_of_TMR0_ISR 0036  
                                _ADC_Initialize 150E                                     _adc_reading 0200  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 1456  
                                __end_of_strlen 1396                             start_initialization 124C  
                      __size_of_TMR0_Initialize 0036                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 1322                                     __end_of_pad 10DE  
                                   putch@txData 0015                           __end_of_EUSART1_Write 150E  
                                   vfprintf@fmt 008F                                 ?_TMR0_ReadTimer 0001  
                                      ??___wmul 0018                          __end_of_ADC_Initialize 1524  
                                   __pdataBANK1 0193                                 main@avgPeriodUs 0182  
                                      ??_printf 0039                                        ??_strlen 0016  
                                   __pbssCOMRAM 0039                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                ___aodiv@dividend 0014  
              ??_EUSART1_SetFramingErrorHandler 0016                 ?_EUSART1_SetFramingErrorHandler 0014  
                         _TMR0_InterruptHandler 0045                                ___lwdiv@dividend 0014  
                        _PIN_MANAGER_Initialize 1402                                       _dtoa$1404 006A  
                                     __pintcode 0008                                   __pmediumconst FDEC  
                                      ?___aodiv 0014                                        ?___aomod 0014  
                              ___aodiv@quotient 0026                                        ?___lwdiv 0014  
                               ?_ADC_Initialize 0001                                       _bufferIdx 0047  
                  ??_INTERRUPT_InterruptManager 0010                               __size_of_vfprintf 0064  
                                     _myTMR0ISR 0E42                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 00AF                         _EUSART1_SetErrorHandler 156A  
                              ___lwdiv@quotient 0018                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 157E                               ??_TMR0_Initialize 0016  
                                ___wmul@product 0018         EUSART1_SetErrorHandler@interruptHandler 0014  
                                      i2u134_40 0E5C                                        i2u134_41 0E58  
                                      i2u135_40 0E9A                                        i2u143_40 13E8  
                                      i2u135_41 0E96                                        i2u143_41 13E4  
           __size_of_INTERRUPT_InterruptManager 0046                                        i2u136_40 0EC6  
                                      i2u136_41 0EC2                                        i2u137_40 0F06  
                                      i2u144_48 13EE                                        i2u137_41 0F02  
                                      i2u144_49 1400                                        i2u162_40 0028  
                                      i2u162_41 0024                                        i2u163_40 0036  
                                      i2u163_41 0032                      ??_TMR0_SetInterruptHandler 0016  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                                      _TMR0_ISR 13CC                                       _vfpfcnvrt 091E  
                      TMR0_ReadTimer@readValLow 0007                                      _ADCON0bits 000FC2  
                                     main@i_224 018F                                       main@i_225 0187  
                                     main@i_218 018B                                       main@i_229 0191  
                             ___wmul@multiplier 0014                                      ?_myTMR0ISR 0001  
                                     main@crIdx 018D                               i2_TMR0_WriteTimer 1574  
                                    vfpfcnvrt@c 008C                              ?i2_TMR0_WriteTimer 0009  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 0091                                        __Lrparam 0000  
                                    vfprintf@fp 008D                         ??_OSCILLATOR_Initialize 0014  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                   __size_of_EUSART1_Initialize 003E                                      ?_vfpfcnvrt 007C  
                              __size_of___lwdiv 0074                                 ___aodiv@divisor 001C  
                               ___aodiv@counter 0024                       __end_ofi2_TMR0_WriteTimer 157E  
                     ??_EUSART1_SetErrorHandler 0016                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 1538                                 ___lwdiv@divisor 0016  
                               ___lwdiv@counter 001A                                        __ptext10 0B56  
                                      __ptext11 0F48                                        __ptext20 154C  
                                      __ptext12 10DE                                        __ptext21 1402  
                                      __ptext13 1538                                        __ptext30 1456  
                                      __ptext22 14C2                                        __ptext14 14F8  
                                      __ptext23 157E                                        __ptext15 147E  
                                      __ptext32 13CC                                        __ptext24 1322  
                                      __ptext16 1174                                        __ptext33 1584  
                                      __ptext25 1556                                        __ptext17 1542  
                                      __ptext34 0E42                                        __ptext26 1560  
                                      __ptext18 14DE                                        __ptext35 1574  
                                      __ptext27 156A                                        __ptext19 1396  
                                      __ptext36 14A4                                        __ptext28 150E  
                                      __ptext37 0000                                        __ptext29 1524  
                       TMR0_WriteTimer@timerVal 0014                               ??_TMR0_WriteTimer 0016  
                                 __size_of_ctoa 00D4                                   __size_of_main 05EA  
                                 __size_of_dtoa 02E2                                ??_TMR0_ReadTimer 0003  
          __end_of_TMR0_DefaultInterruptHandler 1586           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 1584  EUSART1_SetOverrunErrorHandler@interruptHandler 0014  
                                      int$flags 004C                                        _vfprintf 11E8  
            __end_of_INTERRUPT_InterruptManager 004E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 0095                     _EUSART1_FramingErrorHandler 003F  
                              ___aomod@dividend 0014                                     ??_myTMR0ISR 000B  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 0014  
                                      intlevel2 0000                                _samplesCollected 0195  
                                _thresholdRange 0193                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1560         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1556                                      _RCSTA1bits 000FAB  
                              ??_ADC_Initialize 0014                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 009F  
EUSART1_SetFramingErrorHandler@interruptHandler 0014                                 ___aomod@divisor 001C  
                                   ??_vfpfcnvrt 0082                                 ___aomod@counter 0024  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 0049  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 1396  
                                  ___aodiv@sign 0025                  __end_of_PIN_MANAGER_Initialize 142E  
                                  ___aomod@sign 0025                                    fp__myTMR0ISR 0000  
