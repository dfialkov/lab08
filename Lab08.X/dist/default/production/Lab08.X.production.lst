

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Oct 20 09:40:31 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 05/05/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F26K22 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    93  0000                     
    94 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    95  0000                     
    96 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    97  0000                     
    98                           	psect	idataBANK0
    99  0012CC                     __pidataBANK0:
   100                           	callstack 0
   101                           
   102                           ;initializer for _thresholdRange
   103  0012CC  000A               	dw	10
   104  0000                     _ANSELA	set	3896
   105  0000                     _ANSELB	set	3897
   106  0000                     _ANSELC	set	3898
   107  0000                     _RCONbits	set	4048
   108  0000                     _TXREG1	set	4013
   109  0000                     _RCREG1	set	4014
   110  0000                     _RCSTA1bits	set	4011
   111  0000                     _TXSTA1bits	set	4012
   112  0000                     _PIR1bits	set	3998
   113  0000                     _SPBRGH1	set	4016
   114  0000                     _SPBRG1	set	4015
   115  0000                     _TXSTA1	set	4012
   116  0000                     _RCSTA1	set	4011
   117  0000                     _BAUDCON1	set	4024
   118  0000                     _ADCON0	set	4034
   119  0000                     _ADRESL	set	4035
   120  0000                     _ADCON2	set	4032
   121  0000                     _ADCON1	set	4033
   122  0000                     _OSCTUNE	set	3995
   123  0000                     _OSCCON2	set	4050
   124  0000                     _OSCCON	set	4051
   125  0000                     _T0CON	set	4053
   126  0000                     _TMR0L	set	4054
   127  0000                     _TMR0H	set	4055
   128  0000                     _T0CONbits	set	4053
   129  0000                     _INTCON2bits	set	4081
   130  0000                     _WPUB	set	3937
   131  0000                     _TRISC	set	3988
   132  0000                     _TRISB	set	3987
   133  0000                     _TRISA	set	3986
   134  0000                     _LATC	set	3979
   135  0000                     _LATB	set	3978
   136  0000                     _LATA	set	3977
   137  0000                     _ADRESH	set	4036
   138  0000                     _ADCON0bits	set	4034
   139  0000                     _INTCONbits	set	4082
   140  0000                     _PLLRDY	set	32407
   141                           
   142                           	psect	mediumconst
   143  00FE3A                     __pmediumconst:
   144                           	callstack 0
   145  00FE3A  00                 	db	0
   146  00FE3B                     STR_16:
   147  00FE3B  66                 	db	102	;'f'
   148  00FE3C  3A                 	db	58	;':'
   149  00FE3D  20                 	db	32
   150  00FE3E  67                 	db	103	;'g'
   151  00FE3F  61                 	db	97	;'a'
   152  00FE40  74                 	db	116	;'t'
   153  00FE41  68                 	db	104	;'h'
   154  00FE42  65                 	db	101	;'e'
   155  00FE43  72                 	db	114	;'r'
   156  00FE44  20                 	db	32
   157  00FE45  35                 	db	53	;'5'
   158  00FE46  31                 	db	49	;'1'
   159  00FE47  32                 	db	50	;'2'
   160  00FE48  20                 	db	32
   161  00FE49  73                 	db	115	;'s'
   162  00FE4A  61                 	db	97	;'a'
   163  00FE4B  6D                 	db	109	;'m'
   164  00FE4C  70                 	db	112	;'p'
   165  00FE4D  6C                 	db	108	;'l'
   166  00FE4E  65                 	db	101	;'e'
   167  00FE4F  73                 	db	115	;'s'
   168  00FE50  20                 	db	32
   169  00FE51  66                 	db	102	;'f'
   170  00FE52  72                 	db	114	;'r'
   171  00FE53  6F                 	db	111	;'o'
   172  00FE54  6D                 	db	109	;'m'
   173  00FE55  20                 	db	32
   174  00FE56  74                 	db	116	;'t'
   175  00FE57  68                 	db	104	;'h'
   176  00FE58  65                 	db	101	;'e'
   177  00FE59  20                 	db	32
   178  00FE5A  6D                 	db	109	;'m'
   179  00FE5B  69                 	db	105	;'i'
   180  00FE5C  63                 	db	99	;'c'
   181  00FE5D  72                 	db	114	;'r'
   182  00FE5E  6F                 	db	111	;'o'
   183  00FE5F  70                 	db	112	;'p'
   184  00FE60  68                 	db	104	;'h'
   185  00FE61  6F                 	db	111	;'o'
   186  00FE62  6E                 	db	110	;'n'
   187  00FE63  65                 	db	101	;'e'
   188  00FE64  20                 	db	32
   189  00FE65  61                 	db	97	;'a'
   190  00FE66  6E                 	db	110	;'n'
   191  00FE67  64                 	db	100	;'d'
   192  00FE68  20                 	db	32
   193  00FE69  63                 	db	99	;'c'
   194  00FE6A  61                 	db	97	;'a'
   195  00FE6B  6C                 	db	108	;'l'
   196  00FE6C  63                 	db	99	;'c'
   197  00FE6D  75                 	db	117	;'u'
   198  00FE6E  6C                 	db	108	;'l'
   199  00FE6F  61                 	db	97	;'a'
   200  00FE70  74                 	db	116	;'t'
   201  00FE71  65                 	db	101	;'e'
   202  00FE72  20                 	db	32
   203  00FE73  74                 	db	116	;'t'
   204  00FE74  68                 	db	104	;'h'
   205  00FE75  65                 	db	101	;'e'
   206  00FE76  20                 	db	32
   207  00FE77  66                 	db	102	;'f'
   208  00FE78  72                 	db	114	;'r'
   209  00FE79  65                 	db	101	;'e'
   210  00FE7A  71                 	db	113	;'q'
   211  00FE7B  75                 	db	117	;'u'
   212  00FE7C  65                 	db	101	;'e'
   213  00FE7D  6E                 	db	110	;'n'
   214  00FE7E  63                 	db	99	;'c'
   215  00FE7F  79                 	db	121	;'y'
   216  00FE80  0D                 	db	13
   217  00FE81  0A                 	db	10
   218  00FE82  00                 	db	0
   219  00FE83                     STR_5:
   220  00FE83  54                 	db	84	;'T'
   221  00FE84  68                 	db	104	;'h'
   222  00FE85  65                 	db	101	;'e'
   223  00FE86  20                 	db	32
   224  00FE87  6C                 	db	108	;'l'
   225  00FE88  61                 	db	97	;'a'
   226  00FE89  73                 	db	115	;'s'
   227  00FE8A  74                 	db	116	;'t'
   228  00FE8B  20                 	db	32
   229  00FE8C  32                 	db	50	;'2'
   230  00FE8D  35                 	db	53	;'5'
   231  00FE8E  36                 	db	54	;'6'
   232  00FE8F  20                 	db	32
   233  00FE90  41                 	db	65	;'A'
   234  00FE91  44                 	db	68	;'D'
   235  00FE92  43                 	db	67	;'C'
   236  00FE93  20                 	db	32
   237  00FE94  73                 	db	115	;'s'
   238  00FE95  61                 	db	97	;'a'
   239  00FE96  6D                 	db	109	;'m'
   240  00FE97  70                 	db	112	;'p'
   241  00FE98  6C                 	db	108	;'l'
   242  00FE99  65                 	db	101	;'e'
   243  00FE9A  73                 	db	115	;'s'
   244  00FE9B  20                 	db	32
   245  00FE9C  66                 	db	102	;'f'
   246  00FE9D  72                 	db	114	;'r'
   247  00FE9E  6F                 	db	111	;'o'
   248  00FE9F  6D                 	db	109	;'m'
   249  00FEA0  20                 	db	32
   250  00FEA1  74                 	db	116	;'t'
   251  00FEA2  68                 	db	104	;'h'
   252  00FEA3  65                 	db	101	;'e'
   253  00FEA4  20                 	db	32
   254  00FEA5  6D                 	db	109	;'m'
   255  00FEA6  69                 	db	105	;'i'
   256  00FEA7  63                 	db	99	;'c'
   257  00FEA8  72                 	db	114	;'r'
   258  00FEA9  6F                 	db	111	;'o'
   259  00FEAA  70                 	db	112	;'p'
   260  00FEAB  68                 	db	104	;'h'
   261  00FEAC  6F                 	db	111	;'o'
   262  00FEAD  6E                 	db	110	;'n'
   263  00FEAE  65                 	db	101	;'e'
   264  00FEAF  20                 	db	32
   265  00FEB0  61                 	db	97	;'a'
   266  00FEB1  72                 	db	114	;'r'
   267  00FEB2  65                 	db	101	;'e'
   268  00FEB3  3A                 	db	58	;':'
   269  00FEB4  20                 	db	32
   270  00FEB5  0D                 	db	13
   271  00FEB6  0A                 	db	10
   272  00FEB7  00                 	db	0
   273  00FEB8                     STR_8:
   274  00FEB8  0D                 	db	13
   275  00FEB9  0A                 	db	10
   276  00FEBA  54                 	db	84	;'T'
   277  00FEBB  68                 	db	104	;'h'
   278  00FEBC  65                 	db	101	;'e'
   279  00FEBD  20                 	db	32
   280  00FEBE  73                 	db	115	;'s'
   281  00FEBF  6F                 	db	111	;'o'
   282  00FEC0  75                 	db	117	;'u'
   283  00FEC1  6E                 	db	110	;'n'
   284  00FEC2  64                 	db	100	;'d'
   285  00FEC3  20                 	db	32
   286  00FEC4  77                 	db	119	;'w'
   287  00FEC5  61                 	db	97	;'a'
   288  00FEC6  76                 	db	118	;'v'
   289  00FEC7  65                 	db	101	;'e'
   290  00FEC8  20                 	db	32
   291  00FEC9  63                 	db	99	;'c'
   292  00FECA  72                 	db	114	;'r'
   293  00FECB  6F                 	db	111	;'o'
   294  00FECC  73                 	db	115	;'s'
   295  00FECD  73                 	db	115	;'s'
   296  00FECE  65                 	db	101	;'e'
   297  00FECF  64                 	db	100	;'d'
   298  00FED0  20                 	db	32
   299  00FED1  61                 	db	97	;'a'
   300  00FED2  74                 	db	116	;'t'
   301  00FED3  20                 	db	32
   302  00FED4  74                 	db	116	;'t'
   303  00FED5  68                 	db	104	;'h'
   304  00FED6  65                 	db	101	;'e'
   305  00FED7  20                 	db	32
   306  00FED8  66                 	db	102	;'f'
   307  00FED9  6F                 	db	111	;'o'
   308  00FEDA  6C                 	db	108	;'l'
   309  00FEDB  6C                 	db	108	;'l'
   310  00FEDC  6F                 	db	111	;'o'
   311  00FEDD  77                 	db	119	;'w'
   312  00FEDE  69                 	db	105	;'i'
   313  00FEDF  6E                 	db	110	;'n'
   314  00FEE0  67                 	db	103	;'g'
   315  00FEE1  20                 	db	32
   316  00FEE2  69                 	db	105	;'i'
   317  00FEE3  6E                 	db	110	;'n'
   318  00FEE4  64                 	db	100	;'d'
   319  00FEE5  69                 	db	105	;'i'
   320  00FEE6  63                 	db	99	;'c'
   321  00FEE7  65                 	db	101	;'e'
   322  00FEE8  73                 	db	115	;'s'
   323  00FEE9  3A                 	db	58	;':'
   324  00FEEA  0D                 	db	13
   325  00FEEB  0A                 	db	10
   326  00FEEC  00                 	db	0
   327  00FEED                     STR_15:
   328  00FEED  54                 	db	84	;'T'
   329  00FEEE  2F                 	db	47
   330  00FEEF  74                 	db	116	;'t'
   331  00FEF0  3A                 	db	58	;':'
   332  00FEF1  20                 	db	32
   333  00FEF2  49                 	db	73	;'I'
   334  00FEF3  6E                 	db	110	;'n'
   335  00FEF4  63                 	db	99	;'c'
   336  00FEF5  72                 	db	114	;'r'
   337  00FEF6  65                 	db	101	;'e'
   338  00FEF7  61                 	db	97	;'a'
   339  00FEF8  73                 	db	115	;'s'
   340  00FEF9  65                 	db	101	;'e'
   341  00FEFA  2F                 	db	47
   342  00FEFB  64                 	db	100	;'d'
   343  00FEFC  65                 	db	101	;'e'
   344  00FEFD  63                 	db	99	;'c'
   345  00FEFE  72                 	db	114	;'r'
   346  00FEFF  65                 	db	101	;'e'
   347  00FF00  61                 	db	97	;'a'
   348  00FF01  73                 	db	115	;'s'
   349  00FF02  65                 	db	101	;'e'
   350  00FF03  20                 	db	32
   351  00FF04  74                 	db	116	;'t'
   352  00FF05  68                 	db	104	;'h'
   353  00FF06  72                 	db	114	;'r'
   354  00FF07  65                 	db	101	;'e'
   355  00FF08  73                 	db	115	;'s'
   356  00FF09  68                 	db	104	;'h'
   357  00FF0A  6F                 	db	111	;'o'
   358  00FF0B  6C                 	db	108	;'l'
   359  00FF0C  64                 	db	100	;'d'
   360  00FF0D  20                 	db	32
   361  00FF0E  31                 	db	49	;'1'
   362  00FF0F  33                 	db	51	;'3'
   363  00FF10  38                 	db	56	;'8'
   364  00FF11  2D                 	db	45
   365  00FF12  31                 	db	49	;'1'
   366  00FF13  31                 	db	49	;'1'
   367  00FF14  38                 	db	56	;'8'
   368  00FF15  0D                 	db	13
   369  00FF16  0A                 	db	10
   370  00FF17  00                 	db	0
   371  00FF18                     STR_10:
   372  00FF18  2D                 	db	45
   373  00FF19  2D                 	db	45
   374  00FF1A  2D                 	db	45
   375  00FF1B  2D                 	db	45
   376  00FF1C  2D                 	db	45
   377  00FF1D  2D                 	db	45
   378  00FF1E  2D                 	db	45
   379  00FF1F  2D                 	db	45
   380  00FF20  2D                 	db	45
   381  00FF21  2D                 	db	45
   382  00FF22  2D                 	db	45
   383  00FF23  2D                 	db	45
   384  00FF24  2D                 	db	45
   385  00FF25  2D                 	db	45
   386  00FF26  2D                 	db	45
   387  00FF27  2D                 	db	45
   388  00FF28  2D                 	db	45
   389  00FF29  2D                 	db	45
   390  00FF2A  2D                 	db	45
   391  00FF2B  2D                 	db	45
   392  00FF2C  2D                 	db	45
   393  00FF2D  2D                 	db	45
   394  00FF2E  2D                 	db	45
   395  00FF2F  2D                 	db	45
   396  00FF30  2D                 	db	45
   397  00FF31  2D                 	db	45
   398  00FF32  2D                 	db	45
   399  00FF33  2D                 	db	45
   400  00FF34  2D                 	db	45
   401  00FF35  2D                 	db	45
   402  00FF36  0D                 	db	13
   403  00FF37  0A                 	db	10
   404  00FF38  00                 	db	0
   405  00FF39                     STR_2:
   406  00FF39  4D                 	db	77	;'M'
   407  00FF3A  69                 	db	105	;'i'
   408  00FF3B  63                 	db	99	;'c'
   409  00FF3C  72                 	db	114	;'r'
   410  00FF3D  6F                 	db	111	;'o'
   411  00FF3E  70                 	db	112	;'p'
   412  00FF3F  68                 	db	104	;'h'
   413  00FF40  6F                 	db	111	;'o'
   414  00FF41  6E                 	db	110	;'n'
   415  00FF42  65                 	db	101	;'e'
   416  00FF43  20                 	db	32
   417  00FF44  65                 	db	101	;'e'
   418  00FF45  78                 	db	120	;'x'
   419  00FF46  70                 	db	112	;'p'
   420  00FF47  65                 	db	101	;'e'
   421  00FF48  72                 	db	114	;'r'
   422  00FF49  69                 	db	105	;'i'
   423  00FF4A  6D                 	db	109	;'m'
   424  00FF4B  65                 	db	101	;'e'
   425  00FF4C  6E                 	db	110	;'n'
   426  00FF4D  74                 	db	116	;'t'
   427  00FF4E  73                 	db	115	;'s'
   428  00FF4F  0D                 	db	13
   429  00FF50  0A                 	db	10
   430  00FF51  00                 	db	0
   431  00FF52                     STR_21:
   432  00FF52  56                 	db	86	;'V'
   433  00FF53  6F                 	db	111	;'o'
   434  00FF54  6C                 	db	108	;'l'
   435  00FF55  75                 	db	117	;'u'
   436  00FF56  6D                 	db	109	;'m'
   437  00FF57  65                 	db	101	;'e'
   438  00FF58  20                 	db	32
   439  00FF59  72                 	db	114	;'r'
   440  00FF5A  61                 	db	97	;'a'
   441  00FF5B  6E                 	db	110	;'n'
   442  00FF5C  67                 	db	103	;'g'
   443  00FF5D  65                 	db	101	;'e'
   444  00FF5E  3A                 	db	58	;':'
   445  00FF5F  20                 	db	32
   446  00FF60  25                 	db	37
   447  00FF61  64                 	db	100	;'d'
   448  00FF62  20                 	db	32
   449  00FF63  2D                 	db	45
   450  00FF64  20                 	db	32
   451  00FF65  25                 	db	37
   452  00FF66  64                 	db	100	;'d'
   453  00FF67  0D                 	db	13
   454  00FF68  0A                 	db	10
   455  00FF69  00                 	db	0
   456  00FF6A                     STR_14:
   457  00FF6A  7A                 	db	122	;'z'
   458  00FF6B  3A                 	db	58	;':'
   459  00FF6C  20                 	db	32
   460  00FF6D  43                 	db	67	;'C'
   461  00FF6E  6C                 	db	108	;'l'
   462  00FF6F  65                 	db	101	;'e'
   463  00FF70  61                 	db	97	;'a'
   464  00FF71  72                 	db	114	;'r'
   465  00FF72  20                 	db	32
   466  00FF73  74                 	db	116	;'t'
   467  00FF74  68                 	db	104	;'h'
   468  00FF75  65                 	db	101	;'e'
   469  00FF76  20                 	db	32
   470  00FF77  74                 	db	116	;'t'
   471  00FF78  65                 	db	101	;'e'
   472  00FF79  72                 	db	114	;'r'
   473  00FF7A  6D                 	db	109	;'m'
   474  00FF7B  69                 	db	105	;'i'
   475  00FF7C  6E                 	db	110	;'n'
   476  00FF7D  61                 	db	97	;'a'
   477  00FF7E  6C                 	db	108	;'l'
   478  00FF7F  0D                 	db	13
   479  00FF80  0A                 	db	10
   480  00FF81  00                 	db	0
   481  00FF82                     STR_24:
   482  00FF82  54                 	db	84	;'T'
   483  00FF83  68                 	db	104	;'h'
   484  00FF84  72                 	db	114	;'r'
   485  00FF85  65                 	db	101	;'e'
   486  00FF86  73                 	db	115	;'s'
   487  00FF87  68                 	db	104	;'h'
   488  00FF88  6F                 	db	111	;'o'
   489  00FF89  6C                 	db	108	;'l'
   490  00FF8A  64                 	db	100	;'d'
   491  00FF8B  20                 	db	32
   492  00FF8C  61                 	db	97	;'a'
   493  00FF8D  74                 	db	116	;'t'
   494  00FF8E  20                 	db	32
   495  00FF8F  6D                 	db	109	;'m'
   496  00FF90  69                 	db	105	;'i'
   497  00FF91  6E                 	db	110	;'n'
   498  00FF92  69                 	db	105	;'i'
   499  00FF93  6D                 	db	109	;'m'
   500  00FF94  75                 	db	117	;'u'
   501  00FF95  6D                 	db	109	;'m'
   502  00FF96  0D                 	db	13
   503  00FF97  0A                 	db	10
   504  00FF98  00                 	db	0
   505  00FF99                     STR_13:
   506  00FF99  5A                 	db	90	;'Z'
   507  00FF9A  3A                 	db	58	;':'
   508  00FF9B  20                 	db	32
   509  00FF9C  52                 	db	82	;'R'
   510  00FF9D  65                 	db	101	;'e'
   511  00FF9E  73                 	db	115	;'s'
   512  00FF9F  65                 	db	101	;'e'
   513  00FFA0  74                 	db	116	;'t'
   514  00FFA1  20                 	db	32
   515  00FFA2  70                 	db	112	;'p'
   516  00FFA3  72                 	db	114	;'r'
   517  00FFA4  6F                 	db	111	;'o'
   518  00FFA5  63                 	db	99	;'c'
   519  00FFA6  65                 	db	101	;'e'
   520  00FFA7  73                 	db	115	;'s'
   521  00FFA8  73                 	db	115	;'s'
   522  00FFA9  6F                 	db	111	;'o'
   523  00FFAA  72                 	db	114	;'r'
   524  00FFAB  0D                 	db	13
   525  00FFAC  0A                 	db	10
   526  00FFAD  00                 	db	0
   527  00FFAE                     STR_25:
   528  00FFAE  55                 	db	85	;'U'
   529  00FFAF  6E                 	db	110	;'n'
   530  00FFB0  6B                 	db	107	;'k'
   531  00FFB1  6E                 	db	110	;'n'
   532  00FFB2  6F                 	db	111	;'o'
   533  00FFB3  77                 	db	119	;'w'
   534  00FFB4  6E                 	db	110	;'n'
   535  00FFB5  20                 	db	32
   536  00FFB6  6B                 	db	107	;'k'
   537  00FFB7  65                 	db	101	;'e'
   538  00FFB8  79                 	db	121	;'y'
   539  00FFB9  20                 	db	32
   540  00FFBA  25                 	db	37
   541  00FFBB  63                 	db	99	;'c'
   542  00FFBC  0D                 	db	13
   543  00FFBD  0A                 	db	10
   544  00FFBE  00                 	db	0
   545  00FFBF                     STR_11:
   546  00FFBF  3F                 	db	63	;'?'
   547  00FFC0  3A                 	db	58	;':'
   548  00FFC1  20                 	db	32
   549  00FFC2  48                 	db	72	;'H'
   550  00FFC3  65                 	db	101	;'e'
   551  00FFC4  6C                 	db	108	;'l'
   552  00FFC5  70                 	db	112	;'p'
   553  00FFC6  20                 	db	32
   554  00FFC7  6D                 	db	109	;'m'
   555  00FFC8  65                 	db	101	;'e'
   556  00FFC9  6E                 	db	110	;'n'
   557  00FFCA  75                 	db	117	;'u'
   558  00FFCB  0D                 	db	13
   559  00FFCC  0A                 	db	10
   560  00FFCD  00                 	db	0
   561  00FFCE                     STR_1:
   562  00FFCE  69                 	db	105	;'i'
   563  00FFCF  6E                 	db	110	;'n'
   564  00FFD0  4C                 	db	76	;'L'
   565  00FFD1  61                 	db	97	;'a'
   566  00FFD2  62                 	db	98	;'b'
   567  00FFD3  20                 	db	32
   568  00FFD4  30                 	db	48	;'0'
   569  00FFD5  38                 	db	56	;'8'
   570  00FFD6  0D                 	db	13
   571  00FFD7  0A                 	db	10
   572  00FFD8  00                 	db	0
   573  00FFD9                     STR_3:
   574  00FFD9  44                 	db	68	;'D'
   575  00FFDA  65                 	db	101	;'e'
   576  00FFDB  76                 	db	118	;'v'
   577  00FFDC  27                 	db	39
   578  00FFDD  32                 	db	50	;'2'
   579  00FFDE  31                 	db	49	;'1'
   580  00FFDF  0D                 	db	13
   581  00FFE0  0A                 	db	10
   582  00FFE1  00                 	db	0
   583  00FFE2                     STR_6:
   584  00FFE2  0D                 	db	13
   585  00FFE3  0A                 	db	10
   586  00FFE4  53                 	db	83	;'S'
   587  00FFE5  5B                 	db	91	;'['
   588  00FFE6  25                 	db	37
   589  00FFE7  64                 	db	100	;'d'
   590  00FFE8  5D                 	db	93	;']'
   591  00FFE9  20                 	db	32
   592  00FFEA  00                 	db	0
   593  00FFEB                     STR_12:
   594  00FFEB  6F                 	db	111	;'o'
   595  00FFEC  3A                 	db	58	;':'
   596  00FFED  20                 	db	32
   597  00FFEE  6B                 	db	107	;'k'
   598  00FFEF  0D                 	db	13
   599  00FFF0  0A                 	db	10
   600  00FFF1  00                 	db	0
   601  00FFF2                     STR_18:
   602  00FFF2  20                 	db	32
   603  00FFF3  6B                 	db	107	;'k'
   604  00FFF4  0D                 	db	13
   605  00FFF5  0A                 	db	10
   606  00FFF6  3E                 	db	62	;'>'
   607  00FFF7  00                 	db	0
   608  00FFF8                     STR_7:
   609  00FFF8  25                 	db	37
   610  00FFF9  64                 	db	100	;'d'
   611  00FFFA  20                 	db	32
   612  00FFFB  00                 	db	0
   613  00FFFC                     STR_4:
   614  00FFFC  3E                 	db	62	;'>'
   615  00FFFD  20                 	db	32
   616  00FFFE  00                 	db	0
   617  00FFFF  00                 	db	0	; dummy byte at the end
   618  0000                     
   619                           ; #config settings
   620                           
   621                           	psect	cinit
   622  000FC8                     __pcinit:
   623                           	callstack 0
   624  000FC8                     start_initialization:
   625                           	callstack 0
   626  000FC8                     __initialization:
   627                           	callstack 0
   628                           
   629                           ; Initialize objects allocated to BANK0 (2 bytes)
   630                           ; load TBLPTR registers with __pidataBANK0
   631  000FC8  0ECC               	movlw	low __pidataBANK0
   632  000FCA  6EF6               	movwf	tblptrl,c
   633  000FCC  0E12               	movlw	high __pidataBANK0
   634  000FCE  6EF7               	movwf	tblptrh,c
   635  000FD0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   636  000FD2  6EF8               	movwf	tblptru,c
   637  000FD4  0009               	tblrd		*+	;fetch initializer
   638  000FD6  CFF5 F0C8          	movff	tablat,__pdataBANK0
   639  000FDA  0009               	tblrd		*+	;fetch initializer
   640  000FDC  CFF5 F0C9          	movff	tablat,__pdataBANK0+1
   641                           
   642                           ; Clear objects allocated to BANK1 (64 bytes)
   643  000FE0  EE01  F046         	lfsr	0,__pbssBANK1
   644  000FE4  0E40               	movlw	64
   645  000FE6                     clear_0:
   646  000FE6  6AEE               	clrf	postinc0,c
   647  000FE8  06E8               	decf	wreg,f,c
   648  000FEA  E1FD               	bnz	clear_0
   649                           
   650                           ; Clear objects allocated to BANK0 (37 bytes)
   651  000FEC  EE00  F0A3         	lfsr	0,__pbssBANK0
   652  000FF0  0E25               	movlw	37
   653  000FF2                     clear_1:
   654  000FF2  6AEE               	clrf	postinc0,c
   655  000FF4  06E8               	decf	wreg,f,c
   656  000FF6  E1FD               	bnz	clear_1
   657                           
   658                           ; Clear objects allocated to COMRAM (20 bytes)
   659  000FF8  EE00  F037         	lfsr	0,__pbssCOMRAM
   660  000FFC  0E14               	movlw	20
   661  000FFE                     clear_2:
   662  000FFE  6AEE               	clrf	postinc0,c
   663  001000  06E8               	decf	wreg,f,c
   664  001002  E1FD               	bnz	clear_2
   665  001004                     end_of_initialization:
   666                           	callstack 0
   667  001004                     __end_of__initialization:
   668                           	callstack 0
   669  001004  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   670  001006  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   671  001008  0100               	movlb	0
   672  00100A  EF29  F000         	goto	_main	;jump to C main() function
   673                           
   674                           	psect	bssCOMRAM
   675  000037                     __pbssCOMRAM:
   676                           	callstack 0
   677  000037                     _width:
   678                           	callstack 0
   679  000037                     	ds	2
   680  000039                     _prec:
   681                           	callstack 0
   682  000039                     	ds	2
   683  00003B                     _flags:
   684                           	callstack 0
   685  00003B                     	ds	2
   686  00003D                     _EUSART1_OverrunErrorHandler:
   687                           	callstack 0
   688  00003D                     	ds	2
   689  00003F                     _EUSART1_FramingErrorHandler:
   690                           	callstack 0
   691  00003F                     	ds	2
   692  000041                     _ADC_InterruptHandler:
   693                           	callstack 0
   694  000041                     	ds	2
   695  000043                     _timer0ReloadVal:
   696                           	callstack 0
   697  000043                     	ds	2
   698  000045                     _TMR0_InterruptHandler:
   699                           	callstack 0
   700  000045                     	ds	2
   701  000047                     _eusart1RxLastError:
   702                           	callstack 0
   703  000047                     	ds	1
   704  000048                     _bufferIdx:
   705                           	callstack 0
   706  000048                     	ds	1
   707  000049                     _timerState:
   708                           	callstack 0
   709  000049                     	ds	1
   710  00004A                     _fillBuffer:
   711                           	callstack 0
   712  00004A                     	ds	1
   713                           
   714                           	psect	bssBANK0
   715  0000A3                     __pbssBANK0:
   716                           	callstack 0
   717  0000A3                     _nout:
   718                           	callstack 0
   719  0000A3                     	ds	2
   720  0000A5                     _EUSART1_ErrorHandler:
   721                           	callstack 0
   722  0000A5                     	ds	2
   723  0000A7                     _samplesCollected:
   724                           	callstack 0
   725  0000A7                     	ds	1
   726  0000A8                     _dbuf:
   727                           	callstack 0
   728  0000A8                     	ds	32
   729                           
   730                           	psect	dataBANK0
   731  0000C8                     __pdataBANK0:
   732                           	callstack 0
   733  0000C8                     _thresholdRange:
   734                           	callstack 0
   735  0000C8                     	ds	2
   736                           
   737                           	psect	bssBANK1
   738  000146                     __pbssBANK1:
   739                           	callstack 0
   740  000146                     _adc_reading:
   741                           	callstack 0
   742  000146                     	ds	64
   743                           
   744                           	psect	cstackBANK1
   745  000100                     __pcstackBANK1:
   746                           	callstack 0
   747  000100                     main@crossings:
   748                           	callstack 0
   749                           
   750                           ; 64 bytes @ 0x0
   751  000100                     	ds	64
   752  000140                     main@cmd:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x40
   756  000140                     	ds	1
   757  000141                     main@crIdx:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x41
   761  000141                     	ds	1
   762  000142                     main@i_225:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x42
   766  000142                     	ds	1
   767  000143                     main@i:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x43
   771  000143                     	ds	1
   772  000144                     main@i_218:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x44
   776  000144                     	ds	1
   777  000145                     main@i_224:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x45
   781  000145                     	ds	1
   782                           
   783                           	psect	cstackBANK0
   784  000060                     __pcstackBANK0:
   785                           	callstack 0
   786  000060                     ?_dtoa:
   787                           	callstack 0
   788  000060                     dtoa@fp:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x0
   792  000060                     	ds	2
   793  000062                     dtoa@d:
   794                           	callstack 0
   795                           
   796                           ; 8 bytes @ 0x2
   797  000062                     	ds	8
   798  00006A                     ??_dtoa:
   799                           
   800                           ; 1 bytes @ 0xA
   801  00006A                     	ds	8
   802  000072                     _dtoa$1397:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x12
   806  000072                     	ds	2
   807  000074                     dtoa@p:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x14
   811  000074                     	ds	2
   812  000076                     dtoa@w:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x16
   816  000076                     	ds	2
   817  000078                     dtoa@s:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x18
   821  000078                     	ds	2
   822  00007A                     dtoa@n:
   823                           	callstack 0
   824                           
   825                           ; 8 bytes @ 0x1A
   826  00007A                     	ds	8
   827  000082                     dtoa@i:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x22
   831  000082                     	ds	2
   832  000084                     ??_vfpfcnvrt:
   833                           
   834                           ; 1 bytes @ 0x24
   835  000084                     	ds	2
   836  000086                     vfpfcnvrt@ll:
   837                           	callstack 0
   838                           
   839                           ; 8 bytes @ 0x26
   840  000086                     	ds	8
   841  00008E                     vfpfcnvrt@c:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x2E
   845  00008E                     	ds	1
   846  00008F                     ?_vfprintf:
   847                           	callstack 0
   848  00008F                     vfprintf@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x2F
   852  00008F                     	ds	2
   853  000091                     vfprintf@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x31
   857  000091                     	ds	2
   858  000093                     vfprintf@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x33
   862  000093                     	ds	2
   863  000095                     vfprintf@cfmt:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x35
   867  000095                     	ds	2
   868  000097                     ?_printf:
   869                           	callstack 0
   870  000097                     printf@fmt:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x37
   874  000097                     	ds	8
   875  00009F                     printf@ap:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x3F
   879  00009F                     	ds	2
   880  0000A1                     ??_main:
   881                           
   882                           ; 1 bytes @ 0x41
   883  0000A1                     	ds	2
   884                           
   885                           	psect	cstackCOMRAM
   886  000001                     __pcstackCOMRAM:
   887                           	callstack 0
   888  000001                     ?_TMR0_ReadTimer:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x0
   892  000001                     	ds	2
   893  000003                     ??_TMR0_ReadTimer:
   894                           
   895                           ; 1 bytes @ 0x2
   896  000003                     	ds	2
   897  000005                     TMR0_ReadTimer@readVal:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x4
   901  000005                     	ds	2
   902  000007                     TMR0_ReadTimer@readValLow:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x6
   906  000007                     	ds	1
   907  000008                     TMR0_ReadTimer@readValHigh:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x7
   911  000008                     	ds	1
   912  000009                     i2TMR0_WriteTimer@timerVal:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x8
   916  000009                     	ds	2
   917  00000B                     ??_myTMR0ISR:
   918  00000B                     
   919                           ; 1 bytes @ 0xA
   920  00000B                     	ds	4
   921  00000F                     myTMR0ISR@micReading:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0xE
   925  00000F                     	ds	1
   926  000010                     ??_INTERRUPT_InterruptManager:
   927                           
   928                           ; 1 bytes @ 0xF
   929  000010                     	ds	4
   930  000014                     ?_strlen:
   931                           	callstack 0
   932  000014                     ?___aodiv:
   933                           	callstack 0
   934  000014                     ?___aomod:
   935                           	callstack 0
   936  000014                     EUSART1_Write@txData:
   937                           	callstack 0
   938  000014                     TMR0_WriteTimer@timerVal:
   939                           	callstack 0
   940  000014                     TMR0_SetInterruptHandler@InterruptHandler:
   941                           	callstack 0
   942  000014                     EUSART1_SetFramingErrorHandler@interruptHandler:
   943                           	callstack 0
   944  000014                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   945                           	callstack 0
   946  000014                     EUSART1_SetErrorHandler@interruptHandler:
   947                           	callstack 0
   948  000014                     strlen@s:
   949                           	callstack 0
   950  000014                     ___aodiv@dividend:
   951                           	callstack 0
   952  000014                     ___aomod@dividend:
   953                           	callstack 0
   954                           
   955                           ; 8 bytes @ 0x13
   956  000014                     	ds	1
   957  000015                     putch@txData:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x14
   961  000015                     	ds	1
   962  000016                     ??_TMR0_Initialize:
   963  000016                     fputc@c:
   964                           	callstack 0
   965  000016                     strlen@a:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x15
   969  000016                     	ds	2
   970  000018                     fputc@fp:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x17
   974  000018                     	ds	2
   975  00001A                     ??_fputc:
   976                           
   977                           ; 1 bytes @ 0x19
   978  00001A                     	ds	2
   979  00001C                     ___aodiv@divisor:
   980                           	callstack 0
   981  00001C                     ___aomod@divisor:
   982                           	callstack 0
   983                           
   984                           ; 8 bytes @ 0x1B
   985  00001C                     	ds	3
   986  00001F                     ?_ctoa:
   987                           	callstack 0
   988  00001F                     ctoa@fp:
   989                           	callstack 0
   990  00001F                     fputs@s:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x1E
   994  00001F                     	ds	2
   995  000021                     ctoa@c:
   996                           	callstack 0
   997  000021                     fputs@fp:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x20
  1001  000021                     	ds	1
  1002  000022                     ??_ctoa:
  1003                           
  1004                           ; 1 bytes @ 0x21
  1005  000022                     	ds	1
  1006  000023                     fputs@c:
  1007                           	callstack 0
  1008  000023                     ctoa@l:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x22
  1012  000023                     	ds	1
  1013  000024                     ___aodiv@counter:
  1014                           	callstack 0
  1015  000024                     ___aomod@counter:
  1016                           	callstack 0
  1017  000024                     fputs@i:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x23
  1021  000024                     	ds	1
  1022  000025                     ___aodiv@sign:
  1023                           	callstack 0
  1024  000025                     ___aomod@sign:
  1025                           	callstack 0
  1026  000025                     ctoa@w:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x24
  1030  000025                     	ds	1
  1031  000026                     ?_abs:
  1032                           	callstack 0
  1033  000026                     ?_pad:
  1034                           	callstack 0
  1035  000026                     pad@fp:
  1036                           	callstack 0
  1037  000026                     abs@a:
  1038                           	callstack 0
  1039  000026                     ___aodiv@quotient:
  1040                           	callstack 0
  1041                           
  1042                           ; 8 bytes @ 0x25
  1043  000026                     	ds	2
  1044  000028                     ??_abs:
  1045  000028                     pad@buf:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x27
  1049  000028                     	ds	2
  1050  00002A                     pad@p:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x29
  1054  00002A                     	ds	2
  1055  00002C                     ??_pad:
  1056                           
  1057                           ; 1 bytes @ 0x2B
  1058  00002C                     	ds	1
  1059  00002D                     pad@i:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x2C
  1063  00002D                     	ds	2
  1064  00002F                     pad@w:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x2E
  1068  00002F                     	ds	2
  1069  000031                     ?_vfpfcnvrt:
  1070                           	callstack 0
  1071  000031                     vfpfcnvrt@fp:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x30
  1075  000031                     	ds	2
  1076  000033                     vfpfcnvrt@fmt:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x32
  1080  000033                     	ds	2
  1081  000035                     vfpfcnvrt@ap:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x34
  1085  000035                     	ds	2
  1086  000037                     
  1087                           ; 1 bytes @ 0x36
  1088 ;;
  1089 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1090 ;;
  1091 ;; *************** function _main *****************
  1092 ;; Defined at:
  1093 ;;		line 45 in file "main.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  i               1   66[BANK1 ] unsigned char 
  1098 ;;  i               1   69[BANK1 ] unsigned char 
  1099 ;;  i               1   68[BANK1 ] unsigned char 
  1100 ;;  crossings      64    0[BANK1 ] unsigned char [64]
  1101 ;;  crIdx           1   65[BANK1 ] unsigned char 
  1102 ;;  i               1   67[BANK1 ] unsigned char 
  1103 ;;  cmd             1   64[BANK1 ] unsigned char 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Totals:         0       2      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;Total ram usage:       72 bytes
  1118 ;; Hardware stack levels required when called:   13
  1119 ;; This function calls:
  1120 ;;		_EUSART1_Read
  1121 ;;		_EUSART1_is_rx_ready
  1122 ;;		_SYSTEM_Initialize
  1123 ;;		_TMR0_SetInterruptHandler
  1124 ;;		_TMR0_WriteTimer
  1125 ;;		_printf
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text0
  1132  000052                     __ptext0:
  1133                           	callstack 0
  1134  000052                     _main:
  1135                           	callstack 18
  1136  000052                     
  1137                           ;main.c: 47: ;main.c: 48:     for (;;) {;main.c: 50:             samplesCollected = 0;
  1138  000052  EC14  F009         	call	_SYSTEM_Initialize	;wreg free
  1139  000056                     
  1140                           ;main.c: 55:                     printf("\r\nS[%d] ", i);
  1141  000056  0E00               	movlw	0
  1142  000058  6E15               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1143  00005A  0E00               	movlw	0
  1144  00005C  6E14               	movwf	TMR0_WriteTimer@timerVal^0,c
  1145  00005E  EC46  F009         	call	_TMR0_WriteTimer	;wreg free
  1146  000062                     
  1147                           ;main.c: 56:                 }
  1148  000062  94F2               	bcf	242,2,c	;volatile
  1149  000064                     l35:
  1150  000064  A4F2               	btfss	242,2,c	;volatile
  1151  000066  EF37  F000         	goto	u2111
  1152  00006A  EF39  F000         	goto	u2110
  1153  00006E                     u2111:
  1154  00006E  EF32  F000         	goto	l35
  1155  000072                     u2110:
  1156  000072                     
  1157                           ;main.c: 59:             printf("\r\nThe sound wave crossed at the following indices:\r\
      +                          n");
  1158  000072  0E3A               	movlw	low _myTMR0ISR
  1159  000074  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1160  000076  0E0C               	movlw	high _myTMR0ISR
  1161  000078  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1162  00007A  EC4B  F009         	call	_TMR0_SetInterruptHandler	;wreg free
  1163  00007E                     
  1164                           ;main.c: 60:             uint8_t crossings[64];
  1165  00007E  8EF2               	bsf	242,7,c	;volatile
  1166  000080                     
  1167                           ;main.c: 61:             uint8_t crIdx = 0;
  1168  000080  8CF2               	bsf	242,6,c	;volatile
  1169  000082                     
  1170                           ;main.c: 63:                 if(adc_reading[i-1] <= 128 && adc_reading[i] > 128){
  1171  000082  0ECE               	movlw	low STR_1
  1172  000084  0100               	movlb	0	; () banked
  1173  000086  6F97               	movwf	printf@fmt& (0+255),b
  1174  000088  0EFF               	movlw	high STR_1
  1175  00008A  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1176  00008C  ECCF  F008         	call	_printf	;wreg free
  1177  000090                     
  1178                           ;main.c: 64:                     crossings[crIdx] = i - 1;
  1179  000090  0E39               	movlw	low STR_2
  1180  000092  0100               	movlb	0	; () banked
  1181  000094  6F97               	movwf	printf@fmt& (0+255),b
  1182  000096  0EFF               	movlw	high STR_2
  1183  000098  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1184  00009A  ECCF  F008         	call	_printf	;wreg free
  1185  00009E                     
  1186                           ;main.c: 65:                     crIdx += 1;
  1187  00009E  0ED9               	movlw	low STR_3
  1188  0000A0  0100               	movlb	0	; () banked
  1189  0000A2  6F97               	movwf	printf@fmt& (0+255),b
  1190  0000A4  0EFF               	movlw	high STR_3
  1191  0000A6  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1192  0000A8  ECCF  F008         	call	_printf	;wreg free
  1193  0000AC                     
  1194                           ;main.c: 66:                 }
  1195  0000AC  0EFC               	movlw	low STR_4
  1196  0000AE  0100               	movlb	0	; () banked
  1197  0000B0  6F97               	movwf	printf@fmt& (0+255),b
  1198  0000B2  0EFF               	movlw	high STR_4
  1199  0000B4  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1200  0000B6  ECCF  F008         	call	_printf	;wreg free
  1201  0000BA                     
  1202                           ;main.c: 70:             }
  1203  0000BA  82C2               	bsf	194,1,c	;volatile
  1204  0000BC                     l38:
  1205  0000BC  B2C2               	btfsc	194,1,c	;volatile
  1206  0000BE  EF63  F000         	goto	u2121
  1207  0000C2  EF65  F000         	goto	u2120
  1208  0000C6                     u2121:
  1209  0000C6  EF5E  F000         	goto	l38
  1210  0000CA                     u2120:
  1211  0000CA                     l2831:
  1212                           
  1213                           ;main.c: 75:             cmd = EUSART1_Read();
  1214  0000CA  0100               	movlb	0	; () banked
  1215  0000CC  51A7               	movf	_samplesCollected& (0+255),w,b
  1216  0000CE  B4D8               	btfsc	status,2,c
  1217  0000D0  EF6C  F000         	goto	u2131
  1218  0000D4  EF6E  F000         	goto	u2130
  1219  0000D8                     u2131:
  1220  0000D8  EF09  F001         	goto	l2881
  1221  0000DC                     u2130:
  1222  0000DC                     
  1223                           ; BSR set to: 0
  1224                           ;main.c: 76:             switch (cmd) {
  1225  0000DC  0E00               	movlw	0
  1226  0000DE  6FA7               	movwf	_samplesCollected& (0+255),b
  1227  0000E0                     
  1228                           ; BSR set to: 0
  1229                           ;main.c: 77: 
  1230  0000E0  0E83               	movlw	low STR_5
  1231  0000E2  6F97               	movwf	printf@fmt& (0+255),b
  1232  0000E4  0EFE               	movlw	high STR_5
  1233  0000E6  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1234  0000E8  ECCF  F008         	call	_printf	;wreg free
  1235  0000EC                     
  1236                           ;main.c: 79:                     printf("------------------------------\r\n");
  1237  0000EC  0E00               	movlw	0
  1238  0000EE  0101               	movlb	1	; () banked
  1239  0000F0  6F44               	movwf	main@i_218& (0+255),b
  1240  0000F2                     l2843:
  1241                           
  1242                           ; BSR set to: 1
  1243                           ;main.c: 80:                     printf("?: Help menu\r\n");
  1244  0000F2  C144  F0A1         	movff	main@i_218,??_main
  1245  0000F6  0E0F               	movlw	15
  1246  0000F8  0100               	movlb	0	; () banked
  1247  0000FA  17A1               	andwf	??_main& (0+255),f,b
  1248  0000FC  A4D8               	btfss	status,2,c
  1249  0000FE  EF83  F000         	goto	u2141
  1250  000102  EF85  F000         	goto	u2140
  1251  000106                     u2141:
  1252  000106  EF8E  F000         	goto	l45
  1253  00010A                     u2140:
  1254  00010A                     
  1255                           ; BSR set to: 0
  1256                           ;main.c: 81:                     printf("o: k\r\n");
  1257  00010A  0EE2               	movlw	low STR_6
  1258  00010C  6F97               	movwf	printf@fmt& (0+255),b
  1259  00010E  0EFF               	movlw	high STR_6
  1260  000110  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1261  000112  C144  F099         	movff	main@i_218,?_printf+2
  1262  000116  6B9A               	clrf	(?_printf+3)& (0+255),b
  1263  000118  ECCF  F008         	call	_printf	;wreg free
  1264  00011C                     l45:
  1265                           
  1266                           ;main.c: 83:                     printf("z: Clear the terminal\r\n");
  1267  00011C  0EF8               	movlw	low STR_7
  1268  00011E  0100               	movlb	0	; () banked
  1269  000120  6F97               	movwf	printf@fmt& (0+255),b
  1270  000122  0EFF               	movlw	high STR_7
  1271  000124  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1272  000126  0E46               	movlw	low _adc_reading
  1273  000128  0101               	movlb	1	; () banked
  1274  00012A  2544               	addwf	main@i_218& (0+255),w,b
  1275  00012C  6ED9               	movwf	fsr2l,c
  1276  00012E  6ADA               	clrf	fsr2h,c
  1277  000130  0E01               	movlw	high _adc_reading
  1278  000132  22DA               	addwfc	fsr2h,f,c
  1279  000134  50DF               	movf	indf2,w,c
  1280  000136  0100               	movlb	0	; () banked
  1281  000138  6FA1               	movwf	??_main& (0+255),b
  1282  00013A  51A1               	movf	??_main& (0+255),w,b
  1283  00013C  6F99               	movwf	(?_printf+2)& (0+255),b
  1284  00013E  6B9A               	clrf	(?_printf+3)& (0+255),b
  1285  000140  ECCF  F008         	call	_printf	;wreg free
  1286  000144                     
  1287                           ;main.c: 84:                     printf("T/t: Increase/decrease threshold 138-118\r\n");
  1288  000144  0101               	movlb	1	; () banked
  1289  000146  2B44               	incf	main@i_218& (0+255),f,b
  1290  000148                     
  1291                           ; BSR set to: 1
  1292  000148  0E3F               	movlw	63
  1293  00014A  6544               	cpfsgt	main@i_218& (0+255),b
  1294  00014C  EFAA  F000         	goto	u2151
  1295  000150  EFAC  F000         	goto	u2150
  1296  000154                     u2151:
  1297  000154  EF79  F000         	goto	l2843
  1298  000158                     u2150:
  1299  000158                     
  1300                           ; BSR set to: 1
  1301                           ;main.c: 85:                     printf("f: gather 512 samples from the microphone and c
      +                          alculate the frequency\r\n");
  1302  000158  0EB8               	movlw	low STR_8
  1303  00015A  0100               	movlb	0	; () banked
  1304  00015C  6F97               	movwf	printf@fmt& (0+255),b
  1305  00015E  0EFE               	movlw	high STR_8
  1306  000160  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1307  000162  ECCF  F008         	call	_printf	;wreg free
  1308  000166                     
  1309                           ;main.c: 86: ;main.c: 87:                     printf("------------------------------\r\n
      +                          ");
  1310  000166  0E00               	movlw	0
  1311  000168  0101               	movlb	1	; () banked
  1312  00016A  6F41               	movwf	main@crIdx& (0+255),b
  1313  00016C                     
  1314                           ; BSR set to: 1
  1315                           ;main.c: 88:                     break;
  1316  00016C  0E01               	movlw	1
  1317  00016E  6F45               	movwf	main@i_224& (0+255),b
  1318  000170                     l2861:
  1319                           
  1320                           ; BSR set to: 1
  1321                           ;main.c: 89: 
  1322  000170  0E45               	movlw	low (_adc_reading+65535)
  1323  000172  2545               	addwf	main@i_224& (0+255),w,b
  1324  000174  6ED9               	movwf	fsr2l,c
  1325  000176  6ADA               	clrf	fsr2h,c
  1326  000178  0E01               	movlw	high (_adc_reading+65535)
  1327  00017A  22DA               	addwfc	fsr2h,f,c
  1328  00017C  0E81               	movlw	129
  1329  00017E  60DF               	cpfslt	indf2,c
  1330  000180  EFC4  F000         	goto	u2161
  1331  000184  EFC6  F000         	goto	u2160
  1332  000188                     u2161:
  1333  000188  EFDD  F000         	goto	l2869
  1334  00018C                     u2160:
  1335  00018C                     
  1336                           ; BSR set to: 1
  1337  00018C  0E46               	movlw	low _adc_reading
  1338  00018E  2545               	addwf	main@i_224& (0+255),w,b
  1339  000190  6ED9               	movwf	fsr2l,c
  1340  000192  6ADA               	clrf	fsr2h,c
  1341  000194  0E01               	movlw	high _adc_reading
  1342  000196  22DA               	addwfc	fsr2h,f,c
  1343  000198  0E80               	movlw	128
  1344  00019A  64DF               	cpfsgt	indf2,c
  1345  00019C  EFD2  F000         	goto	u2171
  1346  0001A0  EFD4  F000         	goto	u2170
  1347  0001A4                     u2171:
  1348  0001A4  EFDD  F000         	goto	l2869
  1349  0001A8                     u2170:
  1350  0001A8                     
  1351                           ; BSR set to: 1
  1352                           ;main.c: 90: 
  1353  0001A8  0E00               	movlw	low main@crossings
  1354  0001AA  2541               	addwf	main@crIdx& (0+255),w,b
  1355  0001AC  6ED9               	movwf	fsr2l,c
  1356  0001AE  6ADA               	clrf	fsr2h,c
  1357  0001B0  0E01               	movlw	high main@crossings
  1358  0001B2  22DA               	addwfc	fsr2h,f,c
  1359  0001B4  0545               	decf	main@i_224& (0+255),w,b
  1360  0001B6  6EDF               	movwf	indf2,c
  1361  0001B8                     
  1362                           ; BSR set to: 1
  1363                           ;main.c: 91: 
  1364  0001B8  2B41               	incf	main@crIdx& (0+255),f,b
  1365  0001BA                     l2869:
  1366                           
  1367                           ; BSR set to: 1
  1368                           ;main.c: 93:                 case 'o':
  1369  0001BA  2B45               	incf	main@i_224& (0+255),f,b
  1370  0001BC                     
  1371                           ; BSR set to: 1
  1372  0001BC  0E3F               	movlw	63
  1373  0001BE  6545               	cpfsgt	main@i_224& (0+255),b
  1374  0001C0  EFE4  F000         	goto	u2181
  1375  0001C4  EFE6  F000         	goto	u2180
  1376  0001C8                     u2181:
  1377  0001C8  EFB8  F000         	goto	l2861
  1378  0001CC                     u2180:
  1379  0001CC                     
  1380                           ; BSR set to: 1
  1381                           ;main.c: 94:                     printf(" k\r\n>");
  1382  0001CC  0E00               	movlw	0
  1383  0001CE  6F42               	movwf	main@i_225& (0+255),b
  1384  0001D0  EF00  F001         	goto	l2879
  1385  0001D4                     l2875:
  1386                           
  1387                           ; BSR set to: 1
  1388                           ;main.c: 95:                     break;
  1389  0001D4  0EF8               	movlw	low STR_7
  1390  0001D6  0100               	movlb	0	; () banked
  1391  0001D8  6F97               	movwf	printf@fmt& (0+255),b
  1392  0001DA  0EFF               	movlw	high STR_7
  1393  0001DC  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1394  0001DE  0E00               	movlw	low main@crossings
  1395  0001E0  0101               	movlb	1	; () banked
  1396  0001E2  2542               	addwf	main@i_225& (0+255),w,b
  1397  0001E4  6ED9               	movwf	fsr2l,c
  1398  0001E6  6ADA               	clrf	fsr2h,c
  1399  0001E8  0E01               	movlw	high main@crossings
  1400  0001EA  22DA               	addwfc	fsr2h,f,c
  1401  0001EC  50DF               	movf	indf2,w,c
  1402  0001EE  0100               	movlb	0	; () banked
  1403  0001F0  6FA1               	movwf	??_main& (0+255),b
  1404  0001F2  51A1               	movf	??_main& (0+255),w,b
  1405  0001F4  6F99               	movwf	(?_printf+2)& (0+255),b
  1406  0001F6  6B9A               	clrf	(?_printf+3)& (0+255),b
  1407  0001F8  ECCF  F008         	call	_printf	;wreg free
  1408  0001FC                     
  1409                           ;main.c: 96: 
  1410  0001FC  0101               	movlb	1	; () banked
  1411  0001FE  2B42               	incf	main@i_225& (0+255),f,b
  1412  000200                     l2879:
  1413                           
  1414                           ; BSR set to: 1
  1415  000200  5141               	movf	main@crIdx& (0+255),w,b
  1416  000202  5D42               	subwf	main@i_225& (0+255),w,b
  1417  000204  A0D8               	btfss	status,0,c
  1418  000206  EF07  F001         	goto	u2191
  1419  00020A  EF09  F001         	goto	u2190
  1420  00020E                     u2191:
  1421  00020E  EFEA  F000         	goto	l2875
  1422  000212                     u2190:
  1423  000212                     l2881:
  1424                           
  1425                           ;main.c: 100:                 case 'Z':
  1426  000212  EC37  F009         	call	_EUSART1_is_rx_ready	;wreg free
  1427  000216  0900               	iorlw	0
  1428  000218  B4D8               	btfsc	status,2,c
  1429  00021A  EF11  F001         	goto	u2201
  1430  00021E  EF13  F001         	goto	u2200
  1431  000222                     u2201:
  1432  000222  EF65  F000         	goto	l2831
  1433  000226                     u2200:
  1434  000226                     
  1435                           ;main.c: 101:                     for (i = 0; i < 40; i++) printf("\n");
  1436  000226  ECE3  F008         	call	_EUSART1_Read	;wreg free
  1437  00022A  0101               	movlb	1	; () banked
  1438  00022C  6F40               	movwf	main@cmd& (0+255),b
  1439                           
  1440                           ;main.c: 102:                     __asm("reset");
  1441  00022E  EFF0  F001         	goto	l2931
  1442  000232                     l2885:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;main.c: 105: 
  1446  000232  0E18               	movlw	low STR_10
  1447  000234  6F97               	movwf	printf@fmt& (0+255),b
  1448  000236  0EFF               	movlw	high STR_10
  1449  000238  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1450  00023A  ECCF  F008         	call	_printf	;wreg free
  1451                           
  1452                           ;main.c: 106: 
  1453  00023E  0EBF               	movlw	low STR_11
  1454  000240  0100               	movlb	0	; () banked
  1455  000242  6F97               	movwf	printf@fmt& (0+255),b
  1456  000244  0EFF               	movlw	high STR_11
  1457  000246  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1458  000248  ECCF  F008         	call	_printf	;wreg free
  1459                           
  1460                           ;main.c: 107: 
  1461  00024C  0EEB               	movlw	low STR_12
  1462  00024E  0100               	movlb	0	; () banked
  1463  000250  6F97               	movwf	printf@fmt& (0+255),b
  1464  000252  0EFF               	movlw	high STR_12
  1465  000254  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1466  000256  ECCF  F008         	call	_printf	;wreg free
  1467                           
  1468                           ;main.c: 108:                 case 'z':
  1469  00025A  0E99               	movlw	low STR_13
  1470  00025C  0100               	movlb	0	; () banked
  1471  00025E  6F97               	movwf	printf@fmt& (0+255),b
  1472  000260  0EFF               	movlw	high STR_13
  1473  000262  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1474  000264  ECCF  F008         	call	_printf	;wreg free
  1475                           
  1476                           ;main.c: 109:                     for (i = 0; i < 40; i++) printf("\n>");
  1477  000268  0E6A               	movlw	low STR_14
  1478  00026A  0100               	movlb	0	; () banked
  1479  00026C  6F97               	movwf	printf@fmt& (0+255),b
  1480  00026E  0EFF               	movlw	high STR_14
  1481  000270  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1482  000272  ECCF  F008         	call	_printf	;wreg free
  1483                           
  1484                           ;main.c: 110:                     break;
  1485  000276  0EED               	movlw	low STR_15
  1486  000278  0100               	movlb	0	; () banked
  1487  00027A  6F97               	movwf	printf@fmt& (0+255),b
  1488  00027C  0EFE               	movlw	high STR_15
  1489  00027E  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1490  000280  ECCF  F008         	call	_printf	;wreg free
  1491                           
  1492                           ;main.c: 111: 
  1493  000284  0E3B               	movlw	low STR_16
  1494  000286  0100               	movlb	0	; () banked
  1495  000288  6F97               	movwf	printf@fmt& (0+255),b
  1496  00028A  0EFE               	movlw	high STR_16
  1497  00028C  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1498  00028E  ECCF  F008         	call	_printf	;wreg free
  1499                           
  1500                           ;main.c: 113:                     thresholdRange += 5;
  1501  000292  0E18               	movlw	low STR_10
  1502  000294  0100               	movlb	0	; () banked
  1503  000296  6F97               	movwf	printf@fmt& (0+255),b
  1504  000298  0EFF               	movlw	high STR_10
  1505  00029A  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1506  00029C  ECCF  F008         	call	_printf	;wreg free
  1507                           
  1508                           ;main.c: 114:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRan
      +                          ge, 128 + thresholdRange);
  1509  0002A0  EF65  F000         	goto	l2831
  1510  0002A4                     l2887:
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;main.c: 120:                     }
  1514  0002A4  0EF2               	movlw	low STR_18
  1515  0002A6  6F97               	movwf	printf@fmt& (0+255),b
  1516  0002A8  0EFF               	movlw	high STR_18
  1517  0002AA  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1518  0002AC  ECCF  F008         	call	_printf	;wreg free
  1519                           
  1520                           ;main.c: 121:                     else{
  1521  0002B0  EF65  F000         	goto	l2831
  1522  0002B4                     l2889:
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;main.c: 127:                 case 'f':
  1526  0002B4  0E00               	movlw	0
  1527  0002B6  0101               	movlb	1	; () banked
  1528  0002B8  6F43               	movwf	main@i& (0+255),b
  1529  0002BA                     l2895:
  1530                           
  1531                           ; BSR set to: 1
  1532  0002BA  0EB6               	movlw	low (STR_5+51)
  1533  0002BC  0100               	movlb	0	; () banked
  1534  0002BE  6F97               	movwf	printf@fmt& (0+255),b
  1535  0002C0  0EFE               	movlw	high (STR_5+51)
  1536  0002C2  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1537  0002C4  ECCF  F008         	call	_printf	;wreg free
  1538  0002C8  0101               	movlb	1	; () banked
  1539  0002CA  2B43               	incf	main@i& (0+255),f,b
  1540  0002CC                     
  1541                           ; BSR set to: 1
  1542  0002CC  0E27               	movlw	39
  1543  0002CE  6543               	cpfsgt	main@i& (0+255),b
  1544  0002D0  EF6C  F001         	goto	u2211
  1545  0002D4  EF6E  F001         	goto	u2210
  1546  0002D8                     u2211:
  1547  0002D8  EF5D  F001         	goto	l2895
  1548  0002DC                     u2210:
  1549  0002DC                     
  1550                           ; BSR set to: 1
  1551  0002DC  00FF               	reset		;# 
  1552                           
  1553                           ;main.c: 129:                     fillBuffer = 1;
  1554  0002DE  EF65  F000         	goto	l2831
  1555  0002E2                     l2901:
  1556                           
  1557                           ; BSR set to: 0
  1558  0002E2  0E00               	movlw	0
  1559  0002E4  0101               	movlb	1	; () banked
  1560  0002E6  6F43               	movwf	main@i& (0+255),b
  1561  0002E8                     l2907:
  1562                           
  1563                           ; BSR set to: 1
  1564  0002E8  0EF5               	movlw	low (STR_18+3)
  1565  0002EA  0100               	movlb	0	; () banked
  1566  0002EC  6F97               	movwf	printf@fmt& (0+255),b
  1567  0002EE  0EFF               	movlw	high (STR_18+3)
  1568  0002F0  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1569  0002F2  ECCF  F008         	call	_printf	;wreg free
  1570  0002F6  0101               	movlb	1	; () banked
  1571  0002F8  2B43               	incf	main@i& (0+255),f,b
  1572  0002FA                     
  1573                           ; BSR set to: 1
  1574  0002FA  0E27               	movlw	39
  1575  0002FC  6543               	cpfsgt	main@i& (0+255),b
  1576  0002FE  EF83  F001         	goto	u2221
  1577  000302  EF85  F001         	goto	u2220
  1578  000306                     u2221:
  1579  000306  EF74  F001         	goto	l2907
  1580  00030A                     u2220:
  1581  00030A  EF65  F000         	goto	l2831
  1582  00030E                     l2913:
  1583                           
  1584                           ; BSR set to: 0
  1585  00030E  0E05               	movlw	5
  1586  000310  27C8               	addwf	_thresholdRange& (0+255),f,b
  1587  000312  0E00               	movlw	0
  1588  000314  23C9               	addwfc	(_thresholdRange+1)& (0+255),f,b
  1589  000316                     
  1590                           ; BSR set to: 0
  1591  000316  0E52               	movlw	low STR_21
  1592  000318  6F97               	movwf	printf@fmt& (0+255),b
  1593  00031A  0EFF               	movlw	high STR_21
  1594  00031C  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1595  00031E  51C8               	movf	_thresholdRange& (0+255),w,b
  1596  000320  0880               	sublw	128
  1597  000322  6F99               	movwf	(?_printf+2)& (0+255),b
  1598  000324  51C9               	movf	(_thresholdRange+1)& (0+255),w,b
  1599  000326  A0D8               	btfss	status,0,c
  1600  000328  2AE8               	incf	wreg,f,c
  1601  00032A  0800               	sublw	0
  1602  00032C  6F9A               	movwf	(?_printf+3)& (0+255),b
  1603  00032E  0E80               	movlw	128
  1604  000330  25C8               	addwf	_thresholdRange& (0+255),w,b
  1605  000332  6F9B               	movwf	(?_printf+4)& (0+255),b
  1606  000334  0E00               	movlw	0
  1607  000336  21C9               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1608  000338  6F9C               	movwf	(?_printf+5)& (0+255),b
  1609  00033A  ECCF  F008         	call	_printf	;wreg free
  1610  00033E  EF65  F000         	goto	l2831
  1611  000342                     l2917:
  1612                           
  1613                           ; BSR set to: 0
  1614  000342  51C8               	movf	_thresholdRange& (0+255),w,b
  1615  000344  11C9               	iorwf	(_thresholdRange+1)& (0+255),w,b
  1616  000346  B4D8               	btfsc	status,2,c
  1617  000348  EFA8  F001         	goto	u2231
  1618  00034C  EFAA  F001         	goto	u2230
  1619  000350                     u2231:
  1620  000350  EFC4  F001         	goto	l2923
  1621  000354                     u2230:
  1622  000354                     
  1623                           ; BSR set to: 0
  1624  000354  0E05               	movlw	5
  1625  000356  5FC8               	subwf	_thresholdRange& (0+255),f,b
  1626  000358  0E00               	movlw	0
  1627  00035A  5BC9               	subwfb	(_thresholdRange+1)& (0+255),f,b
  1628  00035C                     
  1629                           ; BSR set to: 0
  1630  00035C  0E52               	movlw	low STR_21
  1631  00035E  6F97               	movwf	printf@fmt& (0+255),b
  1632  000360  0EFF               	movlw	high STR_21
  1633  000362  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1634  000364  51C8               	movf	_thresholdRange& (0+255),w,b
  1635  000366  0880               	sublw	128
  1636  000368  6F99               	movwf	(?_printf+2)& (0+255),b
  1637  00036A  51C9               	movf	(_thresholdRange+1)& (0+255),w,b
  1638  00036C  A0D8               	btfss	status,0,c
  1639  00036E  2AE8               	incf	wreg,f,c
  1640  000370  0800               	sublw	0
  1641  000372  6F9A               	movwf	(?_printf+3)& (0+255),b
  1642  000374  0E80               	movlw	128
  1643  000376  25C8               	addwf	_thresholdRange& (0+255),w,b
  1644  000378  6F9B               	movwf	(?_printf+4)& (0+255),b
  1645  00037A  0E00               	movlw	0
  1646  00037C  21C9               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1647  00037E  6F9C               	movwf	(?_printf+5)& (0+255),b
  1648  000380  ECCF  F008         	call	_printf	;wreg free
  1649  000384  EF65  F000         	goto	l2831
  1650  000388                     l2923:
  1651                           
  1652                           ; BSR set to: 0
  1653  000388  0E52               	movlw	low STR_21
  1654  00038A  6F97               	movwf	printf@fmt& (0+255),b
  1655  00038C  0EFF               	movlw	high STR_21
  1656  00038E  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1657  000390  51C8               	movf	_thresholdRange& (0+255),w,b
  1658  000392  0880               	sublw	128
  1659  000394  6F99               	movwf	(?_printf+2)& (0+255),b
  1660  000396  51C9               	movf	(_thresholdRange+1)& (0+255),w,b
  1661  000398  A0D8               	btfss	status,0,c
  1662  00039A  2AE8               	incf	wreg,f,c
  1663  00039C  0800               	sublw	0
  1664  00039E  6F9A               	movwf	(?_printf+3)& (0+255),b
  1665  0003A0  0E80               	movlw	128
  1666  0003A2  25C8               	addwf	_thresholdRange& (0+255),w,b
  1667  0003A4  6F9B               	movwf	(?_printf+4)& (0+255),b
  1668  0003A6  0E00               	movlw	0
  1669  0003A8  21C9               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1670  0003AA  6F9C               	movwf	(?_printf+5)& (0+255),b
  1671  0003AC  ECCF  F008         	call	_printf	;wreg free
  1672  0003B0  0E82               	movlw	low STR_24
  1673  0003B2  0100               	movlb	0	; () banked
  1674  0003B4  6F97               	movwf	printf@fmt& (0+255),b
  1675  0003B6  0EFF               	movlw	high STR_24
  1676  0003B8  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1677  0003BA  ECCF  F008         	call	_printf	;wreg free
  1678  0003BE  EF65  F000         	goto	l2831
  1679  0003C2                     l2925:
  1680                           
  1681                           ; BSR set to: 0
  1682  0003C2  0E01               	movlw	1
  1683  0003C4  6E4A               	movwf	_fillBuffer^0,c
  1684  0003C6  EF65  F000         	goto	l2831
  1685  0003CA                     l2927:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 194:                     printf("Unknown key %c\r\n", cmd);
  1689  0003CA  0EAE               	movlw	low STR_25
  1690  0003CC  6F97               	movwf	printf@fmt& (0+255),b
  1691  0003CE  0EFF               	movlw	high STR_25
  1692  0003D0  6F98               	movwf	(printf@fmt+1)& (0+255),b
  1693  0003D2  C140  F099         	movff	main@cmd,?_printf+2
  1694  0003D6  6B9A               	clrf	(?_printf+3)& (0+255),b
  1695  0003D8  ECCF  F008         	call	_printf	;wreg free
  1696                           
  1697                           ;main.c: 195:                     break;
  1698  0003DC  EF65  F000         	goto	l2831
  1699  0003E0                     l2931:
  1700                           
  1701                           ; BSR set to: 1
  1702  0003E0  5140               	movf	main@cmd& (0+255),w,b
  1703  0003E2  0100               	movlb	0	; () banked
  1704  0003E4  6FA1               	movwf	??_main& (0+255),b
  1705  0003E6  6BA2               	clrf	(??_main+1)& (0+255),b
  1706                           
  1707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1708                           ; Switch size 1, requested type "simple"
  1709                           ; Number of cases is 1, Range of values is 0 to 0
  1710                           ; switch strategies available:
  1711                           ; Name         Instructions Cycles
  1712                           ; simple_byte            4     3 (average)
  1713                           ;	Chosen strategy is simple_byte
  1714  0003E8  51A2               	movf	(??_main+1)& (0+255),w,b
  1715  0003EA  0A00               	xorlw	0	; case 0
  1716  0003EC  B4D8               	btfsc	status,2,c
  1717  0003EE  EFFB  F001         	goto	l2993
  1718  0003F2  EFE5  F001         	goto	l2927
  1719  0003F6                     l2993:
  1720                           
  1721                           ; BSR set to: 0
  1722                           ; Switch size 1, requested type "simple"
  1723                           ; Number of cases is 7, Range of values is 63 to 122
  1724                           ; switch strategies available:
  1725                           ; Name         Instructions Cycles
  1726                           ; simple_byte           22    12 (average)
  1727                           ;	Chosen strategy is simple_byte
  1728  0003F6  51A1               	movf	??_main& (0+255),w,b
  1729  0003F8  0A3F               	xorlw	63	; case 63
  1730  0003FA  B4D8               	btfsc	status,2,c
  1731  0003FC  EF19  F001         	goto	l2885
  1732  000400  0A6B               	xorlw	107	; case 84
  1733  000402  B4D8               	btfsc	status,2,c
  1734  000404  EF87  F001         	goto	l2913
  1735  000408  0A0E               	xorlw	14	; case 90
  1736  00040A  B4D8               	btfsc	status,2,c
  1737  00040C  EF5A  F001         	goto	l2889
  1738  000410  0A3C               	xorlw	60	; case 102
  1739  000412  B4D8               	btfsc	status,2,c
  1740  000414  EFE1  F001         	goto	l2925
  1741  000418  0A09               	xorlw	9	; case 111
  1742  00041A  B4D8               	btfsc	status,2,c
  1743  00041C  EF52  F001         	goto	l2887
  1744  000420  0A1B               	xorlw	27	; case 116
  1745  000422  B4D8               	btfsc	status,2,c
  1746  000424  EFA1  F001         	goto	l2917
  1747  000428  0A0E               	xorlw	14	; case 122
  1748  00042A  B4D8               	btfsc	status,2,c
  1749  00042C  EF71  F001         	goto	l2901
  1750  000430  EFE5  F001         	goto	l2927
  1751  000434  EF27  F000         	goto	start
  1752  000438                     __end_of_main:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _printf *****************
  1756 ;; Defined at:
  1757 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  fmt             2   55[BANK0 ] PTR const unsigned char 
  1760 ;;		 -> STR_25(17), STR_24(23), STR_23(24), STR_22(24), 
  1761 ;;		 -> STR_21(24), STR_20(3), STR_19(2), STR_18(6), 
  1762 ;;		 -> STR_17(33), STR_16(72), STR_15(43), STR_14(24), 
  1763 ;;		 -> STR_13(21), STR_12(7), STR_11(15), STR_10(33), 
  1764 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  1765 ;;		 -> STR_5(53), STR_4(3), STR_3(9), STR_2(25), 
  1766 ;;		 -> STR_1(11), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  ap              2   63[BANK0 ] PTR void [1]
  1769 ;;		 -> ?_printf(2), 
  1770 ;;  ret             2    0        int 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  2   55[BANK0 ] int 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1780 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;Total ram usage:       10 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:   12
  1787 ;; This function calls:
  1788 ;;		_vfprintf
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text1
  1795  00119E                     __ptext1:
  1796                           	callstack 0
  1797  00119E                     _printf:
  1798                           	callstack 18
  1799  00119E  0E99               	movlw	low (?_printf+2)
  1800  0011A0  0100               	movlb	0	; () banked
  1801  0011A2  6F9F               	movwf	printf@ap& (0+255),b
  1802  0011A4  0E00               	movlw	high (?_printf+2)
  1803  0011A6  6FA0               	movwf	(printf@ap+1)& (0+255),b
  1804  0011A8                     
  1805                           ; BSR set to: 0
  1806  0011A8  0E00               	movlw	0
  1807  0011AA  6F8F               	movwf	vfprintf@fp& (0+255),b
  1808  0011AC  0E00               	movlw	0
  1809  0011AE  6F90               	movwf	(vfprintf@fp+1)& (0+255),b
  1810  0011B0  C097  F091         	movff	printf@fmt,vfprintf@fmt
  1811  0011B4  C098  F092         	movff	printf@fmt+1,vfprintf@fmt+1
  1812  0011B8  0E9F               	movlw	low printf@ap
  1813  0011BA  6F93               	movwf	vfprintf@ap& (0+255),b
  1814  0011BC  0E00               	movlw	high printf@ap
  1815  0011BE  6F94               	movwf	(vfprintf@ap+1)& (0+255),b
  1816  0011C0  ECB2  F007         	call	_vfprintf	;wreg free
  1817  0011C4  0012               	return		;funcret
  1818  0011C6                     __end_of_printf:
  1819                           	callstack 0
  1820                           
  1821 ;; *************** function _vfprintf *****************
  1822 ;; Defined at:
  1823 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  fp              2   47[BANK0 ] PTR struct _IO_FILE
  1826 ;;		 -> NULL(0), 
  1827 ;;  fmt             2   49[BANK0 ] PTR const unsigned char 
  1828 ;;		 -> STR_25(17), STR_24(23), STR_23(24), STR_22(24), 
  1829 ;;		 -> STR_21(24), STR_20(3), STR_19(2), STR_18(6), 
  1830 ;;		 -> STR_17(33), STR_16(72), STR_15(43), STR_14(24), 
  1831 ;;		 -> STR_13(21), STR_12(7), STR_11(15), STR_10(33), 
  1832 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  1833 ;;		 -> STR_5(53), STR_4(3), STR_3(9), STR_2(25), 
  1834 ;;		 -> STR_1(11), 
  1835 ;;  ap              2   51[BANK0 ] PTR PTR void 
  1836 ;;		 -> printf@ap(2), 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  cfmt            2   53[BANK0 ] PTR unsigned char 
  1839 ;;		 -> STR_25(17), STR_24(23), STR_23(24), STR_22(24), 
  1840 ;;		 -> STR_21(24), STR_20(3), STR_19(2), STR_18(6), 
  1841 ;;		 -> STR_17(33), STR_16(72), STR_15(43), STR_14(24), 
  1842 ;;		 -> STR_13(21), STR_12(7), STR_11(15), STR_10(33), 
  1843 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  1844 ;;		 -> STR_5(53), STR_4(3), STR_3(9), STR_2(25), 
  1845 ;;		 -> STR_1(11), 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2   47[BANK0 ] int 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1855 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;Total ram usage:        8 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:   11
  1862 ;; This function calls:
  1863 ;;		_vfpfcnvrt
  1864 ;; This function is called by:
  1865 ;;		_printf
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text2
  1870  000F64                     __ptext2:
  1871                           	callstack 0
  1872  000F64                     _vfprintf:
  1873                           	callstack 18
  1874  000F64                     
  1875                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1876  000F64  C091  F095         	movff	vfprintf@fmt,vfprintf@cfmt
  1877  000F68  C092  F096         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1878  000F6C                     
  1879                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1880  000F6C  0E00               	movlw	0
  1881  000F6E  0100               	movlb	0	; () banked
  1882  000F70  6FA4               	movwf	(_nout+1)& (0+255),b
  1883  000F72  0E00               	movlw	0
  1884  000F74  6FA3               	movwf	_nout& (0+255),b
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1887  000F76  EFD0  F007         	goto	l2769
  1888  000F7A                     l2767:
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1892  000F7A  C08F  F031         	movff	vfprintf@fp,vfpfcnvrt@fp
  1893  000F7E  C090  F032         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1894  000F82  0E95               	movlw	low vfprintf@cfmt
  1895  000F84  6E33               	movwf	vfpfcnvrt@fmt^0,c
  1896  000F86  0E00               	movlw	high vfprintf@cfmt
  1897  000F88  6E34               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1898  000F8A  C093  F035         	movff	vfprintf@ap,vfpfcnvrt@ap
  1899  000F8E  C094  F036         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1900  000F92  EC8D  F003         	call	_vfpfcnvrt	;wreg free
  1901  000F96  5031               	movf	?_vfpfcnvrt^0,w,c
  1902  000F98  0100               	movlb	0	; () banked
  1903  000F9A  27A3               	addwf	_nout& (0+255),f,b
  1904  000F9C  5032               	movf	(?_vfpfcnvrt+1)^0,w,c
  1905  000F9E  23A4               	addwfc	(_nout+1)& (0+255),f,b
  1906  000FA0                     l2769:
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1910  000FA0  C095  FFF6         	movff	vfprintf@cfmt,tblptrl
  1911  000FA4  C096  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1912  000FA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1913  000FA8  6AF8               	clrf	tblptru,c
  1914  000FAA                     	endif
  1915  000FAA                     	if	0	;tblptru may be non-zero
  1916  000FAA                     	endif
  1917  000FAA  0008               	tblrd		*
  1918  000FAC  50F5               	movf	tablat,w,c
  1919  000FAE  0900               	iorlw	0
  1920  000FB0  A4D8               	btfss	status,2,c
  1921  000FB2  EFDD  F007         	goto	u2071
  1922  000FB6  EFDF  F007         	goto	u2070
  1923  000FBA                     u2071:
  1924  000FBA  EFBD  F007         	goto	l2767
  1925  000FBE                     u2070:
  1926  000FBE                     
  1927                           ; BSR set to: 0
  1928                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1929  000FBE  C0A3  F08F         	movff	_nout,?_vfprintf
  1930  000FC2  C0A4  F090         	movff	_nout+1,?_vfprintf+1
  1931  000FC6                     
  1932                           ; BSR set to: 0
  1933  000FC6  0012               	return		;funcret
  1934  000FC8                     __end_of_vfprintf:
  1935                           	callstack 0
  1936                           
  1937 ;; *************** function _vfpfcnvrt *****************
  1938 ;; Defined at:
  1939 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  fp              2   48[COMRAM] PTR struct _IO_FILE
  1942 ;;		 -> NULL(0), 
  1943 ;;  fmt             2   50[COMRAM] PTR PTR unsigned char 
  1944 ;;		 -> vfprintf@cfmt(2), 
  1945 ;;  ap              2   52[COMRAM] PTR PTR void 
  1946 ;;		 -> printf@ap(2), 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  ll              8   38[BANK0 ] long long 
  1949 ;;  llu             8    0        unsigned long long 
  1950 ;;  f               4    0        unsigned long long 
  1951 ;;  vp              3    0        PTR void 
  1952 ;;  ct              3    0        unsigned char [3]
  1953 ;;  cp              3    0        PTR unsigned char 
  1954 ;;  i               2    0        int 
  1955 ;;  done            2    0        int 
  1956 ;;  c               1   46[BANK0 ] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  2   48[COMRAM] int 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1966 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Totals:         6      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;Total ram usage:       17 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:   10
  1973 ;; This function calls:
  1974 ;;		_ctoa
  1975 ;;		_dtoa
  1976 ;;		_fputc
  1977 ;; This function is called by:
  1978 ;;		_vfprintf
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text3
  1983  00071A                     __ptext3:
  1984                           	callstack 0
  1985  00071A                     _vfpfcnvrt:
  1986                           	callstack 18
  1987  00071A                     
  1988                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1989  00071A  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1990  00071E  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1991  000722  CFDE FFF6          	movff	postinc2,tblptrl
  1992  000726  CFDD FFF7          	movff	postdec2,tblptrh
  1993  00072A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1994  00072A  6AF8               	clrf	tblptru,c
  1995  00072C                     	endif
  1996  00072C                     	if	0	;tblptru may be non-zero
  1997  00072C                     	endif
  1998  00072C  0008               	tblrd		*
  1999  00072E  50F5               	movf	tablat,w,c
  2000  000730  0A25               	xorlw	37
  2001  000732  A4D8               	btfss	status,2,c
  2002  000734  EF9E  F003         	goto	u2011
  2003  000738  EFA0  F003         	goto	u2010
  2004  00073C                     u2011:
  2005  00073C  EF8A  F004         	goto	l2719
  2006  000740                     u2010:
  2007  000740                     
  2008                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2009  000740  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2010  000744  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2011  000748  2ADE               	incf	postinc2,f,c
  2012  00074A  0E00               	movlw	0
  2013  00074C  22DD               	addwfc	postdec2,f,c
  2014  00074E                     
  2015                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2016  00074E  0E00               	movlw	0
  2017  000750  6E38               	movwf	(_width+1)^0,c
  2018  000752  0E00               	movlw	0
  2019  000754  6E37               	movwf	_width^0,c
  2020  000756  C037  F03B         	movff	_width,_flags
  2021  00075A  C038  F03C         	movff	_width+1,_flags+1
  2022  00075E                     
  2023                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2024  00075E  6839               	setf	_prec^0,c
  2025  000760  683A               	setf	(_prec+1)^0,c
  2026  000762                     
  2027                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2028  000762  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2029  000766  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2030  00076A  CFDE FFF6          	movff	postinc2,tblptrl
  2031  00076E  CFDD FFF7          	movff	postdec2,tblptrh
  2032  000772                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2033  000772  6AF8               	clrf	tblptru,c
  2034  000774                     	endif
  2035  000774                     	if	0	;tblptru may be non-zero
  2036  000774                     	endif
  2037  000774  0008               	tblrd		*
  2038  000776  50F5               	movf	tablat,w,c
  2039  000778  0A63               	xorlw	99
  2040  00077A  A4D8               	btfss	status,2,c
  2041  00077C  EFC2  F003         	goto	u2021
  2042  000780  EFC4  F003         	goto	u2020
  2043  000784                     u2021:
  2044  000784  EFEC  F003         	goto	l2693
  2045  000788                     u2020:
  2046  000788                     
  2047                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2048  000788  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2049  00078C  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2050  000790  2ADE               	incf	postinc2,f,c
  2051  000792  0E00               	movlw	0
  2052  000794  22DD               	addwfc	postdec2,f,c
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2055  000796  C035  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2056  00079A  C036  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2057  00079E  CFDF F084          	movff	indf2,??_vfpfcnvrt
  2058  0007A2  0E02               	movlw	2
  2059  0007A4  26DE               	addwf	postinc2,f,c
  2060  0007A6  CFDF F085          	movff	indf2,??_vfpfcnvrt+1
  2061  0007AA  0E00               	movlw	0
  2062  0007AC  22DD               	addwfc	postdec2,f,c
  2063  0007AE  C084  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2064  0007B2  C085  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2065  0007B6  50DF               	movf	indf2,w,c
  2066  0007B8  0100               	movlb	0	; () banked
  2067  0007BA  6F8E               	movwf	vfpfcnvrt@c& (0+255),b
  2068  0007BC                     
  2069                           ; BSR set to: 0
  2070                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2071  0007BC  C031  F01F         	movff	vfpfcnvrt@fp,ctoa@fp
  2072  0007C0  C032  F020         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2073  0007C4  C08E  F021         	movff	vfpfcnvrt@c,ctoa@c
  2074  0007C8  EC9C  F006         	call	_ctoa	;wreg free
  2075  0007CC  C01F  F031         	movff	?_ctoa,?_vfpfcnvrt
  2076  0007D0  C020  F032         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2077  0007D4  EFA6  F004         	goto	l1100
  2078  0007D8                     l2693:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2081  0007D8  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2082  0007DC  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2083  0007E0  CFDE FFF6          	movff	postinc2,tblptrl
  2084  0007E4  CFDD FFF7          	movff	postdec2,tblptrh
  2085  0007E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2086  0007E8  6AF8               	clrf	tblptru,c
  2087  0007EA                     	endif
  2088  0007EA                     	if	0	;tblptru may be non-zero
  2089  0007EA                     	endif
  2090  0007EA  0008               	tblrd		*
  2091  0007EC  50F5               	movf	tablat,w,c
  2092  0007EE  0A64               	xorlw	100
  2093  0007F0  B4D8               	btfsc	status,2,c
  2094  0007F2  EFFD  F003         	goto	u2031
  2095  0007F6  EFFF  F003         	goto	u2030
  2096  0007FA                     u2031:
  2097  0007FA  EF12  F004         	goto	l2697
  2098  0007FE                     u2030:
  2099  0007FE  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2100  000802  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2101  000806  CFDE FFF6          	movff	postinc2,tblptrl
  2102  00080A  CFDD FFF7          	movff	postdec2,tblptrh
  2103  00080E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2104  00080E  6AF8               	clrf	tblptru,c
  2105  000810                     	endif
  2106  000810                     	if	0	;tblptru may be non-zero
  2107  000810                     	endif
  2108  000810  0008               	tblrd		*
  2109  000812  50F5               	movf	tablat,w,c
  2110  000814  0A69               	xorlw	105
  2111  000816  A4D8               	btfss	status,2,c
  2112  000818  EF10  F004         	goto	u2041
  2113  00081C  EF12  F004         	goto	u2040
  2114  000820                     u2041:
  2115  000820  EF53  F004         	goto	l2703
  2116  000824                     u2040:
  2117  000824                     l2697:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2120  000824  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2121  000828  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2122  00082C  2ADE               	incf	postinc2,f,c
  2123  00082E  0E00               	movlw	0
  2124  000830  22DD               	addwfc	postdec2,f,c
  2125                           
  2126                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2127  000832  C035  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2128  000836  C036  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2129  00083A  CFDF F084          	movff	indf2,??_vfpfcnvrt
  2130  00083E  0E02               	movlw	2
  2131  000840  26DE               	addwf	postinc2,f,c
  2132  000842  CFDF F085          	movff	indf2,??_vfpfcnvrt+1
  2133  000846  0E00               	movlw	0
  2134  000848  22DD               	addwfc	postdec2,f,c
  2135  00084A  C084  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2136  00084E  C085  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2137  000852  CFDE F086          	movff	postinc2,vfpfcnvrt@ll
  2138  000856  CFDD F087          	movff	postdec2,vfpfcnvrt@ll+1
  2139  00085A  0100               	movlb	0	; () banked
  2140  00085C  0E00               	movlw	0
  2141  00085E  BF87               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2142  000860  0EFF               	movlw	-1
  2143  000862  6F88               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2144  000864  6F89               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2145  000866  6F8A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2146  000868  6F8B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2147  00086A  6F8C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2148  00086C  6F8D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2149  00086E                     
  2150                           ; BSR set to: 0
  2151                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2152  00086E  C031  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  2153  000872  C032  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2154  000876  C086  F062         	movff	vfpfcnvrt@ll,dtoa@d
  2155  00087A  C087  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2156  00087E  C088  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2157  000882  C089  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2158  000886  C08A  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2159  00088A  C08B  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2160  00088E  C08C  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2161  000892  C08D  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2162  000896  EC1C  F002         	call	_dtoa	;wreg free
  2163  00089A  C060  F031         	movff	?_dtoa,?_vfpfcnvrt
  2164  00089E  C061  F032         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2165  0008A2  EFA6  F004         	goto	l1100
  2166  0008A6                     l2703:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2169  0008A6  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2170  0008AA  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2171  0008AE  CFDE FFF6          	movff	postinc2,tblptrl
  2172  0008B2  CFDD FFF7          	movff	postdec2,tblptrh
  2173  0008B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2174  0008B6  6AF8               	clrf	tblptru,c
  2175  0008B8                     	endif
  2176  0008B8                     	if	0	;tblptru may be non-zero
  2177  0008B8                     	endif
  2178  0008B8  0008               	tblrd		*
  2179  0008BA  50F5               	movf	tablat,w,c
  2180  0008BC  0A25               	xorlw	37
  2181  0008BE  A4D8               	btfss	status,2,c
  2182  0008C0  EF64  F004         	goto	u2051
  2183  0008C4  EF66  F004         	goto	u2050
  2184  0008C8                     u2051:
  2185  0008C8  EF7D  F004         	goto	l2713
  2186  0008CC                     u2050:
  2187  0008CC                     
  2188                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2189  0008CC  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2190  0008D0  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2191  0008D4  2ADE               	incf	postinc2,f,c
  2192  0008D6  0E00               	movlw	0
  2193  0008D8  22DD               	addwfc	postdec2,f,c
  2194  0008DA                     
  2195                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2196  0008DA  0E00               	movlw	0
  2197  0008DC  6E17               	movwf	(fputc@c+1)^0,c
  2198  0008DE  0E25               	movlw	37
  2199  0008E0  6E16               	movwf	fputc@c^0,c
  2200  0008E2  C031  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2201  0008E6  C032  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2202  0008EA  EC67  F007         	call	_fputc	;wreg free
  2203  0008EE                     l2709:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2206  0008EE  0E00               	movlw	0
  2207  0008F0  6E32               	movwf	(?_vfpfcnvrt+1)^0,c
  2208  0008F2  0E01               	movlw	1
  2209  0008F4  6E31               	movwf	?_vfpfcnvrt^0,c
  2210  0008F6  EFA6  F004         	goto	l1100
  2211  0008FA                     l2713:
  2212                           
  2213                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2214  0008FA  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2215  0008FE  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2216  000902  2ADE               	incf	postinc2,f,c
  2217  000904  0E00               	movlw	0
  2218  000906  22DD               	addwfc	postdec2,f,c
  2219  000908                     
  2220                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2221  000908  0E00               	movlw	0
  2222  00090A  6E32               	movwf	(?_vfpfcnvrt+1)^0,c
  2223  00090C  0E00               	movlw	0
  2224  00090E  6E31               	movwf	?_vfpfcnvrt^0,c
  2225  000910  EFA6  F004         	goto	l1100
  2226  000914                     l2719:
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2229  000914  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2230  000918  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2231  00091C  CFDE FFF6          	movff	postinc2,tblptrl
  2232  000920  CFDD FFF7          	movff	postdec2,tblptrh
  2233  000924                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2234  000924  6AF8               	clrf	tblptru,c
  2235  000926                     	endif
  2236  000926                     	if	0	;tblptru may be non-zero
  2237  000926                     	endif
  2238  000926  0008               	tblrd		*
  2239  000928  50F5               	movf	tablat,w,c
  2240  00092A  6E16               	movwf	fputc@c^0,c
  2241  00092C  6A17               	clrf	(fputc@c+1)^0,c
  2242  00092E  C031  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2243  000932  C032  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2244  000936  EC67  F007         	call	_fputc	;wreg free
  2245  00093A                     
  2246                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2247  00093A  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2248  00093E  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2249  000942  2ADE               	incf	postinc2,f,c
  2250  000944  0E00               	movlw	0
  2251  000946  22DD               	addwfc	postdec2,f,c
  2252  000948  EF77  F004         	goto	l2709
  2253  00094C                     l1100:
  2254  00094C  0012               	return		;funcret
  2255  00094E                     __end_of_vfpfcnvrt:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _dtoa *****************
  2259 ;; Defined at:
  2260 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2263 ;;		 -> NULL(0), 
  2264 ;;  d               8    2[BANK0 ] long long 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  n               8   26[BANK0 ] long long 
  2267 ;;  i               2   34[BANK0 ] int 
  2268 ;;  s               2   24[BANK0 ] int 
  2269 ;;  w               2   22[BANK0 ] int 
  2270 ;;  p               2   20[BANK0 ] int 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  2    0[BANK0 ] int 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2280 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;Total ram usage:       36 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    9
  2287 ;; This function calls:
  2288 ;;		___aodiv
  2289 ;;		___aomod
  2290 ;;		_abs
  2291 ;;		_pad
  2292 ;; This function is called by:
  2293 ;;		_vfpfcnvrt
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text4
  2298  000438                     __ptext4:
  2299                           	callstack 0
  2300  000438                     _dtoa:
  2301                           	callstack 18
  2302  000438                     
  2303                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2304  000438  C062  F07A         	movff	dtoa@d,dtoa@n
  2305  00043C  C063  F07B         	movff	dtoa@d+1,dtoa@n+1
  2306  000440  C064  F07C         	movff	dtoa@d+2,dtoa@n+2
  2307  000444  C065  F07D         	movff	dtoa@d+3,dtoa@n+3
  2308  000448  C066  F07E         	movff	dtoa@d+4,dtoa@n+4
  2309  00044C  C067  F07F         	movff	dtoa@d+5,dtoa@n+5
  2310  000450  C068  F080         	movff	dtoa@d+6,dtoa@n+6
  2311  000454  C069  F081         	movff	dtoa@d+7,dtoa@n+7
  2312  000458                     
  2313                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2314  000458  0100               	movlb	0	; () banked
  2315  00045A  BF81               	btfsc	(dtoa@n+7)& (0+255),7,b
  2316  00045C  EF32  F002         	goto	u1861
  2317  000460  EF35  F002         	goto	u1860
  2318  000464                     u1861:
  2319  000464  0E01               	movlw	1
  2320  000466  EF36  F002         	goto	u1870
  2321  00046A                     u1860:
  2322  00046A  0E00               	movlw	0
  2323  00046C                     u1870:
  2324  00046C  6F78               	movwf	dtoa@s& (0+255),b
  2325  00046E  6B79               	clrf	(dtoa@s+1)& (0+255),b
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2328  000470  5178               	movf	dtoa@s& (0+255),w,b
  2329  000472  1179               	iorwf	(dtoa@s+1)& (0+255),w,b
  2330  000474  B4D8               	btfsc	status,2,c
  2331  000476  EF3F  F002         	goto	u1881
  2332  00047A  EF41  F002         	goto	u1880
  2333  00047E                     u1881:
  2334  00047E  EF51  F002         	goto	l2613
  2335  000482                     u1880:
  2336  000482                     
  2337                           ; BSR set to: 0
  2338                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2339  000482  1F81               	comf	(dtoa@n+7)& (0+255),f,b
  2340  000484  1F80               	comf	(dtoa@n+6)& (0+255),f,b
  2341  000486  1F7F               	comf	(dtoa@n+5)& (0+255),f,b
  2342  000488  1F7E               	comf	(dtoa@n+4)& (0+255),f,b
  2343  00048A  1F7D               	comf	(dtoa@n+3)& (0+255),f,b
  2344  00048C  1F7C               	comf	(dtoa@n+2)& (0+255),f,b
  2345  00048E  1F7B               	comf	(dtoa@n+1)& (0+255),f,b
  2346  000490  6D7A               	negf	dtoa@n& (0+255),b
  2347  000492  0E00               	movlw	0
  2348  000494  237B               	addwfc	(dtoa@n+1)& (0+255),f,b
  2349  000496  237C               	addwfc	(dtoa@n+2)& (0+255),f,b
  2350  000498  237D               	addwfc	(dtoa@n+3)& (0+255),f,b
  2351  00049A  237E               	addwfc	(dtoa@n+4)& (0+255),f,b
  2352  00049C  237F               	addwfc	(dtoa@n+5)& (0+255),f,b
  2353  00049E  2380               	addwfc	(dtoa@n+6)& (0+255),f,b
  2354  0004A0  2381               	addwfc	(dtoa@n+7)& (0+255),f,b
  2355  0004A2                     l2613:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2359  0004A2  BE3A               	btfsc	(_prec+1)^0,7,c
  2360  0004A4  EF56  F002         	goto	u1891
  2361  0004A8  EF58  F002         	goto	u1890
  2362  0004AC                     u1891:
  2363  0004AC  EF59  F002         	goto	l2617
  2364  0004B0                     u1890:
  2365  0004B0                     
  2366                           ; BSR set to: 0
  2367                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2368  0004B0  923B               	bcf	_flags^0,1,c
  2369  0004B2                     l2617:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2373  0004B2  BE3A               	btfsc	(_prec+1)^0,7,c
  2374  0004B4  EF66  F002         	goto	u1900
  2375  0004B8  503A               	movf	(_prec+1)^0,w,c
  2376  0004BA  E106               	bnz	u1901
  2377  0004BC  0439               	decf	_prec^0,w,c
  2378  0004BE  B0D8               	btfsc	status,0,c
  2379  0004C0  EF64  F002         	goto	u1901
  2380  0004C4  EF66  F002         	goto	u1900
  2381  0004C8                     u1901:
  2382  0004C8  EF6C  F002         	goto	l1075
  2383  0004CC                     u1900:
  2384  0004CC                     
  2385                           ; BSR set to: 0
  2386  0004CC  0E00               	movlw	0
  2387  0004CE  6F75               	movwf	(dtoa@p+1)& (0+255),b
  2388  0004D0  0E01               	movlw	1
  2389  0004D2  6F74               	movwf	dtoa@p& (0+255),b
  2390  0004D4  EF70  F002         	goto	l1077
  2391  0004D8                     l1075:
  2392                           
  2393                           ; BSR set to: 0
  2394  0004D8  C039  F074         	movff	_prec,dtoa@p
  2395  0004DC  C03A  F075         	movff	_prec+1,dtoa@p+1
  2396  0004E0                     l1077:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2400  0004E0  C037  F076         	movff	_width,dtoa@w
  2401  0004E4  C038  F077         	movff	_width+1,dtoa@w+1
  2402  0004E8                     
  2403                           ; BSR set to: 0
  2404                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2405  0004E8  5178               	movf	dtoa@s& (0+255),w,b
  2406  0004EA  1179               	iorwf	(dtoa@s+1)& (0+255),w,b
  2407  0004EC  A4D8               	btfss	status,2,c
  2408  0004EE  EF7B  F002         	goto	u1911
  2409  0004F2  EF7D  F002         	goto	u1910
  2410  0004F6                     u1911:
  2411  0004F6  EF84  F002         	goto	l2625
  2412  0004FA                     u1910:
  2413  0004FA                     
  2414                           ; BSR set to: 0
  2415  0004FA  A43B               	btfss	_flags^0,2,c
  2416  0004FC  EF82  F002         	goto	u1921
  2417  000500  EF84  F002         	goto	u1920
  2418  000504                     u1921:
  2419  000504  EF87  F002         	goto	l2627
  2420  000508                     u1920:
  2421  000508                     l2625:
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  2425  000508  0776               	decf	dtoa@w& (0+255),f,b
  2426  00050A  A0D8               	btfss	status,0,c
  2427  00050C  0777               	decf	(dtoa@w+1)& (0+255),f,b
  2428  00050E                     l2627:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2432  00050E  0E00               	movlw	0
  2433  000510  6F83               	movwf	(dtoa@i+1)& (0+255),b
  2434  000512  0E1F               	movlw	31
  2435  000514  6F82               	movwf	dtoa@i& (0+255),b
  2436  000516                     
  2437                           ; BSR set to: 0
  2438                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2439  000516  0E00               	movlw	0
  2440  000518  6FC7               	movwf	(_dbuf+31)& (0+255),b
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2443  00051A  EF0C  F003         	goto	l2641
  2444  00051E                     l2631:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  2448  00051E  0782               	decf	dtoa@i& (0+255),f,b
  2449  000520  A0D8               	btfss	status,0,c
  2450  000522  0783               	decf	(dtoa@i+1)& (0+255),f,b
  2451  000524                     
  2452                           ; BSR set to: 0
  2453                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2454  000524  0EA8               	movlw	low _dbuf
  2455  000526  2582               	addwf	dtoa@i& (0+255),w,b
  2456  000528  6ED9               	movwf	fsr2l,c
  2457  00052A  0E00               	movlw	high _dbuf
  2458  00052C  2183               	addwfc	(dtoa@i+1)& (0+255),w,b
  2459  00052E  6EDA               	movwf	fsr2h,c
  2460  000530  C07A  F014         	movff	dtoa@n,___aomod@dividend
  2461  000534  C07B  F015         	movff	dtoa@n+1,___aomod@dividend+1
  2462  000538  C07C  F016         	movff	dtoa@n+2,___aomod@dividend+2
  2463  00053C  C07D  F017         	movff	dtoa@n+3,___aomod@dividend+3
  2464  000540  C07E  F018         	movff	dtoa@n+4,___aomod@dividend+4
  2465  000544  C07F  F019         	movff	dtoa@n+5,___aomod@dividend+5
  2466  000548  C080  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  2467  00054C  C081  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  2468  000550  0E0A               	movlw	10
  2469  000552  6E1C               	movwf	___aomod@divisor^0,c
  2470  000554  0E00               	movlw	0
  2471  000556  6E1D               	movwf	(___aomod@divisor+1)^0,c
  2472  000558  0E00               	movlw	0
  2473  00055A  6E1E               	movwf	(___aomod@divisor+2)^0,c
  2474  00055C  0E00               	movlw	0
  2475  00055E  6E1F               	movwf	(___aomod@divisor+3)^0,c
  2476  000560  0E00               	movlw	0
  2477  000562  6E20               	movwf	(___aomod@divisor+4)^0,c
  2478  000564  0E00               	movlw	0
  2479  000566  6E21               	movwf	(___aomod@divisor+5)^0,c
  2480  000568  0E00               	movlw	0
  2481  00056A  6E22               	movwf	(___aomod@divisor+6)^0,c
  2482  00056C  0E00               	movlw	0
  2483  00056E  6E23               	movwf	(___aomod@divisor+7)^0,c
  2484  000570  EC6B  F005         	call	___aomod	;wreg free
  2485  000574  C014  F06A         	movff	?___aomod,??_dtoa
  2486  000578  C015  F06B         	movff	?___aomod+1,??_dtoa+1
  2487  00057C  C016  F06C         	movff	?___aomod+2,??_dtoa+2
  2488  000580  C017  F06D         	movff	?___aomod+3,??_dtoa+3
  2489  000584  C018  F06E         	movff	?___aomod+4,??_dtoa+4
  2490  000588  C019  F06F         	movff	?___aomod+5,??_dtoa+5
  2491  00058C  C01A  F070         	movff	?___aomod+6,??_dtoa+6
  2492  000590  C01B  F071         	movff	?___aomod+7,??_dtoa+7
  2493  000594  C06A  F026         	movff	??_dtoa,abs@a
  2494  000598  C06C  F027         	movff	??_dtoa+2,abs@a+1
  2495  00059C  EC29  F008         	call	_abs	;wreg free
  2496  0005A0  5026               	movf	?_abs^0,w,c
  2497  0005A2  0F30               	addlw	48
  2498  0005A4  6EDF               	movwf	indf2,c
  2499  0005A6                     
  2500                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2501  0005A6  0100               	movlb	0	; () banked
  2502  0005A8  0774               	decf	dtoa@p& (0+255),f,b
  2503  0005AA  A0D8               	btfss	status,0,c
  2504  0005AC  0775               	decf	(dtoa@p+1)& (0+255),f,b
  2505  0005AE                     
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2508  0005AE  0776               	decf	dtoa@w& (0+255),f,b
  2509  0005B0  A0D8               	btfss	status,0,c
  2510  0005B2  0777               	decf	(dtoa@w+1)& (0+255),f,b
  2511  0005B4                     
  2512                           ; BSR set to: 0
  2513                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2514  0005B4  C07A  F014         	movff	dtoa@n,___aodiv@dividend
  2515  0005B8  C07B  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  2516  0005BC  C07C  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  2517  0005C0  C07D  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  2518  0005C4  C07E  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  2519  0005C8  C07F  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  2520  0005CC  C080  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  2521  0005D0  C081  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  2522  0005D4  0E0A               	movlw	10
  2523  0005D6  6E1C               	movwf	___aodiv@divisor^0,c
  2524  0005D8  0E00               	movlw	0
  2525  0005DA  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  2526  0005DC  0E00               	movlw	0
  2527  0005DE  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  2528  0005E0  0E00               	movlw	0
  2529  0005E2  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  2530  0005E4  0E00               	movlw	0
  2531  0005E6  6E20               	movwf	(___aodiv@divisor+4)^0,c
  2532  0005E8  0E00               	movlw	0
  2533  0005EA  6E21               	movwf	(___aodiv@divisor+5)^0,c
  2534  0005EC  0E00               	movlw	0
  2535  0005EE  6E22               	movwf	(___aodiv@divisor+6)^0,c
  2536  0005F0  0E00               	movlw	0
  2537  0005F2  6E23               	movwf	(___aodiv@divisor+7)^0,c
  2538  0005F4  ECA7  F004         	call	___aodiv	;wreg free
  2539  0005F8  C014  F07A         	movff	?___aodiv,dtoa@n
  2540  0005FC  C015  F07B         	movff	?___aodiv+1,dtoa@n+1
  2541  000600  C016  F07C         	movff	?___aodiv+2,dtoa@n+2
  2542  000604  C017  F07D         	movff	?___aodiv+3,dtoa@n+3
  2543  000608  C018  F07E         	movff	?___aodiv+4,dtoa@n+4
  2544  00060C  C019  F07F         	movff	?___aodiv+5,dtoa@n+5
  2545  000610  C01A  F080         	movff	?___aodiv+6,dtoa@n+6
  2546  000614  C01B  F081         	movff	?___aodiv+7,dtoa@n+7
  2547  000618                     l2641:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2550  000618  0100               	movlb	0	; () banked
  2551  00061A  BF83               	btfsc	(dtoa@i+1)& (0+255),7,b
  2552  00061C  EF18  F003         	goto	u1931
  2553  000620  5183               	movf	(dtoa@i+1)& (0+255),w,b
  2554  000622  E108               	bnz	u1930
  2555  000624  0582               	decf	dtoa@i& (0+255),w,b
  2556  000626  A0D8               	btfss	status,0,c
  2557  000628  EF18  F003         	goto	u1931
  2558  00062C  EF1A  F003         	goto	u1930
  2559  000630                     u1931:
  2560  000630  EF4A  F003         	goto	l2651
  2561  000634                     u1930:
  2562  000634                     
  2563                           ; BSR set to: 0
  2564  000634  517A               	movf	dtoa@n& (0+255),w,b
  2565  000636  117B               	iorwf	(dtoa@n+1)& (0+255),w,b
  2566  000638  117C               	iorwf	(dtoa@n+2)& (0+255),w,b
  2567  00063A  117D               	iorwf	(dtoa@n+3)& (0+255),w,b
  2568  00063C  117E               	iorwf	(dtoa@n+4)& (0+255),w,b
  2569  00063E  117F               	iorwf	(dtoa@n+5)& (0+255),w,b
  2570  000640  1180               	iorwf	(dtoa@n+6)& (0+255),w,b
  2571  000642  1181               	iorwf	(dtoa@n+7)& (0+255),w,b
  2572  000644  A4D8               	btfss	status,2,c
  2573  000646  EF27  F003         	goto	u1941
  2574  00064A  EF29  F003         	goto	u1940
  2575  00064E                     u1941:
  2576  00064E  EF8F  F002         	goto	l2631
  2577  000652                     u1940:
  2578  000652                     
  2579                           ; BSR set to: 0
  2580  000652  BF75               	btfsc	(dtoa@p+1)& (0+255),7,b
  2581  000654  EF36  F003         	goto	u1950
  2582  000658  5175               	movf	(dtoa@p+1)& (0+255),w,b
  2583  00065A  E106               	bnz	u1951
  2584  00065C  0574               	decf	dtoa@p& (0+255),w,b
  2585  00065E  B0D8               	btfsc	status,0,c
  2586  000660  EF34  F003         	goto	u1951
  2587  000664  EF36  F003         	goto	u1950
  2588  000668                     u1951:
  2589  000668  EF8F  F002         	goto	l2631
  2590  00066C                     u1950:
  2591  00066C                     
  2592                           ; BSR set to: 0
  2593  00066C  BF77               	btfsc	(dtoa@w+1)& (0+255),7,b
  2594  00066E  EF41  F003         	goto	u1961
  2595  000672  5177               	movf	(dtoa@w+1)& (0+255),w,b
  2596  000674  E108               	bnz	u1960
  2597  000676  0576               	decf	dtoa@w& (0+255),w,b
  2598  000678  A0D8               	btfss	status,0,c
  2599  00067A  EF41  F003         	goto	u1961
  2600  00067E  EF43  F003         	goto	u1960
  2601  000682                     u1961:
  2602  000682  EF4A  F003         	goto	l2651
  2603  000686                     u1960:
  2604  000686                     
  2605                           ; BSR set to: 0
  2606  000686  B23B               	btfsc	_flags^0,1,c
  2607  000688  EF48  F003         	goto	u1971
  2608  00068C  EF4A  F003         	goto	u1970
  2609  000690                     u1971:
  2610  000690  EF8F  F002         	goto	l2631
  2611  000694                     u1970:
  2612  000694                     l2651:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2616  000694  5178               	movf	dtoa@s& (0+255),w,b
  2617  000696  1179               	iorwf	(dtoa@s+1)& (0+255),w,b
  2618  000698  A4D8               	btfss	status,2,c
  2619  00069A  EF51  F003         	goto	u1981
  2620  00069E  EF53  F003         	goto	u1980
  2621  0006A2                     u1981:
  2622  0006A2  EF5A  F003         	goto	l2655
  2623  0006A6                     u1980:
  2624  0006A6                     
  2625                           ; BSR set to: 0
  2626  0006A6  A43B               	btfss	_flags^0,2,c
  2627  0006A8  EF58  F003         	goto	u1991
  2628  0006AC  EF5A  F003         	goto	u1990
  2629  0006B0                     u1991:
  2630  0006B0  EF78  F003         	goto	l2665
  2631  0006B4                     u1990:
  2632  0006B4                     l2655:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  2636  0006B4  0782               	decf	dtoa@i& (0+255),f,b
  2637  0006B6  A0D8               	btfss	status,0,c
  2638  0006B8  0783               	decf	(dtoa@i+1)& (0+255),f,b
  2639  0006BA                     
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2642  0006BA  5178               	movf	dtoa@s& (0+255),w,b
  2643  0006BC  1179               	iorwf	(dtoa@s+1)& (0+255),w,b
  2644  0006BE  A4D8               	btfss	status,2,c
  2645  0006C0  EF64  F003         	goto	u2001
  2646  0006C4  EF66  F003         	goto	u2000
  2647  0006C8                     u2001:
  2648  0006C8  EF6C  F003         	goto	l2661
  2649  0006CC                     u2000:
  2650  0006CC                     
  2651                           ; BSR set to: 0
  2652  0006CC  0E00               	movlw	0
  2653  0006CE  6F73               	movwf	(_dtoa$1397+1)& (0+255),b
  2654  0006D0  0E2B               	movlw	43
  2655  0006D2  6F72               	movwf	_dtoa$1397& (0+255),b
  2656  0006D4  EF70  F003         	goto	l2663
  2657  0006D8                     l2661:
  2658                           
  2659                           ; BSR set to: 0
  2660  0006D8  0E00               	movlw	0
  2661  0006DA  6F73               	movwf	(_dtoa$1397+1)& (0+255),b
  2662  0006DC  0E2D               	movlw	45
  2663  0006DE  6F72               	movwf	_dtoa$1397& (0+255),b
  2664  0006E0                     l2663:
  2665                           
  2666                           ; BSR set to: 0
  2667  0006E0  0EA8               	movlw	low _dbuf
  2668  0006E2  2582               	addwf	dtoa@i& (0+255),w,b
  2669  0006E4  6ED9               	movwf	fsr2l,c
  2670  0006E6  0E00               	movlw	high _dbuf
  2671  0006E8  2183               	addwfc	(dtoa@i+1)& (0+255),w,b
  2672  0006EA  6EDA               	movwf	fsr2h,c
  2673  0006EC  C072  FFDF         	movff	_dtoa$1397,indf2
  2674  0006F0                     l2665:
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2678  0006F0  C060  F026         	movff	dtoa@fp,pad@fp
  2679  0006F4  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  2680  0006F8  0EA8               	movlw	low _dbuf
  2681  0006FA  2582               	addwf	dtoa@i& (0+255),w,b
  2682  0006FC  6E28               	movwf	pad@buf^0,c
  2683  0006FE  0E00               	movlw	high _dbuf
  2684  000700  2183               	addwfc	(dtoa@i+1)& (0+255),w,b
  2685  000702  6E29               	movwf	(pad@buf+1)^0,c
  2686  000704  C076  F02A         	movff	dtoa@w,pad@p
  2687  000708  C077  F02B         	movff	dtoa@w+1,pad@p+1
  2688  00070C  EC06  F007         	call	_pad	;wreg free
  2689  000710  C026  F060         	movff	?_pad,?_dtoa
  2690  000714  C027  F061         	movff	?_pad+1,?_dtoa+1
  2691  000718  0012               	return		;funcret
  2692  00071A                     __end_of_dtoa:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _pad *****************
  2696 ;; Defined at:
  2697 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  2700 ;;		 -> NULL(0), 
  2701 ;;  buf             2   39[COMRAM] PTR unsigned char 
  2702 ;;		 -> dbuf(32), 
  2703 ;;  p               2   41[COMRAM] int 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  w               2   46[COMRAM] int 
  2706 ;;  i               2   44[COMRAM] int 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  2   37[COMRAM] int 
  2709 ;; Registers used:
  2710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2716 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;Total ram usage:       11 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    8
  2723 ;; This function calls:
  2724 ;;		_fputc
  2725 ;;		_fputs
  2726 ;;		_strlen
  2727 ;; This function is called by:
  2728 ;;		_dtoa
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text5
  2733  000E0C                     __ptext5:
  2734                           	callstack 0
  2735  000E0C                     _pad:
  2736                           	callstack 18
  2737  000E0C                     
  2738                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2739  000E0C  A03B               	btfss	_flags^0,0,c
  2740  000E0E  EF0B  F007         	goto	u1761
  2741  000E12  EF0D  F007         	goto	u1760
  2742  000E16                     u1761:
  2743  000E16  EF17  F007         	goto	l2557
  2744  000E1A                     u1760:
  2745  000E1A                     
  2746                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2747  000E1A  C028  F01F         	movff	pad@buf,fputs@s
  2748  000E1E  C029  F020         	movff	pad@buf+1,fputs@s+1
  2749  000E22  C026  F021         	movff	pad@fp,fputs@fp
  2750  000E26  C027  F022         	movff	pad@fp+1,fputs@fp+1
  2751  000E2A  EC07  F008         	call	_fputs	;wreg free
  2752  000E2E                     l2557:
  2753                           
  2754                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2755  000E2E  BE2B               	btfsc	(pad@p+1)^0,7,c
  2756  000E30  EF1C  F007         	goto	u1771
  2757  000E34  EF1E  F007         	goto	u1770
  2758  000E38                     u1771:
  2759  000E38  EF24  F007         	goto	l2561
  2760  000E3C                     u1770:
  2761  000E3C  C02A  F02F         	movff	pad@p,pad@w
  2762  000E40  C02B  F030         	movff	pad@p+1,pad@w+1
  2763  000E44  EF28  F007         	goto	l1048
  2764  000E48                     l2561:
  2765  000E48  0E00               	movlw	0
  2766  000E4A  6E30               	movwf	(pad@w+1)^0,c
  2767  000E4C  0E00               	movlw	0
  2768  000E4E  6E2F               	movwf	pad@w^0,c
  2769  000E50                     l1048:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2772  000E50  0E00               	movlw	0
  2773  000E52  6E2E               	movwf	(pad@i+1)^0,c
  2774  000E54  0E00               	movlw	0
  2775  000E56  6E2D               	movwf	pad@i^0,c
  2776                           
  2777                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2778  000E58  EF3A  F007         	goto	l2567
  2779  000E5C                     l2563:
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2782  000E5C  0E00               	movlw	0
  2783  000E5E  6E17               	movwf	(fputc@c+1)^0,c
  2784  000E60  0E20               	movlw	32
  2785  000E62  6E16               	movwf	fputc@c^0,c
  2786  000E64  C026  F018         	movff	pad@fp,fputc@fp
  2787  000E68  C027  F019         	movff	pad@fp+1,fputc@fp+1
  2788  000E6C  EC67  F007         	call	_fputc	;wreg free
  2789  000E70                     
  2790                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2791  000E70  4A2D               	infsnz	pad@i^0,f,c
  2792  000E72  2A2E               	incf	(pad@i+1)^0,f,c
  2793  000E74                     l2567:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2796  000E74  502F               	movf	pad@w^0,w,c
  2797  000E76  5C2D               	subwf	pad@i^0,w,c
  2798  000E78  502E               	movf	(pad@i+1)^0,w,c
  2799  000E7A  0A80               	xorlw	128
  2800  000E7C  6E2C               	movwf	??_pad^0,c
  2801  000E7E  5030               	movf	(pad@w+1)^0,w,c
  2802  000E80  0A80               	xorlw	128
  2803  000E82  582C               	subwfb	??_pad^0,w,c
  2804  000E84  A0D8               	btfss	status,0,c
  2805  000E86  EF47  F007         	goto	u1781
  2806  000E8A  EF49  F007         	goto	u1780
  2807  000E8E                     u1781:
  2808  000E8E  EF2E  F007         	goto	l2563
  2809  000E92                     u1780:
  2810  000E92                     
  2811                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2812  000E92  B03B               	btfsc	_flags^0,0,c
  2813  000E94  EF4E  F007         	goto	u1791
  2814  000E98  EF50  F007         	goto	u1790
  2815  000E9C                     u1791:
  2816  000E9C  EF5A  F007         	goto	l2571
  2817  000EA0                     u1790:
  2818  000EA0                     
  2819                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2820  000EA0  C028  F01F         	movff	pad@buf,fputs@s
  2821  000EA4  C029  F020         	movff	pad@buf+1,fputs@s+1
  2822  000EA8  C026  F021         	movff	pad@fp,fputs@fp
  2823  000EAC  C027  F022         	movff	pad@fp+1,fputs@fp+1
  2824  000EB0  EC07  F008         	call	_fputs	;wreg free
  2825  000EB4                     l2571:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2828  000EB4  C028  F014         	movff	pad@buf,strlen@s
  2829  000EB8  C029  F015         	movff	pad@buf+1,strlen@s+1
  2830  000EBC  EC68  F008         	call	_strlen	;wreg free
  2831  000EC0  502F               	movf	pad@w^0,w,c
  2832  000EC2  2414               	addwf	?_strlen^0,w,c
  2833  000EC4  6E26               	movwf	?_pad^0,c
  2834  000EC6  5030               	movf	(pad@w+1)^0,w,c
  2835  000EC8  2015               	addwfc	(?_strlen+1)^0,w,c
  2836  000ECA  6E27               	movwf	(?_pad+1)^0,c
  2837  000ECC  0012               	return		;funcret
  2838  000ECE                     __end_of_pad:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function _strlen *****************
  2842 ;; Defined at:
  2843 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  s               2   19[COMRAM] PTR const unsigned char 
  2846 ;;		 -> dbuf(32), 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  a               2   21[COMRAM] PTR const unsigned char 
  2849 ;;		 -> dbuf(32), 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2   19[COMRAM] unsigned int 
  2852 ;; Registers used:
  2853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;Total ram usage:        4 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    4
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_pad
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text6
  2874  0010D0                     __ptext6:
  2875                           	callstack 0
  2876  0010D0                     _strlen:
  2877                           	callstack 21
  2878  0010D0  C014  F016         	movff	strlen@s,strlen@a
  2879  0010D4  C015  F017         	movff	strlen@s+1,strlen@a+1
  2880  0010D8  EF70  F008         	goto	l2467
  2881  0010DC                     l2465:
  2882  0010DC  4A14               	infsnz	strlen@s^0,f,c
  2883  0010DE  2A15               	incf	(strlen@s+1)^0,f,c
  2884  0010E0                     l2467:
  2885  0010E0  C014  FFD9         	movff	strlen@s,fsr2l
  2886  0010E4  C015  FFDA         	movff	strlen@s+1,fsr2h
  2887  0010E8  50DF               	movf	indf2,w,c
  2888  0010EA  A4D8               	btfss	status,2,c
  2889  0010EC  EF7A  F008         	goto	u1621
  2890  0010F0  EF7C  F008         	goto	u1620
  2891  0010F4                     u1621:
  2892  0010F4  EF6E  F008         	goto	l2465
  2893  0010F8                     u1620:
  2894  0010F8  5016               	movf	strlen@a^0,w,c
  2895  0010FA  5C14               	subwf	strlen@s^0,w,c
  2896  0010FC  6E14               	movwf	?_strlen^0,c
  2897  0010FE  5017               	movf	(strlen@a+1)^0,w,c
  2898  001100  5815               	subwfb	(strlen@s+1)^0,w,c
  2899  001102  6E15               	movwf	(?_strlen+1)^0,c
  2900  001104  0012               	return		;funcret
  2901  001106                     __end_of_strlen:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _fputs *****************
  2905 ;; Defined at:
  2906 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  s               2   30[COMRAM] PTR const unsigned char 
  2909 ;;		 -> dbuf(32), 
  2910 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  2911 ;;		 -> NULL(0), 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  i               2   35[COMRAM] int 
  2914 ;;  c               1   34[COMRAM] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  2   30[COMRAM] int 
  2917 ;; Registers used:
  2918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;Total ram usage:        7 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    7
  2931 ;; This function calls:
  2932 ;;		_fputc
  2933 ;; This function is called by:
  2934 ;;		_pad
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text7
  2939  00100E                     __ptext7:
  2940                           	callstack 0
  2941  00100E                     _fputs:
  2942                           	callstack 18
  2943  00100E  0E00               	movlw	0
  2944  001010  6E25               	movwf	(fputs@i+1)^0,c
  2945  001012  0E00               	movlw	0
  2946  001014  6E24               	movwf	fputs@i^0,c
  2947  001016  EF18  F008         	goto	l2461
  2948  00101A                     l2457:
  2949  00101A  C023  F016         	movff	fputs@c,fputc@c
  2950  00101E  6A17               	clrf	(fputc@c+1)^0,c
  2951  001020  C021  F018         	movff	fputs@fp,fputc@fp
  2952  001024  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  2953  001028  EC67  F007         	call	_fputc	;wreg free
  2954  00102C  4A24               	infsnz	fputs@i^0,f,c
  2955  00102E  2A25               	incf	(fputs@i+1)^0,f,c
  2956  001030                     l2461:
  2957  001030  5024               	movf	fputs@i^0,w,c
  2958  001032  241F               	addwf	fputs@s^0,w,c
  2959  001034  6ED9               	movwf	fsr2l,c
  2960  001036  5025               	movf	(fputs@i+1)^0,w,c
  2961  001038  2020               	addwfc	(fputs@s+1)^0,w,c
  2962  00103A  6EDA               	movwf	fsr2h,c
  2963  00103C  50DF               	movf	indf2,w,c
  2964  00103E  6E23               	movwf	fputs@c^0,c
  2965  001040  5023               	movf	fputs@c^0,w,c
  2966  001042  A4D8               	btfss	status,2,c
  2967  001044  EF26  F008         	goto	u1611
  2968  001048  EF28  F008         	goto	u1610
  2969  00104C                     u1611:
  2970  00104C  EF0D  F008         	goto	l2457
  2971  001050                     u1610:
  2972  001050  0012               	return		;funcret
  2973  001052                     __end_of_fputs:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _abs *****************
  2977 ;; Defined at:
  2978 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  a               2   37[COMRAM] int 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  2   37[COMRAM] int 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;Total ram usage:        4 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    4
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_dtoa
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text8
  3007  001052                     __ptext8:
  3008                           	callstack 0
  3009  001052                     _abs:
  3010                           	callstack 22
  3011  001052  BE27               	btfsc	(abs@a+1)^0,7,c
  3012  001054  EF36  F008         	goto	u1800
  3013  001058  5027               	movf	(abs@a+1)^0,w,c
  3014  00105A  E106               	bnz	u1801
  3015  00105C  0426               	decf	abs@a^0,w,c
  3016  00105E  B0D8               	btfsc	status,0,c
  3017  001060  EF34  F008         	goto	u1801
  3018  001064  EF36  F008         	goto	u1800
  3019  001068                     u1801:
  3020  001068  EF44  F008         	goto	l1114
  3021  00106C                     u1800:
  3022  00106C  C026  F028         	movff	abs@a,??_abs
  3023  001070  C027  F029         	movff	abs@a+1,??_abs+1
  3024  001074  1E28               	comf	??_abs^0,f,c
  3025  001076  1E29               	comf	(??_abs+1)^0,f,c
  3026  001078  4A28               	infsnz	??_abs^0,f,c
  3027  00107A  2A29               	incf	(??_abs+1)^0,f,c
  3028  00107C  C028  F026         	movff	??_abs,?_abs
  3029  001080  C029  F027         	movff	??_abs+1,?_abs+1
  3030  001084  EF48  F008         	goto	l1117
  3031  001088                     l1114:
  3032  001088  C026  F026         	movff	abs@a,?_abs
  3033  00108C  C027  F027         	movff	abs@a+1,?_abs+1
  3034  001090                     l1117:
  3035  001090  0012               	return		;funcret
  3036  001092                     __end_of_abs:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function ___aomod *****************
  3040 ;; Defined at:
  3041 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  dividend        8   19[COMRAM] long long 
  3044 ;;  divisor         8   27[COMRAM] long long 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  sign            1   36[COMRAM] unsigned char 
  3047 ;;  counter         1   35[COMRAM] unsigned char 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  8   19[COMRAM] long long 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3057 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;Total ram usage:       18 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; Hardware stack levels required when called:    4
  3064 ;; This function calls:
  3065 ;;		Nothing
  3066 ;; This function is called by:
  3067 ;;		_dtoa
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text9
  3072  000AD6                     __ptext9:
  3073                           	callstack 0
  3074  000AD6                     ___aomod:
  3075                           	callstack 22
  3076  000AD6  0E00               	movlw	0
  3077  000AD8  6E25               	movwf	___aomod@sign^0,c
  3078  000ADA  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  3079  000ADC  EF74  F005         	goto	u1700
  3080  000AE0  EF72  F005         	goto	u1701
  3081  000AE4                     u1701:
  3082  000AE4  EF86  F005         	goto	l2525
  3083  000AE8                     u1700:
  3084  000AE8  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3085  000AEA  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3086  000AEC  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3087  000AEE  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3088  000AF0  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3089  000AF2  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3090  000AF4  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3091  000AF6  6C14               	negf	___aomod@dividend^0,c
  3092  000AF8  0E00               	movlw	0
  3093  000AFA  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3094  000AFC  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3095  000AFE  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3096  000B00  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3097  000B02  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3098  000B04  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3099  000B06  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3100  000B08  0E01               	movlw	1
  3101  000B0A  6E25               	movwf	___aomod@sign^0,c
  3102  000B0C                     l2525:
  3103  000B0C  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  3104  000B0E  EF8D  F005         	goto	u1710
  3105  000B12  EF8B  F005         	goto	u1711
  3106  000B16                     u1711:
  3107  000B16  EF9D  F005         	goto	l2529
  3108  000B1A                     u1710:
  3109  000B1A  1E23               	comf	(___aomod@divisor+7)^0,f,c
  3110  000B1C  1E22               	comf	(___aomod@divisor+6)^0,f,c
  3111  000B1E  1E21               	comf	(___aomod@divisor+5)^0,f,c
  3112  000B20  1E20               	comf	(___aomod@divisor+4)^0,f,c
  3113  000B22  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  3114  000B24  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  3115  000B26  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  3116  000B28  6C1C               	negf	___aomod@divisor^0,c
  3117  000B2A  0E00               	movlw	0
  3118  000B2C  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  3119  000B2E  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  3120  000B30  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  3121  000B32  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  3122  000B34  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  3123  000B36  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  3124  000B38  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  3125  000B3A                     l2529:
  3126  000B3A  501C               	movf	___aomod@divisor^0,w,c
  3127  000B3C  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  3128  000B3E  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  3129  000B40  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  3130  000B42  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  3131  000B44  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  3132  000B46  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  3133  000B48  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  3134  000B4A  B4D8               	btfsc	status,2,c
  3135  000B4C  EFAA  F005         	goto	u1721
  3136  000B50  EFAC  F005         	goto	u1720
  3137  000B54                     u1721:
  3138  000B54  EFF4  F005         	goto	l2545
  3139  000B58                     u1720:
  3140  000B58  0E01               	movlw	1
  3141  000B5A  6E24               	movwf	___aomod@counter^0,c
  3142  000B5C  EFBA  F005         	goto	l2535
  3143  000B60                     l2533:
  3144  000B60  90D8               	bcf	status,0,c
  3145  000B62  361C               	rlcf	___aomod@divisor^0,f,c
  3146  000B64  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  3147  000B66  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  3148  000B68  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  3149  000B6A  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  3150  000B6C  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  3151  000B6E  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  3152  000B70  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  3153  000B72  2A24               	incf	___aomod@counter^0,f,c
  3154  000B74                     l2535:
  3155  000B74  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  3156  000B76  EFBF  F005         	goto	u1731
  3157  000B7A  EFC1  F005         	goto	u1730
  3158  000B7E                     u1731:
  3159  000B7E  EFB0  F005         	goto	l2533
  3160  000B82                     u1730:
  3161  000B82                     l2537:
  3162  000B82  501C               	movf	___aomod@divisor^0,w,c
  3163  000B84  5C14               	subwf	___aomod@dividend^0,w,c
  3164  000B86  501D               	movf	(___aomod@divisor+1)^0,w,c
  3165  000B88  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  3166  000B8A  501E               	movf	(___aomod@divisor+2)^0,w,c
  3167  000B8C  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  3168  000B8E  501F               	movf	(___aomod@divisor+3)^0,w,c
  3169  000B90  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  3170  000B92  5020               	movf	(___aomod@divisor+4)^0,w,c
  3171  000B94  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  3172  000B96  5021               	movf	(___aomod@divisor+5)^0,w,c
  3173  000B98  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  3174  000B9A  5022               	movf	(___aomod@divisor+6)^0,w,c
  3175  000B9C  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  3176  000B9E  5023               	movf	(___aomod@divisor+7)^0,w,c
  3177  000BA0  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  3178  000BA2  A0D8               	btfss	status,0,c
  3179  000BA4  EFD6  F005         	goto	u1741
  3180  000BA8  EFD8  F005         	goto	u1740
  3181  000BAC                     u1741:
  3182  000BAC  EFE8  F005         	goto	l2541
  3183  000BB0                     u1740:
  3184  000BB0  501C               	movf	___aomod@divisor^0,w,c
  3185  000BB2  5E14               	subwf	___aomod@dividend^0,f,c
  3186  000BB4  501D               	movf	(___aomod@divisor+1)^0,w,c
  3187  000BB6  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  3188  000BB8  501E               	movf	(___aomod@divisor+2)^0,w,c
  3189  000BBA  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  3190  000BBC  501F               	movf	(___aomod@divisor+3)^0,w,c
  3191  000BBE  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  3192  000BC0  5020               	movf	(___aomod@divisor+4)^0,w,c
  3193  000BC2  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  3194  000BC4  5021               	movf	(___aomod@divisor+5)^0,w,c
  3195  000BC6  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  3196  000BC8  5022               	movf	(___aomod@divisor+6)^0,w,c
  3197  000BCA  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  3198  000BCC  5023               	movf	(___aomod@divisor+7)^0,w,c
  3199  000BCE  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  3200  000BD0                     l2541:
  3201  000BD0  90D8               	bcf	status,0,c
  3202  000BD2  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  3203  000BD4  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  3204  000BD6  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  3205  000BD8  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  3206  000BDA  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  3207  000BDC  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  3208  000BDE  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  3209  000BE0  321C               	rrcf	___aomod@divisor^0,f,c
  3210  000BE2  2E24               	decfsz	___aomod@counter^0,f,c
  3211  000BE4  EFC1  F005         	goto	l2537
  3212  000BE8                     l2545:
  3213  000BE8  5025               	movf	___aomod@sign^0,w,c
  3214  000BEA  B4D8               	btfsc	status,2,c
  3215  000BEC  EFFA  F005         	goto	u1751
  3216  000BF0  EFFC  F005         	goto	u1750
  3217  000BF4                     u1751:
  3218  000BF4  EF0C  F006         	goto	l2549
  3219  000BF8                     u1750:
  3220  000BF8  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3221  000BFA  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3222  000BFC  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3223  000BFE  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3224  000C00  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3225  000C02  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3226  000C04  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3227  000C06  6C14               	negf	___aomod@dividend^0,c
  3228  000C08  0E00               	movlw	0
  3229  000C0A  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3230  000C0C  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3231  000C0E  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3232  000C10  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3233  000C12  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3234  000C14  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3235  000C16  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3236  000C18                     l2549:
  3237  000C18  C014  F014         	movff	___aomod@dividend,?___aomod
  3238  000C1C  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  3239  000C20  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  3240  000C24  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  3241  000C28  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  3242  000C2C  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  3243  000C30  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  3244  000C34  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  3245  000C38  0012               	return		;funcret
  3246  000C3A                     __end_of___aomod:
  3247                           	callstack 0
  3248                           
  3249 ;; *************** function ___aodiv *****************
  3250 ;; Defined at:
  3251 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  dividend        8   19[COMRAM] long long 
  3254 ;;  divisor         8   27[COMRAM] long long 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  quotient        8   37[COMRAM] long long 
  3257 ;;  sign            1   36[COMRAM] unsigned char 
  3258 ;;  counter         1   35[COMRAM] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  8   19[COMRAM] long long 
  3261 ;; Registers used:
  3262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3268 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;Total ram usage:       26 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    4
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_dtoa
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text10
  3283  00094E                     __ptext10:
  3284                           	callstack 0
  3285  00094E                     ___aodiv:
  3286                           	callstack 22
  3287  00094E  0E00               	movlw	0
  3288  000950  6E25               	movwf	___aodiv@sign^0,c
  3289  000952  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  3290  000954  EFB0  F004         	goto	u1630
  3291  000958  EFAE  F004         	goto	u1631
  3292  00095C                     u1631:
  3293  00095C  EFC2  F004         	goto	l2481
  3294  000960                     u1630:
  3295  000960  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  3296  000962  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  3297  000964  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  3298  000966  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  3299  000968  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  3300  00096A  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  3301  00096C  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  3302  00096E  6C1C               	negf	___aodiv@divisor^0,c
  3303  000970  0E00               	movlw	0
  3304  000972  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  3305  000974  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  3306  000976  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  3307  000978  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  3308  00097A  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  3309  00097C  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  3310  00097E  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  3311  000980  0E01               	movlw	1
  3312  000982  6E25               	movwf	___aodiv@sign^0,c
  3313  000984                     l2481:
  3314  000984  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  3315  000986  EFC9  F004         	goto	u1640
  3316  00098A  EFC7  F004         	goto	u1641
  3317  00098E                     u1641:
  3318  00098E  EFDB  F004         	goto	l2487
  3319  000992                     u1640:
  3320  000992  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  3321  000994  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  3322  000996  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  3323  000998  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  3324  00099A  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  3325  00099C  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  3326  00099E  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  3327  0009A0  6C14               	negf	___aodiv@dividend^0,c
  3328  0009A2  0E00               	movlw	0
  3329  0009A4  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  3330  0009A6  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  3331  0009A8  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  3332  0009AA  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  3333  0009AC  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  3334  0009AE  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  3335  0009B0  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  3336  0009B2  0E01               	movlw	1
  3337  0009B4  1A25               	xorwf	___aodiv@sign^0,f,c
  3338  0009B6                     l2487:
  3339  0009B6  EE20  F026         	lfsr	2,___aodiv@quotient
  3340  0009BA  0E07               	movlw	7
  3341  0009BC                     u1651:
  3342  0009BC  6ADE               	clrf	postinc2,c
  3343  0009BE  06E8               	decf	wreg,f,c
  3344  0009C0  E2FD               	bc	u1651
  3345  0009C2  501C               	movf	___aodiv@divisor^0,w,c
  3346  0009C4  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  3347  0009C6  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  3348  0009C8  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  3349  0009CA  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  3350  0009CC  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  3351  0009CE  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  3352  0009D0  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  3353  0009D2  B4D8               	btfsc	status,2,c
  3354  0009D4  EFEE  F004         	goto	u1661
  3355  0009D8  EFF0  F004         	goto	u1660
  3356  0009DC                     u1661:
  3357  0009DC  EF42  F005         	goto	l2509
  3358  0009E0                     u1660:
  3359  0009E0  0E01               	movlw	1
  3360  0009E2  6E24               	movwf	___aodiv@counter^0,c
  3361  0009E4  EFFE  F004         	goto	l2495
  3362  0009E8                     l2493:
  3363  0009E8  90D8               	bcf	status,0,c
  3364  0009EA  361C               	rlcf	___aodiv@divisor^0,f,c
  3365  0009EC  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  3366  0009EE  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  3367  0009F0  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  3368  0009F2  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  3369  0009F4  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  3370  0009F6  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  3371  0009F8  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  3372  0009FA  2A24               	incf	___aodiv@counter^0,f,c
  3373  0009FC                     l2495:
  3374  0009FC  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  3375  0009FE  EF03  F005         	goto	u1671
  3376  000A02  EF05  F005         	goto	u1670
  3377  000A06                     u1671:
  3378  000A06  EFF4  F004         	goto	l2493
  3379  000A0A                     u1670:
  3380  000A0A                     l2497:
  3381  000A0A  90D8               	bcf	status,0,c
  3382  000A0C  3626               	rlcf	___aodiv@quotient^0,f,c
  3383  000A0E  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  3384  000A10  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  3385  000A12  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  3386  000A14  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  3387  000A16  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  3388  000A18  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  3389  000A1A  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  3390  000A1C  501C               	movf	___aodiv@divisor^0,w,c
  3391  000A1E  5C14               	subwf	___aodiv@dividend^0,w,c
  3392  000A20  501D               	movf	(___aodiv@divisor+1)^0,w,c
  3393  000A22  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  3394  000A24  501E               	movf	(___aodiv@divisor+2)^0,w,c
  3395  000A26  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  3396  000A28  501F               	movf	(___aodiv@divisor+3)^0,w,c
  3397  000A2A  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  3398  000A2C  5020               	movf	(___aodiv@divisor+4)^0,w,c
  3399  000A2E  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  3400  000A30  5021               	movf	(___aodiv@divisor+5)^0,w,c
  3401  000A32  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  3402  000A34  5022               	movf	(___aodiv@divisor+6)^0,w,c
  3403  000A36  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  3404  000A38  5023               	movf	(___aodiv@divisor+7)^0,w,c
  3405  000A3A  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  3406  000A3C  A0D8               	btfss	status,0,c
  3407  000A3E  EF23  F005         	goto	u1681
  3408  000A42  EF25  F005         	goto	u1680
  3409  000A46                     u1681:
  3410  000A46  EF36  F005         	goto	l2505
  3411  000A4A                     u1680:
  3412  000A4A  501C               	movf	___aodiv@divisor^0,w,c
  3413  000A4C  5E14               	subwf	___aodiv@dividend^0,f,c
  3414  000A4E  501D               	movf	(___aodiv@divisor+1)^0,w,c
  3415  000A50  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  3416  000A52  501E               	movf	(___aodiv@divisor+2)^0,w,c
  3417  000A54  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  3418  000A56  501F               	movf	(___aodiv@divisor+3)^0,w,c
  3419  000A58  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  3420  000A5A  5020               	movf	(___aodiv@divisor+4)^0,w,c
  3421  000A5C  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  3422  000A5E  5021               	movf	(___aodiv@divisor+5)^0,w,c
  3423  000A60  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  3424  000A62  5022               	movf	(___aodiv@divisor+6)^0,w,c
  3425  000A64  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  3426  000A66  5023               	movf	(___aodiv@divisor+7)^0,w,c
  3427  000A68  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  3428  000A6A  8026               	bsf	___aodiv@quotient^0,0,c
  3429  000A6C                     l2505:
  3430  000A6C  90D8               	bcf	status,0,c
  3431  000A6E  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  3432  000A70  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  3433  000A72  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  3434  000A74  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  3435  000A76  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  3436  000A78  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  3437  000A7A  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  3438  000A7C  321C               	rrcf	___aodiv@divisor^0,f,c
  3439  000A7E  2E24               	decfsz	___aodiv@counter^0,f,c
  3440  000A80  EF05  F005         	goto	l2497
  3441  000A84                     l2509:
  3442  000A84  5025               	movf	___aodiv@sign^0,w,c
  3443  000A86  B4D8               	btfsc	status,2,c
  3444  000A88  EF48  F005         	goto	u1691
  3445  000A8C  EF4A  F005         	goto	u1690
  3446  000A90                     u1691:
  3447  000A90  EF5A  F005         	goto	l2513
  3448  000A94                     u1690:
  3449  000A94  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  3450  000A96  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  3451  000A98  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  3452  000A9A  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  3453  000A9C  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  3454  000A9E  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  3455  000AA0  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  3456  000AA2  6C26               	negf	___aodiv@quotient^0,c
  3457  000AA4  0E00               	movlw	0
  3458  000AA6  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  3459  000AA8  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  3460  000AAA  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  3461  000AAC  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  3462  000AAE  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  3463  000AB0  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  3464  000AB2  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  3465  000AB4                     l2513:
  3466  000AB4  C026  F014         	movff	___aodiv@quotient,?___aodiv
  3467  000AB8  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  3468  000ABC  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  3469  000AC0  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  3470  000AC4  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  3471  000AC8  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  3472  000ACC  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  3473  000AD0  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  3474  000AD4  0012               	return		;funcret
  3475  000AD6                     __end_of___aodiv:
  3476                           	callstack 0
  3477                           
  3478 ;; *************** function _ctoa *****************
  3479 ;; Defined at:
  3480 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  3483 ;;		 -> NULL(0), 
  3484 ;;  c               1   32[COMRAM] unsigned char 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  w               2   36[COMRAM] int 
  3487 ;;  l               2   34[COMRAM] int 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  2   30[COMRAM] int 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3497 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3501 ;;Total ram usage:        8 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    7
  3504 ;; This function calls:
  3505 ;;		_fputc
  3506 ;; This function is called by:
  3507 ;;		_vfpfcnvrt
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text11
  3512  000D38                     __ptext11:
  3513                           	callstack 0
  3514  000D38                     _ctoa:
  3515                           	callstack 20
  3516  000D38                     
  3517                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3518  000D38  5037               	movf	_width^0,w,c
  3519  000D3A  1038               	iorwf	(_width+1)^0,w,c
  3520  000D3C  A4D8               	btfss	status,2,c
  3521  000D3E  EFA3  F006         	goto	u1811
  3522  000D42  EFA5  F006         	goto	u1810
  3523  000D46                     u1811:
  3524  000D46  EFAB  F006         	goto	l2583
  3525  000D4A                     u1810:
  3526  000D4A  C037  F025         	movff	_width,ctoa@w
  3527  000D4E  C038  F026         	movff	_width+1,ctoa@w+1
  3528  000D52  EFB1  F006         	goto	l2585
  3529  000D56                     l2583:
  3530  000D56  0EFF               	movlw	255
  3531  000D58  2437               	addwf	_width^0,w,c
  3532  000D5A  6E25               	movwf	ctoa@w^0,c
  3533  000D5C  0EFF               	movlw	255
  3534  000D5E  2038               	addwfc	(_width+1)^0,w,c
  3535  000D60  6E26               	movwf	(ctoa@w+1)^0,c
  3536  000D62                     l2585:
  3537                           
  3538                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3539  000D62  A03B               	btfss	_flags^0,0,c
  3540  000D64  EFB6  F006         	goto	u1821
  3541  000D68  EFB8  F006         	goto	u1820
  3542  000D6C                     u1821:
  3543  000D6C  EFC1  F006         	goto	l2589
  3544  000D70                     u1820:
  3545  000D70                     
  3546                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3547  000D70  C021  F016         	movff	ctoa@c,fputc@c
  3548  000D74  6A17               	clrf	(fputc@c+1)^0,c
  3549  000D76  C01F  F018         	movff	ctoa@fp,fputc@fp
  3550  000D7A  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
  3551  000D7E  EC67  F007         	call	_fputc	;wreg free
  3552  000D82                     l2589:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3555  000D82  BE26               	btfsc	(ctoa@w+1)^0,7,c
  3556  000D84  EFC6  F006         	goto	u1831
  3557  000D88  EFC8  F006         	goto	u1830
  3558  000D8C                     u1831:
  3559  000D8C  EFCA  F006         	goto	l2593
  3560  000D90                     u1830:
  3561  000D90  EFCE  F006         	goto	l1064
  3562  000D94                     l2593:
  3563  000D94  0E00               	movlw	0
  3564  000D96  6E26               	movwf	(ctoa@w+1)^0,c
  3565  000D98  0E00               	movlw	0
  3566  000D9A  6E25               	movwf	ctoa@w^0,c
  3567  000D9C                     l1064:
  3568                           
  3569                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3570  000D9C  0E00               	movlw	0
  3571  000D9E  6E24               	movwf	(ctoa@l+1)^0,c
  3572  000DA0  0E00               	movlw	0
  3573  000DA2  6E23               	movwf	ctoa@l^0,c
  3574                           
  3575                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3576  000DA4  EFE0  F006         	goto	l2599
  3577  000DA8                     l2595:
  3578                           
  3579                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3580  000DA8  0E00               	movlw	0
  3581  000DAA  6E17               	movwf	(fputc@c+1)^0,c
  3582  000DAC  0E20               	movlw	32
  3583  000DAE  6E16               	movwf	fputc@c^0,c
  3584  000DB0  C01F  F018         	movff	ctoa@fp,fputc@fp
  3585  000DB4  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
  3586  000DB8  EC67  F007         	call	_fputc	;wreg free
  3587  000DBC                     
  3588                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3589  000DBC  4A23               	infsnz	ctoa@l^0,f,c
  3590  000DBE  2A24               	incf	(ctoa@l+1)^0,f,c
  3591  000DC0                     l2599:
  3592                           
  3593                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3594  000DC0  5025               	movf	ctoa@w^0,w,c
  3595  000DC2  5C23               	subwf	ctoa@l^0,w,c
  3596  000DC4  5024               	movf	(ctoa@l+1)^0,w,c
  3597  000DC6  0A80               	xorlw	128
  3598  000DC8  6E22               	movwf	??_ctoa^0,c
  3599  000DCA  5026               	movf	(ctoa@w+1)^0,w,c
  3600  000DCC  0A80               	xorlw	128
  3601  000DCE  5822               	subwfb	??_ctoa^0,w,c
  3602  000DD0  A0D8               	btfss	status,0,c
  3603  000DD2  EFED  F006         	goto	u1841
  3604  000DD6  EFEF  F006         	goto	u1840
  3605  000DDA                     u1841:
  3606  000DDA  EFD4  F006         	goto	l2595
  3607  000DDE                     u1840:
  3608  000DDE                     
  3609                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3610  000DDE  B03B               	btfsc	_flags^0,0,c
  3611  000DE0  EFF4  F006         	goto	u1851
  3612  000DE4  EFF6  F006         	goto	u1850
  3613  000DE8                     u1851:
  3614  000DE8  EFFF  F006         	goto	l2603
  3615  000DEC                     u1850:
  3616  000DEC                     
  3617                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3618  000DEC  C021  F016         	movff	ctoa@c,fputc@c
  3619  000DF0  6A17               	clrf	(fputc@c+1)^0,c
  3620  000DF2  C01F  F018         	movff	ctoa@fp,fputc@fp
  3621  000DF6  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
  3622  000DFA  EC67  F007         	call	_fputc	;wreg free
  3623  000DFE                     l2603:
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3626  000DFE  0E01               	movlw	1
  3627  000E00  2423               	addwf	ctoa@l^0,w,c
  3628  000E02  6E1F               	movwf	?_ctoa^0,c
  3629  000E04  0E00               	movlw	0
  3630  000E06  2024               	addwfc	(ctoa@l+1)^0,w,c
  3631  000E08  6E20               	movwf	(?_ctoa+1)^0,c
  3632  000E0A  0012               	return		;funcret
  3633  000E0C                     __end_of_ctoa:
  3634                           	callstack 0
  3635                           
  3636 ;; *************** function _fputc *****************
  3637 ;; Defined at:
  3638 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  c               2   21[COMRAM] int 
  3641 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  3642 ;;		 -> NULL(0), 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  2   21[COMRAM] int 
  3647 ;; Registers used:
  3648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;Total ram usage:        9 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    6
  3661 ;; This function calls:
  3662 ;;		_putch
  3663 ;; This function is called by:
  3664 ;;		_pad
  3665 ;;		_ctoa
  3666 ;;		_vfpfcnvrt
  3667 ;;		_fputs
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text12
  3672  000ECE                     __ptext12:
  3673                           	callstack 0
  3674  000ECE                     _fputc:
  3675                           	callstack 21
  3676  000ECE  5018               	movf	fputc@fp^0,w,c
  3677  000ED0  1019               	iorwf	(fputc@fp+1)^0,w,c
  3678  000ED2  B4D8               	btfsc	status,2,c
  3679  000ED4  EF6E  F007         	goto	u1571
  3680  000ED8  EF70  F007         	goto	u1570
  3681  000EDC                     u1571:
  3682  000EDC  EF79  F007         	goto	l2445
  3683  000EE0                     u1570:
  3684  000EE0  5018               	movf	fputc@fp^0,w,c
  3685  000EE2  1019               	iorwf	(fputc@fp+1)^0,w,c
  3686  000EE4  A4D8               	btfss	status,2,c
  3687  000EE6  EF77  F007         	goto	u1581
  3688  000EEA  EF79  F007         	goto	u1580
  3689  000EEE                     u1581:
  3690  000EEE  EF7E  F007         	goto	l2447
  3691  000EF2                     u1580:
  3692  000EF2                     l2445:
  3693  000EF2  5016               	movf	fputc@c^0,w,c
  3694  000EF4  EC41  F009         	call	_putch
  3695  000EF8  EFB1  F007         	goto	l1129
  3696  000EFC                     l2447:
  3697  000EFC  EE20 F004          	lfsr	2,4
  3698  000F00  5018               	movf	fputc@fp^0,w,c
  3699  000F02  26D9               	addwf	fsr2l,f,c
  3700  000F04  5019               	movf	(fputc@fp+1)^0,w,c
  3701  000F06  22DA               	addwfc	fsr2h,f,c
  3702  000F08  50DE               	movf	postinc2,w,c
  3703  000F0A  10DE               	iorwf	postinc2,w,c
  3704  000F0C  B4D8               	btfsc	status,2,c
  3705  000F0E  EF8B  F007         	goto	u1591
  3706  000F12  EF8D  F007         	goto	u1590
  3707  000F16                     u1591:
  3708  000F16  EFA8  F007         	goto	l2451
  3709  000F1A                     u1590:
  3710  000F1A  EE20 F004          	lfsr	2,4
  3711  000F1E  5018               	movf	fputc@fp^0,w,c
  3712  000F20  26D9               	addwf	fsr2l,f,c
  3713  000F22  5019               	movf	(fputc@fp+1)^0,w,c
  3714  000F24  22DA               	addwfc	fsr2h,f,c
  3715  000F26  EE10 F002          	lfsr	1,2
  3716  000F2A  5018               	movf	fputc@fp^0,w,c
  3717  000F2C  26E1               	addwf	fsr1l,f,c
  3718  000F2E  5019               	movf	(fputc@fp+1)^0,w,c
  3719  000F30  22E2               	addwfc	fsr1h,f,c
  3720  000F32  50DE               	movf	postinc2,w,c
  3721  000F34  5CE6               	subwf	postinc1,w,c
  3722  000F36  50E6               	movf	postinc1,w,c
  3723  000F38  0A80               	xorlw	128
  3724  000F3A  6E1E               	movwf	(??_fputc+4)^0,c
  3725  000F3C  50DE               	movf	postinc2,w,c
  3726  000F3E  0A80               	xorlw	128
  3727  000F40  581E               	subwfb	(??_fputc+4)^0,w,c
  3728  000F42  B0D8               	btfsc	status,0,c
  3729  000F44  EFA6  F007         	goto	u1601
  3730  000F48  EFA8  F007         	goto	u1600
  3731  000F4C                     u1601:
  3732  000F4C  EFB1  F007         	goto	l1129
  3733  000F50                     u1600:
  3734  000F50                     l2451:
  3735  000F50  EE20 F002          	lfsr	2,2
  3736  000F54  5018               	movf	fputc@fp^0,w,c
  3737  000F56  26D9               	addwf	fsr2l,f,c
  3738  000F58  5019               	movf	(fputc@fp+1)^0,w,c
  3739  000F5A  22DA               	addwfc	fsr2h,f,c
  3740  000F5C  2ADE               	incf	postinc2,f,c
  3741  000F5E  0E00               	movlw	0
  3742  000F60  22DD               	addwfc	postdec2,f,c
  3743  000F62                     l1129:
  3744  000F62  0012               	return		;funcret
  3745  000F64                     __end_of_fputc:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function _putch *****************
  3749 ;; Defined at:
  3750 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  txData          1    wreg     unsigned char 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  txData          1   20[COMRAM] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;Total ram usage:        1 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    5
  3771 ;; This function calls:
  3772 ;;		_EUSART1_Write
  3773 ;; This function is called by:
  3774 ;;		_fputc
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text13
  3779  001282                     __ptext13:
  3780                           	callstack 0
  3781  001282                     _putch:
  3782                           	callstack 21
  3783                           
  3784                           ;incstack = 0
  3785                           ;putch@txData stored from wreg
  3786  001282  6E15               	movwf	putch@txData^0,c
  3787  001284                     
  3788                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3789  001284  5015               	movf	putch@txData^0,w,c
  3790  001286  EC21  F009         	call	_EUSART1_Write
  3791  00128A  0012               	return		;funcret
  3792  00128C                     __end_of_putch:
  3793                           	callstack 0
  3794                           
  3795 ;; *************** function _EUSART1_Write *****************
  3796 ;; Defined at:
  3797 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  txData          1    wreg     unsigned char 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  txData          1   19[COMRAM] unsigned char 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  1    wreg      void 
  3804 ;; Registers used:
  3805 ;;		wreg
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3815 ;;Total ram usage:        1 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    4
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_putch
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text14
  3826  001242                     __ptext14:
  3827                           	callstack 0
  3828  001242                     _EUSART1_Write:
  3829                           	callstack 21
  3830                           
  3831                           ;incstack = 0
  3832                           ;EUSART1_Write@txData stored from wreg
  3833  001242  6E14               	movwf	EUSART1_Write@txData^0,c
  3834  001244                     l297:
  3835                           
  3836                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3837  001244  A89E               	btfss	158,4,c	;volatile
  3838  001246  EF27  F009         	goto	u1561
  3839  00124A  EF29  F009         	goto	u1560
  3840  00124E                     u1561:
  3841  00124E  EF22  F009         	goto	l297
  3842  001252                     u1560:
  3843  001252                     
  3844                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3845  001252  C014  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3846  001256  0012               	return		;funcret
  3847  001258                     __end_of_EUSART1_Write:
  3848                           	callstack 0
  3849                           
  3850 ;; *************** function _TMR0_WriteTimer *****************
  3851 ;; Defined at:
  3852 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  timerVal        2   19[COMRAM] unsigned short 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;Total ram usage:        2 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    4
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_main
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text15
  3881  00128C                     __ptext15:
  3882                           	callstack 0
  3883  00128C                     _TMR0_WriteTimer:
  3884                           	callstack 26
  3885  00128C                     
  3886                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  3887  00128C  5015               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  3888  00128E  6ED7               	movwf	215,c	;volatile
  3889  001290                     
  3890                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  3891  001290  C014  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  3892  001294  0012               	return		;funcret
  3893  001296                     __end_of_TMR0_WriteTimer:
  3894                           	callstack 0
  3895                           
  3896 ;; *************** function _SYSTEM_Initialize *****************
  3897 ;; Defined at:
  3898 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    6
  3919 ;; This function calls:
  3920 ;;		_ADC_Initialize
  3921 ;;		_EUSART1_Initialize
  3922 ;;		_INTERRUPT_Initialize
  3923 ;;		_OSCILLATOR_Initialize
  3924 ;;		_PIN_MANAGER_Initialize
  3925 ;;		_TMR0_Initialize
  3926 ;; This function is called by:
  3927 ;;		_main
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text16
  3932  001228                     __ptext16:
  3933                           	callstack 0
  3934  001228                     _SYSTEM_Initialize:
  3935                           	callstack 24
  3936  001228                     
  3937                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3938  001228  EC64  F009         	call	_INTERRUPT_Initialize	;wreg free
  3939  00122C                     
  3940                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3941  00122C  ECB9  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  3942  001230                     
  3943                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3944  001230  EC06  F009         	call	_OSCILLATOR_Initialize	;wreg free
  3945  001234                     
  3946                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  3947  001234  EC2C  F009         	call	_ADC_Initialize	;wreg free
  3948  001238                     
  3949                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3950  001238  EC83  F008         	call	_TMR0_Initialize	;wreg free
  3951  00123C                     
  3952                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  3953  00123C  EC49  F008         	call	_EUSART1_Initialize	;wreg free
  3954  001240  0012               	return		;funcret
  3955  001242                     __end_of_SYSTEM_Initialize:
  3956                           	callstack 0
  3957                           
  3958 ;; *************** function _TMR0_Initialize *****************
  3959 ;; Defined at:
  3960 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;Total ram usage:        2 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    5
  3981 ;; This function calls:
  3982 ;;		_TMR0_SetInterruptHandler
  3983 ;; This function is called by:
  3984 ;;		_SYSTEM_Initialize
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text17
  3989  001106                     __ptext17:
  3990                           	callstack 0
  3991  001106                     _TMR0_Initialize:
  3992                           	callstack 24
  3993  001106                     
  3994                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3995  001106  9CD5               	bcf	213,6,c	;volatile
  3996  001108                     
  3997                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  3998  001108  0E00               	movlw	0
  3999  00110A  6ED7               	movwf	215,c	;volatile
  4000                           
  4001                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  4002  00110C  0E00               	movlw	0
  4003  00110E  6ED6               	movwf	214,c	;volatile
  4004  001110                     
  4005                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4006  001110  50D6               	movf	214,w,c	;volatile
  4007  001112  CFD7 F016          	movff	4055,??_TMR0_Initialize	;volatile
  4008  001116  6A17               	clrf	(??_TMR0_Initialize+1)^0,c
  4009  001118  C016  F017         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4010  00111C  6A16               	clrf	??_TMR0_Initialize^0,c
  4011  00111E  1016               	iorwf	??_TMR0_Initialize^0,w,c
  4012  001120  6E43               	movwf	_timer0ReloadVal^0,c	;volatile
  4013  001122  5017               	movf	(??_TMR0_Initialize+1)^0,w,c
  4014  001124  6E44               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4015  001126                     
  4016                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4017  001126  94F2               	bcf	242,2,c	;volatile
  4018  001128                     
  4019                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4020  001128  8AF2               	bsf	242,5,c	;volatile
  4021  00112A                     
  4022                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4023  00112A  0ECE               	movlw	low _TMR0_DefaultInterruptHandler
  4024  00112C  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4025  00112E  0E12               	movlw	high _TMR0_DefaultInterruptHandler
  4026  001130  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4027  001132  EC4B  F009         	call	_TMR0_SetInterruptHandler	;wreg free
  4028  001136                     
  4029                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  4030  001136  0E9F               	movlw	159
  4031  001138  6ED5               	movwf	213,c	;volatile
  4032  00113A  0012               	return		;funcret
  4033  00113C                     __end_of_TMR0_Initialize:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function _TMR0_SetInterruptHandler *****************
  4037 ;; Defined at:
  4038 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  4041 ;;		 -> TMR0_DefaultInterruptHandler(1), myTMR0ISR(1), 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;Total ram usage:        2 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    4
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_main
  4064 ;;		_TMR0_Initialize
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text18
  4069  001296                     __ptext18:
  4070                           	callstack 0
  4071  001296                     _TMR0_SetInterruptHandler:
  4072                           	callstack 26
  4073  001296                     
  4074                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4075  001296  C014  F045         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4076  00129A  C015  F046         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4077  00129E  0012               	return		;funcret
  4078  0012A0                     __end_of_TMR0_SetInterruptHandler:
  4079                           	callstack 0
  4080                           
  4081 ;; *************** function _PIN_MANAGER_Initialize *****************
  4082 ;; Defined at:
  4083 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;Total ram usage:        0 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    4
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_SYSTEM_Initialize
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text19
  4112  001172                     __ptext19:
  4113                           	callstack 0
  4114  001172                     _PIN_MANAGER_Initialize:
  4115                           	callstack 25
  4116  001172                     
  4117                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4118  001172  0E00               	movlw	0
  4119  001174  6E89               	movwf	137,c	;volatile
  4120                           
  4121                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4122  001176  0E00               	movlw	0
  4123  001178  6E8A               	movwf	138,c	;volatile
  4124                           
  4125                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4126  00117A  0E00               	movlw	0
  4127  00117C  6E8B               	movwf	139,c	;volatile
  4128                           
  4129                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  4130  00117E  0EBF               	movlw	191
  4131  001180  6E92               	movwf	146,c	;volatile
  4132  001182                     
  4133                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  4134  001182  6893               	setf	147,c	;volatile
  4135                           
  4136                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  4137  001184  0EBF               	movlw	191
  4138  001186  6E94               	movwf	148,c	;volatile
  4139                           
  4140                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4141  001188  0E3C               	movlw	60
  4142  00118A  010F               	movlb	15	; () banked
  4143  00118C  6F3A               	movwf	58,b	;volatile
  4144                           
  4145                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  4146  00118E  0E3F               	movlw	63
  4147  001190  6F39               	movwf	57,b	;volatile
  4148                           
  4149                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4150  001192  0E2F               	movlw	47
  4151  001194  6F38               	movwf	56,b	;volatile
  4152                           
  4153                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4154  001196  0E00               	movlw	0
  4155  001198  6E61               	movwf	97,c	;volatile
  4156  00119A                     
  4157                           ; BSR set to: 15
  4158                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4159  00119A  8EF1               	bsf	241,7,c	;volatile
  4160  00119C                     
  4161                           ; BSR set to: 15
  4162  00119C  0012               	return		;funcret
  4163  00119E                     __end_of_PIN_MANAGER_Initialize:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function _OSCILLATOR_Initialize *****************
  4167 ;; Defined at:
  4168 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    4
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_SYSTEM_Initialize
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text20
  4197  00120C                     __ptext20:
  4198                           	callstack 0
  4199  00120C                     _OSCILLATOR_Initialize:
  4200                           	callstack 25
  4201  00120C                     
  4202                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4203  00120C  0E70               	movlw	112
  4204  00120E  6ED3               	movwf	211,c	;volatile
  4205                           
  4206                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  4207  001210  0E04               	movlw	4
  4208  001212  6ED2               	movwf	210,c	;volatile
  4209                           
  4210                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  4211  001214  0E40               	movlw	64
  4212  001216  6E9B               	movwf	155,c	;volatile
  4213  001218                     l187:
  4214                           
  4215                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  4216  001218  AED2               	btfss	4050,7,c	;volatile
  4217  00121A  EF11  F009         	goto	u2061
  4218  00121E  EF13  F009         	goto	u2060
  4219  001222                     u2061:
  4220  001222  EF0C  F009         	goto	l187
  4221  001226                     u2060:
  4222  001226  0012               	return		;funcret
  4223  001228                     __end_of_OSCILLATOR_Initialize:
  4224                           	callstack 0
  4225                           
  4226 ;; *************** function _INTERRUPT_Initialize *****************
  4227 ;; Defined at:
  4228 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		None
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;Total ram usage:        0 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    4
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_SYSTEM_Initialize
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text21
  4257  0012C8                     __ptext21:
  4258                           	callstack 0
  4259  0012C8                     _INTERRUPT_Initialize:
  4260                           	callstack 25
  4261  0012C8                     
  4262                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4263  0012C8  9ED0               	bcf	208,7,c	;volatile
  4264  0012CA  0012               	return		;funcret
  4265  0012CC                     __end_of_INTERRUPT_Initialize:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _EUSART1_Initialize *****************
  4269 ;; Defined at:
  4270 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0, cstack
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;Total ram usage:        0 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    5
  4291 ;; This function calls:
  4292 ;;		_EUSART1_SetErrorHandler
  4293 ;;		_EUSART1_SetFramingErrorHandler
  4294 ;;		_EUSART1_SetOverrunErrorHandler
  4295 ;; This function is called by:
  4296 ;;		_SYSTEM_Initialize
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text22
  4301  001092                     __ptext22:
  4302                           	callstack 0
  4303  001092                     _EUSART1_Initialize:
  4304                           	callstack 24
  4305  001092                     
  4306                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4307  001092  0E08               	movlw	8
  4308  001094  6EB8               	movwf	184,c	;volatile
  4309                           
  4310                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4311  001096  0E90               	movlw	144
  4312  001098  6EAB               	movwf	171,c	;volatile
  4313                           
  4314                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4315  00109A  0E24               	movlw	36
  4316  00109C  6EAC               	movwf	172,c	;volatile
  4317                           
  4318                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  4319  00109E  0E82               	movlw	130
  4320  0010A0  6EAF               	movwf	175,c	;volatile
  4321                           
  4322                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  4323  0010A2  0E06               	movlw	6
  4324  0010A4  6EB0               	movwf	176,c	;volatile
  4325  0010A6                     
  4326                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4327  0010A6  0E00               	movlw	0
  4328  0010A8  6E14               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4329  0010AA  0E00               	movlw	0
  4330  0010AC  6E15               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4331  0010AE  EC55  F009         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4332  0010B2                     
  4333                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4334  0010B2  0E00               	movlw	0
  4335  0010B4  6E14               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4336  0010B6  0E00               	movlw	0
  4337  0010B8  6E15               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4338  0010BA  EC50  F009         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4339  0010BE                     
  4340                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4341  0010BE  0E00               	movlw	0
  4342  0010C0  6E14               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4343  0010C2  0E00               	movlw	0
  4344  0010C4  6E15               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4345  0010C6  EC5A  F009         	call	_EUSART1_SetErrorHandler	;wreg free
  4346  0010CA                     
  4347                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4348  0010CA  0E00               	movlw	0
  4349  0010CC  6E47               	movwf	_eusart1RxLastError^0,c	;volatile
  4350  0010CE  0012               	return		;funcret
  4351  0010D0                     __end_of_EUSART1_Initialize:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4355 ;; Defined at:
  4356 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  4359 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;Total ram usage:        2 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    4
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_EUSART1_Initialize
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text23
  4386  0012A0                     __ptext23:
  4387                           	callstack 0
  4388  0012A0                     _EUSART1_SetOverrunErrorHandler:
  4389                           	callstack 24
  4390  0012A0                     
  4391                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4392  0012A0  C014  F03D         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4393  0012A4  C015  F03E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4394  0012A8  0012               	return		;funcret
  4395  0012AA                     __end_of_EUSART1_SetOverrunErrorHandler:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4399 ;; Defined at:
  4400 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  4403 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;		None
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;Total ram usage:        2 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; Hardware stack levels required when called:    4
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		_EUSART1_Initialize
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text24
  4430  0012AA                     __ptext24:
  4431                           	callstack 0
  4432  0012AA                     _EUSART1_SetFramingErrorHandler:
  4433                           	callstack 24
  4434  0012AA                     
  4435                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4436  0012AA  C014  F03F         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4437  0012AE  C015  F040         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4438  0012B2  0012               	return		;funcret
  4439  0012B4                     __end_of_EUSART1_SetFramingErrorHandler:
  4440                           	callstack 0
  4441                           
  4442 ;; *************** function _EUSART1_SetErrorHandler *****************
  4443 ;; Defined at:
  4444 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  4447 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;Total ram usage:        2 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    4
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_EUSART1_Initialize
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text25
  4474  0012B4                     __ptext25:
  4475                           	callstack 0
  4476  0012B4                     _EUSART1_SetErrorHandler:
  4477                           	callstack 24
  4478  0012B4                     
  4479                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4480  0012B4  C014  F0A5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4481  0012B8  C015  F0A6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4482  0012BC  0012               	return		;funcret
  4483  0012BE                     __end_of_EUSART1_SetErrorHandler:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _ADC_Initialize *****************
  4487 ;; Defined at:
  4488 ;;		line 62 in file "mcc_generated_files/adc.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;Total ram usage:        0 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    4
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_SYSTEM_Initialize
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text26
  4517  001258                     __ptext26:
  4518                           	callstack 0
  4519  001258                     _ADC_Initialize:
  4520                           	callstack 25
  4521  001258                     
  4522                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  4523  001258  0E00               	movlw	0
  4524  00125A  6EC1               	movwf	193,c	;volatile
  4525                           
  4526                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  4527  00125C  0E26               	movlw	38
  4528  00125E  6EC0               	movwf	192,c	;volatile
  4529                           
  4530                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  4531  001260  0E00               	movlw	0
  4532  001262  6EC3               	movwf	195,c	;volatile
  4533                           
  4534                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  4535  001264  0E00               	movlw	0
  4536  001266  6EC4               	movwf	196,c	;volatile
  4537                           
  4538                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  4539  001268  0E11               	movlw	17
  4540  00126A  6EC2               	movwf	194,c	;volatile
  4541  00126C  0012               	return		;funcret
  4542  00126E                     __end_of_ADC_Initialize:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function _EUSART1_is_rx_ready *****************
  4546 ;; Defined at:
  4547 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      _Bool 
  4554 ;; Registers used:
  4555 ;;		wreg
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;Total ram usage:        0 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    4
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_main
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text27
  4576  00126E                     __ptext27:
  4577                           	callstack 0
  4578  00126E                     _EUSART1_is_rx_ready:
  4579                           	callstack 26
  4580  00126E                     
  4581                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4582  00126E  BA9E               	btfsc	158,5,c	;volatile
  4583  001270  EF3C  F009         	goto	u2081
  4584  001274  EF3F  F009         	goto	u2080
  4585  001278                     u2081:
  4586  001278  0E01               	movlw	1
  4587  00127A  EF40  F009         	goto	u2086
  4588  00127E                     u2080:
  4589  00127E  0E00               	movlw	0
  4590  001280                     u2086:
  4591  001280  0012               	return		;funcret
  4592  001282                     __end_of_EUSART1_is_rx_ready:
  4593                           	callstack 0
  4594                           
  4595 ;; *************** function _EUSART1_Read *****************
  4596 ;; Defined at:
  4597 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;		None
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      unsigned char 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;Total ram usage:        0 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:    4
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_main
  4622 ;;		_getch
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text28
  4627  0011C6                     __ptext28:
  4628                           	callstack 0
  4629  0011C6                     _EUSART1_Read:
  4630                           	callstack 26
  4631  0011C6                     l290:
  4632                           
  4633                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4634  0011C6  AA9E               	btfss	158,5,c	;volatile
  4635  0011C8  EFE8  F008         	goto	u2091
  4636  0011CC  EFEA  F008         	goto	u2090
  4637  0011D0                     u2091:
  4638  0011D0  EFE3  F008         	goto	l290
  4639  0011D4                     u2090:
  4640  0011D4                     
  4641                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4642  0011D4  0E00               	movlw	0
  4643  0011D6  6E47               	movwf	_eusart1RxLastError^0,c	;volatile
  4644  0011D8                     
  4645                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4646  0011D8  A2AB               	btfss	171,1,c	;volatile
  4647  0011DA  EFF1  F008         	goto	u2101
  4648  0011DE  EFF3  F008         	goto	u2100
  4649  0011E2                     u2101:
  4650  0011E2  EFF5  F008         	goto	l2805
  4651  0011E6                     u2100:
  4652  0011E6                     
  4653                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4654  0011E6  98AB               	bcf	171,4,c	;volatile
  4655                           
  4656                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4657  0011E8  88AB               	bsf	171,4,c	;volatile
  4658  0011EA                     l2805:
  4659                           
  4660                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4661  0011EA  50AE               	movf	174,w,c	;volatile
  4662  0011EC  0012               	return		;funcret
  4663  0011EE                     __end_of_EUSART1_Read:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _INTERRUPT_InterruptManager *****************
  4667 ;; Defined at:
  4668 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;Total ram usage:        4 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    3
  4689 ;; This function calls:
  4690 ;;		_TMR0_ISR
  4691 ;; This function is called by:
  4692 ;;		Interrupt level 2
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	intcode
  4697  000008                     __pintcode:
  4698                           	callstack 0
  4699  000008                     _INTERRUPT_InterruptManager:
  4700                           	callstack 18
  4701                           
  4702                           ;incstack = 0
  4703  000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4704  00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
  4705  00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4706  000012  CFD9 F012          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  4707  000016  CFDA F013          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  4708  00001A                     
  4709                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4710  00001A  AAF2               	btfss	242,5,c	;volatile
  4711  00001C  EF12  F000         	goto	i2u154_41
  4712  000020  EF14  F000         	goto	i2u154_40
  4713  000024                     i2u154_41:
  4714  000024  EF1D  F000         	goto	i2l340
  4715  000028                     i2u154_40:
  4716  000028  A4F2               	btfss	242,2,c	;volatile
  4717  00002A  EF19  F000         	goto	i2u155_41
  4718  00002E  EF1B  F000         	goto	i2u155_40
  4719  000032                     i2u155_41:
  4720  000032  EF1D  F000         	goto	i2l340
  4721  000036                     i2u155_40:
  4722  000036                     
  4723                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  4724  000036  EC9E  F008         	call	_TMR0_ISR	;wreg free
  4725  00003A                     i2l340:
  4726  00003A  C013  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  4727  00003E  C012  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  4728  000042  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4729  000046  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4730  00004A  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4731  00004C  0011               	retfie		f
  4732  00004E                     __end_of_INTERRUPT_InterruptManager:
  4733                           	callstack 0
  4734                           
  4735 ;; *************** function _TMR0_ISR *****************
  4736 ;; Defined at:
  4737 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;Total ram usage:        0 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    2
  4758 ;; This function calls:
  4759 ;;		Absolute function
  4760 ;;		_TMR0_DefaultInterruptHandler
  4761 ;;		_myTMR0ISR
  4762 ;; This function is called by:
  4763 ;;		_INTERRUPT_InterruptManager
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text30
  4768  00113C                     __ptext30:
  4769                           	callstack 0
  4770  00113C                     _TMR0_ISR:
  4771                           	callstack 18
  4772  00113C                     
  4773                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  4774  00113C  94F2               	bcf	242,2,c	;volatile
  4775  00113E                     
  4776                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  4777  00113E  5044               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  4778  001140  6ED7               	movwf	215,c	;volatile
  4779  001142                     
  4780                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  4781  001142  C043  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4782  001146                     
  4783                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  4784  001146  5045               	movf	_TMR0_InterruptHandler^0,w,c
  4785  001148  1046               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  4786  00114A  B4D8               	btfsc	status,2,c
  4787  00114C  EFAA  F008         	goto	i2u139_41
  4788  001150  EFAC  F008         	goto	i2u139_40
  4789  001154                     i2u139_41:
  4790  001154  EFB8  F008         	goto	i2l155
  4791  001158                     i2u139_40:
  4792  001158                     
  4793                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  4794  001158  D802               	call	i2u140_48
  4795  00115A  EFB8  F008         	goto	i2u140_49
  4796  00115E                     i2u140_48:
  4797  00115E  0005               	push	
  4798  001160  6EFA               	movwf	pclath,c
  4799  001162  5045               	movf	_TMR0_InterruptHandler^0,w,c
  4800  001164  6EFD               	movwf	tosl,c
  4801  001166  5046               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  4802  001168  6EFE               	movwf	tosh,c
  4803  00116A  6AFF               	clrf	tosu,c
  4804  00116C  50FA               	movf	pclath,w,c
  4805  00116E  0012               	return		;indir
  4806  001170                     i2u140_49:
  4807  001170                     i2l155:
  4808  001170  0012               	return		;funcret
  4809  001172                     __end_of_TMR0_ISR:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4813 ;; Defined at:
  4814 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;		None
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		None
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;Total ram usage:        0 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_TMR0_Initialize
  4838 ;;		_TMR0_ISR
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text31
  4843  0012CE                     __ptext31:
  4844                           	callstack 0
  4845  0012CE                     _TMR0_DefaultInterruptHandler:
  4846                           	callstack 19
  4847  0012CE  0012               	return		;funcret
  4848  0012D0                     __end_of_TMR0_DefaultInterruptHandler:
  4849                           	callstack 0
  4850                           
  4851 ;; *************** function _myTMR0ISR *****************
  4852 ;; Defined at:
  4853 ;;		line 210 in file "main.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  micReading      1   14[COMRAM] unsigned char 
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;Total ram usage:        5 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    1
  4874 ;; This function calls:
  4875 ;;		_TMR0_ReadTimer
  4876 ;;		i2_TMR0_WriteTimer
  4877 ;; This function is called by:
  4878 ;;		_main
  4879 ;;		_TMR0_ISR
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text32
  4884  000C3A                     __ptext32:
  4885                           	callstack 0
  4886  000C3A                     _myTMR0ISR:
  4887                           	callstack 18
  4888  000C3A                     
  4889                           ;main.c: 213:     uint8_t micReading = ADRESH;
  4890  000C3A  CFC4 F00F          	movff	4036,myTMR0ISR@micReading	;volatile
  4891                           
  4892                           ;main.c: 218:     ADCON0bits.GO_NOT_DONE = 1;
  4893  000C3E  82C2               	bsf	194,1,c	;volatile
  4894                           
  4895                           ;main.c: 222:     switch(timerState){
  4896  000C40  EF82  F006         	goto	i2l2147
  4897  000C44                     i2l2121:
  4898                           
  4899                           ;main.c: 226:             if(fillBuffer){
  4900  000C44  504A               	movf	_fillBuffer^0,w,c
  4901  000C46  B4D8               	btfsc	status,2,c
  4902  000C48  EF28  F006         	goto	i2u130_41
  4903  000C4C  EF2A  F006         	goto	i2u130_40
  4904  000C50                     i2u130_41:
  4905  000C50  EF9B  F006         	goto	i2l85
  4906  000C54                     i2u130_40:
  4907  000C54                     
  4908                           ;main.c: 227:                 timerState = MIC_WAIT_FOR_TRIGGER;
  4909  000C54  0E01               	movlw	1
  4910  000C56  6E49               	movwf	_timerState^0,c
  4911                           
  4912                           ;main.c: 228:                 bufferIdx = 0;
  4913  000C58  0E00               	movlw	0
  4914  000C5A  6E48               	movwf	_bufferIdx^0,c
  4915                           
  4916                           ;main.c: 229:                 fillBuffer = 0;
  4917  000C5C  0E00               	movlw	0
  4918  000C5E  6E4A               	movwf	_fillBuffer^0,c
  4919  000C60  EF9B  F006         	goto	i2l85
  4920  000C64                     i2l2125:
  4921                           
  4922                           ;main.c: 235:             if(micReading <= 128 + thresholdRange && micReading >= 128 - t
      +                          hresholdRange){
  4923  000C64  500F               	movf	myTMR0ISR@micReading^0,w,c
  4924  000C66  6E0B               	movwf	??_myTMR0ISR^0,c
  4925  000C68  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
  4926  000C6A  0E80               	movlw	128
  4927  000C6C  0100               	movlb	0	; () banked
  4928  000C6E  25C8               	addwf	_thresholdRange& (0+255),w,b
  4929  000C70  6E0D               	movwf	(??_myTMR0ISR+2)^0,c
  4930  000C72  0E00               	movlw	0
  4931  000C74  21C9               	addwfc	(_thresholdRange+1)& (0+255),w,b
  4932  000C76  6E0E               	movwf	(??_myTMR0ISR+3)^0,c
  4933  000C78  500B               	movf	??_myTMR0ISR^0,w,c
  4934  000C7A  5C0D               	subwf	(??_myTMR0ISR+2)^0,w,c
  4935  000C7C  500C               	movf	(??_myTMR0ISR+1)^0,w,c
  4936  000C7E  580E               	subwfb	(??_myTMR0ISR+3)^0,w,c
  4937  000C80  A0D8               	btfss	status,0,c
  4938  000C82  EF45  F006         	goto	i2u131_41
  4939  000C86  EF47  F006         	goto	i2u131_40
  4940  000C8A                     i2u131_41:
  4941  000C8A  EF9B  F006         	goto	i2l85
  4942  000C8E                     i2u131_40:
  4943  000C8E                     
  4944                           ; BSR set to: 0
  4945  000C8E  0E80               	movlw	128
  4946  000C90  6E0B               	movwf	??_myTMR0ISR^0,c
  4947  000C92  0E00               	movlw	0
  4948  000C94  6E0C               	movwf	(??_myTMR0ISR+1)^0,c
  4949  000C96  51C8               	movf	_thresholdRange& (0+255),w,b
  4950  000C98  5E0B               	subwf	??_myTMR0ISR^0,f,c
  4951  000C9A  51C9               	movf	(_thresholdRange+1)& (0+255),w,b
  4952  000C9C  5A0C               	subwfb	(??_myTMR0ISR+1)^0,f,c
  4953  000C9E  500F               	movf	myTMR0ISR@micReading^0,w,c
  4954  000CA0  6E0D               	movwf	(??_myTMR0ISR+2)^0,c
  4955  000CA2  6A0E               	clrf	(??_myTMR0ISR+3)^0,c
  4956  000CA4  500B               	movf	??_myTMR0ISR^0,w,c
  4957  000CA6  5C0D               	subwf	(??_myTMR0ISR+2)^0,w,c
  4958  000CA8  500C               	movf	(??_myTMR0ISR+1)^0,w,c
  4959  000CAA  580E               	subwfb	(??_myTMR0ISR+3)^0,w,c
  4960  000CAC  A0D8               	btfss	status,0,c
  4961  000CAE  EF5B  F006         	goto	i2u132_41
  4962  000CB2  EF5D  F006         	goto	i2u132_40
  4963  000CB6                     i2u132_41:
  4964  000CB6  EF9B  F006         	goto	i2l85
  4965  000CBA                     i2u132_40:
  4966  000CBA                     
  4967                           ; BSR set to: 0
  4968                           ;main.c: 236:                 adc_reading[bufferIdx] = micReading;
  4969  000CBA  0E46               	movlw	low _adc_reading
  4970  000CBC  2448               	addwf	_bufferIdx^0,w,c
  4971  000CBE  6ED9               	movwf	fsr2l,c
  4972  000CC0  6ADA               	clrf	fsr2h,c
  4973  000CC2  0E01               	movlw	high _adc_reading
  4974  000CC4  22DA               	addwfc	fsr2h,f,c
  4975  000CC6  C00F  FFDF         	movff	myTMR0ISR@micReading,indf2
  4976  000CCA                     
  4977                           ; BSR set to: 0
  4978                           ;main.c: 237:                 bufferIdx += 1;
  4979  000CCA  2A48               	incf	_bufferIdx^0,f,c
  4980  000CCC                     
  4981                           ; BSR set to: 0
  4982                           ;main.c: 238:                 timerState = MIC_ACQUIRE;
  4983  000CCC  0E02               	movlw	2
  4984  000CCE  6E49               	movwf	_timerState^0,c
  4985  000CD0  EF9B  F006         	goto	i2l85
  4986  000CD4                     i2l2135:
  4987                           
  4988                           ;main.c: 242:             adc_reading[bufferIdx] = micReading;
  4989  000CD4  0E46               	movlw	low _adc_reading
  4990  000CD6  2448               	addwf	_bufferIdx^0,w,c
  4991  000CD8  6ED9               	movwf	fsr2l,c
  4992  000CDA  6ADA               	clrf	fsr2h,c
  4993  000CDC  0E01               	movlw	high _adc_reading
  4994  000CDE  22DA               	addwfc	fsr2h,f,c
  4995  000CE0  C00F  FFDF         	movff	myTMR0ISR@micReading,indf2
  4996  000CE4                     
  4997                           ;main.c: 243:             bufferIdx += 1;
  4998  000CE4  2A48               	incf	_bufferIdx^0,f,c
  4999  000CE6                     
  5000                           ;main.c: 244:             if(bufferIdx >= 64){
  5001  000CE6  0E3F               	movlw	63
  5002  000CE8  6448               	cpfsgt	_bufferIdx^0,c
  5003  000CEA  EF79  F006         	goto	i2u133_41
  5004  000CEE  EF7B  F006         	goto	i2u133_40
  5005  000CF2                     i2u133_41:
  5006  000CF2  EF9B  F006         	goto	i2l85
  5007  000CF6                     i2u133_40:
  5008  000CF6                     
  5009                           ;main.c: 246:                 samplesCollected = 1;
  5010  000CF6  0E01               	movlw	1
  5011  000CF8  0100               	movlb	0	; () banked
  5012  000CFA  6FA7               	movwf	_samplesCollected& (0+255),b
  5013                           
  5014                           ;main.c: 247:                 timerState = MIC_IDLE;
  5015  000CFC  0E00               	movlw	0
  5016  000CFE  6E49               	movwf	_timerState^0,c
  5017  000D00  EF9B  F006         	goto	i2l85
  5018  000D04                     i2l2147:
  5019  000D04  5049               	movf	_timerState^0,w,c
  5020  000D06  6E0B               	movwf	??_myTMR0ISR^0,c
  5021  000D08  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
  5022                           
  5023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5024                           ; Switch size 1, requested type "simple"
  5025                           ; Number of cases is 1, Range of values is 0 to 0
  5026                           ; switch strategies available:
  5027                           ; Name         Instructions Cycles
  5028                           ; simple_byte            4     3 (average)
  5029                           ;	Chosen strategy is simple_byte
  5030  000D0A  500C               	movf	(??_myTMR0ISR+1)^0,w,c
  5031  000D0C  0A00               	xorlw	0	; case 0
  5032  000D0E  B4D8               	btfsc	status,2,c
  5033  000D10  EF8C  F006         	goto	i2l2995
  5034  000D14  EF9B  F006         	goto	i2l85
  5035  000D18                     i2l2995:
  5036                           
  5037                           ; Switch size 1, requested type "simple"
  5038                           ; Number of cases is 3, Range of values is 0 to 2
  5039                           ; switch strategies available:
  5040                           ; Name         Instructions Cycles
  5041                           ; simple_byte           10     6 (average)
  5042                           ;	Chosen strategy is simple_byte
  5043  000D18  500B               	movf	??_myTMR0ISR^0,w,c
  5044  000D1A  0A00               	xorlw	0	; case 0
  5045  000D1C  B4D8               	btfsc	status,2,c
  5046  000D1E  EF22  F006         	goto	i2l2121
  5047  000D22  0A01               	xorlw	1	; case 1
  5048  000D24  B4D8               	btfsc	status,2,c
  5049  000D26  EF32  F006         	goto	i2l2125
  5050  000D2A  0A03               	xorlw	3	; case 2
  5051  000D2C  B4D8               	btfsc	status,2,c
  5052  000D2E  EF6A  F006         	goto	i2l2135
  5053  000D32  EF9B  F006         	goto	i2l85
  5054  000D36                     i2l85:
  5055  000D36  0012               	return		;funcret
  5056  000D38                     __end_of_myTMR0ISR:
  5057                           	callstack 0
  5058                           
  5059 ;; *************** function i2_TMR0_WriteTimer *****************
  5060 ;; Defined at:
  5061 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  timerVal        2    8[COMRAM] unsigned short 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;		None
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      void 
  5068 ;; Registers used:
  5069 ;;		wreg, status,2
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;Total ram usage:        2 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; This function calls:
  5082 ;;		Nothing
  5083 ;; This function is called by:
  5084 ;;		_myTMR0ISR
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text33
  5089  0012BE                     __ptext33:
  5090                           	callstack 0
  5091  0012BE                     i2_TMR0_WriteTimer:
  5092                           	callstack 18
  5093  0012BE                     
  5094                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5095  0012BE  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  5096  0012C0  6ED7               	movwf	215,c	;volatile
  5097  0012C2                     
  5098                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5099  0012C2  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  5100  0012C6  0012               	return		;funcret
  5101  0012C8                     __end_ofi2_TMR0_WriteTimer:
  5102                           	callstack 0
  5103                           
  5104 ;; *************** function _TMR0_ReadTimer *****************
  5105 ;; Defined at:
  5106 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;		None
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  readVal         2    4[COMRAM] unsigned short 
  5111 ;;  readValHigh     1    7[COMRAM] unsigned char 
  5112 ;;  readValLow      1    6[COMRAM] unsigned char 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  2    0[COMRAM] unsigned short 
  5115 ;; Registers used:
  5116 ;;		wreg, status,2
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;Total ram usage:        8 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_myTMR0ISR
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           	psect	text34
  5136  0011EE                     __ptext34:
  5137                           	callstack 0
  5138  0011EE                     _TMR0_ReadTimer:
  5139                           	callstack 18
  5140  0011EE                     
  5141                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
  5142  0011EE  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  5143                           
  5144                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
  5145  0011F2  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  5146  0011F6                     
  5147                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  5148  0011F6  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  5149  0011F8  6E03               	movwf	??_TMR0_ReadTimer^0,c
  5150  0011FA  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  5151  0011FC  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  5152  0011FE  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  5153  001202                     
  5154                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
  5155  001202  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  5156  001206  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  5157  00120A  0012               	return		;funcret
  5158  00120C                     __end_of_TMR0_ReadTimer:
  5159                           	callstack 0
  5160                           
  5161                           	psect	text35
  5162  000000                     __ptext35:
  5163                           	callstack 0
  5164  000000                     
  5165                           	psect	rparam
  5166  0000                     
  5167                           	psect	temp
  5168  00004B                     btemp:
  5169                           	callstack 0
  5170  00004B                     	ds	1
  5171  0000                     int$flags	set	btemp
  5172  0000                     wtemp8	set	btemp+1
  5173  0000                     ttemp5	set	btemp+1
  5174  0000                     ttemp6	set	btemp+4
  5175  0000                     ttemp7	set	btemp+8
  5176                           
  5177                           	psect	idloc
  5178                           
  5179                           ;Config register IDLOC0 @ 0x200000
  5180                           ;	unspecified, using default values
  5181  200000                     	org	2097152
  5182  200000  FF                 	db	255
  5183                           
  5184                           ;Config register IDLOC1 @ 0x200001
  5185                           ;	unspecified, using default values
  5186  200001                     	org	2097153
  5187  200001  FF                 	db	255
  5188                           
  5189                           ;Config register IDLOC2 @ 0x200002
  5190                           ;	unspecified, using default values
  5191  200002                     	org	2097154
  5192  200002  FF                 	db	255
  5193                           
  5194                           ;Config register IDLOC3 @ 0x200003
  5195                           ;	unspecified, using default values
  5196  200003                     	org	2097155
  5197  200003  FF                 	db	255
  5198                           
  5199                           ;Config register IDLOC4 @ 0x200004
  5200                           ;	unspecified, using default values
  5201  200004                     	org	2097156
  5202  200004  FF                 	db	255
  5203                           
  5204                           ;Config register IDLOC5 @ 0x200005
  5205                           ;	unspecified, using default values
  5206  200005                     	org	2097157
  5207  200005  FF                 	db	255
  5208                           
  5209                           ;Config register IDLOC6 @ 0x200006
  5210                           ;	unspecified, using default values
  5211  200006                     	org	2097158
  5212  200006  FF                 	db	255
  5213                           
  5214                           ;Config register IDLOC7 @ 0x200007
  5215                           ;	unspecified, using default values
  5216  200007                     	org	2097159
  5217  200007  FF                 	db	255
  5218                           
  5219                           	psect	config
  5220                           
  5221                           ; Padding undefined space
  5222  300000                     	org	3145728
  5223  300000  FF                 	db	255
  5224                           
  5225                           ;Config register CONFIG1H @ 0x300001
  5226                           ;	Oscillator Selection bits
  5227                           ;	FOSC = INTIO67, Internal oscillator block
  5228                           ;	4X PLL Enable
  5229                           ;	PLLCFG = OFF, Oscillator used directly
  5230                           ;	Primary clock enable bit
  5231                           ;	PRICLKEN = ON, Primary clock enabled
  5232                           ;	Fail-Safe Clock Monitor Enable bit
  5233                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5234                           ;	Internal/External Oscillator Switchover bit
  5235                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5236  300001                     	org	3145729
  5237  300001  28                 	db	40
  5238                           
  5239                           ;Config register CONFIG2L @ 0x300002
  5240                           ;	Power-up Timer Enable bit
  5241                           ;	PWRTEN = OFF, Power up timer disabled
  5242                           ;	Brown-out Reset Enable bits
  5243                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5244                           ;	Brown Out Reset Voltage bits
  5245                           ;	BORV = 190, VBOR set to 1.90 V nominal
  5246  300002                     	org	3145730
  5247  300002  1F                 	db	31
  5248                           
  5249                           ;Config register CONFIG2H @ 0x300003
  5250                           ;	Watchdog Timer Enable bits
  5251                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5252                           ;	Watchdog Timer Postscale Select bits
  5253                           ;	WDTPS = 32768, 1:32768
  5254  300003                     	org	3145731
  5255  300003  3C                 	db	60
  5256                           
  5257                           ; Padding undefined space
  5258  300004                     	org	3145732
  5259  300004  FF                 	db	255
  5260                           
  5261                           ;Config register CONFIG3H @ 0x300005
  5262                           ;	CCP2 MUX bit
  5263                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5264                           ;	PORTB A/D Enable bit
  5265                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  5266                           ;	P3A/CCP3 Mux bit
  5267                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  5268                           ;	HFINTOSC Fast Start-up
  5269                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  5270                           ;	Timer3 Clock input mux bit
  5271                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5272                           ;	ECCP2 B output mux bit
  5273                           ;	P2BMX = PORTB5, P2B is on RB5
  5274                           ;	MCLR Pin Enable bit
  5275                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5276  300005                     	org	3145733
  5277  300005  BF                 	db	191
  5278                           
  5279                           ;Config register CONFIG4L @ 0x300006
  5280                           ;	Stack Full/Underflow Reset Enable bit
  5281                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5282                           ;	Single-Supply ICSP Enable bit
  5283                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  5284                           ;	Extended Instruction Set Enable bit
  5285                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5286                           ;	Background Debug
  5287                           ;	DEBUG = OFF, Disabled
  5288  300006                     	org	3145734
  5289  300006  85                 	db	133
  5290                           
  5291                           ; Padding undefined space
  5292  300007                     	org	3145735
  5293  300007  FF                 	db	255
  5294                           
  5295                           ;Config register CONFIG5L @ 0x300008
  5296                           ;	Code Protection Block 0
  5297                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5298                           ;	Code Protection Block 1
  5299                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5300                           ;	Code Protection Block 2
  5301                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5302                           ;	Code Protection Block 3
  5303                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5304  300008                     	org	3145736
  5305  300008  0F                 	db	15
  5306                           
  5307                           ;Config register CONFIG5H @ 0x300009
  5308                           ;	Boot Block Code Protection bit
  5309                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5310                           ;	Data EEPROM Code Protection bit
  5311                           ;	CPD = OFF, Data EEPROM not code-protected
  5312  300009                     	org	3145737
  5313  300009  C0                 	db	192
  5314                           
  5315                           ;Config register CONFIG6L @ 0x30000A
  5316                           ;	Write Protection Block 0
  5317                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5318                           ;	Write Protection Block 1
  5319                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5320                           ;	Write Protection Block 2
  5321                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5322                           ;	Write Protection Block 3
  5323                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5324  30000A                     	org	3145738
  5325  30000A  0F                 	db	15
  5326                           
  5327                           ;Config register CONFIG6H @ 0x30000B
  5328                           ;	Configuration Register Write Protection bit
  5329                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5330                           ;	Boot Block Write Protection bit
  5331                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5332                           ;	Data EEPROM Write Protection bit
  5333                           ;	WRTD = OFF, Data EEPROM not write-protected
  5334  30000B                     	org	3145739
  5335  30000B  E0                 	db	224
  5336                           
  5337                           ;Config register CONFIG7L @ 0x30000C
  5338                           ;	Table Read Protection Block 0
  5339                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5340                           ;	Table Read Protection Block 1
  5341                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5342                           ;	Table Read Protection Block 2
  5343                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5344                           ;	Table Read Protection Block 3
  5345                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5346  30000C                     	org	3145740
  5347  30000C  0F                 	db	15
  5348                           
  5349                           ;Config register CONFIG7H @ 0x30000D
  5350                           ;	Boot Block Table Read Protection bit
  5351                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5352  30000D                     	org	3145741
  5353  30000D  40                 	db	64
  5354                           tosu	equ	0xFFF
  5355                           tosh	equ	0xFFE
  5356                           tosl	equ	0xFFD
  5357                           stkptr	equ	0xFFC
  5358                           pclatu	equ	0xFFB
  5359                           pclath	equ	0xFFA
  5360                           pcl	equ	0xFF9
  5361                           tblptru	equ	0xFF8
  5362                           tblptrh	equ	0xFF7
  5363                           tblptrl	equ	0xFF6
  5364                           tablat	equ	0xFF5
  5365                           prodh	equ	0xFF4
  5366                           prodl	equ	0xFF3
  5367                           indf0	equ	0xFEF
  5368                           postinc0	equ	0xFEE
  5369                           postdec0	equ	0xFED
  5370                           preinc0	equ	0xFEC
  5371                           plusw0	equ	0xFEB
  5372                           fsr0h	equ	0xFEA
  5373                           fsr0l	equ	0xFE9
  5374                           wreg	equ	0xFE8
  5375                           indf1	equ	0xFE7
  5376                           postinc1	equ	0xFE6
  5377                           postdec1	equ	0xFE5
  5378                           preinc1	equ	0xFE4
  5379                           plusw1	equ	0xFE3
  5380                           fsr1h	equ	0xFE2
  5381                           fsr1l	equ	0xFE1
  5382                           bsr	equ	0xFE0
  5383                           indf2	equ	0xFDF
  5384                           postinc2	equ	0xFDE
  5385                           postdec2	equ	0xFDD
  5386                           preinc2	equ	0xFDC
  5387                           plusw2	equ	0xFDB
  5388                           fsr2h	equ	0xFDA
  5389                           fsr2l	equ	0xFD9
  5390                           status	equ	0xFD8

Data Sizes:
    Strings     452
    Constant    0
    Data        2
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      74
    BANK0           160     67     106
    BANK1           256     70     134
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1328_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_25(CODE[17]), STR_24(CODE[23]), STR_23(CODE[24]), STR_22(CODE[24]), 
		 -> STR_21(CODE[24]), STR_20(CODE[3]), STR_19(CODE[2]), STR_18(CODE[6]), 
		 -> STR_17(CODE[33]), STR_16(CODE[72]), STR_15(CODE[43]), STR_14(CODE[24]), 
		 -> STR_13(CODE[21]), STR_12(CODE[7]), STR_11(CODE[15]), STR_10(CODE[33]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[53]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 72
		 -> STR_25(CODE[17]), STR_24(CODE[23]), STR_23(CODE[24]), STR_22(CODE[24]), 
		 -> STR_21(CODE[24]), STR_20(CODE[3]), STR_19(CODE[2]), STR_18(CODE[6]), 
		 -> STR_17(CODE[33]), STR_16(CODE[72]), STR_15(CODE[43]), STR_14(CODE[24]), 
		 -> STR_13(CODE[21]), STR_12(CODE[7]), STR_11(CODE[15]), STR_10(CODE[33]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[53]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_25(CODE[17]), STR_24(CODE[23]), STR_23(CODE[24]), STR_22(CODE[24]), 
		 -> STR_21(CODE[24]), STR_20(CODE[3]), STR_19(CODE[2]), STR_18(CODE[6]), 
		 -> STR_17(CODE[33]), STR_16(CODE[72]), STR_15(CODE[43]), STR_14(CODE[24]), 
		 -> STR_13(CODE[21]), STR_12(CODE[7]), STR_11(CODE[15]), STR_10(CODE[33]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[53]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), myTMR0ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), myTMR0ISR(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                72    72      0   15704
                                             65 BANK0      2     2      0
                                              0 BANK1     70    70      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   13982
                                             55 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11645
                                             47 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   11163
                                             48 COMRAM     6     0      6
                                             36 BANK0     11    11      0
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6701
                                              0 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4435
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             30 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1546
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                             20 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     207
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             21 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     228
                                             15 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     228
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           5     5      0     228
                                             10 COMRAM     5     5      0
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (13) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     46      86       7       52.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      6A       5       66.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      4A       1       78.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13A      12        0.0%
DATA                 0      0     13A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Oct 20 09:40:31 2020

                                            l35 0064                                              l45 011C  
                                            l38 00BC                                              l59 02DC  
                               _timer0ReloadVal 0043                             myTMR0ISR@micReading 000F  
                                           l112 119C                                             l300 1256  
                                           l136 113A                                             l209 126C  
                                           l321 12A8                                             l306 128A  
                                           l324 12BC                                             l148 1294  
                                           l333 12CA                                             l318 12B2  
                                           l190 1226                                             l158 129E  
                                           l184 1240                                             l281 1280  
                                           l273 10CE                                             l290 11C6  
                                           l187 1218                                             l294 11EC  
                                           l470 0C38                                             l297 1244  
                                           l457 0AD4                                             _abs 1052  
                                           _pad 0E0C                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1100 094C                                            l1021 11C4  
                                          l1110 0FC6                                            l1114 1088  
                                          l1051 0E92                                            ?_abs 0026  
                                          l1117 1090                                            l1053 0ECC  
                                          l1109 0FBE                                            l1143 1104  
                                          l1064 0D9C                                            l1048 0E50  
                                          l1129 0F62                                            l1137 1050  
                                          l1067 0DDE                                            l1075 04D8  
                                          l1069 0E0A                                            l1077 04E0  
                                          l1095 0718                                            l2501 0A4A  
                                          l2511 0A94                                            l2503 0A6A  
                                          l2441 0ECE                                            l2601 0DEC  
                                          l2513 0AB4                                            l2505 0A6C  
                                          l2521 0AE8                                            l2435 1244  
                                          l2451 0F50                                            l2443 0EE0  
                                          l2603 0DFE                                            l2507 0A7E  
                                          l2531 0B58                                            l2523 0B08  
                                          l2611 0482                                            l2437 1252  
                                          l2445 0EF2                                            l2509 0A84  
                                          l2541 0BD0                                            l2533 0B60  
                                          l2525 0B0C                                            l2517 0AD6  
                                          l2461 1030                                            l2621 04E8  
                                          l2613 04A2                                            l2439 1284  
                                          l2447 0EFC                                            l2543 0BE2  
                                          l2535 0B74                                            l2527 0B1A  
                                          l2519 0ADA                                            l2455 100E  
                                          l2463 10D0                                            l2631 051E  
                                          l2623 04FA                                            l2615 04B0  
                                          l2607 0438                                            l2703 08A6  
                                          l2801 11D8                                            l2449 0F1A  
                                          l2481 0984                                            l2473 094E  
                                          l2537 0B82                                            l2545 0BE8  
                                          l2529 0B3A                                            l2457 101A  
                                          l2465 10DC                                            l2561 0E48  
                                          l2553 0E0C                                            l2633 0524  
                                          l2641 0618                                            l2625 0508  
                                          l2617 04B2                                            l2609 0458  
                                          l2721 093A                                            l2705 08CC  
                                          l2713 08FA                                            l2803 11E6  
                                          l2731 119A                                            l2491 09E0  
                                          l2483 0992                                            l2475 0952  
                                          l2547 0BF8                                            l2539 0BB0  
                                          l2459 102C                                            l2467 10E0  
                                          l2571 0EB4                                            l2563 0E5C  
                                          l2555 0E1A                                            l2643 0634  
                                          l2651 0694                                            l2635 05A6  
                                          l2627 050E                                            l2619 04CC  
                                          l2715 0908                                            l2707 08DA  
                                          l2811 0056                                            l2805 11EA  
                                          l2741 1128                                            l2733 1106  
                                          l2581 0D4A                                            l2493 09E8  
                                          l2485 09B2                                            l2477 0960  
                                          l2549 0C18                                            l2469 10F8  
                                          l2565 0E70                                            l2557 0E2E  
                                          l2661 06D8                                            l2653 06A6  
                                          l2645 0652                                            l2637 05AE  
                                          l2629 0516                                            l2709 08EE  
                                          l2901 02E2                                            l2821 0082  
                                          l2813 0062                                            l2751 1258  
                                          l2671 12AA                                            l2727 1172  
                                          l2743 112A                                            l2735 1108  
                                          l2583 0D56                                            l2495 09FC  
                                          l2487 09B6                                            l2479 0980  
                                          l2575 1052                                            l2567 0E74  
                                          l2559 0E3C                                            l2663 06E0  
                                          l2655 06B4                                            l2647 066C  
                                          l2639 05B4                                            l2719 0914  
                                          l2911 02FA                                            l2831 00CA  
                                          l2823 0090                                            l2815 0072  
                                          l2673 12A0                                            l2761 10CA  
                                          l2753 1092                                            l2729 1182  
                                          l2745 1136                                            l2737 1110  
                                          l2593 0D94                                            l2585 0D62  
                                          l2497 0A0A                                            l2489 09C2  
                                          l2577 106C                                            l2569 0EA0  
                                          l2657 06BA                                            l2665 06F0  
                                          l2649 0686                                            l2681 074E  
                                          l2921 035C                                            l2913 030E  
                                          l2833 00DC                                            l2825 009E  
                                          l2817 007E                                            l2809 0052  
                                          l2675 12B4                                            l2755 10A6  
                                          l2747 12C8                                            l2739 1126  
                                          l2771 1228                                            l2595 0DA8  
                                          l2587 0D70                                            l2579 0D38  
                                          l2499 0A1C                                            l2659 06CC  
                                          l2683 075E                                            l2763 0F64  
                                          l2923 0388                                            l2915 0316  
                                          l2907 02E8                                            l2931 03E0  
                                          l2851 0158                                            l2843 00F2  
                                          l2835 00E0                                            l2827 00AC  
                                          l2819 0080                                            l2757 10B2  
                                          l2749 120C                                            l2669 1296  
                                          l2781 123C                                            l2773 122C  
                                          l2597 0DBC                                            l2589 0D82  
                                          l2693 07D8                                            l2685 0762  
                                          l2677 071A                                            l2765 0F6C  
                                          l2925 03C2                                            l2917 0342  
                                          l2909 02F6                                            l2861 0170  
                                          l2853 0166                                            l2845 010A  
                                          l2837 00EC                                            l2829 00BA  
                                          ?_pad 0026                                            l2759 10BE  
                                          l2775 1230                                            l2783 128C  
                                          l2599 0DC0                                            l2695 07FE  
                                          l2687 0788                                            l2679 0740  
                                          l2767 0F7A                                            l2927 03CA  
                                          l2919 0354                                            l2871 01BC  
                                          l2863 018C                                            l2855 016C  
                                          l2847 0144                                            l2793 126E  
                                          l2777 1234                                            l2785 1290  
                                          l2697 0824                                            l2689 07BC  
                                          l2769 0FA0                                            l2873 01CC  
                                          l2865 01A8                                            l2849 0148  
                                          l2881 0212                                            l2779 1238  
                                          l2699 086E                                            l2787 119E  
                                          l2883 0226                                            l2875 01D4  
                                          l2867 01B8                                            l2797 11C6  
                                          l2789 11A8                                            l2885 0232  
                                          l2877 01FC                                            l2869 01BA  
                                          l2799 11D4                                            l2895 02BA  
                                          l2887 02A4                                            l2879 0200  
                                          l2993 03F6                                            l2897 02C8  
                                          l2889 02B4                                            l2899 02CC  
                                          STR_1 FFCE                                            STR_2 FF39  
                                          STR_3 FFD9                                            STR_4 FFFC  
                                          STR_5 FE83                                            STR_6 FFE2  
                                          STR_7 FFF8                                            STR_8 FEB8  
                                          STR_9 FFF8                                            u2000 06CC  
                                          u2001 06C8                                            u2010 0740  
                                          u2011 073C                                            u2100 11E6  
                                          u2020 0788                                            u2101 11E2  
                                          u2021 0784                                            u2030 07FE  
                                          u2110 0072                                            u2031 07FA  
                                          u2111 006E                                            u2040 0824  
                                          u2200 0226                                            u2120 00CA  
                                          u2041 0820                                            u2201 0222  
                                          u2121 00C6                                            u2050 08CC  
                                          u2210 02DC                                            u2130 00DC  
                                          u2051 08C8                                            u2211 02D8  
                                          u2131 00D8                                            u2060 1226  
                                          u2220 030A                                            u2140 010A  
                                          u2061 1222                                            u2221 0306  
                                          u2141 0106                                            _LATA 000F89  
                                          u2070 0FBE                                            u2230 0354  
                                          u2150 0158                                            _LATB 000F8A  
                                          u2071 0FBA                                            u2231 0350  
                                          u2151 0154                                            _LATC 000F8B  
                                          u2080 127E                                            u1600 0F50  
                                          u2160 018C                                            u2081 1278  
                                          u1601 0F4C                                            u2161 0188  
                                          u2090 11D4                                            u1610 1050  
                                          u2170 01A8                                            u2091 11D0  
                                          u1611 104C                                            u2171 01A4  
                                          u1700 0AE8                                            u1620 10F8  
                                          u2180 01CC                                            u1701 0AE4  
                                          u1621 10F4                                            u2181 01C8  
                                          u2086 1280                                            u1630 0960  
                                          u1710 0B1A                                            u2190 0212  
                                          u1631 095C                                            u1711 0B16  
                                          u2191 020E                                            u1560 1252  
                                          u1640 0992                                            u1720 0B58  
                                          u1800 106C                                            u1561 124E  
                                          u1641 098E                                            u1721 0B54  
                                          u1801 1068                                            u1570 0EE0  
                                          u1810 0D4A                                            u1730 0B82  
                                          u1571 0EDC                                            u1811 0D46  
                                          u1651 09BC                                            u1731 0B7E  
                                          u1580 0EF2                                            u1820 0D70  
                                          u1660 09E0                                            u1740 0BB0  
                                          u1900 04CC                                            u1581 0EEE  
                                          u1821 0D6C                                            u1661 09DC  
                                          u1741 0BAC                                            u1901 04C8  
                                          u1590 0F1A                                            u1830 0D90  
                                          u1670 0A0A                                            u1750 0BF8  
                                          u1910 04FA                                            u1591 0F16  
                                          u1831 0D8C                                            u1671 0A06  
                                          u1751 0BF4                                            u1911 04F6  
                                          u1840 0DDE                                            u1680 0A4A  
                                          u1760 0E1A                                            u1920 0508  
                                          u1841 0DDA                                            u1681 0A46  
                                          u1761 0E16                                            u1921 0504  
                                          u1850 0DEC                                            u1690 0A94  
                                          u1770 0E3C                                            u1930 0634  
                                          u1851 0DE8                                            u1691 0A90  
                                          u1771 0E38                                            u1931 0630  
                                          u1780 0E92                                            u1940 0652  
                                          u1860 046A                                            u1781 0E8E  
                                          u1941 064E                                            u1861 0464  
                                          u1790 0EA0                                            u1950 066C  
                                          u1870 046C                                            u1791 0E9C  
                                          u1951 0668                                            u1960 0686  
                                          u1880 0482                                            u1961 0682  
                                          u1881 047E                                            u1970 0694  
                                          u1890 04B0                                            u1971 0690  
                                          u1891 04AC                                            u1980 06A6  
                                          u1981 06A2                                            u1990 06B4  
                                          u1991 06B0                                            i2l85 0D36  
                                          _WPUB 000F61                                   _EUSART1_Write 1242  
                                          abs@a 0026                                            _dbuf 00A8  
                                          _ctoa 0D38                                            _main 0052  
                                          _dtoa 0438                                   ?_EUSART1_Read 0001  
                                          _prec 0039                                            _nout 00A3  
                                          pad@i 002D                                            pad@p 002A  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 002F                                            fsr2l 000FD9  
                                          btemp 004B                                            start 004E  
                                  ___param_bank 000000                                           ??_abs 0028  
                                         ??_pad 002C                         __end_of_TMR0_Initialize 113C  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 1228                                 __end_of___aodiv 0AD6  
                                         ?_ctoa 001F                                           ?_main 0001  
                                         ?_dtoa 0060                                 __end_of___aomod 0C3A  
                                         STR_10 FF18                                           STR_11 FFBF  
                                         STR_20 FFF5                                           STR_12 FFEB  
                                         STR_13 FF99                                           STR_21 FF52  
                                         STR_22 FF52                                           STR_14 FF6A  
                                         STR_23 FF52                                           STR_15 FEED  
                                         STR_24 FF82                                           STR_16 FE3B  
                                         STR_17 FF18                                           STR_25 FFAE  
                                         STR_18 FFF2                                           STR_19 FEB6  
                     TMR0_ReadTimer@readValHigh 0008                                           _T0CON 000FD5  
                                         i2l145 120A                                           i2l161 12CE  
                                         i2l155 1170                                           i2l148 12C6  
                                         i2l340 003A                                 _TMR0_WriteTimer 128C  
                                  vfpfcnvrt@fmt 0033                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                       ?_TMR0_SetInterruptHandler 0014  
                              __end_of_TMR0_ISR 1172                                           _flags 003B  
                                         _fputc 0ECE                                           _fputs 100E  
                                         pad@fp 0026                                           _width 0037  
                                         ctoa@c 0021                                           _putch 1282  
                                         ctoa@l 0023                                           ctoa@w 0025  
                                         main@i 0143                                           dtoa@d 0062  
                                         dtoa@i 0082                                           dtoa@n 007A  
                                         dtoa@p 0074                                           dtoa@s 0078  
                                         dtoa@w 0076                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0014                                           ttemp5 004C  
                                         ttemp6 004F                                           ttemp7 0053  
                                         status 000FD8                                           wtemp8 004C  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 0FC8  
                                  __end_of_ctoa 0E0C                      __end_of_EUSART1_Initialize 10D0  
                                  __end_of_main 0438                                    __end_of_dtoa 071A  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 0022  
                                        ??_main 00A1                                          ??_dtoa 006A  
                                 __activetblptr 000003                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0016                                          ?_fputs 001F  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l2121 0C44  
                                        i2l2051 11EE                                          i2l2115 12BE  
                                        i2l2131 0CCA                                          i2l2123 0C54  
                                        i2l2053 11F6                                          i2l2117 12C2  
                                        i2l2141 0CF6                                          i2l2133 0CCC  
                                        i2l2125 0C64                                          i2l2055 1202  
                                        i2l2135 0CD4                                          i2l2127 0C8E  
                                        i2l2119 0C3A                                          i2l2137 0CE4  
                                        i2l2129 0CBA                                          i2l2241 1146  
                                        i2l2139 0CE6                                          i2l2147 0D04  
                                        i2l2243 1158                                          i2l2235 113C  
                                        i2l2237 113E                                          i2l2239 1142  
                                        i2l2381 0028                                          i2l2383 0036  
                                        i2l2379 001A                                          i2l2995 0D18  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 main@crossings 0100                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                  vfprintf@cfmt 0095                                       ??___aodiv 0024  
                                     ??___aomod 0024                         __end_of_TMR0_WriteTimer 1296  
                     i2TMR0_WriteTimer@timerVal 0009                        ?_EUSART1_SetErrorHandler 0014  
                              ?_TMR0_Initialize 0001                                          clear_0 0FE6  
                                        clear_1 0FF2                                          clear_2 0FFE  
                                        _printf 119E                                          pad@buf 0028  
              ??_EUSART1_SetOverrunErrorHandler 0016                 ?_EUSART1_SetOverrunErrorHandler 0014  
                                        ctoa@fp 001F                                          dtoa@fp 0060  
                                        _strlen 10D0                                          fputc@c 0016  
                                        fputs@c 0023                                          fputs@i 0024  
                                        fputs@s 001F                                    __mediumconst FE3A  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 0FC8  
                               ??_EUSART1_Write 0014        TMR0_SetInterruptHandler@InterruptHandler 0014  
                 __size_of_INTERRUPT_Initialize 0004                               _SYSTEM_Initialize 1228  
                                    __accesstop 0060                         __end_of__initialization 1004  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 12CC  
                           ??_SYSTEM_Initialize 0018                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 0F64                                   __end_of_fputs 1052  
                                 __end_of_putch 128C                         __size_of_TMR0_ReadTimer 001E  
                          __end_of_EUSART1_Read 11EE                                         ??_fputc 001A  
                     __end_of_SYSTEM_Initialize 1242                                         ??_fputs 0023  
                            __size_of_myTMR0ISR 00FE                                         ??_putch 0015  
                                    __pbssBANK0 00A3                                      __pbssBANK1 0146  
               __end_of_EUSART1_SetErrorHandler 12BE                __end_of_TMR0_SetInterruptHandler 12A0  
                                    ??_TMR0_ISR 0010                                ?_TMR0_WriteTimer 0014  
                                    _fillBuffer 004A                                         ?_printf 0097  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 0014  
        __end_of_EUSART1_SetFramingErrorHandler 12B4         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 12AA                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0234                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                            _ADC_InterruptHandler 0041  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aodiv 094E                                         ___aomod 0AD6  
                             __end_of_myTMR0ISR 0D38                                       ?_vfprintf 008F  
                           _EUSART1_is_rx_ready 126E                                         __pcinit 0FC8  
                                       __ramtop 1000                                         __ptext0 0052  
                                       __ptext1 119E                                         __ptext2 0F64  
                                       __ptext3 071A                                         __ptext4 0438  
                                       __ptext5 0E0C                                         __ptext6 10D0  
                                       __ptext7 100E                                         __ptext8 1052  
                                       __ptext9 0AD6                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize 120C                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                              _EUSART1_Initialize 1092  
                      ??_PIN_MANAGER_Initialize 0014                                         main@cmd 0140  
                    __size_of_SYSTEM_Initialize 001A                            end_of_initialization 1004  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0018                     _EUSART1_OverrunErrorHandler 003D  
                                       fputs@fp 0021                               __end_of_vfpfcnvrt 094E  
                         TMR0_ReadTimer@readVal 0005                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0028  
                                    ??_vfprintf 0037                                  _TMR0_ReadTimer 11EE  
                          ??_EUSART1_Initialize 0016                                         strlen@a 0016  
                                       strlen@s 0014                                      _timerState 0049  
                      _TMR0_SetInterruptHandler 1296                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0014                           ??_EUSART1_is_rx_ready 0014  
                                  _EUSART1_Read 11C6                          __end_of_TMR0_ReadTimer 120C  
                  __end_of_INTERRUPT_Initialize 12CC                                     vfpfcnvrt@ap 0035  
                                   vfpfcnvrt@fp 0031                                     vfpfcnvrt@ll 0086  
                             __size_of_TMR0_ISR 0036                                  _ADC_Initialize 1258  
                                   _adc_reading 0146                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 11C6                                  __end_of_strlen 1106  
                           start_initialization 0FC8                        __size_of_TMR0_Initialize 0036  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 1092  
                                   __end_of_pad 0ECE                                     putch@txData 0015  
                         __end_of_EUSART1_Write 1258                                     vfprintf@fmt 0091  
                               ?_TMR0_ReadTimer 0001                          __end_of_ADC_Initialize 126E  
                                   __pdataBANK0 00C8                                        ??_printf 0037  
                                      ??_strlen 0016                                     __pbssCOMRAM 0037  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0100  
                              ___aodiv@dividend 0014                ??_EUSART1_SetFramingErrorHandler 0016  
               ?_EUSART1_SetFramingErrorHandler 0014                           _TMR0_InterruptHandler 0045  
                        _PIN_MANAGER_Initialize 1172                                       _dtoa$1397 0072  
                                     __pintcode 0008                                   __pmediumconst FE3A  
                                      ?___aodiv 0014                                        ?___aomod 0014  
                              ___aodiv@quotient 0026                                 ?_ADC_Initialize 0001  
                                     _bufferIdx 0048                    ??_INTERRUPT_InterruptManager 0010  
                             __size_of_vfprintf 0064                                       _myTMR0ISR 0C3A  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 00A5  
                       _EUSART1_SetErrorHandler 12B4                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 12C8                               ??_TMR0_Initialize 0016  
       EUSART1_SetErrorHandler@interruptHandler 0014                                        i2u130_40 0C54  
                                      i2u130_41 0C50                                        i2u131_40 0C8E  
                                      i2u131_41 0C8A                                        i2u132_40 0CBA  
                                      i2u132_41 0CB6                                        i2u133_40 0CF6  
                                      i2u140_48 115E                                        i2u133_41 0CF2  
                                      i2u140_49 1170             __size_of_INTERRUPT_InterruptManager 0046  
                                      i2u154_40 0028                                        i2u154_41 0024  
                                      i2u139_40 1158                                        i2u155_40 0036  
                                      i2u139_41 1154                                        i2u155_41 0032  
                    ??_TMR0_SetInterruptHandler 0016                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 113C  
                                     _vfpfcnvrt 071A                        TMR0_ReadTimer@readValLow 0007  
                                    _ADCON0bits 000FC2                                       main@i_224 0145  
                                     main@i_225 0142                                       main@i_218 0144  
                                    ?_myTMR0ISR 0001                                       main@crIdx 0141  
                             i2_TMR0_WriteTimer 12BE                                      vfpfcnvrt@c 008E  
                            ?i2_TMR0_WriteTimer 0009                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                             ??i2_TMR0_WriteTimer 000B  
                                      __Hrparam 0000                                      vfprintf@ap 0093  
                                      __Lrparam 0000                                      vfprintf@fp 008F  
                       ??_OSCILLATOR_Initialize 0014                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 003E  
                                    ?_vfpfcnvrt 0031                                 ___aodiv@divisor 001C  
                               ___aodiv@counter 0024                       __end_ofi2_TMR0_WriteTimer 12C8  
                     ??_EUSART1_SetErrorHandler 0016                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 1282                                        __ptext10 094E  
                                      __ptext11 0D38                                        __ptext20 120C  
                                      __ptext12 0ECE                                        __ptext21 12C8  
                                      __ptext13 1282                                        __ptext30 113C  
                                      __ptext22 1092                                        __ptext14 1242  
                                      __ptext31 12CE                                        __ptext23 12A0  
                                      __ptext15 128C                                        __ptext32 0C3A  
                                      __ptext24 12AA                                        __ptext16 1228  
                                      __ptext33 12BE                                        __ptext25 12B4  
                                      __ptext17 1106                                        __ptext34 11EE  
                                      __ptext26 1258                                        __ptext18 1296  
                                      __ptext35 0000                                        __ptext27 126E  
                                      __ptext19 1172                                        __ptext28 11C6  
                       TMR0_WriteTimer@timerVal 0014                               ??_TMR0_WriteTimer 0016  
                                 __size_of_ctoa 00D4                                   __size_of_main 03E6  
                                 __size_of_dtoa 02E2                                ??_TMR0_ReadTimer 0003  
          __end_of_TMR0_DefaultInterruptHandler 12D0           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 12CE  EUSART1_SetOverrunErrorHandler@interruptHandler 0014  
                                      int$flags 004B                                        _vfprintf 0F64  
            __end_of_INTERRUPT_InterruptManager 004E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 0097                     _EUSART1_FramingErrorHandler 003F  
                              ___aomod@dividend 0014                                     ??_myTMR0ISR 000B  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 0014  
                                      intlevel2 0000                                _samplesCollected 00A7  
                                _thresholdRange 00C8                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 12AA         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 12A0                                      _RCSTA1bits 000FAB  
                              ??_ADC_Initialize 0014                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 009F  
EUSART1_SetFramingErrorHandler@interruptHandler 0014                                 ___aomod@divisor 001C  
                                   ??_vfpfcnvrt 0084                                 ___aomod@counter 0024  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 0047  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 1106  
                                  ___aodiv@sign 0025                  __end_of_PIN_MANAGER_Initialize 119E  
                                  ___aomod@sign 0025                                    fp__myTMR0ISR 0000  
