

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 21 12:17:35 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 05/05/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F26K22 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    96  0000                     
    97 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    98  0000                     
    99 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   100  0000                     
   101                           	psect	idataBANK1
   102  0016D2                     __pidataBANK1:
   103                           	callstack 0
   104                           
   105                           ;initializer for _thresholdRange
   106  0016D2  000A               	dw	10
   107  0000                     _ANSELA	set	3896
   108  0000                     _ANSELB	set	3897
   109  0000                     _ANSELC	set	3898
   110  0000                     _RCONbits	set	4048
   111  0000                     _TXREG1	set	4013
   112  0000                     _RCREG1	set	4014
   113  0000                     _RCSTA1bits	set	4011
   114  0000                     _TXSTA1bits	set	4012
   115  0000                     _PIR1bits	set	3998
   116  0000                     _SPBRGH1	set	4016
   117  0000                     _SPBRG1	set	4015
   118  0000                     _TXSTA1	set	4012
   119  0000                     _RCSTA1	set	4011
   120  0000                     _BAUDCON1	set	4024
   121  0000                     _ADCON0	set	4034
   122  0000                     _ADRESL	set	4035
   123  0000                     _ADCON2	set	4032
   124  0000                     _ADCON1	set	4033
   125  0000                     _OSCTUNE	set	3995
   126  0000                     _OSCCON2	set	4050
   127  0000                     _OSCCON	set	4051
   128  0000                     _T0CON	set	4053
   129  0000                     _TMR0L	set	4054
   130  0000                     _TMR0H	set	4055
   131  0000                     _T0CONbits	set	4053
   132  0000                     _INTCON2bits	set	4081
   133  0000                     _WPUB	set	3937
   134  0000                     _TRISC	set	3988
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISA	set	3986
   137  0000                     _LATC	set	3979
   138  0000                     _LATB	set	3978
   139  0000                     _LATA	set	3977
   140  0000                     _ADRESH	set	4036
   141  0000                     _ADCON0bits	set	4034
   142  0000                     _INTCONbits	set	4082
   143  0000                     _PLLRDY	set	32407
   144                           
   145                           	psect	mediumconst
   146  00FDD2                     __pmediumconst:
   147                           	callstack 0
   148  00FDD2  00                 	db	0
   149  00FDD3                     STR_20:
   150  00FDD3  66                 	db	102	;'f'
   151  00FDD4  3A                 	db	58	;':'
   152  00FDD5  20                 	db	32
   153  00FDD6  67                 	db	103	;'g'
   154  00FDD7  61                 	db	97	;'a'
   155  00FDD8  74                 	db	116	;'t'
   156  00FDD9  68                 	db	104	;'h'
   157  00FDDA  65                 	db	101	;'e'
   158  00FDDB  72                 	db	114	;'r'
   159  00FDDC  20                 	db	32
   160  00FDDD  25                 	db	37
   161  00FDDE  64                 	db	100	;'d'
   162  00FDDF  20                 	db	32
   163  00FDE0  73                 	db	115	;'s'
   164  00FDE1  61                 	db	97	;'a'
   165  00FDE2  6D                 	db	109	;'m'
   166  00FDE3  70                 	db	112	;'p'
   167  00FDE4  6C                 	db	108	;'l'
   168  00FDE5  65                 	db	101	;'e'
   169  00FDE6  73                 	db	115	;'s'
   170  00FDE7  20                 	db	32
   171  00FDE8  66                 	db	102	;'f'
   172  00FDE9  72                 	db	114	;'r'
   173  00FDEA  6F                 	db	111	;'o'
   174  00FDEB  6D                 	db	109	;'m'
   175  00FDEC  20                 	db	32
   176  00FDED  74                 	db	116	;'t'
   177  00FDEE  68                 	db	104	;'h'
   178  00FDEF  65                 	db	101	;'e'
   179  00FDF0  20                 	db	32
   180  00FDF1  6D                 	db	109	;'m'
   181  00FDF2  69                 	db	105	;'i'
   182  00FDF3  63                 	db	99	;'c'
   183  00FDF4  72                 	db	114	;'r'
   184  00FDF5  6F                 	db	111	;'o'
   185  00FDF6  70                 	db	112	;'p'
   186  00FDF7  68                 	db	104	;'h'
   187  00FDF8  6F                 	db	111	;'o'
   188  00FDF9  6E                 	db	110	;'n'
   189  00FDFA  65                 	db	101	;'e'
   190  00FDFB  20                 	db	32
   191  00FDFC  61                 	db	97	;'a'
   192  00FDFD  6E                 	db	110	;'n'
   193  00FDFE  64                 	db	100	;'d'
   194  00FDFF  20                 	db	32
   195  00FE00  63                 	db	99	;'c'
   196  00FE01  61                 	db	97	;'a'
   197  00FE02  6C                 	db	108	;'l'
   198  00FE03  63                 	db	99	;'c'
   199  00FE04  75                 	db	117	;'u'
   200  00FE05  6C                 	db	108	;'l'
   201  00FE06  61                 	db	97	;'a'
   202  00FE07  74                 	db	116	;'t'
   203  00FE08  65                 	db	101	;'e'
   204  00FE09  20                 	db	32
   205  00FE0A  74                 	db	116	;'t'
   206  00FE0B  68                 	db	104	;'h'
   207  00FE0C  65                 	db	101	;'e'
   208  00FE0D  20                 	db	32
   209  00FE0E  66                 	db	102	;'f'
   210  00FE0F  72                 	db	114	;'r'
   211  00FE10  65                 	db	101	;'e'
   212  00FE11  71                 	db	113	;'q'
   213  00FE12  75                 	db	117	;'u'
   214  00FE13  65                 	db	101	;'e'
   215  00FE14  6E                 	db	110	;'n'
   216  00FE15  63                 	db	99	;'c'
   217  00FE16  79                 	db	121	;'y'
   218  00FE17  0D                 	db	13
   219  00FE18  0A                 	db	10
   220  00FE19  00                 	db	0
   221  00FE1A                     STR_8:
   222  00FE1A  0D                 	db	13
   223  00FE1B  0A                 	db	10
   224  00FE1C  54                 	db	84	;'T'
   225  00FE1D  68                 	db	104	;'h'
   226  00FE1E  65                 	db	101	;'e'
   227  00FE1F  20                 	db	32
   228  00FE20  73                 	db	115	;'s'
   229  00FE21  6F                 	db	111	;'o'
   230  00FE22  75                 	db	117	;'u'
   231  00FE23  6E                 	db	110	;'n'
   232  00FE24  64                 	db	100	;'d'
   233  00FE25  20                 	db	32
   234  00FE26  77                 	db	119	;'w'
   235  00FE27  61                 	db	97	;'a'
   236  00FE28  76                 	db	118	;'v'
   237  00FE29  65                 	db	101	;'e'
   238  00FE2A  20                 	db	32
   239  00FE2B  63                 	db	99	;'c'
   240  00FE2C  72                 	db	114	;'r'
   241  00FE2D  6F                 	db	111	;'o'
   242  00FE2E  73                 	db	115	;'s'
   243  00FE2F  73                 	db	115	;'s'
   244  00FE30  65                 	db	101	;'e'
   245  00FE31  64                 	db	100	;'d'
   246  00FE32  20                 	db	32
   247  00FE33  61                 	db	97	;'a'
   248  00FE34  74                 	db	116	;'t'
   249  00FE35  20                 	db	32
   250  00FE36  74                 	db	116	;'t'
   251  00FE37  68                 	db	104	;'h'
   252  00FE38  65                 	db	101	;'e'
   253  00FE39  20                 	db	32
   254  00FE3A  66                 	db	102	;'f'
   255  00FE3B  6F                 	db	111	;'o'
   256  00FE3C  6C                 	db	108	;'l'
   257  00FE3D  6C                 	db	108	;'l'
   258  00FE3E  6F                 	db	111	;'o'
   259  00FE3F  77                 	db	119	;'w'
   260  00FE40  69                 	db	105	;'i'
   261  00FE41  6E                 	db	110	;'n'
   262  00FE42  67                 	db	103	;'g'
   263  00FE43  20                 	db	32
   264  00FE44  69                 	db	105	;'i'
   265  00FE45  6E                 	db	110	;'n'
   266  00FE46  64                 	db	100	;'d'
   267  00FE47  69                 	db	105	;'i'
   268  00FE48  63                 	db	99	;'c'
   269  00FE49  65                 	db	101	;'e'
   270  00FE4A  73                 	db	115	;'s'
   271  00FE4B  3A                 	db	58	;':'
   272  00FE4C  0D                 	db	13
   273  00FE4D  0A                 	db	10
   274  00FE4E  00                 	db	0
   275  00FE4F                     STR_5:
   276  00FE4F  54                 	db	84	;'T'
   277  00FE50  68                 	db	104	;'h'
   278  00FE51  65                 	db	101	;'e'
   279  00FE52  20                 	db	32
   280  00FE53  6C                 	db	108	;'l'
   281  00FE54  61                 	db	97	;'a'
   282  00FE55  73                 	db	115	;'s'
   283  00FE56  74                 	db	116	;'t'
   284  00FE57  20                 	db	32
   285  00FE58  25                 	db	37
   286  00FE59  64                 	db	100	;'d'
   287  00FE5A  20                 	db	32
   288  00FE5B  41                 	db	65	;'A'
   289  00FE5C  44                 	db	68	;'D'
   290  00FE5D  43                 	db	67	;'C'
   291  00FE5E  20                 	db	32
   292  00FE5F  73                 	db	115	;'s'
   293  00FE60  61                 	db	97	;'a'
   294  00FE61  6D                 	db	109	;'m'
   295  00FE62  70                 	db	112	;'p'
   296  00FE63  6C                 	db	108	;'l'
   297  00FE64  65                 	db	101	;'e'
   298  00FE65  73                 	db	115	;'s'
   299  00FE66  20                 	db	32
   300  00FE67  66                 	db	102	;'f'
   301  00FE68  72                 	db	114	;'r'
   302  00FE69  6F                 	db	111	;'o'
   303  00FE6A  6D                 	db	109	;'m'
   304  00FE6B  20                 	db	32
   305  00FE6C  74                 	db	116	;'t'
   306  00FE6D  68                 	db	104	;'h'
   307  00FE6E  65                 	db	101	;'e'
   308  00FE6F  20                 	db	32
   309  00FE70  6D                 	db	109	;'m'
   310  00FE71  69                 	db	105	;'i'
   311  00FE72  63                 	db	99	;'c'
   312  00FE73  72                 	db	114	;'r'
   313  00FE74  6F                 	db	111	;'o'
   314  00FE75  70                 	db	112	;'p'
   315  00FE76  68                 	db	104	;'h'
   316  00FE77  6F                 	db	111	;'o'
   317  00FE78  6E                 	db	110	;'n'
   318  00FE79  65                 	db	101	;'e'
   319  00FE7A  20                 	db	32
   320  00FE7B  61                 	db	97	;'a'
   321  00FE7C  72                 	db	114	;'r'
   322  00FE7D  65                 	db	101	;'e'
   323  00FE7E  3A                 	db	58	;':'
   324  00FE7F  20                 	db	32
   325  00FE80  0D                 	db	13
   326  00FE81  0A                 	db	10
   327  00FE82  00                 	db	0
   328  00FE83                     STR_19:
   329  00FE83  54                 	db	84	;'T'
   330  00FE84  2F                 	db	47
   331  00FE85  74                 	db	116	;'t'
   332  00FE86  3A                 	db	58	;':'
   333  00FE87  20                 	db	32
   334  00FE88  49                 	db	73	;'I'
   335  00FE89  6E                 	db	110	;'n'
   336  00FE8A  63                 	db	99	;'c'
   337  00FE8B  72                 	db	114	;'r'
   338  00FE8C  65                 	db	101	;'e'
   339  00FE8D  61                 	db	97	;'a'
   340  00FE8E  73                 	db	115	;'s'
   341  00FE8F  65                 	db	101	;'e'
   342  00FE90  2F                 	db	47
   343  00FE91  64                 	db	100	;'d'
   344  00FE92  65                 	db	101	;'e'
   345  00FE93  63                 	db	99	;'c'
   346  00FE94  72                 	db	114	;'r'
   347  00FE95  65                 	db	101	;'e'
   348  00FE96  61                 	db	97	;'a'
   349  00FE97  73                 	db	115	;'s'
   350  00FE98  65                 	db	101	;'e'
   351  00FE99  20                 	db	32
   352  00FE9A  74                 	db	116	;'t'
   353  00FE9B  68                 	db	104	;'h'
   354  00FE9C  72                 	db	114	;'r'
   355  00FE9D  65                 	db	101	;'e'
   356  00FE9E  73                 	db	115	;'s'
   357  00FE9F  68                 	db	104	;'h'
   358  00FEA0  6F                 	db	111	;'o'
   359  00FEA1  6C                 	db	108	;'l'
   360  00FEA2  64                 	db	100	;'d'
   361  00FEA3  20                 	db	32
   362  00FEA4  31                 	db	49	;'1'
   363  00FEA5  33                 	db	51	;'3'
   364  00FEA6  38                 	db	56	;'8'
   365  00FEA7  2D                 	db	45
   366  00FEA8  31                 	db	49	;'1'
   367  00FEA9  31                 	db	49	;'1'
   368  00FEAA  38                 	db	56	;'8'
   369  00FEAB  0D                 	db	13
   370  00FEAC  0A                 	db	10
   371  00FEAD  00                 	db	0
   372  00FEAE                     STR_10:
   373  00FEAE  0D                 	db	13
   374  00FEAF  0A                 	db	10
   375  00FEB0  54                 	db	84	;'T'
   376  00FEB1  68                 	db	104	;'h'
   377  00FEB2  65                 	db	101	;'e'
   378  00FEB3  20                 	db	32
   379  00FEB4  73                 	db	115	;'s'
   380  00FEB5  6F                 	db	111	;'o'
   381  00FEB6  75                 	db	117	;'u'
   382  00FEB7  6E                 	db	110	;'n'
   383  00FEB8  64                 	db	100	;'d'
   384  00FEB9  20                 	db	32
   385  00FEBA  77                 	db	119	;'w'
   386  00FEBB  61                 	db	97	;'a'
   387  00FEBC  76                 	db	118	;'v'
   388  00FEBD  65                 	db	101	;'e'
   389  00FEBE  20                 	db	32
   390  00FEBF  68                 	db	104	;'h'
   391  00FEC0  61                 	db	97	;'a'
   392  00FEC1  64                 	db	100	;'d'
   393  00FEC2  20                 	db	32
   394  00FEC3  25                 	db	37
   395  00FEC4  64                 	db	100	;'d'
   396  00FEC5  20                 	db	32
   397  00FEC6  70                 	db	112	;'p'
   398  00FEC7  65                 	db	101	;'e'
   399  00FEC8  72                 	db	114	;'r'
   400  00FEC9  69                 	db	105	;'i'
   401  00FECA  6F                 	db	111	;'o'
   402  00FECB  64                 	db	100	;'d'
   403  00FECC  73                 	db	115	;'s'
   404  00FECD  3A                 	db	58	;':'
   405  00FECE  0D                 	db	13
   406  00FECF  0A                 	db	10
   407  00FED0  00                 	db	0
   408  00FED1                     STR_14:
   409  00FED1  2D                 	db	45
   410  00FED2  2D                 	db	45
   411  00FED3  2D                 	db	45
   412  00FED4  2D                 	db	45
   413  00FED5  2D                 	db	45
   414  00FED6  2D                 	db	45
   415  00FED7  2D                 	db	45
   416  00FED8  2D                 	db	45
   417  00FED9  2D                 	db	45
   418  00FEDA  2D                 	db	45
   419  00FEDB  2D                 	db	45
   420  00FEDC  2D                 	db	45
   421  00FEDD  2D                 	db	45
   422  00FEDE  2D                 	db	45
   423  00FEDF  2D                 	db	45
   424  00FEE0  2D                 	db	45
   425  00FEE1  2D                 	db	45
   426  00FEE2  2D                 	db	45
   427  00FEE3  2D                 	db	45
   428  00FEE4  2D                 	db	45
   429  00FEE5  2D                 	db	45
   430  00FEE6  2D                 	db	45
   431  00FEE7  2D                 	db	45
   432  00FEE8  2D                 	db	45
   433  00FEE9  2D                 	db	45
   434  00FEEA  2D                 	db	45
   435  00FEEB  2D                 	db	45
   436  00FEEC  2D                 	db	45
   437  00FEED  2D                 	db	45
   438  00FEEE  2D                 	db	45
   439  00FEEF  0D                 	db	13
   440  00FEF0  0A                 	db	10
   441  00FEF1  00                 	db	0
   442  00FEF2                     STR_13:
   443  00FEF2  0D                 	db	13
   444  00FEF3  07                 	db	7
   445  00FEF4  76                 	db	118	;'v'
   446  00FEF5  65                 	db	101	;'e'
   447  00FEF6  72                 	db	114	;'r'
   448  00FEF7  61                 	db	97	;'a'
   449  00FEF8  67                 	db	103	;'g'
   450  00FEF9  65                 	db	101	;'e'
   451  00FEFA  20                 	db	32
   452  00FEFB  66                 	db	102	;'f'
   453  00FEFC  72                 	db	114	;'r'
   454  00FEFD  65                 	db	101	;'e'
   455  00FEFE  71                 	db	113	;'q'
   456  00FEFF  75                 	db	117	;'u'
   457  00FF00  65                 	db	101	;'e'
   458  00FF01  6E                 	db	110	;'n'
   459  00FF02  64                 	db	100	;'d'
   460  00FF03  79                 	db	121	;'y'
   461  00FF04  20                 	db	32
   462  00FF05  3D                 	db	61	;'='
   463  00FF06  20                 	db	32
   464  00FF07  25                 	db	37
   465  00FF08  64                 	db	100	;'d'
   466  00FF09  20                 	db	32
   467  00FF0A  48                 	db	72	;'H'
   468  00FF0B  7A                 	db	122	;'z'
   469  00FF0C  0D                 	db	13
   470  00FF0D  0A                 	db	10
   471  00FF0E  00                 	db	0
   472  00FF0F                     STR_12:
   473  00FF0F  0D                 	db	13
   474  00FF10  0A                 	db	10
   475  00FF11  61                 	db	97	;'a'
   476  00FF12  76                 	db	118	;'v'
   477  00FF13  65                 	db	101	;'e'
   478  00FF14  72                 	db	114	;'r'
   479  00FF15  61                 	db	97	;'a'
   480  00FF16  67                 	db	103	;'g'
   481  00FF17  65                 	db	101	;'e'
   482  00FF18  20                 	db	32
   483  00FF19  70                 	db	112	;'p'
   484  00FF1A  65                 	db	101	;'e'
   485  00FF1B  72                 	db	114	;'r'
   486  00FF1C  69                 	db	105	;'i'
   487  00FF1D  6F                 	db	111	;'o'
   488  00FF1E  64                 	db	100	;'d'
   489  00FF1F  20                 	db	32
   490  00FF20  3D                 	db	61	;'='
   491  00FF21  20                 	db	32
   492  00FF22  25                 	db	37
   493  00FF23  64                 	db	100	;'d'
   494  00FF24  20                 	db	32
   495  00FF25  75                 	db	117	;'u'
   496  00FF26  73                 	db	115	;'s'
   497  00FF27  0D                 	db	13
   498  00FF28  0A                 	db	10
   499  00FF29  00                 	db	0
   500  00FF2A                     STR_2:
   501  00FF2A  4D                 	db	77	;'M'
   502  00FF2B  69                 	db	105	;'i'
   503  00FF2C  63                 	db	99	;'c'
   504  00FF2D  72                 	db	114	;'r'
   505  00FF2E  6F                 	db	111	;'o'
   506  00FF2F  70                 	db	112	;'p'
   507  00FF30  68                 	db	104	;'h'
   508  00FF31  6F                 	db	111	;'o'
   509  00FF32  6E                 	db	110	;'n'
   510  00FF33  65                 	db	101	;'e'
   511  00FF34  20                 	db	32
   512  00FF35  65                 	db	101	;'e'
   513  00FF36  78                 	db	120	;'x'
   514  00FF37  70                 	db	112	;'p'
   515  00FF38  65                 	db	101	;'e'
   516  00FF39  72                 	db	114	;'r'
   517  00FF3A  69                 	db	105	;'i'
   518  00FF3B  6D                 	db	109	;'m'
   519  00FF3C  65                 	db	101	;'e'
   520  00FF3D  6E                 	db	110	;'n'
   521  00FF3E  74                 	db	116	;'t'
   522  00FF3F  73                 	db	115	;'s'
   523  00FF40  0D                 	db	13
   524  00FF41  0A                 	db	10
   525  00FF42  00                 	db	0
   526  00FF43                     STR_25:
   527  00FF43  56                 	db	86	;'V'
   528  00FF44  6F                 	db	111	;'o'
   529  00FF45  6C                 	db	108	;'l'
   530  00FF46  75                 	db	117	;'u'
   531  00FF47  6D                 	db	109	;'m'
   532  00FF48  65                 	db	101	;'e'
   533  00FF49  20                 	db	32
   534  00FF4A  72                 	db	114	;'r'
   535  00FF4B  61                 	db	97	;'a'
   536  00FF4C  6E                 	db	110	;'n'
   537  00FF4D  67                 	db	103	;'g'
   538  00FF4E  65                 	db	101	;'e'
   539  00FF4F  3A                 	db	58	;':'
   540  00FF50  20                 	db	32
   541  00FF51  25                 	db	37
   542  00FF52  64                 	db	100	;'d'
   543  00FF53  20                 	db	32
   544  00FF54  2D                 	db	45
   545  00FF55  20                 	db	32
   546  00FF56  25                 	db	37
   547  00FF57  64                 	db	100	;'d'
   548  00FF58  0D                 	db	13
   549  00FF59  0A                 	db	10
   550  00FF5A  00                 	db	0
   551  00FF5B                     STR_18:
   552  00FF5B  7A                 	db	122	;'z'
   553  00FF5C  3A                 	db	58	;':'
   554  00FF5D  20                 	db	32
   555  00FF5E  43                 	db	67	;'C'
   556  00FF5F  6C                 	db	108	;'l'
   557  00FF60  65                 	db	101	;'e'
   558  00FF61  61                 	db	97	;'a'
   559  00FF62  72                 	db	114	;'r'
   560  00FF63  20                 	db	32
   561  00FF64  74                 	db	116	;'t'
   562  00FF65  68                 	db	104	;'h'
   563  00FF66  65                 	db	101	;'e'
   564  00FF67  20                 	db	32
   565  00FF68  74                 	db	116	;'t'
   566  00FF69  65                 	db	101	;'e'
   567  00FF6A  72                 	db	114	;'r'
   568  00FF6B  6D                 	db	109	;'m'
   569  00FF6C  69                 	db	105	;'i'
   570  00FF6D  6E                 	db	110	;'n'
   571  00FF6E  61                 	db	97	;'a'
   572  00FF6F  6C                 	db	108	;'l'
   573  00FF70  0D                 	db	13
   574  00FF71  0A                 	db	10
   575  00FF72  00                 	db	0
   576  00FF73                     STR_28:
   577  00FF73  54                 	db	84	;'T'
   578  00FF74  68                 	db	104	;'h'
   579  00FF75  72                 	db	114	;'r'
   580  00FF76  65                 	db	101	;'e'
   581  00FF77  73                 	db	115	;'s'
   582  00FF78  68                 	db	104	;'h'
   583  00FF79  6F                 	db	111	;'o'
   584  00FF7A  6C                 	db	108	;'l'
   585  00FF7B  64                 	db	100	;'d'
   586  00FF7C  20                 	db	32
   587  00FF7D  61                 	db	97	;'a'
   588  00FF7E  74                 	db	116	;'t'
   589  00FF7F  20                 	db	32
   590  00FF80  6D                 	db	109	;'m'
   591  00FF81  69                 	db	105	;'i'
   592  00FF82  6E                 	db	110	;'n'
   593  00FF83  69                 	db	105	;'i'
   594  00FF84  6D                 	db	109	;'m'
   595  00FF85  75                 	db	117	;'u'
   596  00FF86  6D                 	db	109	;'m'
   597  00FF87  0D                 	db	13
   598  00FF88  0A                 	db	10
   599  00FF89  00                 	db	0
   600  00FF8A                     STR_17:
   601  00FF8A  5A                 	db	90	;'Z'
   602  00FF8B  3A                 	db	58	;':'
   603  00FF8C  20                 	db	32
   604  00FF8D  52                 	db	82	;'R'
   605  00FF8E  65                 	db	101	;'e'
   606  00FF8F  73                 	db	115	;'s'
   607  00FF90  65                 	db	101	;'e'
   608  00FF91  74                 	db	116	;'t'
   609  00FF92  20                 	db	32
   610  00FF93  70                 	db	112	;'p'
   611  00FF94  72                 	db	114	;'r'
   612  00FF95  6F                 	db	111	;'o'
   613  00FF96  63                 	db	99	;'c'
   614  00FF97  65                 	db	101	;'e'
   615  00FF98  73                 	db	115	;'s'
   616  00FF99  73                 	db	115	;'s'
   617  00FF9A  6F                 	db	111	;'o'
   618  00FF9B  72                 	db	114	;'r'
   619  00FF9C  0D                 	db	13
   620  00FF9D  0A                 	db	10
   621  00FF9E  00                 	db	0
   622  00FF9F                     STR_29:
   623  00FF9F  55                 	db	85	;'U'
   624  00FFA0  6E                 	db	110	;'n'
   625  00FFA1  6B                 	db	107	;'k'
   626  00FFA2  6E                 	db	110	;'n'
   627  00FFA3  6F                 	db	111	;'o'
   628  00FFA4  77                 	db	119	;'w'
   629  00FFA5  6E                 	db	110	;'n'
   630  00FFA6  20                 	db	32
   631  00FFA7  6B                 	db	107	;'k'
   632  00FFA8  65                 	db	101	;'e'
   633  00FFA9  79                 	db	121	;'y'
   634  00FFAA  20                 	db	32
   635  00FFAB  25                 	db	37
   636  00FFAC  63                 	db	99	;'c'
   637  00FFAD  0D                 	db	13
   638  00FFAE  0A                 	db	10
   639  00FFAF  00                 	db	0
   640  00FFB0                     STR_11:
   641  00FFB0  25                 	db	37
   642  00FFB1  64                 	db	100	;'d'
   643  00FFB2  20                 	db	32
   644  00FFB3  2D                 	db	45
   645  00FFB4  20                 	db	32
   646  00FFB5  25                 	db	37
   647  00FFB6  64                 	db	100	;'d'
   648  00FFB7  20                 	db	32
   649  00FFB8  3D                 	db	61	;'='
   650  00FFB9  20                 	db	32
   651  00FFBA  25                 	db	37
   652  00FFBB  64                 	db	100	;'d'
   653  00FFBC  0D                 	db	13
   654  00FFBD  0A                 	db	10
   655  00FFBE  00                 	db	0
   656  00FFBF                     STR_15:
   657  00FFBF  3F                 	db	63	;'?'
   658  00FFC0  3A                 	db	58	;':'
   659  00FFC1  20                 	db	32
   660  00FFC2  48                 	db	72	;'H'
   661  00FFC3  65                 	db	101	;'e'
   662  00FFC4  6C                 	db	108	;'l'
   663  00FFC5  70                 	db	112	;'p'
   664  00FFC6  20                 	db	32
   665  00FFC7  6D                 	db	109	;'m'
   666  00FFC8  65                 	db	101	;'e'
   667  00FFC9  6E                 	db	110	;'n'
   668  00FFCA  75                 	db	117	;'u'
   669  00FFCB  0D                 	db	13
   670  00FFCC  0A                 	db	10
   671  00FFCD  00                 	db	0
   672  00FFCE                     STR_1:
   673  00FFCE  69                 	db	105	;'i'
   674  00FFCF  6E                 	db	110	;'n'
   675  00FFD0  4C                 	db	76	;'L'
   676  00FFD1  61                 	db	97	;'a'
   677  00FFD2  62                 	db	98	;'b'
   678  00FFD3  20                 	db	32
   679  00FFD4  30                 	db	48	;'0'
   680  00FFD5  38                 	db	56	;'8'
   681  00FFD6  0D                 	db	13
   682  00FFD7  0A                 	db	10
   683  00FFD8  00                 	db	0
   684  00FFD9                     STR_3:
   685  00FFD9  44                 	db	68	;'D'
   686  00FFDA  65                 	db	101	;'e'
   687  00FFDB  76                 	db	118	;'v'
   688  00FFDC  27                 	db	39
   689  00FFDD  32                 	db	50	;'2'
   690  00FFDE  31                 	db	49	;'1'
   691  00FFDF  0D                 	db	13
   692  00FFE0  0A                 	db	10
   693  00FFE1  00                 	db	0
   694  00FFE2                     STR_6:
   695  00FFE2  0D                 	db	13
   696  00FFE3  0A                 	db	10
   697  00FFE4  53                 	db	83	;'S'
   698  00FFE5  5B                 	db	91	;'['
   699  00FFE6  25                 	db	37
   700  00FFE7  64                 	db	100	;'d'
   701  00FFE8  5D                 	db	93	;']'
   702  00FFE9  20                 	db	32
   703  00FFEA  00                 	db	0
   704  00FFEB                     STR_16:
   705  00FFEB  6F                 	db	111	;'o'
   706  00FFEC  3A                 	db	58	;':'
   707  00FFED  20                 	db	32
   708  00FFEE  6B                 	db	107	;'k'
   709  00FFEF  0D                 	db	13
   710  00FFF0  0A                 	db	10
   711  00FFF1  00                 	db	0
   712  00FFF2                     STR_22:
   713  00FFF2  20                 	db	32
   714  00FFF3  6B                 	db	107	;'k'
   715  00FFF4  0D                 	db	13
   716  00FFF5  0A                 	db	10
   717  00FFF6  3E                 	db	62	;'>'
   718  00FFF7  00                 	db	0
   719  00FFF8                     STR_7:
   720  00FFF8  25                 	db	37
   721  00FFF9  64                 	db	100	;'d'
   722  00FFFA  20                 	db	32
   723  00FFFB  00                 	db	0
   724  00FFFC                     STR_4:
   725  00FFFC  3E                 	db	62	;'>'
   726  00FFFD  20                 	db	32
   727  00FFFE  00                 	db	0
   728  00FFFF  00                 	db	0	; dummy byte at the end
   729  0000                     
   730                           ; #config settings
   731                           
   732                           	psect	cinit
   733  0013B4                     __pcinit:
   734                           	callstack 0
   735  0013B4                     start_initialization:
   736                           	callstack 0
   737  0013B4                     __initialization:
   738                           	callstack 0
   739                           
   740                           ; Initialize objects allocated to BANK1 (2 bytes)
   741                           ; load TBLPTR registers with __pidataBANK1
   742  0013B4  0ED2               	movlw	low __pidataBANK1
   743  0013B6  6EF6               	movwf	tblptrl,c
   744  0013B8  0E16               	movlw	high __pidataBANK1
   745  0013BA  6EF7               	movwf	tblptrh,c
   746  0013BC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   747  0013BE  6EF8               	movwf	tblptru,c
   748  0013C0  0009               	tblrd		*+	;fetch initializer
   749  0013C2  CFF5 F193          	movff	tablat,__pdataBANK1
   750  0013C6  0009               	tblrd		*+	;fetch initializer
   751  0013C8  CFF5 F194          	movff	tablat,__pdataBANK1+1
   752                           
   753                           ; Clear objects allocated to BANK2 (256 bytes)
   754  0013CC  EE02  F000         	lfsr	0,__pbssBANK2
   755  0013D0  EE11 F000          	lfsr	1,256
   756  0013D4                     clear_0:
   757  0013D4  6AEE               	clrf	postinc0,c
   758  0013D6  50E5               	movf	postdec1,w,c
   759  0013D8  50E1               	movf	fsr1l,w,c
   760  0013DA  E1FC               	bnz	clear_0
   761  0013DC  50E2               	movf	fsr1h,w,c
   762  0013DE  E1FA               	bnz	clear_0
   763                           
   764                           ; Clear objects allocated to BANK1 (1 bytes)
   765  0013E0  0101               	movlb	1
   766  0013E2  6B95               	clrf	__pbssBANK1& (0+255),b
   767                           
   768                           ; Clear objects allocated to BANK0 (45 bytes)
   769  0013E4  EE00  F099         	lfsr	0,__pbssBANK0
   770  0013E8  0E2D               	movlw	45
   771  0013EA                     clear_1:
   772  0013EA  6AEE               	clrf	postinc0,c
   773  0013EC  06E8               	decf	wreg,f,c
   774  0013EE  E1FD               	bnz	clear_1
   775                           
   776                           ; Clear objects allocated to COMRAM (12 bytes)
   777  0013F0  EE00  F045         	lfsr	0,__pbssCOMRAM
   778  0013F4  0E0C               	movlw	12
   779  0013F6                     clear_2:
   780  0013F6  6AEE               	clrf	postinc0,c
   781  0013F8  06E8               	decf	wreg,f,c
   782  0013FA  E1FD               	bnz	clear_2
   783  0013FC                     end_of_initialization:
   784                           	callstack 0
   785  0013FC                     __end_of__initialization:
   786                           	callstack 0
   787  0013FC  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   788  0013FE  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   789  001400  0100               	movlb	0
   790  001402  EF29  F000         	goto	_main	;jump to C main() function
   791                           
   792                           	psect	bssCOMRAM
   793  000045                     __pbssCOMRAM:
   794                           	callstack 0
   795  000045                     _width:
   796                           	callstack 0
   797  000045                     	ds	2
   798  000047                     _prec:
   799                           	callstack 0
   800  000047                     	ds	2
   801  000049                     _flags:
   802                           	callstack 0
   803  000049                     	ds	2
   804  00004B                     _timer0ReloadVal:
   805                           	callstack 0
   806  00004B                     	ds	2
   807  00004D                     _bufferIdx:
   808                           	callstack 0
   809  00004D                     	ds	2
   810  00004F                     _timerState:
   811                           	callstack 0
   812  00004F                     	ds	1
   813  000050                     _fillBuffer:
   814                           	callstack 0
   815  000050                     	ds	1
   816                           
   817                           	psect	bssBANK0
   818  000099                     __pbssBANK0:
   819                           	callstack 0
   820  000099                     _nout:
   821                           	callstack 0
   822  000099                     	ds	2
   823  00009B                     _EUSART1_ErrorHandler:
   824                           	callstack 0
   825  00009B                     	ds	2
   826  00009D                     _EUSART1_OverrunErrorHandler:
   827                           	callstack 0
   828  00009D                     	ds	2
   829  00009F                     _EUSART1_FramingErrorHandler:
   830                           	callstack 0
   831  00009F                     	ds	2
   832  0000A1                     _ADC_InterruptHandler:
   833                           	callstack 0
   834  0000A1                     	ds	2
   835  0000A3                     _TMR0_InterruptHandler:
   836                           	callstack 0
   837  0000A3                     	ds	2
   838  0000A5                     _eusart1RxLastError:
   839                           	callstack 0
   840  0000A5                     	ds	1
   841  0000A6                     _dbuf:
   842                           	callstack 0
   843  0000A6                     	ds	32
   844                           
   845                           	psect	bssBANK1
   846  000195                     __pbssBANK1:
   847                           	callstack 0
   848  000195                     _samplesCollected:
   849                           	callstack 0
   850  000195                     	ds	1
   851                           
   852                           	psect	dataBANK1
   853  000193                     __pdataBANK1:
   854                           	callstack 0
   855  000193                     _thresholdRange:
   856                           	callstack 0
   857  000193                     	ds	2
   858                           
   859                           	psect	bssBANK2
   860  000200                     __pbssBANK2:
   861                           	callstack 0
   862  000200                     _adc_reading:
   863                           	callstack 0
   864  000200                     	ds	256
   865                           
   866                           	psect	cstackBANK1
   867  000100                     __pcstackBANK1:
   868                           	callstack 0
   869  000100                     main@crossings:
   870                           	callstack 0
   871                           
   872                           ; 128 bytes @ 0x0
   873  000100                     	ds	128
   874  000180                     main@periodSumUs:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x80
   878  000180                     	ds	2
   879  000182                     main@periodSum:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x82
   883  000182                     	ds	2
   884  000184                     main@avgPeriodUs:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x84
   888  000184                     	ds	2
   889  000186                     main@cmd:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x86
   893  000186                     	ds	1
   894  000187                     main@i_221:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x87
   898  000187                     	ds	2
   899  000189                     main@i:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x89
   903  000189                     	ds	2
   904  00018B                     main@i_214:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x8B
   908  00018B                     	ds	2
   909  00018D                     main@crIdx:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x8D
   913  00018D                     	ds	2
   914  00018F                     main@i_220:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x8F
   918  00018F                     	ds	2
   919  000191                     main@i_225:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x91
   923  000191                     	ds	2
   924                           
   925                           	psect	cstackBANK0
   926  000060                     __pcstackBANK0:
   927                           	callstack 0
   928  000060                     _dtoa$1401:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x0
   932  000060                     	ds	2
   933  000062                     dtoa@p:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x2
   937  000062                     	ds	2
   938  000064                     dtoa@w:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x4
   942  000064                     	ds	2
   943  000066                     dtoa@s:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x6
   947  000066                     	ds	2
   948  000068                     dtoa@n:
   949                           	callstack 0
   950                           
   951                           ; 8 bytes @ 0x8
   952  000068                     	ds	8
   953  000070                     dtoa@i:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x10
   957  000070                     	ds	2
   958  000072                     vfpfcnvrt@ll:
   959                           	callstack 0
   960                           
   961                           ; 8 bytes @ 0x12
   962  000072                     	ds	8
   963  00007A                     vfpfcnvrt@c:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x1A
   967  00007A                     	ds	1
   968  00007B                     ?_vfprintf:
   969                           	callstack 0
   970  00007B                     vfprintf@fp:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x1B
   974  00007B                     	ds	2
   975  00007D                     vfprintf@fmt:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x1D
   979  00007D                     	ds	2
   980  00007F                     vfprintf@ap:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x1F
   984  00007F                     	ds	2
   985  000081                     ?_printf:
   986                           	callstack 0
   987  000081                     printf@fmt:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x21
   991  000081                     	ds	10
   992  00008B                     printf@ap:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x2B
   996  00008B                     	ds	2
   997  00008D                     ??_main:
   998                           
   999                           ; 1 bytes @ 0x2D
  1000  00008D                     	ds	12
  1001                           
  1002                           	psect	cstackCOMRAM
  1003  000001                     __pcstackCOMRAM:
  1004                           	callstack 0
  1005  000001                     i2TMR0_WriteTimer@timerVal:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x0
  1009  000001                     	ds	2
  1010  000003                     ??_myTMR0ISR:
  1011  000003                     
  1012                           ; 1 bytes @ 0x2
  1013  000003                     	ds	4
  1014  000007                     myTMR0ISR@micReading:
  1015                           	callstack 0
  1016                           
  1017                           ; 1 bytes @ 0x6
  1018  000007                     	ds	1
  1019  000008                     ??_INTERRUPT_InterruptManager:
  1020                           
  1021                           ; 1 bytes @ 0x7
  1022  000008                     	ds	4
  1023  00000C                     ?_strlen:
  1024                           	callstack 0
  1025  00000C                     ?___wmul:
  1026                           	callstack 0
  1027  00000C                     ?___lwdiv:
  1028                           	callstack 0
  1029  00000C                     ?___aldiv:
  1030                           	callstack 0
  1031  00000C                     ?___aodiv:
  1032                           	callstack 0
  1033  00000C                     ?___aomod:
  1034                           	callstack 0
  1035  00000C                     EUSART1_Write@txData:
  1036                           	callstack 0
  1037  00000C                     TMR0_WriteTimer@timerVal:
  1038                           	callstack 0
  1039  00000C                     TMR0_SetInterruptHandler@InterruptHandler:
  1040                           	callstack 0
  1041  00000C                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1042                           	callstack 0
  1043  00000C                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1044                           	callstack 0
  1045  00000C                     EUSART1_SetErrorHandler@interruptHandler:
  1046                           	callstack 0
  1047  00000C                     ___wmul@multiplier:
  1048                           	callstack 0
  1049  00000C                     ___lwdiv@dividend:
  1050                           	callstack 0
  1051  00000C                     strlen@s:
  1052                           	callstack 0
  1053  00000C                     ___aldiv@dividend:
  1054                           	callstack 0
  1055  00000C                     ___aodiv@dividend:
  1056                           	callstack 0
  1057  00000C                     ___aomod@dividend:
  1058                           	callstack 0
  1059                           
  1060                           ; 8 bytes @ 0xB
  1061  00000C                     	ds	1
  1062  00000D                     putch@txData:
  1063                           	callstack 0
  1064                           
  1065                           ; 1 bytes @ 0xC
  1066  00000D                     	ds	1
  1067  00000E                     ??_TMR0_Initialize:
  1068  00000E                     ___wmul@multiplicand:
  1069                           	callstack 0
  1070  00000E                     ___lwdiv@divisor:
  1071                           	callstack 0
  1072  00000E                     fputc@c:
  1073                           	callstack 0
  1074  00000E                     strlen@a:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0xD
  1078  00000E                     	ds	2
  1079  000010                     ___wmul@product:
  1080                           	callstack 0
  1081  000010                     ___lwdiv@quotient:
  1082                           	callstack 0
  1083  000010                     fputc@fp:
  1084                           	callstack 0
  1085  000010                     ___aldiv@divisor:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0xF
  1089  000010                     	ds	2
  1090  000012                     ??_fputc:
  1091  000012                     ___lwdiv@counter:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x11
  1095  000012                     	ds	2
  1096  000014                     ___aldiv@counter:
  1097                           	callstack 0
  1098  000014                     ___aodiv@divisor:
  1099                           	callstack 0
  1100  000014                     ___aomod@divisor:
  1101                           	callstack 0
  1102                           
  1103                           ; 8 bytes @ 0x13
  1104  000014                     	ds	1
  1105  000015                     ___aldiv@sign:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x14
  1109  000015                     	ds	1
  1110  000016                     ___aldiv@quotient:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x15
  1114  000016                     	ds	1
  1115  000017                     ?_ctoa:
  1116                           	callstack 0
  1117  000017                     ctoa@fp:
  1118                           	callstack 0
  1119  000017                     fputs@s:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x16
  1123  000017                     	ds	2
  1124  000019                     ctoa@c:
  1125                           	callstack 0
  1126  000019                     fputs@fp:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x18
  1130  000019                     	ds	1
  1131  00001A                     ??_ctoa:
  1132                           
  1133                           ; 1 bytes @ 0x19
  1134  00001A                     	ds	1
  1135  00001B                     fputs@c:
  1136                           	callstack 0
  1137  00001B                     ctoa@l:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x1A
  1141  00001B                     	ds	1
  1142  00001C                     ___aodiv@counter:
  1143                           	callstack 0
  1144  00001C                     ___aomod@counter:
  1145                           	callstack 0
  1146  00001C                     fputs@i:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x1B
  1150  00001C                     	ds	1
  1151  00001D                     ___aodiv@sign:
  1152                           	callstack 0
  1153  00001D                     ___aomod@sign:
  1154                           	callstack 0
  1155  00001D                     ctoa@w:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x1C
  1159  00001D                     	ds	1
  1160  00001E                     ?_abs:
  1161                           	callstack 0
  1162  00001E                     ?_pad:
  1163                           	callstack 0
  1164  00001E                     pad@fp:
  1165                           	callstack 0
  1166  00001E                     abs@a:
  1167                           	callstack 0
  1168  00001E                     ___aodiv@quotient:
  1169                           	callstack 0
  1170                           
  1171                           ; 8 bytes @ 0x1D
  1172  00001E                     	ds	2
  1173  000020                     ??_abs:
  1174  000020                     pad@buf:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x1F
  1178  000020                     	ds	2
  1179  000022                     pad@p:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x21
  1183  000022                     	ds	2
  1184  000024                     ??_pad:
  1185                           
  1186                           ; 1 bytes @ 0x23
  1187  000024                     	ds	1
  1188  000025                     pad@i:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x24
  1192  000025                     	ds	2
  1193  000027                     pad@w:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x26
  1197  000027                     	ds	2
  1198  000029                     ?_dtoa:
  1199                           	callstack 0
  1200  000029                     dtoa@fp:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x28
  1204  000029                     	ds	2
  1205  00002B                     dtoa@d:
  1206                           	callstack 0
  1207                           
  1208                           ; 8 bytes @ 0x2A
  1209  00002B                     	ds	8
  1210  000033                     ??_dtoa:
  1211                           
  1212                           ; 1 bytes @ 0x32
  1213  000033                     	ds	8
  1214  00003B                     ?_vfpfcnvrt:
  1215                           	callstack 0
  1216  00003B                     vfpfcnvrt@fp:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x3A
  1220  00003B                     	ds	2
  1221  00003D                     vfpfcnvrt@fmt:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x3C
  1225  00003D                     	ds	2
  1226  00003F                     vfpfcnvrt@ap:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x3E
  1230  00003F                     	ds	2
  1231  000041                     ??_vfpfcnvrt:
  1232                           
  1233                           ; 1 bytes @ 0x40
  1234  000041                     	ds	2
  1235  000043                     vfprintf@cfmt:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x42
  1239  000043                     	ds	2
  1240  000045                     
  1241                           ; 1 bytes @ 0x44
  1242 ;;
  1243 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1244 ;;
  1245 ;; *************** function _main *****************
  1246 ;; Defined at:
  1247 ;;		line 45 in file "main.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  i               2  145[BANK1 ] unsigned short 
  1252 ;;  i               2  135[BANK1 ] unsigned short 
  1253 ;;  i               2  143[BANK1 ] unsigned short 
  1254 ;;  i               2  139[BANK1 ] unsigned short 
  1255 ;;  crossings     128    0[BANK1 ] unsigned char [128]
  1256 ;;  crIdx           2  141[BANK1 ] unsigned short 
  1257 ;;  avgPeriodUs     2  132[BANK1 ] unsigned short 
  1258 ;;  periodSum       2  130[BANK1 ] unsigned short 
  1259 ;;  periodSumUs     2  128[BANK1 ] unsigned short 
  1260 ;;  i               2  137[BANK1 ] unsigned short 
  1261 ;;  cmd             1  134[BANK1 ] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Locals:         0       0     147       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Totals:         0      12     147       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;Total ram usage:      159 bytes
  1276 ;; Hardware stack levels required when called:   13
  1277 ;; This function calls:
  1278 ;;		_EUSART1_Read
  1279 ;;		_EUSART1_is_rx_ready
  1280 ;;		_SYSTEM_Initialize
  1281 ;;		_TMR0_SetInterruptHandler
  1282 ;;		_TMR0_WriteTimer
  1283 ;;		___aldiv
  1284 ;;		___lwdiv
  1285 ;;		___wmul
  1286 ;;		_printf
  1287 ;; This function is called by:
  1288 ;;		Startup code after reset
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text0
  1293  000052                     __ptext0:
  1294                           	callstack 0
  1295  000052                     _main:
  1296                           	callstack 18
  1297  000052                     
  1298                           ;main.c: 54:     uint16_t i;;main.c: 55:     char cmd;;main.c: 57:     SYSTEM_Initialize
      +                          ();
  1299  000052  EC17  F00B         	call	_SYSTEM_Initialize	;wreg free
  1300  000056                     
  1301                           ;main.c: 62:     TMR0_WriteTimer(0x0000);
  1302  000056  0E00               	movlw	0
  1303  000058  6E0D               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1304  00005A  0E00               	movlw	0
  1305  00005C  6E0C               	movwf	TMR0_WriteTimer@timerVal^0,c
  1306  00005E  EC49  F00B         	call	_TMR0_WriteTimer	;wreg free
  1307  000062                     
  1308                           ;main.c: 63:     INTCONbits.TMR0IF = 0;
  1309  000062  94F2               	bcf	242,2,c	;volatile
  1310  000064                     l33:
  1311  000064  A4F2               	btfss	242,2,c	;volatile
  1312  000066  EF37  F000         	goto	u2271
  1313  00006A  EF39  F000         	goto	u2270
  1314  00006E                     u2271:
  1315  00006E  EF32  F000         	goto	l33
  1316  000072                     u2270:
  1317  000072                     
  1318                           ;main.c: 66:     TMR0_SetInterruptHandler(myTMR0ISR);
  1319  000072  0EAA               	movlw	low _myTMR0ISR
  1320  000074  6E0C               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1321  000076  0E0F               	movlw	high _myTMR0ISR
  1322  000078  6E0D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1323  00007A  EC4E  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  1324  00007E                     
  1325                           ;main.c: 67:     (INTCONbits.GIE = 1);
  1326  00007E  8EF2               	bsf	242,7,c	;volatile
  1327  000080                     
  1328                           ;main.c: 68:     (INTCONbits.PEIE = 1);
  1329  000080  8CF2               	bsf	242,6,c	;volatile
  1330  000082                     
  1331                           ;main.c: 70:     printf("inLab 08\r\n");
  1332  000082  0ECE               	movlw	low STR_1
  1333  000084  0100               	movlb	0	; () banked
  1334  000086  6F81               	movwf	printf@fmt& (0+255),b
  1335  000088  0EFF               	movlw	high STR_1
  1336  00008A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1337  00008C  ECE2  F00A         	call	_printf	;wreg free
  1338  000090                     
  1339                           ;main.c: 71:     printf("Microphone experiments\r\n");
  1340  000090  0E2A               	movlw	low STR_2
  1341  000092  0100               	movlb	0	; () banked
  1342  000094  6F81               	movwf	printf@fmt& (0+255),b
  1343  000096  0EFF               	movlw	high STR_2
  1344  000098  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1345  00009A  ECE2  F00A         	call	_printf	;wreg free
  1346  00009E                     
  1347                           ;main.c: 72:     printf("Dev'21\r\n");
  1348  00009E  0ED9               	movlw	low STR_3
  1349  0000A0  0100               	movlb	0	; () banked
  1350  0000A2  6F81               	movwf	printf@fmt& (0+255),b
  1351  0000A4  0EFF               	movlw	high STR_3
  1352  0000A6  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1353  0000A8  ECE2  F00A         	call	_printf	;wreg free
  1354  0000AC                     
  1355                           ;main.c: 73:     printf("> ");
  1356  0000AC  0EFC               	movlw	low STR_4
  1357  0000AE  0100               	movlb	0	; () banked
  1358  0000B0  6F81               	movwf	printf@fmt& (0+255),b
  1359  0000B2  0EFF               	movlw	high STR_4
  1360  0000B4  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1361  0000B6  ECE2  F00A         	call	_printf	;wreg free
  1362  0000BA                     
  1363                           ;main.c: 77:     ADCON0bits.GO_NOT_DONE = 1;
  1364  0000BA  82C2               	bsf	194,1,c	;volatile
  1365  0000BC                     l36:
  1366  0000BC  B2C2               	btfsc	194,1,c	;volatile
  1367  0000BE  EF63  F000         	goto	u2281
  1368  0000C2  EF65  F000         	goto	u2280
  1369  0000C6                     u2281:
  1370  0000C6  EF5E  F000         	goto	l36
  1371  0000CA                     u2280:
  1372  0000CA                     l2936:
  1373                           
  1374                           ;main.c: 82:         if(samplesCollected){
  1375  0000CA  0101               	movlb	1	; () banked
  1376  0000CC  5195               	movf	_samplesCollected& (0+255),w,b
  1377  0000CE  B4D8               	btfsc	status,2,c
  1378  0000D0  EF6C  F000         	goto	u2291
  1379  0000D4  EF6E  F000         	goto	u2290
  1380  0000D8                     u2291:
  1381  0000D8  EF08  F002         	goto	l3008
  1382  0000DC                     u2290:
  1383  0000DC                     
  1384                           ; BSR set to: 1
  1385                           ;main.c: 83:             samplesCollected = 0;
  1386  0000DC  0E00               	movlw	0
  1387  0000DE  6F95               	movwf	_samplesCollected& (0+255),b
  1388  0000E0                     
  1389                           ; BSR set to: 1
  1390                           ;main.c: 84:             printf("The last %d ADC samples from the microphone are: \r\n",
      +                           256);
  1391  0000E0  0E4F               	movlw	low STR_5
  1392  0000E2  0100               	movlb	0	; () banked
  1393  0000E4  6F81               	movwf	printf@fmt& (0+255),b
  1394  0000E6  0EFE               	movlw	high STR_5
  1395  0000E8  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1396  0000EA  0E01               	movlw	1
  1397  0000EC  6F84               	movwf	(?_printf+3)& (0+255),b
  1398  0000EE  0E00               	movlw	0
  1399  0000F0  6F83               	movwf	(?_printf+2)& (0+255),b
  1400  0000F2  ECE2  F00A         	call	_printf	;wreg free
  1401  0000F6                     
  1402                           ;main.c: 86:             for(uint16_t i = 0;i<256;i++){
  1403  0000F6  0E00               	movlw	0
  1404  0000F8  0101               	movlb	1	; () banked
  1405  0000FA  6F8C               	movwf	(main@i_214+1)& (0+255),b
  1406  0000FC  0E00               	movlw	0
  1407  0000FE  6F8B               	movwf	main@i_214& (0+255),b
  1408  000100                     l2948:
  1409                           
  1410                           ; BSR set to: 1
  1411                           ;main.c: 87:                 if(i % 16 == 0){
  1412  000100  0E0F               	movlw	15
  1413  000102  158B               	andwf	main@i_214& (0+255),w,b
  1414  000104  0100               	movlb	0	; () banked
  1415  000106  6F8D               	movwf	??_main& (0+255),b
  1416  000108  0E00               	movlw	0
  1417  00010A  0101               	movlb	1	; () banked
  1418  00010C  158C               	andwf	(main@i_214+1)& (0+255),w,b
  1419  00010E  0100               	movlb	0	; () banked
  1420  000110  6F8E               	movwf	(??_main+1)& (0+255),b
  1421  000112  518D               	movf	??_main& (0+255),w,b
  1422  000114  118E               	iorwf	(??_main+1)& (0+255),w,b
  1423  000116  A4D8               	btfss	status,2,c
  1424  000118  EF90  F000         	goto	u2301
  1425  00011C  EF92  F000         	goto	u2300
  1426  000120                     u2301:
  1427  000120  EF9C  F000         	goto	l43
  1428  000124                     u2300:
  1429  000124                     
  1430                           ; BSR set to: 0
  1431                           ;main.c: 88:                     printf("\r\nS[%d] ", i);
  1432  000124  0EE2               	movlw	low STR_6
  1433  000126  6F81               	movwf	printf@fmt& (0+255),b
  1434  000128  0EFF               	movlw	high STR_6
  1435  00012A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1436  00012C  C18B  F083         	movff	main@i_214,?_printf+2
  1437  000130  C18C  F084         	movff	main@i_214+1,?_printf+3
  1438  000134  ECE2  F00A         	call	_printf	;wreg free
  1439  000138                     l43:
  1440                           
  1441                           ;main.c: 90:                 printf("%d ", adc_reading[i]);
  1442  000138  0EF8               	movlw	low STR_7
  1443  00013A  0100               	movlb	0	; () banked
  1444  00013C  6F81               	movwf	printf@fmt& (0+255),b
  1445  00013E  0EFF               	movlw	high STR_7
  1446  000140  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1447  000142  0E00               	movlw	low _adc_reading
  1448  000144  0101               	movlb	1	; () banked
  1449  000146  258B               	addwf	main@i_214& (0+255),w,b
  1450  000148  6ED9               	movwf	fsr2l,c
  1451  00014A  0E02               	movlw	high _adc_reading
  1452  00014C  218C               	addwfc	(main@i_214+1)& (0+255),w,b
  1453  00014E  6EDA               	movwf	fsr2h,c
  1454  000150  50DF               	movf	indf2,w,c
  1455  000152  0100               	movlb	0	; () banked
  1456  000154  6F8D               	movwf	??_main& (0+255),b
  1457  000156  518D               	movf	??_main& (0+255),w,b
  1458  000158  6F83               	movwf	(?_printf+2)& (0+255),b
  1459  00015A  6B84               	clrf	(?_printf+3)& (0+255),b
  1460  00015C  ECE2  F00A         	call	_printf	;wreg free
  1461  000160                     
  1462                           ;main.c: 91:             }
  1463  000160  0101               	movlb	1	; () banked
  1464  000162  4B8B               	infsnz	main@i_214& (0+255),f,b
  1465  000164  2B8C               	incf	(main@i_214+1)& (0+255),f,b
  1466  000166                     
  1467                           ; BSR set to: 1
  1468  000166  058C               	decf	(main@i_214+1)& (0+255),w,b
  1469  000168  A0D8               	btfss	status,0,c
  1470  00016A  EFB9  F000         	goto	u2311
  1471  00016E  EFBB  F000         	goto	u2310
  1472  000172                     u2311:
  1473  000172  EF80  F000         	goto	l2948
  1474  000176                     u2310:
  1475  000176                     
  1476                           ; BSR set to: 1
  1477                           ;main.c: 92:             printf("\r\nThe sound wave crossed at the following indices:\r\
      +                          n");
  1478  000176  0E1A               	movlw	low STR_8
  1479  000178  0100               	movlb	0	; () banked
  1480  00017A  6F81               	movwf	printf@fmt& (0+255),b
  1481  00017C  0EFE               	movlw	high STR_8
  1482  00017E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1483  000180  ECE2  F00A         	call	_printf	;wreg free
  1484  000184                     
  1485                           ;main.c: 93:             uint8_t crossings[256/2];;main.c: 94:             uint16_t crId
      +                          x = 0;
  1486  000184  0E00               	movlw	0
  1487  000186  0101               	movlb	1	; () banked
  1488  000188  6F8E               	movwf	(main@crIdx+1)& (0+255),b
  1489  00018A  0E00               	movlw	0
  1490  00018C  6F8D               	movwf	main@crIdx& (0+255),b
  1491  00018E                     
  1492                           ; BSR set to: 1
  1493                           ;main.c: 95:             for(uint16_t i = 1;i<256;i++){
  1494  00018E  0E00               	movlw	0
  1495  000190  6F90               	movwf	(main@i_220+1)& (0+255),b
  1496  000192  0E01               	movlw	1
  1497  000194  6F8F               	movwf	main@i_220& (0+255),b
  1498  000196                     l2966:
  1499                           
  1500                           ; BSR set to: 1
  1501                           ;main.c: 96:                 if(adc_reading[i-1] <= 128 && adc_reading[i] > 128){
  1502  000196  0EFF               	movlw	low (_adc_reading+65535)
  1503  000198  258F               	addwf	main@i_220& (0+255),w,b
  1504  00019A  6ED9               	movwf	fsr2l,c
  1505  00019C  0E01               	movlw	high (_adc_reading+65535)
  1506  00019E  2190               	addwfc	(main@i_220+1)& (0+255),w,b
  1507  0001A0  6EDA               	movwf	fsr2h,c
  1508  0001A2  0E81               	movlw	129
  1509  0001A4  60DF               	cpfslt	indf2,c
  1510  0001A6  EFD7  F000         	goto	u2321
  1511  0001AA  EFD9  F000         	goto	u2320
  1512  0001AE                     u2321:
  1513  0001AE  EFF1  F000         	goto	l2974
  1514  0001B2                     u2320:
  1515  0001B2                     
  1516                           ; BSR set to: 1
  1517  0001B2  0E00               	movlw	low _adc_reading
  1518  0001B4  258F               	addwf	main@i_220& (0+255),w,b
  1519  0001B6  6ED9               	movwf	fsr2l,c
  1520  0001B8  0E02               	movlw	high _adc_reading
  1521  0001BA  2190               	addwfc	(main@i_220+1)& (0+255),w,b
  1522  0001BC  6EDA               	movwf	fsr2h,c
  1523  0001BE  0E80               	movlw	128
  1524  0001C0  64DF               	cpfsgt	indf2,c
  1525  0001C2  EFE5  F000         	goto	u2331
  1526  0001C6  EFE7  F000         	goto	u2330
  1527  0001CA                     u2331:
  1528  0001CA  EFF1  F000         	goto	l2974
  1529  0001CE                     u2330:
  1530  0001CE                     
  1531                           ; BSR set to: 1
  1532                           ;main.c: 97:                     crossings[crIdx] = i - 1;
  1533  0001CE  0E00               	movlw	low main@crossings
  1534  0001D0  258D               	addwf	main@crIdx& (0+255),w,b
  1535  0001D2  6ED9               	movwf	fsr2l,c
  1536  0001D4  0E01               	movlw	high main@crossings
  1537  0001D6  218E               	addwfc	(main@crIdx+1)& (0+255),w,b
  1538  0001D8  6EDA               	movwf	fsr2h,c
  1539  0001DA  058F               	decf	main@i_220& (0+255),w,b
  1540  0001DC  6EDF               	movwf	indf2,c
  1541  0001DE                     
  1542                           ; BSR set to: 1
  1543                           ;main.c: 98:                     crIdx += 1;
  1544  0001DE  4B8D               	infsnz	main@crIdx& (0+255),f,b
  1545  0001E0  2B8E               	incf	(main@crIdx+1)& (0+255),f,b
  1546  0001E2                     l2974:
  1547                           
  1548                           ; BSR set to: 1
  1549                           ;main.c: 100:             }
  1550  0001E2  4B8F               	infsnz	main@i_220& (0+255),f,b
  1551  0001E4  2B90               	incf	(main@i_220+1)& (0+255),f,b
  1552  0001E6                     
  1553                           ; BSR set to: 1
  1554  0001E6  0590               	decf	(main@i_220+1)& (0+255),w,b
  1555  0001E8  A0D8               	btfss	status,0,c
  1556  0001EA  EFF9  F000         	goto	u2341
  1557  0001EE  EFFB  F000         	goto	u2340
  1558  0001F2                     u2341:
  1559  0001F2  EFCB  F000         	goto	l2966
  1560  0001F6                     u2340:
  1561  0001F6                     
  1562                           ; BSR set to: 1
  1563                           ;main.c: 101:             for(uint16_t i = 0;i<crIdx;i++){
  1564  0001F6  0E00               	movlw	0
  1565  0001F8  6F88               	movwf	(main@i_221+1)& (0+255),b
  1566  0001FA  0E00               	movlw	0
  1567  0001FC  6F87               	movwf	main@i_221& (0+255),b
  1568  0001FE  EF18  F001         	goto	l2984
  1569  000202                     l2980:
  1570                           
  1571                           ; BSR set to: 1
  1572                           ;main.c: 102:                 printf("%d ", crossings[i]);
  1573  000202  0EF8               	movlw	low STR_7
  1574  000204  0100               	movlb	0	; () banked
  1575  000206  6F81               	movwf	printf@fmt& (0+255),b
  1576  000208  0EFF               	movlw	high STR_7
  1577  00020A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1578  00020C  0E00               	movlw	low main@crossings
  1579  00020E  0101               	movlb	1	; () banked
  1580  000210  2587               	addwf	main@i_221& (0+255),w,b
  1581  000212  6ED9               	movwf	fsr2l,c
  1582  000214  0E01               	movlw	high main@crossings
  1583  000216  2188               	addwfc	(main@i_221+1)& (0+255),w,b
  1584  000218  6EDA               	movwf	fsr2h,c
  1585  00021A  50DF               	movf	indf2,w,c
  1586  00021C  0100               	movlb	0	; () banked
  1587  00021E  6F8D               	movwf	??_main& (0+255),b
  1588  000220  518D               	movf	??_main& (0+255),w,b
  1589  000222  6F83               	movwf	(?_printf+2)& (0+255),b
  1590  000224  6B84               	clrf	(?_printf+3)& (0+255),b
  1591  000226  ECE2  F00A         	call	_printf	;wreg free
  1592  00022A                     
  1593                           ;main.c: 103:             }
  1594  00022A  0101               	movlb	1	; () banked
  1595  00022C  4B87               	infsnz	main@i_221& (0+255),f,b
  1596  00022E  2B88               	incf	(main@i_221+1)& (0+255),f,b
  1597  000230                     l2984:
  1598                           
  1599                           ; BSR set to: 1
  1600  000230  518D               	movf	main@crIdx& (0+255),w,b
  1601  000232  5D87               	subwf	main@i_221& (0+255),w,b
  1602  000234  518E               	movf	(main@crIdx+1)& (0+255),w,b
  1603  000236  5988               	subwfb	(main@i_221+1)& (0+255),w,b
  1604  000238  A0D8               	btfss	status,0,c
  1605  00023A  EF21  F001         	goto	u2351
  1606  00023E  EF23  F001         	goto	u2350
  1607  000242                     u2351:
  1608  000242  EF01  F001         	goto	l2980
  1609  000246                     u2350:
  1610  000246                     
  1611                           ; BSR set to: 1
  1612                           ;main.c: 104:             printf("\r\nThe sound wave had %d periods:\r\n", crIdx);
  1613  000246  0EAE               	movlw	low STR_10
  1614  000248  0100               	movlb	0	; () banked
  1615  00024A  6F81               	movwf	printf@fmt& (0+255),b
  1616  00024C  0EFE               	movlw	high STR_10
  1617  00024E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1618  000250  C18D  F083         	movff	main@crIdx,?_printf+2
  1619  000254  C18E  F084         	movff	main@crIdx+1,?_printf+3
  1620  000258  ECE2  F00A         	call	_printf	;wreg free
  1621  00025C                     
  1622                           ;main.c: 105:             uint16_t periodSum = 0;
  1623  00025C  0E00               	movlw	0
  1624  00025E  0101               	movlb	1	; () banked
  1625  000260  6F83               	movwf	(main@periodSum+1)& (0+255),b
  1626  000262  0E00               	movlw	0
  1627  000264  6F82               	movwf	main@periodSum& (0+255),b
  1628  000266                     
  1629                           ; BSR set to: 1
  1630                           ;main.c: 106:             for(uint16_t i = 1;i<crIdx;i++){
  1631  000266  0E00               	movlw	0
  1632  000268  6F92               	movwf	(main@i_225+1)& (0+255),b
  1633  00026A  0E01               	movlw	1
  1634  00026C  6F91               	movwf	main@i_225& (0+255),b
  1635  00026E  EFB4  F001         	goto	l2998
  1636  000272                     l2992:
  1637                           
  1638                           ; BSR set to: 1
  1639                           ;main.c: 107:                 printf("%d - %d = %d\r\n", crossings[i], crossings[i-1], c
      +                          rossings[i] - crossings[i-1]);
  1640  000272  0EB0               	movlw	low STR_11
  1641  000274  0100               	movlb	0	; () banked
  1642  000276  6F81               	movwf	printf@fmt& (0+255),b
  1643  000278  0EFF               	movlw	high STR_11
  1644  00027A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1645  00027C  0E00               	movlw	low main@crossings
  1646  00027E  0101               	movlb	1	; () banked
  1647  000280  2591               	addwf	main@i_225& (0+255),w,b
  1648  000282  6ED9               	movwf	fsr2l,c
  1649  000284  0E01               	movlw	high main@crossings
  1650  000286  2192               	addwfc	(main@i_225+1)& (0+255),w,b
  1651  000288  6EDA               	movwf	fsr2h,c
  1652  00028A  50DF               	movf	indf2,w,c
  1653  00028C  0100               	movlb	0	; () banked
  1654  00028E  6F8D               	movwf	??_main& (0+255),b
  1655  000290  518D               	movf	??_main& (0+255),w,b
  1656  000292  6F83               	movwf	(?_printf+2)& (0+255),b
  1657  000294  6B84               	clrf	(?_printf+3)& (0+255),b
  1658  000296  0EFF               	movlw	255
  1659  000298  6F8E               	movwf	(??_main+1)& (0+255),b
  1660  00029A  0EFF               	movlw	255
  1661  00029C  6F8F               	movwf	(??_main+2)& (0+255),b
  1662  00029E  C191  F090         	movff	main@i_225,??_main+3
  1663  0002A2  C192  F091         	movff	main@i_225+1,??_main+4
  1664  0002A6  518E               	movf	(??_main+1)& (0+255),w,b
  1665  0002A8  2790               	addwf	(??_main+3)& (0+255),f,b
  1666  0002AA  518F               	movf	(??_main+2)& (0+255),w,b
  1667  0002AC  2391               	addwfc	(??_main+4)& (0+255),f,b
  1668  0002AE  0E00               	movlw	low main@crossings
  1669  0002B0  2590               	addwf	(??_main+3)& (0+255),w,b
  1670  0002B2  6ED9               	movwf	fsr2l,c
  1671  0002B4  0E01               	movlw	high main@crossings
  1672  0002B6  2191               	addwfc	(??_main+4)& (0+255),w,b
  1673  0002B8  6EDA               	movwf	fsr2h,c
  1674  0002BA  50DF               	movf	indf2,w,c
  1675  0002BC  6F92               	movwf	(??_main+5)& (0+255),b
  1676  0002BE  5192               	movf	(??_main+5)& (0+255),w,b
  1677  0002C0  6F85               	movwf	(?_printf+4)& (0+255),b
  1678  0002C2  6B86               	clrf	(?_printf+5)& (0+255),b
  1679  0002C4  0E00               	movlw	low main@crossings
  1680  0002C6  0101               	movlb	1	; () banked
  1681  0002C8  2591               	addwf	main@i_225& (0+255),w,b
  1682  0002CA  6ED9               	movwf	fsr2l,c
  1683  0002CC  0E01               	movlw	high main@crossings
  1684  0002CE  2192               	addwfc	(main@i_225+1)& (0+255),w,b
  1685  0002D0  6EDA               	movwf	fsr2h,c
  1686  0002D2  50DF               	movf	indf2,w,c
  1687  0002D4  0100               	movlb	0	; () banked
  1688  0002D6  6F93               	movwf	(??_main+6)& (0+255),b
  1689  0002D8  0EFF               	movlw	255
  1690  0002DA  6F94               	movwf	(??_main+7)& (0+255),b
  1691  0002DC  0EFF               	movlw	255
  1692  0002DE  6F95               	movwf	(??_main+8)& (0+255),b
  1693  0002E0  C191  F096         	movff	main@i_225,??_main+9
  1694  0002E4  C192  F097         	movff	main@i_225+1,??_main+10
  1695  0002E8  5194               	movf	(??_main+7)& (0+255),w,b
  1696  0002EA  2796               	addwf	(??_main+9)& (0+255),f,b
  1697  0002EC  5195               	movf	(??_main+8)& (0+255),w,b
  1698  0002EE  2397               	addwfc	(??_main+10)& (0+255),f,b
  1699  0002F0  0E00               	movlw	low main@crossings
  1700  0002F2  2596               	addwf	(??_main+9)& (0+255),w,b
  1701  0002F4  6ED9               	movwf	fsr2l,c
  1702  0002F6  0E01               	movlw	high main@crossings
  1703  0002F8  2197               	addwfc	(??_main+10)& (0+255),w,b
  1704  0002FA  6EDA               	movwf	fsr2h,c
  1705  0002FC  50DF               	movf	indf2,w,c
  1706  0002FE  6F98               	movwf	(??_main+11)& (0+255),b
  1707  000300  5198               	movf	(??_main+11)& (0+255),w,b
  1708  000302  5D93               	subwf	(??_main+6)& (0+255),w,b
  1709  000304  6F87               	movwf	(?_printf+6)& (0+255),b
  1710  000306  6B88               	clrf	(?_printf+7)& (0+255),b
  1711  000308  A0D8               	btfss	status,0,c
  1712  00030A  0788               	decf	(?_printf+7)& (0+255),f,b
  1713  00030C  ECE2  F00A         	call	_printf	;wreg free
  1714  000310                     
  1715                           ;main.c: 108:                 periodSum += crossings[i] - crossings[i-1];
  1716  000310  0E00               	movlw	low main@crossings
  1717  000312  0101               	movlb	1	; () banked
  1718  000314  2591               	addwf	main@i_225& (0+255),w,b
  1719  000316  6ED9               	movwf	fsr2l,c
  1720  000318  0E01               	movlw	high main@crossings
  1721  00031A  2192               	addwfc	(main@i_225+1)& (0+255),w,b
  1722  00031C  6EDA               	movwf	fsr2h,c
  1723  00031E  50DF               	movf	indf2,w,c
  1724  000320  0100               	movlb	0	; () banked
  1725  000322  6F8D               	movwf	??_main& (0+255),b
  1726  000324  6B8E               	clrf	(??_main+1)& (0+255),b
  1727  000326  0EFF               	movlw	255
  1728  000328  6F8F               	movwf	(??_main+2)& (0+255),b
  1729  00032A  0EFF               	movlw	255
  1730  00032C  6F90               	movwf	(??_main+3)& (0+255),b
  1731  00032E  C191  F091         	movff	main@i_225,??_main+4
  1732  000332  C192  F092         	movff	main@i_225+1,??_main+5
  1733  000336  518F               	movf	(??_main+2)& (0+255),w,b
  1734  000338  2791               	addwf	(??_main+4)& (0+255),f,b
  1735  00033A  5190               	movf	(??_main+3)& (0+255),w,b
  1736  00033C  2392               	addwfc	(??_main+5)& (0+255),f,b
  1737  00033E  0E00               	movlw	low main@crossings
  1738  000340  2591               	addwf	(??_main+4)& (0+255),w,b
  1739  000342  6ED9               	movwf	fsr2l,c
  1740  000344  0E01               	movlw	high main@crossings
  1741  000346  2192               	addwfc	(??_main+5)& (0+255),w,b
  1742  000348  6EDA               	movwf	fsr2h,c
  1743  00034A  50DF               	movf	indf2,w,c
  1744  00034C  6F93               	movwf	(??_main+6)& (0+255),b
  1745  00034E  5193               	movf	(??_main+6)& (0+255),w,b
  1746  000350  5F8D               	subwf	??_main& (0+255),f,b
  1747  000352  0E00               	movlw	0
  1748  000354  5B8E               	subwfb	(??_main+1)& (0+255),f,b
  1749  000356  518D               	movf	??_main& (0+255),w,b
  1750  000358  0101               	movlb	1	; () banked
  1751  00035A  2782               	addwf	main@periodSum& (0+255),f,b
  1752  00035C  0100               	movlb	0	; () banked
  1753  00035E  518E               	movf	(??_main+1)& (0+255),w,b
  1754  000360  0101               	movlb	1	; () banked
  1755  000362  2383               	addwfc	(main@periodSum+1)& (0+255),f,b
  1756  000364                     
  1757                           ; BSR set to: 1
  1758                           ;main.c: 109:             }
  1759  000364  4B91               	infsnz	main@i_225& (0+255),f,b
  1760  000366  2B92               	incf	(main@i_225+1)& (0+255),f,b
  1761  000368                     l2998:
  1762                           
  1763                           ; BSR set to: 1
  1764  000368  518D               	movf	main@crIdx& (0+255),w,b
  1765  00036A  5D91               	subwf	main@i_225& (0+255),w,b
  1766  00036C  518E               	movf	(main@crIdx+1)& (0+255),w,b
  1767  00036E  5992               	subwfb	(main@i_225+1)& (0+255),w,b
  1768  000370  A0D8               	btfss	status,0,c
  1769  000372  EFBD  F001         	goto	u2361
  1770  000376  EFBF  F001         	goto	u2360
  1771  00037A                     u2361:
  1772  00037A  EF39  F001         	goto	l2992
  1773  00037E                     u2360:
  1774  00037E                     
  1775                           ; BSR set to: 1
  1776                           ;main.c: 112:             uint16_t periodSumUs = periodSum * 25;
  1777  00037E  C182  F00C         	movff	main@periodSum,___wmul@multiplier
  1778  000382  C183  F00D         	movff	main@periodSum+1,___wmul@multiplier+1
  1779  000386  0E00               	movlw	0
  1780  000388  6E0F               	movwf	(___wmul@multiplicand+1)^0,c
  1781  00038A  0E19               	movlw	25
  1782  00038C  6E0E               	movwf	___wmul@multiplicand^0,c
  1783  00038E  ECF6  F00A         	call	___wmul	;wreg free
  1784  000392  C00C  F180         	movff	?___wmul,main@periodSumUs
  1785  000396  C00D  F181         	movff	?___wmul+1,main@periodSumUs+1
  1786  00039A                     
  1787                           ;main.c: 113:             uint16_t avgPeriodUs = periodSumUs/(crIdx-1);
  1788  00039A  C180  F00C         	movff	main@periodSumUs,___lwdiv@dividend
  1789  00039E  C181  F00D         	movff	main@periodSumUs+1,___lwdiv@dividend+1
  1790  0003A2  0EFF               	movlw	255
  1791  0003A4  0101               	movlb	1	; () banked
  1792  0003A6  258D               	addwf	main@crIdx& (0+255),w,b
  1793  0003A8  6E0E               	movwf	___lwdiv@divisor^0,c
  1794  0003AA  0EFF               	movlw	255
  1795  0003AC  218E               	addwfc	(main@crIdx+1)& (0+255),w,b
  1796  0003AE  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1797  0003B0  EC6E  F009         	call	___lwdiv	;wreg free
  1798  0003B4  C00C  F184         	movff	?___lwdiv,main@avgPeriodUs
  1799  0003B8  C00D  F185         	movff	?___lwdiv+1,main@avgPeriodUs+1
  1800  0003BC                     
  1801                           ;main.c: 114:             printf("\r\naverage period = %d us\r\n", avgPeriodUs);
  1802  0003BC  0E0F               	movlw	low STR_12
  1803  0003BE  0100               	movlb	0	; () banked
  1804  0003C0  6F81               	movwf	printf@fmt& (0+255),b
  1805  0003C2  0EFF               	movlw	high STR_12
  1806  0003C4  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1807  0003C6  C184  F083         	movff	main@avgPeriodUs,?_printf+2
  1808  0003CA  C185  F084         	movff	main@avgPeriodUs+1,?_printf+3
  1809  0003CE  ECE2  F00A         	call	_printf	;wreg free
  1810  0003D2                     
  1811                           ;main.c: 115:             printf("\r\average frequendy = %d Hz\r\n", 1000000/avgPeriodUs
      +                          );
  1812  0003D2  0EF2               	movlw	low STR_13
  1813  0003D4  0100               	movlb	0	; () banked
  1814  0003D6  6F81               	movwf	printf@fmt& (0+255),b
  1815  0003D8  0EFE               	movlw	high STR_13
  1816  0003DA  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1817  0003DC  0E40               	movlw	64
  1818  0003DE  6E0C               	movwf	___aldiv@dividend^0,c
  1819  0003E0  0E42               	movlw	66
  1820  0003E2  6E0D               	movwf	(___aldiv@dividend+1)^0,c
  1821  0003E4  0E0F               	movlw	15
  1822  0003E6  6E0E               	movwf	(___aldiv@dividend+2)^0,c
  1823  0003E8  0E00               	movlw	0
  1824  0003EA  6E0F               	movwf	(___aldiv@dividend+3)^0,c
  1825  0003EC  C184  F010         	movff	main@avgPeriodUs,___aldiv@divisor
  1826  0003F0  C185  F011         	movff	main@avgPeriodUs+1,___aldiv@divisor+1
  1827  0003F4  6A12               	clrf	(___aldiv@divisor+2)^0,c
  1828  0003F6  6A13               	clrf	(___aldiv@divisor+3)^0,c
  1829  0003F8  EC4F  F007         	call	___aldiv	;wreg free
  1830  0003FC  C00C  F083         	movff	?___aldiv,?_printf+2
  1831  000400  C00D  F084         	movff	?___aldiv+1,?_printf+3
  1832  000404  C00E  F085         	movff	?___aldiv+2,?_printf+4
  1833  000408  C00F  F086         	movff	?___aldiv+3,?_printf+5
  1834  00040C  ECE2  F00A         	call	_printf	;wreg free
  1835  000410                     l3008:
  1836                           
  1837                           ;main.c: 118:         if ((EUSART1_is_rx_ready())) {
  1838  000410  EC3A  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  1839  000414  0900               	iorlw	0
  1840  000416  B4D8               	btfsc	status,2,c
  1841  000418  EF10  F002         	goto	u2371
  1842  00041C  EF12  F002         	goto	u2370
  1843  000420                     u2371:
  1844  000420  EF65  F000         	goto	l2936
  1845  000424                     u2370:
  1846  000424                     
  1847                           ;main.c: 119:             cmd = EUSART1_Read();
  1848  000424  ECCD  F00A         	call	_EUSART1_Read	;wreg free
  1849  000428  0101               	movlb	1	; () banked
  1850  00042A  6F86               	movwf	main@cmd& (0+255),b
  1851                           
  1852                           ;main.c: 120:             switch (cmd) {
  1853  00042C  EF22  F003         	goto	l3058
  1854  000430                     l3012:
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;main.c: 123:                     printf("------------------------------\r\n");
  1858  000430  0ED1               	movlw	low STR_14
  1859  000432  6F81               	movwf	printf@fmt& (0+255),b
  1860  000434  0EFE               	movlw	high STR_14
  1861  000436  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1862  000438  ECE2  F00A         	call	_printf	;wreg free
  1863                           
  1864                           ;main.c: 124:                     printf("?: Help menu\r\n");
  1865  00043C  0EBF               	movlw	low STR_15
  1866  00043E  0100               	movlb	0	; () banked
  1867  000440  6F81               	movwf	printf@fmt& (0+255),b
  1868  000442  0EFF               	movlw	high STR_15
  1869  000444  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1870  000446  ECE2  F00A         	call	_printf	;wreg free
  1871                           
  1872                           ;main.c: 125:                     printf("o: k\r\n");
  1873  00044A  0EEB               	movlw	low STR_16
  1874  00044C  0100               	movlb	0	; () banked
  1875  00044E  6F81               	movwf	printf@fmt& (0+255),b
  1876  000450  0EFF               	movlw	high STR_16
  1877  000452  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1878  000454  ECE2  F00A         	call	_printf	;wreg free
  1879                           
  1880                           ;main.c: 126:                     printf("Z: Reset processor\r\n");
  1881  000458  0E8A               	movlw	low STR_17
  1882  00045A  0100               	movlb	0	; () banked
  1883  00045C  6F81               	movwf	printf@fmt& (0+255),b
  1884  00045E  0EFF               	movlw	high STR_17
  1885  000460  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1886  000462  ECE2  F00A         	call	_printf	;wreg free
  1887                           
  1888                           ;main.c: 127:                     printf("z: Clear the terminal\r\n");
  1889  000466  0E5B               	movlw	low STR_18
  1890  000468  0100               	movlb	0	; () banked
  1891  00046A  6F81               	movwf	printf@fmt& (0+255),b
  1892  00046C  0EFF               	movlw	high STR_18
  1893  00046E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1894  000470  ECE2  F00A         	call	_printf	;wreg free
  1895                           
  1896                           ;main.c: 128:                     printf("T/t: Increase/decrease threshold 138-118\r\n")
      +                          ;
  1897  000474  0E83               	movlw	low STR_19
  1898  000476  0100               	movlb	0	; () banked
  1899  000478  6F81               	movwf	printf@fmt& (0+255),b
  1900  00047A  0EFE               	movlw	high STR_19
  1901  00047C  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1902  00047E  ECE2  F00A         	call	_printf	;wreg free
  1903                           
  1904                           ;main.c: 129:                     printf("f: gather %d samples from the microphone and c
      +                          alculate the frequency\r\n", 256);
  1905  000482  0ED3               	movlw	low STR_20
  1906  000484  0100               	movlb	0	; () banked
  1907  000486  6F81               	movwf	printf@fmt& (0+255),b
  1908  000488  0EFD               	movlw	high STR_20
  1909  00048A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1910  00048C  0E01               	movlw	1
  1911  00048E  6F84               	movwf	(?_printf+3)& (0+255),b
  1912  000490  0E00               	movlw	0
  1913  000492  6F83               	movwf	(?_printf+2)& (0+255),b
  1914  000494  ECE2  F00A         	call	_printf	;wreg free
  1915                           
  1916                           ;main.c: 131:                     printf("------------------------------\r\n");
  1917  000498  0ED1               	movlw	low STR_14
  1918  00049A  0100               	movlb	0	; () banked
  1919  00049C  6F81               	movwf	printf@fmt& (0+255),b
  1920  00049E  0EFE               	movlw	high STR_14
  1921  0004A0  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1922  0004A2  ECE2  F00A         	call	_printf	;wreg free
  1923                           
  1924                           ;main.c: 132:                     break;
  1925  0004A6  EF65  F000         	goto	l2936
  1926  0004AA                     l3014:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;main.c: 138:                     printf(" k\r\n>");
  1930  0004AA  0EF2               	movlw	low STR_22
  1931  0004AC  6F81               	movwf	printf@fmt& (0+255),b
  1932  0004AE  0EFF               	movlw	high STR_22
  1933  0004B0  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1934  0004B2  ECE2  F00A         	call	_printf	;wreg free
  1935                           
  1936                           ;main.c: 139:                     break;
  1937  0004B6  EF65  F000         	goto	l2936
  1938  0004BA                     l3016:
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;main.c: 145:                     for (i = 0; i < 40; i++) printf("\n");
  1942  0004BA  0E00               	movlw	0
  1943  0004BC  0101               	movlb	1	; () banked
  1944  0004BE  6F8A               	movwf	(main@i+1)& (0+255),b
  1945  0004C0  0E00               	movlw	0
  1946  0004C2  6F89               	movwf	main@i& (0+255),b
  1947  0004C4                     l3018:
  1948                           
  1949                           ; BSR set to: 1
  1950  0004C4  518A               	movf	(main@i+1)& (0+255),w,b
  1951  0004C6  E109               	bnz	u2380
  1952  0004C8  0E28               	movlw	40
  1953  0004CA  5D89               	subwf	main@i& (0+255),w,b
  1954  0004CC  A0D8               	btfss	status,0,c
  1955  0004CE  EF6B  F002         	goto	u2381
  1956  0004D2  EF6D  F002         	goto	u2380
  1957  0004D6                     u2381:
  1958  0004D6  EF6F  F002         	goto	l3022
  1959  0004DA                     u2380:
  1960  0004DA  EF7B  F002         	goto	l60
  1961  0004DE                     l3022:
  1962                           
  1963                           ; BSR set to: 1
  1964  0004DE  0E81               	movlw	low (STR_5+50)
  1965  0004E0  0100               	movlb	0	; () banked
  1966  0004E2  6F81               	movwf	printf@fmt& (0+255),b
  1967  0004E4  0EFE               	movlw	high (STR_5+50)
  1968  0004E6  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1969  0004E8  ECE2  F00A         	call	_printf	;wreg free
  1970  0004EC  0101               	movlb	1	; () banked
  1971  0004EE  4B89               	infsnz	main@i& (0+255),f,b
  1972  0004F0  2B8A               	incf	(main@i+1)& (0+255),f,b
  1973  0004F2  EF62  F002         	goto	l3018
  1974  0004F6                     l60:
  1975                           
  1976                           ; BSR set to: 1
  1977  0004F6  00FF               	reset		;# 
  1978                           
  1979                           ;main.c: 147:                     break;
  1980  0004F8  EF65  F000         	goto	l2936
  1981  0004FC                     l3028:
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;main.c: 153:                     for (i = 0; i < 40; i++) printf("\n>");
  1985  0004FC  0E00               	movlw	0
  1986  0004FE  0101               	movlb	1	; () banked
  1987  000500  6F8A               	movwf	(main@i+1)& (0+255),b
  1988  000502  0E00               	movlw	0
  1989  000504  6F89               	movwf	main@i& (0+255),b
  1990  000506                     l3030:
  1991                           
  1992                           ; BSR set to: 1
  1993  000506  518A               	movf	(main@i+1)& (0+255),w,b
  1994  000508  E109               	bnz	u2390
  1995  00050A  0E28               	movlw	40
  1996  00050C  5D89               	subwf	main@i& (0+255),w,b
  1997  00050E  A0D8               	btfss	status,0,c
  1998  000510  EF8C  F002         	goto	u2391
  1999  000514  EF8E  F002         	goto	u2390
  2000  000518                     u2391:
  2001  000518  EF90  F002         	goto	l3034
  2002  00051C                     u2390:
  2003  00051C  EF65  F000         	goto	l2936
  2004  000520                     l3034:
  2005                           
  2006                           ; BSR set to: 1
  2007  000520  0EF5               	movlw	low (STR_22+3)
  2008  000522  0100               	movlb	0	; () banked
  2009  000524  6F81               	movwf	printf@fmt& (0+255),b
  2010  000526  0EFF               	movlw	high (STR_22+3)
  2011  000528  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2012  00052A  ECE2  F00A         	call	_printf	;wreg free
  2013  00052E  0101               	movlb	1	; () banked
  2014  000530  4B89               	infsnz	main@i& (0+255),f,b
  2015  000532  2B8A               	incf	(main@i+1)& (0+255),f,b
  2016  000534  EF83  F002         	goto	l3030
  2017  000538                     l3040:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;main.c: 157:                     thresholdRange += 5;
  2021  000538  0E05               	movlw	5
  2022  00053A  0101               	movlb	1	; () banked
  2023  00053C  2793               	addwf	_thresholdRange& (0+255),f,b
  2024  00053E  0E00               	movlw	0
  2025  000540  2394               	addwfc	(_thresholdRange+1)& (0+255),f,b
  2026  000542                     
  2027                           ; BSR set to: 1
  2028                           ;main.c: 158:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRan
      +                          ge, 128 + thresholdRange);
  2029  000542  0E43               	movlw	low STR_25
  2030  000544  0100               	movlb	0	; () banked
  2031  000546  6F81               	movwf	printf@fmt& (0+255),b
  2032  000548  0EFF               	movlw	high STR_25
  2033  00054A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2034  00054C  0101               	movlb	1	; () banked
  2035  00054E  5193               	movf	_thresholdRange& (0+255),w,b
  2036  000550  0880               	sublw	128
  2037  000552  0100               	movlb	0	; () banked
  2038  000554  6F83               	movwf	(?_printf+2)& (0+255),b
  2039  000556  0101               	movlb	1	; () banked
  2040  000558  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  2041  00055A  A0D8               	btfss	status,0,c
  2042  00055C  2AE8               	incf	wreg,f,c
  2043  00055E  0800               	sublw	0
  2044  000560  0100               	movlb	0	; () banked
  2045  000562  6F84               	movwf	(?_printf+3)& (0+255),b
  2046  000564  0E80               	movlw	128
  2047  000566  0101               	movlb	1	; () banked
  2048  000568  2593               	addwf	_thresholdRange& (0+255),w,b
  2049  00056A  0100               	movlb	0	; () banked
  2050  00056C  6F85               	movwf	(?_printf+4)& (0+255),b
  2051  00056E  0E00               	movlw	0
  2052  000570  0101               	movlb	1	; () banked
  2053  000572  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2054  000574  0100               	movlb	0	; () banked
  2055  000576  6F86               	movwf	(?_printf+5)& (0+255),b
  2056  000578  ECE2  F00A         	call	_printf	;wreg free
  2057                           
  2058                           ;main.c: 159:                     break;
  2059  00057C  EF65  F000         	goto	l2936
  2060  000580                     l3044:
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;main.c: 161:                     if(thresholdRange > 0){
  2064  000580  0101               	movlb	1	; () banked
  2065  000582  5193               	movf	_thresholdRange& (0+255),w,b
  2066  000584  1194               	iorwf	(_thresholdRange+1)& (0+255),w,b
  2067  000586  B4D8               	btfsc	status,2,c
  2068  000588  EFC8  F002         	goto	u2401
  2069  00058C  EFCA  F002         	goto	u2400
  2070  000590                     u2401:
  2071  000590  EFED  F002         	goto	l3050
  2072  000594                     u2400:
  2073  000594                     
  2074                           ; BSR set to: 1
  2075                           ;main.c: 162:                         thresholdRange -= 5;
  2076  000594  0E05               	movlw	5
  2077  000596  5F93               	subwf	_thresholdRange& (0+255),f,b
  2078  000598  0E00               	movlw	0
  2079  00059A  5B94               	subwfb	(_thresholdRange+1)& (0+255),f,b
  2080  00059C                     
  2081                           ; BSR set to: 1
  2082                           ;main.c: 163:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRan
      +                          ge, 128 + thresholdRange);
  2083  00059C  0E43               	movlw	low STR_25
  2084  00059E  0100               	movlb	0	; () banked
  2085  0005A0  6F81               	movwf	printf@fmt& (0+255),b
  2086  0005A2  0EFF               	movlw	high STR_25
  2087  0005A4  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2088  0005A6  0101               	movlb	1	; () banked
  2089  0005A8  5193               	movf	_thresholdRange& (0+255),w,b
  2090  0005AA  0880               	sublw	128
  2091  0005AC  0100               	movlb	0	; () banked
  2092  0005AE  6F83               	movwf	(?_printf+2)& (0+255),b
  2093  0005B0  0101               	movlb	1	; () banked
  2094  0005B2  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  2095  0005B4  A0D8               	btfss	status,0,c
  2096  0005B6  2AE8               	incf	wreg,f,c
  2097  0005B8  0800               	sublw	0
  2098  0005BA  0100               	movlb	0	; () banked
  2099  0005BC  6F84               	movwf	(?_printf+3)& (0+255),b
  2100  0005BE  0E80               	movlw	128
  2101  0005C0  0101               	movlb	1	; () banked
  2102  0005C2  2593               	addwf	_thresholdRange& (0+255),w,b
  2103  0005C4  0100               	movlb	0	; () banked
  2104  0005C6  6F85               	movwf	(?_printf+4)& (0+255),b
  2105  0005C8  0E00               	movlw	0
  2106  0005CA  0101               	movlb	1	; () banked
  2107  0005CC  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2108  0005CE  0100               	movlb	0	; () banked
  2109  0005D0  6F86               	movwf	(?_printf+5)& (0+255),b
  2110  0005D2  ECE2  F00A         	call	_printf	;wreg free
  2111                           
  2112                           ;main.c: 164:                     }
  2113  0005D6  EF65  F000         	goto	l2936
  2114  0005DA                     l3050:
  2115                           
  2116                           ; BSR set to: 1
  2117                           ;main.c: 166:                         printf("Volume range: %d - %d\r\n", 128 - threshol
      +                          dRange, 128 + thresholdRange);
  2118  0005DA  0E43               	movlw	low STR_25
  2119  0005DC  0100               	movlb	0	; () banked
  2120  0005DE  6F81               	movwf	printf@fmt& (0+255),b
  2121  0005E0  0EFF               	movlw	high STR_25
  2122  0005E2  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2123  0005E4  0101               	movlb	1	; () banked
  2124  0005E6  5193               	movf	_thresholdRange& (0+255),w,b
  2125  0005E8  0880               	sublw	128
  2126  0005EA  0100               	movlb	0	; () banked
  2127  0005EC  6F83               	movwf	(?_printf+2)& (0+255),b
  2128  0005EE  0101               	movlb	1	; () banked
  2129  0005F0  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  2130  0005F2  A0D8               	btfss	status,0,c
  2131  0005F4  2AE8               	incf	wreg,f,c
  2132  0005F6  0800               	sublw	0
  2133  0005F8  0100               	movlb	0	; () banked
  2134  0005FA  6F84               	movwf	(?_printf+3)& (0+255),b
  2135  0005FC  0E80               	movlw	128
  2136  0005FE  0101               	movlb	1	; () banked
  2137  000600  2593               	addwf	_thresholdRange& (0+255),w,b
  2138  000602  0100               	movlb	0	; () banked
  2139  000604  6F85               	movwf	(?_printf+4)& (0+255),b
  2140  000606  0E00               	movlw	0
  2141  000608  0101               	movlb	1	; () banked
  2142  00060A  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2143  00060C  0100               	movlb	0	; () banked
  2144  00060E  6F86               	movwf	(?_printf+5)& (0+255),b
  2145  000610  ECE2  F00A         	call	_printf	;wreg free
  2146                           
  2147                           ;main.c: 167:                         printf("Threshold at minimum\r\n");
  2148  000614  0E73               	movlw	low STR_28
  2149  000616  0100               	movlb	0	; () banked
  2150  000618  6F81               	movwf	printf@fmt& (0+255),b
  2151  00061A  0EFF               	movlw	high STR_28
  2152  00061C  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2153  00061E  ECE2  F00A         	call	_printf	;wreg free
  2154  000622  EF65  F000         	goto	l2936
  2155  000626                     l3052:
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;main.c: 173:                     fillBuffer = 1;
  2159  000626  0E01               	movlw	1
  2160  000628  6E50               	movwf	_fillBuffer^0,c
  2161                           
  2162                           ;main.c: 174:                     break;
  2163  00062A  EF65  F000         	goto	l2936
  2164  00062E                     l3054:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;main.c: 212:                     printf("Unknown key %c\r\n", cmd);
  2168  00062E  0E9F               	movlw	low STR_29
  2169  000630  6F81               	movwf	printf@fmt& (0+255),b
  2170  000632  0EFF               	movlw	high STR_29
  2171  000634  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2172  000636  C186  F083         	movff	main@cmd,?_printf+2
  2173  00063A  6B84               	clrf	(?_printf+3)& (0+255),b
  2174  00063C  ECE2  F00A         	call	_printf	;wreg free
  2175                           
  2176                           ;main.c: 213:                     break;
  2177  000640  EF65  F000         	goto	l2936
  2178  000644                     l3058:
  2179                           
  2180                           ; BSR set to: 1
  2181  000644  5186               	movf	main@cmd& (0+255),w,b
  2182  000646  0100               	movlb	0	; () banked
  2183  000648  6F8D               	movwf	??_main& (0+255),b
  2184  00064A  6B8E               	clrf	(??_main+1)& (0+255),b
  2185                           
  2186                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2187                           ; Switch size 1, requested type "simple"
  2188                           ; Number of cases is 1, Range of values is 0 to 0
  2189                           ; switch strategies available:
  2190                           ; Name         Instructions Cycles
  2191                           ; simple_byte            4     3 (average)
  2192                           ;	Chosen strategy is simple_byte
  2193  00064C  518E               	movf	(??_main+1)& (0+255),w,b
  2194  00064E  0A00               	xorlw	0	; case 0
  2195  000650  B4D8               	btfsc	status,2,c
  2196  000652  EF2D  F003         	goto	l3116
  2197  000656  EF17  F003         	goto	l3054
  2198  00065A                     l3116:
  2199                           
  2200                           ; BSR set to: 0
  2201                           ; Switch size 1, requested type "simple"
  2202                           ; Number of cases is 7, Range of values is 63 to 122
  2203                           ; switch strategies available:
  2204                           ; Name         Instructions Cycles
  2205                           ; simple_byte           22    12 (average)
  2206                           ;	Chosen strategy is simple_byte
  2207  00065A  518D               	movf	??_main& (0+255),w,b
  2208  00065C  0A3F               	xorlw	63	; case 63
  2209  00065E  B4D8               	btfsc	status,2,c
  2210  000660  EF18  F002         	goto	l3012
  2211  000664  0A6B               	xorlw	107	; case 84
  2212  000666  B4D8               	btfsc	status,2,c
  2213  000668  EF9C  F002         	goto	l3040
  2214  00066C  0A0E               	xorlw	14	; case 90
  2215  00066E  B4D8               	btfsc	status,2,c
  2216  000670  EF5D  F002         	goto	l3016
  2217  000674  0A3C               	xorlw	60	; case 102
  2218  000676  B4D8               	btfsc	status,2,c
  2219  000678  EF13  F003         	goto	l3052
  2220  00067C  0A09               	xorlw	9	; case 111
  2221  00067E  B4D8               	btfsc	status,2,c
  2222  000680  EF55  F002         	goto	l3014
  2223  000684  0A1B               	xorlw	27	; case 116
  2224  000686  B4D8               	btfsc	status,2,c
  2225  000688  EFC0  F002         	goto	l3044
  2226  00068C  0A0E               	xorlw	14	; case 122
  2227  00068E  B4D8               	btfsc	status,2,c
  2228  000690  EF7E  F002         	goto	l3028
  2229  000694  EF17  F003         	goto	l3054
  2230  000698  EF27  F000         	goto	start
  2231  00069C                     __end_of_main:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function _printf *****************
  2235 ;; Defined at:
  2236 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  2239 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2240 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2241 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2242 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2243 ;;		 -> STR_13(29), STR_12(27), STR_11(15), STR_10(35), 
  2244 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2245 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2246 ;;		 -> STR_1(11), 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  ap              2   43[BANK0 ] PTR void [1]
  2249 ;;		 -> ?_printf(2), 
  2250 ;;  ret             2    0        int 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  2   33[BANK0 ] int 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2260 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;Total ram usage:       12 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:   12
  2267 ;; This function calls:
  2268 ;;		_vfprintf
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text1
  2275  0015C4                     __ptext1:
  2276                           	callstack 0
  2277  0015C4                     _printf:
  2278                           	callstack 18
  2279  0015C4  0E83               	movlw	low (?_printf+2)
  2280  0015C6  0100               	movlb	0	; () banked
  2281  0015C8  6F8B               	movwf	printf@ap& (0+255),b
  2282  0015CA  0E00               	movlw	high (?_printf+2)
  2283  0015CC  6F8C               	movwf	(printf@ap+1)& (0+255),b
  2284  0015CE                     
  2285                           ; BSR set to: 0
  2286  0015CE  0E00               	movlw	0
  2287  0015D0  6F7B               	movwf	vfprintf@fp& (0+255),b
  2288  0015D2  0E00               	movlw	0
  2289  0015D4  6F7C               	movwf	(vfprintf@fp+1)& (0+255),b
  2290  0015D6  C081  F07D         	movff	printf@fmt,vfprintf@fmt
  2291  0015DA  C082  F07E         	movff	printf@fmt+1,vfprintf@fmt+1
  2292  0015DE  0E8B               	movlw	low printf@ap
  2293  0015E0  6F7F               	movwf	vfprintf@ap& (0+255),b
  2294  0015E2  0E00               	movlw	high printf@ap
  2295  0015E4  6F80               	movwf	(vfprintf@ap+1)& (0+255),b
  2296  0015E6  ECA8  F009         	call	_vfprintf	;wreg free
  2297  0015EA  0012               	return		;funcret
  2298  0015EC                     __end_of_printf:
  2299                           	callstack 0
  2300                           
  2301 ;; *************** function _vfprintf *****************
  2302 ;; Defined at:
  2303 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2306 ;;		 -> NULL(0), 
  2307 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  2308 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2309 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2310 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2311 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2312 ;;		 -> STR_13(29), STR_12(27), STR_11(15), STR_10(35), 
  2313 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2314 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2315 ;;		 -> STR_1(11), 
  2316 ;;  ap              2   31[BANK0 ] PTR PTR void 
  2317 ;;		 -> printf@ap(2), 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  cfmt            2   66[COMRAM] PTR unsigned char 
  2320 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2321 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2322 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2323 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2324 ;;		 -> STR_13(29), STR_12(27), STR_11(15), STR_10(35), 
  2325 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2326 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2327 ;;		 -> STR_1(11), 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2   27[BANK0 ] int 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2337 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;Total ram usage:        8 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:   11
  2344 ;; This function calls:
  2345 ;;		_vfpfcnvrt
  2346 ;; This function is called by:
  2347 ;;		_printf
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text2
  2352  001350                     __ptext2:
  2353                           	callstack 0
  2354  001350                     _vfprintf:
  2355                           	callstack 18
  2356  001350                     
  2357                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2358  001350  C07D  F043         	movff	vfprintf@fmt,vfprintf@cfmt
  2359  001354  C07E  F044         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2360  001358                     
  2361                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2362  001358  0E00               	movlw	0
  2363  00135A  0100               	movlb	0	; () banked
  2364  00135C  6F9A               	movwf	(_nout+1)& (0+255),b
  2365  00135E  0E00               	movlw	0
  2366  001360  6F99               	movwf	_nout& (0+255),b
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2369  001362  EFC6  F009         	goto	l2906
  2370  001366                     l2904:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2374  001366  C07B  F03B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2375  00136A  C07C  F03C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2376  00136E  0E43               	movlw	low vfprintf@cfmt
  2377  001370  6E3D               	movwf	vfpfcnvrt@fmt^0,c
  2378  001372  0E00               	movlw	high vfprintf@cfmt
  2379  001374  6E3E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2380  001376  C07F  F03F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2381  00137A  C080  F040         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2382  00137E  ECBF  F004         	call	_vfpfcnvrt	;wreg free
  2383  001382  503B               	movf	?_vfpfcnvrt^0,w,c
  2384  001384  0100               	movlb	0	; () banked
  2385  001386  2799               	addwf	_nout& (0+255),f,b
  2386  001388  503C               	movf	(?_vfpfcnvrt+1)^0,w,c
  2387  00138A  239A               	addwfc	(_nout+1)& (0+255),f,b
  2388  00138C                     l2906:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2392  00138C  C043  FFF6         	movff	vfprintf@cfmt,tblptrl
  2393  001390  C044  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2394  001394                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2395  001394  6AF8               	clrf	tblptru,c
  2396  001396                     	endif
  2397  001396                     	if	0	;tblptru may be non-zero
  2398  001396                     	endif
  2399  001396  0008               	tblrd		*
  2400  001398  50F5               	movf	tablat,w,c
  2401  00139A  0900               	iorlw	0
  2402  00139C  A4D8               	btfss	status,2,c
  2403  00139E  EFD3  F009         	goto	u2261
  2404  0013A2  EFD5  F009         	goto	u2260
  2405  0013A6                     u2261:
  2406  0013A6  EFB3  F009         	goto	l2904
  2407  0013AA                     u2260:
  2408  0013AA                     
  2409                           ; BSR set to: 0
  2410                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2411  0013AA  C099  F07B         	movff	_nout,?_vfprintf
  2412  0013AE  C09A  F07C         	movff	_nout+1,?_vfprintf+1
  2413  0013B2                     
  2414                           ; BSR set to: 0
  2415  0013B2  0012               	return		;funcret
  2416  0013B4                     __end_of_vfprintf:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _vfpfcnvrt *****************
  2420 ;; Defined at:
  2421 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  fp              2   58[COMRAM] PTR struct _IO_FILE
  2424 ;;		 -> NULL(0), 
  2425 ;;  fmt             2   60[COMRAM] PTR PTR unsigned char 
  2426 ;;		 -> vfprintf@cfmt(2), 
  2427 ;;  ap              2   62[COMRAM] PTR PTR void 
  2428 ;;		 -> printf@ap(2), 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  ll              8   18[BANK0 ] long long 
  2431 ;;  llu             8    0        unsigned long long 
  2432 ;;  f               4    0        unsigned long long 
  2433 ;;  vp              3    0        PTR void 
  2434 ;;  ct              3    0        unsigned char [3]
  2435 ;;  cp              3    0        PTR unsigned char 
  2436 ;;  i               2    0        int 
  2437 ;;  done            2    0        int 
  2438 ;;  c               1   26[BANK0 ] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  2   58[COMRAM] int 
  2441 ;; Registers used:
  2442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2448 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;Total ram usage:       17 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:   10
  2455 ;; This function calls:
  2456 ;;		_ctoa
  2457 ;;		_dtoa
  2458 ;;		_fputc
  2459 ;; This function is called by:
  2460 ;;		_vfprintf
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text3
  2465  00097E                     __ptext3:
  2466                           	callstack 0
  2467  00097E                     _vfpfcnvrt:
  2468                           	callstack 18
  2469  00097E                     
  2470                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2471  00097E  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2472  000982  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2473  000986  CFDE FFF6          	movff	postinc2,tblptrl
  2474  00098A  CFDD FFF7          	movff	postdec2,tblptrh
  2475  00098E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2476  00098E  6AF8               	clrf	tblptru,c
  2477  000990                     	endif
  2478  000990                     	if	0	;tblptru may be non-zero
  2479  000990                     	endif
  2480  000990  0008               	tblrd		*
  2481  000992  50F5               	movf	tablat,w,c
  2482  000994  0A25               	xorlw	37
  2483  000996  A4D8               	btfss	status,2,c
  2484  000998  EFD0  F004         	goto	u2211
  2485  00099C  EFD2  F004         	goto	u2210
  2486  0009A0                     u2211:
  2487  0009A0  EFBC  F005         	goto	l2892
  2488  0009A4                     u2210:
  2489  0009A4                     
  2490                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2491  0009A4  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2492  0009A8  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2493  0009AC  2ADE               	incf	postinc2,f,c
  2494  0009AE  0E00               	movlw	0
  2495  0009B0  22DD               	addwfc	postdec2,f,c
  2496  0009B2                     
  2497                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2498  0009B2  0E00               	movlw	0
  2499  0009B4  6E46               	movwf	(_width+1)^0,c
  2500  0009B6  0E00               	movlw	0
  2501  0009B8  6E45               	movwf	_width^0,c
  2502  0009BA  C045  F049         	movff	_width,_flags
  2503  0009BE  C046  F04A         	movff	_width+1,_flags+1
  2504  0009C2                     
  2505                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2506  0009C2  6847               	setf	_prec^0,c
  2507  0009C4  6848               	setf	(_prec+1)^0,c
  2508  0009C6                     
  2509                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2510  0009C6  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2511  0009CA  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2512  0009CE  CFDE FFF6          	movff	postinc2,tblptrl
  2513  0009D2  CFDD FFF7          	movff	postdec2,tblptrh
  2514  0009D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2515  0009D6  6AF8               	clrf	tblptru,c
  2516  0009D8                     	endif
  2517  0009D8                     	if	0	;tblptru may be non-zero
  2518  0009D8                     	endif
  2519  0009D8  0008               	tblrd		*
  2520  0009DA  50F5               	movf	tablat,w,c
  2521  0009DC  0A63               	xorlw	99
  2522  0009DE  A4D8               	btfss	status,2,c
  2523  0009E0  EFF4  F004         	goto	u2221
  2524  0009E4  EFF6  F004         	goto	u2220
  2525  0009E8                     u2221:
  2526  0009E8  EF1E  F005         	goto	l2866
  2527  0009EC                     u2220:
  2528  0009EC                     
  2529                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2530  0009EC  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2531  0009F0  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2532  0009F4  2ADE               	incf	postinc2,f,c
  2533  0009F6  0E00               	movlw	0
  2534  0009F8  22DD               	addwfc	postdec2,f,c
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2537  0009FA  C03F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2538  0009FE  C040  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2539  000A02  CFDF F041          	movff	indf2,??_vfpfcnvrt
  2540  000A06  0E02               	movlw	2
  2541  000A08  26DE               	addwf	postinc2,f,c
  2542  000A0A  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  2543  000A0E  0E00               	movlw	0
  2544  000A10  22DD               	addwfc	postdec2,f,c
  2545  000A12  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2546  000A16  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2547  000A1A  50DF               	movf	indf2,w,c
  2548  000A1C  0100               	movlb	0	; () banked
  2549  000A1E  6F7A               	movwf	vfpfcnvrt@c& (0+255),b
  2550  000A20                     
  2551                           ; BSR set to: 0
  2552                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2553  000A20  C03B  F017         	movff	vfpfcnvrt@fp,ctoa@fp
  2554  000A24  C03C  F018         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2555  000A28  C07A  F019         	movff	vfpfcnvrt@c,ctoa@c
  2556  000A2C  EC58  F008         	call	_ctoa	;wreg free
  2557  000A30  C017  F03B         	movff	?_ctoa,?_vfpfcnvrt
  2558  000A34  C018  F03C         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2559  000A38  EFD8  F005         	goto	l1103
  2560  000A3C                     l2866:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2563  000A3C  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2564  000A40  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2565  000A44  CFDE FFF6          	movff	postinc2,tblptrl
  2566  000A48  CFDD FFF7          	movff	postdec2,tblptrh
  2567  000A4C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2568  000A4C  6AF8               	clrf	tblptru,c
  2569  000A4E                     	endif
  2570  000A4E                     	if	0	;tblptru may be non-zero
  2571  000A4E                     	endif
  2572  000A4E  0008               	tblrd		*
  2573  000A50  50F5               	movf	tablat,w,c
  2574  000A52  0A64               	xorlw	100
  2575  000A54  B4D8               	btfsc	status,2,c
  2576  000A56  EF2F  F005         	goto	u2231
  2577  000A5A  EF31  F005         	goto	u2230
  2578  000A5E                     u2231:
  2579  000A5E  EF44  F005         	goto	l2870
  2580  000A62                     u2230:
  2581  000A62  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2582  000A66  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2583  000A6A  CFDE FFF6          	movff	postinc2,tblptrl
  2584  000A6E  CFDD FFF7          	movff	postdec2,tblptrh
  2585  000A72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2586  000A72  6AF8               	clrf	tblptru,c
  2587  000A74                     	endif
  2588  000A74                     	if	0	;tblptru may be non-zero
  2589  000A74                     	endif
  2590  000A74  0008               	tblrd		*
  2591  000A76  50F5               	movf	tablat,w,c
  2592  000A78  0A69               	xorlw	105
  2593  000A7A  A4D8               	btfss	status,2,c
  2594  000A7C  EF42  F005         	goto	u2241
  2595  000A80  EF44  F005         	goto	u2240
  2596  000A84                     u2241:
  2597  000A84  EF85  F005         	goto	l2876
  2598  000A88                     u2240:
  2599  000A88                     l2870:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2602  000A88  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2603  000A8C  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2604  000A90  2ADE               	incf	postinc2,f,c
  2605  000A92  0E00               	movlw	0
  2606  000A94  22DD               	addwfc	postdec2,f,c
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2609  000A96  C03F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2610  000A9A  C040  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2611  000A9E  CFDF F041          	movff	indf2,??_vfpfcnvrt
  2612  000AA2  0E02               	movlw	2
  2613  000AA4  26DE               	addwf	postinc2,f,c
  2614  000AA6  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  2615  000AAA  0E00               	movlw	0
  2616  000AAC  22DD               	addwfc	postdec2,f,c
  2617  000AAE  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2618  000AB2  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2619  000AB6  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
  2620  000ABA  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
  2621  000ABE  0100               	movlb	0	; () banked
  2622  000AC0  0E00               	movlw	0
  2623  000AC2  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2624  000AC4  0EFF               	movlw	-1
  2625  000AC6  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2626  000AC8  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2627  000ACA  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2628  000ACC  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2629  000ACE  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2630  000AD0  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2631  000AD2                     
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2634  000AD2  C03B  F029         	movff	vfpfcnvrt@fp,dtoa@fp
  2635  000AD6  C03C  F02A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2636  000ADA  C072  F02B         	movff	vfpfcnvrt@ll,dtoa@d
  2637  000ADE  C073  F02C         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2638  000AE2  C074  F02D         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2639  000AE6  C075  F02E         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2640  000AEA  C076  F02F         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2641  000AEE  C077  F030         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2642  000AF2  C078  F031         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2643  000AF6  C079  F032         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2644  000AFA  EC4E  F003         	call	_dtoa	;wreg free
  2645  000AFE  C029  F03B         	movff	?_dtoa,?_vfpfcnvrt
  2646  000B02  C02A  F03C         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2647  000B06  EFD8  F005         	goto	l1103
  2648  000B0A                     l2876:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2651  000B0A  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2652  000B0E  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2653  000B12  CFDE FFF6          	movff	postinc2,tblptrl
  2654  000B16  CFDD FFF7          	movff	postdec2,tblptrh
  2655  000B1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2656  000B1A  6AF8               	clrf	tblptru,c
  2657  000B1C                     	endif
  2658  000B1C                     	if	0	;tblptru may be non-zero
  2659  000B1C                     	endif
  2660  000B1C  0008               	tblrd		*
  2661  000B1E  50F5               	movf	tablat,w,c
  2662  000B20  0A25               	xorlw	37
  2663  000B22  A4D8               	btfss	status,2,c
  2664  000B24  EF96  F005         	goto	u2251
  2665  000B28  EF98  F005         	goto	u2250
  2666  000B2C                     u2251:
  2667  000B2C  EFAF  F005         	goto	l2886
  2668  000B30                     u2250:
  2669  000B30                     
  2670                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2671  000B30  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2672  000B34  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2673  000B38  2ADE               	incf	postinc2,f,c
  2674  000B3A  0E00               	movlw	0
  2675  000B3C  22DD               	addwfc	postdec2,f,c
  2676  000B3E                     
  2677                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2678  000B3E  0E00               	movlw	0
  2679  000B40  6E0F               	movwf	(fputc@c+1)^0,c
  2680  000B42  0E25               	movlw	37
  2681  000B44  6E0E               	movwf	fputc@c^0,c
  2682  000B46  C03B  F010         	movff	vfpfcnvrt@fp,fputc@fp
  2683  000B4A  C03C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2684  000B4E  EC23  F009         	call	_fputc	;wreg free
  2685  000B52                     l2882:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2688  000B52  0E00               	movlw	0
  2689  000B54  6E3C               	movwf	(?_vfpfcnvrt+1)^0,c
  2690  000B56  0E01               	movlw	1
  2691  000B58  6E3B               	movwf	?_vfpfcnvrt^0,c
  2692  000B5A  EFD8  F005         	goto	l1103
  2693  000B5E                     l2886:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2696  000B5E  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2697  000B62  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2698  000B66  2ADE               	incf	postinc2,f,c
  2699  000B68  0E00               	movlw	0
  2700  000B6A  22DD               	addwfc	postdec2,f,c
  2701  000B6C                     
  2702                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2703  000B6C  0E00               	movlw	0
  2704  000B6E  6E3C               	movwf	(?_vfpfcnvrt+1)^0,c
  2705  000B70  0E00               	movlw	0
  2706  000B72  6E3B               	movwf	?_vfpfcnvrt^0,c
  2707  000B74  EFD8  F005         	goto	l1103
  2708  000B78                     l2892:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2711  000B78  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2712  000B7C  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2713  000B80  CFDE FFF6          	movff	postinc2,tblptrl
  2714  000B84  CFDD FFF7          	movff	postdec2,tblptrh
  2715  000B88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2716  000B88  6AF8               	clrf	tblptru,c
  2717  000B8A                     	endif
  2718  000B8A                     	if	0	;tblptru may be non-zero
  2719  000B8A                     	endif
  2720  000B8A  0008               	tblrd		*
  2721  000B8C  50F5               	movf	tablat,w,c
  2722  000B8E  6E0E               	movwf	fputc@c^0,c
  2723  000B90  6A0F               	clrf	(fputc@c+1)^0,c
  2724  000B92  C03B  F010         	movff	vfpfcnvrt@fp,fputc@fp
  2725  000B96  C03C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2726  000B9A  EC23  F009         	call	_fputc	;wreg free
  2727  000B9E                     
  2728                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2729  000B9E  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2730  000BA2  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2731  000BA6  2ADE               	incf	postinc2,f,c
  2732  000BA8  0E00               	movlw	0
  2733  000BAA  22DD               	addwfc	postdec2,f,c
  2734  000BAC  EFA9  F005         	goto	l2882
  2735  000BB0                     l1103:
  2736  000BB0  0012               	return		;funcret
  2737  000BB2                     __end_of_vfpfcnvrt:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _dtoa *****************
  2741 ;; Defined at:
  2742 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  2745 ;;		 -> NULL(0), 
  2746 ;;  d               8   42[COMRAM] long long 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  n               8    8[BANK0 ] long long 
  2749 ;;  i               2   16[BANK0 ] int 
  2750 ;;  s               2    6[BANK0 ] int 
  2751 ;;  w               2    4[BANK0 ] int 
  2752 ;;  p               2    2[BANK0 ] int 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  2   40[COMRAM] int 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2762 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Totals:        18      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;Total ram usage:       36 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    9
  2769 ;; This function calls:
  2770 ;;		___aodiv
  2771 ;;		___aomod
  2772 ;;		_abs
  2773 ;;		_pad
  2774 ;; This function is called by:
  2775 ;;		_vfpfcnvrt
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text4
  2780  00069C                     __ptext4:
  2781                           	callstack 0
  2782  00069C                     _dtoa:
  2783                           	callstack 18
  2784  00069C                     
  2785                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2786  00069C  C02B  F068         	movff	dtoa@d,dtoa@n
  2787  0006A0  C02C  F069         	movff	dtoa@d+1,dtoa@n+1
  2788  0006A4  C02D  F06A         	movff	dtoa@d+2,dtoa@n+2
  2789  0006A8  C02E  F06B         	movff	dtoa@d+3,dtoa@n+3
  2790  0006AC  C02F  F06C         	movff	dtoa@d+4,dtoa@n+4
  2791  0006B0  C030  F06D         	movff	dtoa@d+5,dtoa@n+5
  2792  0006B4  C031  F06E         	movff	dtoa@d+6,dtoa@n+6
  2793  0006B8  C032  F06F         	movff	dtoa@d+7,dtoa@n+7
  2794  0006BC                     
  2795                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2796  0006BC  0100               	movlb	0	; () banked
  2797  0006BE  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
  2798  0006C0  EF64  F003         	goto	u2061
  2799  0006C4  EF67  F003         	goto	u2060
  2800  0006C8                     u2061:
  2801  0006C8  0E01               	movlw	1
  2802  0006CA  EF68  F003         	goto	u2070
  2803  0006CE                     u2060:
  2804  0006CE  0E00               	movlw	0
  2805  0006D0                     u2070:
  2806  0006D0  6F66               	movwf	dtoa@s& (0+255),b
  2807  0006D2  6B67               	clrf	(dtoa@s+1)& (0+255),b
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2810  0006D4  5166               	movf	dtoa@s& (0+255),w,b
  2811  0006D6  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  2812  0006D8  B4D8               	btfsc	status,2,c
  2813  0006DA  EF71  F003         	goto	u2081
  2814  0006DE  EF73  F003         	goto	u2080
  2815  0006E2                     u2081:
  2816  0006E2  EF83  F003         	goto	l2794
  2817  0006E6                     u2080:
  2818  0006E6                     
  2819                           ; BSR set to: 0
  2820                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2821  0006E6  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
  2822  0006E8  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
  2823  0006EA  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
  2824  0006EC  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
  2825  0006EE  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
  2826  0006F0  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
  2827  0006F2  1F69               	comf	(dtoa@n+1)& (0+255),f,b
  2828  0006F4  6D68               	negf	dtoa@n& (0+255),b
  2829  0006F6  0E00               	movlw	0
  2830  0006F8  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
  2831  0006FA  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
  2832  0006FC  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
  2833  0006FE  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
  2834  000700  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
  2835  000702  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
  2836  000704  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
  2837  000706                     l2794:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2841  000706  BE48               	btfsc	(_prec+1)^0,7,c
  2842  000708  EF88  F003         	goto	u2091
  2843  00070C  EF8A  F003         	goto	u2090
  2844  000710                     u2091:
  2845  000710  EF8B  F003         	goto	l2798
  2846  000714                     u2090:
  2847  000714                     
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2850  000714  9249               	bcf	_flags^0,1,c
  2851  000716                     l2798:
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2855  000716  BE48               	btfsc	(_prec+1)^0,7,c
  2856  000718  EF98  F003         	goto	u2100
  2857  00071C  5048               	movf	(_prec+1)^0,w,c
  2858  00071E  E106               	bnz	u2101
  2859  000720  0447               	decf	_prec^0,w,c
  2860  000722  B0D8               	btfsc	status,0,c
  2861  000724  EF96  F003         	goto	u2101
  2862  000728  EF98  F003         	goto	u2100
  2863  00072C                     u2101:
  2864  00072C  EF9E  F003         	goto	l1078
  2865  000730                     u2100:
  2866  000730                     
  2867                           ; BSR set to: 0
  2868  000730  0E00               	movlw	0
  2869  000732  6F63               	movwf	(dtoa@p+1)& (0+255),b
  2870  000734  0E01               	movlw	1
  2871  000736  6F62               	movwf	dtoa@p& (0+255),b
  2872  000738  EFA2  F003         	goto	l1080
  2873  00073C                     l1078:
  2874                           
  2875                           ; BSR set to: 0
  2876  00073C  C047  F062         	movff	_prec,dtoa@p
  2877  000740  C048  F063         	movff	_prec+1,dtoa@p+1
  2878  000744                     l1080:
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2882  000744  C045  F064         	movff	_width,dtoa@w
  2883  000748  C046  F065         	movff	_width+1,dtoa@w+1
  2884  00074C                     
  2885                           ; BSR set to: 0
  2886                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2887  00074C  5166               	movf	dtoa@s& (0+255),w,b
  2888  00074E  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  2889  000750  A4D8               	btfss	status,2,c
  2890  000752  EFAD  F003         	goto	u2111
  2891  000756  EFAF  F003         	goto	u2110
  2892  00075A                     u2111:
  2893  00075A  EFB6  F003         	goto	l2806
  2894  00075E                     u2110:
  2895  00075E                     
  2896                           ; BSR set to: 0
  2897  00075E  A449               	btfss	_flags^0,2,c
  2898  000760  EFB4  F003         	goto	u2121
  2899  000764  EFB6  F003         	goto	u2120
  2900  000768                     u2121:
  2901  000768  EFB9  F003         	goto	l2808
  2902  00076C                     u2120:
  2903  00076C                     l2806:
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  2907  00076C  0764               	decf	dtoa@w& (0+255),f,b
  2908  00076E  A0D8               	btfss	status,0,c
  2909  000770  0765               	decf	(dtoa@w+1)& (0+255),f,b
  2910  000772                     l2808:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2914  000772  0E00               	movlw	0
  2915  000774  6F71               	movwf	(dtoa@i+1)& (0+255),b
  2916  000776  0E1F               	movlw	31
  2917  000778  6F70               	movwf	dtoa@i& (0+255),b
  2918  00077A                     
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2921  00077A  0E00               	movlw	0
  2922  00077C  6FC5               	movwf	(_dbuf+31)& (0+255),b
  2923                           
  2924                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2925  00077E  EF3E  F004         	goto	l2822
  2926  000782                     l2812:
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  2930  000782  0770               	decf	dtoa@i& (0+255),f,b
  2931  000784  A0D8               	btfss	status,0,c
  2932  000786  0771               	decf	(dtoa@i+1)& (0+255),f,b
  2933  000788                     
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2936  000788  0EA6               	movlw	low _dbuf
  2937  00078A  2570               	addwf	dtoa@i& (0+255),w,b
  2938  00078C  6ED9               	movwf	fsr2l,c
  2939  00078E  0E00               	movlw	high _dbuf
  2940  000790  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  2941  000792  6EDA               	movwf	fsr2h,c
  2942  000794  C068  F00C         	movff	dtoa@n,___aomod@dividend
  2943  000798  C069  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  2944  00079C  C06A  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  2945  0007A0  C06B  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  2946  0007A4  C06C  F010         	movff	dtoa@n+4,___aomod@dividend+4
  2947  0007A8  C06D  F011         	movff	dtoa@n+5,___aomod@dividend+5
  2948  0007AC  C06E  F012         	movff	dtoa@n+6,___aomod@dividend+6
  2949  0007B0  C06F  F013         	movff	dtoa@n+7,___aomod@dividend+7
  2950  0007B4  0E0A               	movlw	10
  2951  0007B6  6E14               	movwf	___aomod@divisor^0,c
  2952  0007B8  0E00               	movlw	0
  2953  0007BA  6E15               	movwf	(___aomod@divisor+1)^0,c
  2954  0007BC  0E00               	movlw	0
  2955  0007BE  6E16               	movwf	(___aomod@divisor+2)^0,c
  2956  0007C0  0E00               	movlw	0
  2957  0007C2  6E17               	movwf	(___aomod@divisor+3)^0,c
  2958  0007C4  0E00               	movlw	0
  2959  0007C6  6E18               	movwf	(___aomod@divisor+4)^0,c
  2960  0007C8  0E00               	movlw	0
  2961  0007CA  6E19               	movwf	(___aomod@divisor+5)^0,c
  2962  0007CC  0E00               	movlw	0
  2963  0007CE  6E1A               	movwf	(___aomod@divisor+6)^0,c
  2964  0007D0  0E00               	movlw	0
  2965  0007D2  6E1B               	movwf	(___aomod@divisor+7)^0,c
  2966  0007D4  EC9D  F006         	call	___aomod	;wreg free
  2967  0007D8  C00C  F033         	movff	?___aomod,??_dtoa
  2968  0007DC  C00D  F034         	movff	?___aomod+1,??_dtoa+1
  2969  0007E0  C00E  F035         	movff	?___aomod+2,??_dtoa+2
  2970  0007E4  C00F  F036         	movff	?___aomod+3,??_dtoa+3
  2971  0007E8  C010  F037         	movff	?___aomod+4,??_dtoa+4
  2972  0007EC  C011  F038         	movff	?___aomod+5,??_dtoa+5
  2973  0007F0  C012  F039         	movff	?___aomod+6,??_dtoa+6
  2974  0007F4  C013  F03A         	movff	?___aomod+7,??_dtoa+7
  2975  0007F8  C033  F01E         	movff	??_dtoa,abs@a
  2976  0007FC  C035  F01F         	movff	??_dtoa+2,abs@a+1
  2977  000800  EC25  F00A         	call	_abs	;wreg free
  2978  000804  501E               	movf	?_abs^0,w,c
  2979  000806  0F30               	addlw	48
  2980  000808  6EDF               	movwf	indf2,c
  2981  00080A                     
  2982                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2983  00080A  0100               	movlb	0	; () banked
  2984  00080C  0762               	decf	dtoa@p& (0+255),f,b
  2985  00080E  A0D8               	btfss	status,0,c
  2986  000810  0763               	decf	(dtoa@p+1)& (0+255),f,b
  2987  000812                     
  2988                           ; BSR set to: 0
  2989                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2990  000812  0764               	decf	dtoa@w& (0+255),f,b
  2991  000814  A0D8               	btfss	status,0,c
  2992  000816  0765               	decf	(dtoa@w+1)& (0+255),f,b
  2993  000818                     
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2996  000818  C068  F00C         	movff	dtoa@n,___aodiv@dividend
  2997  00081C  C069  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  2998  000820  C06A  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  2999  000824  C06B  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  3000  000828  C06C  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  3001  00082C  C06D  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  3002  000830  C06E  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  3003  000834  C06F  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  3004  000838  0E0A               	movlw	10
  3005  00083A  6E14               	movwf	___aodiv@divisor^0,c
  3006  00083C  0E00               	movlw	0
  3007  00083E  6E15               	movwf	(___aodiv@divisor+1)^0,c
  3008  000840  0E00               	movlw	0
  3009  000842  6E16               	movwf	(___aodiv@divisor+2)^0,c
  3010  000844  0E00               	movlw	0
  3011  000846  6E17               	movwf	(___aodiv@divisor+3)^0,c
  3012  000848  0E00               	movlw	0
  3013  00084A  6E18               	movwf	(___aodiv@divisor+4)^0,c
  3014  00084C  0E00               	movlw	0
  3015  00084E  6E19               	movwf	(___aodiv@divisor+5)^0,c
  3016  000850  0E00               	movlw	0
  3017  000852  6E1A               	movwf	(___aodiv@divisor+6)^0,c
  3018  000854  0E00               	movlw	0
  3019  000856  6E1B               	movwf	(___aodiv@divisor+7)^0,c
  3020  000858  ECD9  F005         	call	___aodiv	;wreg free
  3021  00085C  C00C  F068         	movff	?___aodiv,dtoa@n
  3022  000860  C00D  F069         	movff	?___aodiv+1,dtoa@n+1
  3023  000864  C00E  F06A         	movff	?___aodiv+2,dtoa@n+2
  3024  000868  C00F  F06B         	movff	?___aodiv+3,dtoa@n+3
  3025  00086C  C010  F06C         	movff	?___aodiv+4,dtoa@n+4
  3026  000870  C011  F06D         	movff	?___aodiv+5,dtoa@n+5
  3027  000874  C012  F06E         	movff	?___aodiv+6,dtoa@n+6
  3028  000878  C013  F06F         	movff	?___aodiv+7,dtoa@n+7
  3029  00087C                     l2822:
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3032  00087C  0100               	movlb	0	; () banked
  3033  00087E  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
  3034  000880  EF4A  F004         	goto	u2131
  3035  000884  5171               	movf	(dtoa@i+1)& (0+255),w,b
  3036  000886  E108               	bnz	u2130
  3037  000888  0570               	decf	dtoa@i& (0+255),w,b
  3038  00088A  A0D8               	btfss	status,0,c
  3039  00088C  EF4A  F004         	goto	u2131
  3040  000890  EF4C  F004         	goto	u2130
  3041  000894                     u2131:
  3042  000894  EF7C  F004         	goto	l2832
  3043  000898                     u2130:
  3044  000898                     
  3045                           ; BSR set to: 0
  3046  000898  5168               	movf	dtoa@n& (0+255),w,b
  3047  00089A  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
  3048  00089C  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
  3049  00089E  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
  3050  0008A0  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
  3051  0008A2  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
  3052  0008A4  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
  3053  0008A6  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
  3054  0008A8  A4D8               	btfss	status,2,c
  3055  0008AA  EF59  F004         	goto	u2141
  3056  0008AE  EF5B  F004         	goto	u2140
  3057  0008B2                     u2141:
  3058  0008B2  EFC1  F003         	goto	l2812
  3059  0008B6                     u2140:
  3060  0008B6                     
  3061                           ; BSR set to: 0
  3062  0008B6  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  3063  0008B8  EF68  F004         	goto	u2150
  3064  0008BC  5163               	movf	(dtoa@p+1)& (0+255),w,b
  3065  0008BE  E106               	bnz	u2151
  3066  0008C0  0562               	decf	dtoa@p& (0+255),w,b
  3067  0008C2  B0D8               	btfsc	status,0,c
  3068  0008C4  EF66  F004         	goto	u2151
  3069  0008C8  EF68  F004         	goto	u2150
  3070  0008CC                     u2151:
  3071  0008CC  EFC1  F003         	goto	l2812
  3072  0008D0                     u2150:
  3073  0008D0                     
  3074                           ; BSR set to: 0
  3075  0008D0  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  3076  0008D2  EF73  F004         	goto	u2161
  3077  0008D6  5165               	movf	(dtoa@w+1)& (0+255),w,b
  3078  0008D8  E108               	bnz	u2160
  3079  0008DA  0564               	decf	dtoa@w& (0+255),w,b
  3080  0008DC  A0D8               	btfss	status,0,c
  3081  0008DE  EF73  F004         	goto	u2161
  3082  0008E2  EF75  F004         	goto	u2160
  3083  0008E6                     u2161:
  3084  0008E6  EF7C  F004         	goto	l2832
  3085  0008EA                     u2160:
  3086  0008EA                     
  3087                           ; BSR set to: 0
  3088  0008EA  B249               	btfsc	_flags^0,1,c
  3089  0008EC  EF7A  F004         	goto	u2171
  3090  0008F0  EF7C  F004         	goto	u2170
  3091  0008F4                     u2171:
  3092  0008F4  EFC1  F003         	goto	l2812
  3093  0008F8                     u2170:
  3094  0008F8                     l2832:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3098  0008F8  5166               	movf	dtoa@s& (0+255),w,b
  3099  0008FA  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  3100  0008FC  A4D8               	btfss	status,2,c
  3101  0008FE  EF83  F004         	goto	u2181
  3102  000902  EF85  F004         	goto	u2180
  3103  000906                     u2181:
  3104  000906  EF8C  F004         	goto	l2836
  3105  00090A                     u2180:
  3106  00090A                     
  3107                           ; BSR set to: 0
  3108  00090A  A449               	btfss	_flags^0,2,c
  3109  00090C  EF8A  F004         	goto	u2191
  3110  000910  EF8C  F004         	goto	u2190
  3111  000914                     u2191:
  3112  000914  EFAA  F004         	goto	l2846
  3113  000918                     u2190:
  3114  000918                     l2836:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  3118  000918  0770               	decf	dtoa@i& (0+255),f,b
  3119  00091A  A0D8               	btfss	status,0,c
  3120  00091C  0771               	decf	(dtoa@i+1)& (0+255),f,b
  3121  00091E                     
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3124  00091E  5166               	movf	dtoa@s& (0+255),w,b
  3125  000920  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  3126  000922  A4D8               	btfss	status,2,c
  3127  000924  EF96  F004         	goto	u2201
  3128  000928  EF98  F004         	goto	u2200
  3129  00092C                     u2201:
  3130  00092C  EF9E  F004         	goto	l2842
  3131  000930                     u2200:
  3132  000930                     
  3133                           ; BSR set to: 0
  3134  000930  0E00               	movlw	0
  3135  000932  6F61               	movwf	(_dtoa$1401+1)& (0+255),b
  3136  000934  0E2B               	movlw	43
  3137  000936  6F60               	movwf	_dtoa$1401& (0+255),b
  3138  000938  EFA2  F004         	goto	l2844
  3139  00093C                     l2842:
  3140                           
  3141                           ; BSR set to: 0
  3142  00093C  0E00               	movlw	0
  3143  00093E  6F61               	movwf	(_dtoa$1401+1)& (0+255),b
  3144  000940  0E2D               	movlw	45
  3145  000942  6F60               	movwf	_dtoa$1401& (0+255),b
  3146  000944                     l2844:
  3147                           
  3148                           ; BSR set to: 0
  3149  000944  0EA6               	movlw	low _dbuf
  3150  000946  2570               	addwf	dtoa@i& (0+255),w,b
  3151  000948  6ED9               	movwf	fsr2l,c
  3152  00094A  0E00               	movlw	high _dbuf
  3153  00094C  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  3154  00094E  6EDA               	movwf	fsr2h,c
  3155  000950  C060  FFDF         	movff	_dtoa$1401,indf2
  3156  000954                     l2846:
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3160  000954  C029  F01E         	movff	dtoa@fp,pad@fp
  3161  000958  C02A  F01F         	movff	dtoa@fp+1,pad@fp+1
  3162  00095C  0EA6               	movlw	low _dbuf
  3163  00095E  2570               	addwf	dtoa@i& (0+255),w,b
  3164  000960  6E20               	movwf	pad@buf^0,c
  3165  000962  0E00               	movlw	high _dbuf
  3166  000964  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  3167  000966  6E21               	movwf	(pad@buf+1)^0,c
  3168  000968  C064  F022         	movff	dtoa@w,pad@p
  3169  00096C  C065  F023         	movff	dtoa@w+1,pad@p+1
  3170  000970  ECC2  F008         	call	_pad	;wreg free
  3171  000974  C01E  F029         	movff	?_pad,?_dtoa
  3172  000978  C01F  F02A         	movff	?_pad+1,?_dtoa+1
  3173  00097C  0012               	return		;funcret
  3174  00097E                     __end_of_dtoa:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _pad *****************
  3178 ;; Defined at:
  3179 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3182 ;;		 -> NULL(0), 
  3183 ;;  buf             2   31[COMRAM] PTR unsigned char 
  3184 ;;		 -> dbuf(32), 
  3185 ;;  p               2   33[COMRAM] int 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  w               2   38[COMRAM] int 
  3188 ;;  i               2   36[COMRAM] int 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  2   29[COMRAM] int 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3198 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;Total ram usage:       11 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    8
  3205 ;; This function calls:
  3206 ;;		_fputc
  3207 ;;		_fputs
  3208 ;;		_strlen
  3209 ;; This function is called by:
  3210 ;;		_dtoa
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text5
  3215  001184                     __ptext5:
  3216                           	callstack 0
  3217  001184                     _pad:
  3218                           	callstack 18
  3219  001184                     
  3220                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3221  001184  A049               	btfss	_flags^0,0,c
  3222  001186  EFC7  F008         	goto	u1961
  3223  00118A  EFC9  F008         	goto	u1960
  3224  00118E                     u1961:
  3225  00118E  EFD3  F008         	goto	l2738
  3226  001192                     u1960:
  3227  001192                     
  3228                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3229  001192  C020  F017         	movff	pad@buf,fputs@s
  3230  001196  C021  F018         	movff	pad@buf+1,fputs@s+1
  3231  00119A  C01E  F019         	movff	pad@fp,fputs@fp
  3232  00119E  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  3233  0011A2  EC03  F00A         	call	_fputs	;wreg free
  3234  0011A6                     l2738:
  3235                           
  3236                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3237  0011A6  BE23               	btfsc	(pad@p+1)^0,7,c
  3238  0011A8  EFD8  F008         	goto	u1971
  3239  0011AC  EFDA  F008         	goto	u1970
  3240  0011B0                     u1971:
  3241  0011B0  EFE0  F008         	goto	l2742
  3242  0011B4                     u1970:
  3243  0011B4  C022  F027         	movff	pad@p,pad@w
  3244  0011B8  C023  F028         	movff	pad@p+1,pad@w+1
  3245  0011BC  EFE4  F008         	goto	l1051
  3246  0011C0                     l2742:
  3247  0011C0  0E00               	movlw	0
  3248  0011C2  6E28               	movwf	(pad@w+1)^0,c
  3249  0011C4  0E00               	movlw	0
  3250  0011C6  6E27               	movwf	pad@w^0,c
  3251  0011C8                     l1051:
  3252                           
  3253                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3254  0011C8  0E00               	movlw	0
  3255  0011CA  6E26               	movwf	(pad@i+1)^0,c
  3256  0011CC  0E00               	movlw	0
  3257  0011CE  6E25               	movwf	pad@i^0,c
  3258                           
  3259                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3260  0011D0  EFF6  F008         	goto	l2748
  3261  0011D4                     l2744:
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3264  0011D4  0E00               	movlw	0
  3265  0011D6  6E0F               	movwf	(fputc@c+1)^0,c
  3266  0011D8  0E20               	movlw	32
  3267  0011DA  6E0E               	movwf	fputc@c^0,c
  3268  0011DC  C01E  F010         	movff	pad@fp,fputc@fp
  3269  0011E0  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  3270  0011E4  EC23  F009         	call	_fputc	;wreg free
  3271  0011E8                     
  3272                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3273  0011E8  4A25               	infsnz	pad@i^0,f,c
  3274  0011EA  2A26               	incf	(pad@i+1)^0,f,c
  3275  0011EC                     l2748:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3278  0011EC  5027               	movf	pad@w^0,w,c
  3279  0011EE  5C25               	subwf	pad@i^0,w,c
  3280  0011F0  5026               	movf	(pad@i+1)^0,w,c
  3281  0011F2  0A80               	xorlw	128
  3282  0011F4  6E24               	movwf	??_pad^0,c
  3283  0011F6  5028               	movf	(pad@w+1)^0,w,c
  3284  0011F8  0A80               	xorlw	128
  3285  0011FA  5824               	subwfb	??_pad^0,w,c
  3286  0011FC  A0D8               	btfss	status,0,c
  3287  0011FE  EF03  F009         	goto	u1981
  3288  001202  EF05  F009         	goto	u1980
  3289  001206                     u1981:
  3290  001206  EFEA  F008         	goto	l2744
  3291  00120A                     u1980:
  3292  00120A                     
  3293                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3294  00120A  B049               	btfsc	_flags^0,0,c
  3295  00120C  EF0A  F009         	goto	u1991
  3296  001210  EF0C  F009         	goto	u1990
  3297  001214                     u1991:
  3298  001214  EF16  F009         	goto	l2752
  3299  001218                     u1990:
  3300  001218                     
  3301                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3302  001218  C020  F017         	movff	pad@buf,fputs@s
  3303  00121C  C021  F018         	movff	pad@buf+1,fputs@s+1
  3304  001220  C01E  F019         	movff	pad@fp,fputs@fp
  3305  001224  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  3306  001228  EC03  F00A         	call	_fputs	;wreg free
  3307  00122C                     l2752:
  3308                           
  3309                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3310  00122C  C020  F00C         	movff	pad@buf,strlen@s
  3311  001230  C021  F00D         	movff	pad@buf+1,strlen@s+1
  3312  001234  EC81  F00A         	call	_strlen	;wreg free
  3313  001238  5027               	movf	pad@w^0,w,c
  3314  00123A  240C               	addwf	?_strlen^0,w,c
  3315  00123C  6E1E               	movwf	?_pad^0,c
  3316  00123E  5028               	movf	(pad@w+1)^0,w,c
  3317  001240  200D               	addwfc	(?_strlen+1)^0,w,c
  3318  001242  6E1F               	movwf	(?_pad+1)^0,c
  3319  001244  0012               	return		;funcret
  3320  001246                     __end_of_pad:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _strlen *****************
  3324 ;; Defined at:
  3325 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3328 ;;		 -> dbuf(32), 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  a               2   13[COMRAM] PTR const unsigned char 
  3331 ;;		 -> dbuf(32), 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  2   11[COMRAM] unsigned int 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;Total ram usage:        4 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    4
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_pad
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text6
  3356  001502                     __ptext6:
  3357                           	callstack 0
  3358  001502                     _strlen:
  3359                           	callstack 21
  3360  001502  C00C  F00E         	movff	strlen@s,strlen@a
  3361  001506  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  3362  00150A  EF89  F00A         	goto	l2648
  3363  00150E                     l2646:
  3364  00150E  4A0C               	infsnz	strlen@s^0,f,c
  3365  001510  2A0D               	incf	(strlen@s+1)^0,f,c
  3366  001512                     l2648:
  3367  001512  C00C  FFD9         	movff	strlen@s,fsr2l
  3368  001516  C00D  FFDA         	movff	strlen@s+1,fsr2h
  3369  00151A  50DF               	movf	indf2,w,c
  3370  00151C  A4D8               	btfss	status,2,c
  3371  00151E  EF93  F00A         	goto	u1821
  3372  001522  EF95  F00A         	goto	u1820
  3373  001526                     u1821:
  3374  001526  EF87  F00A         	goto	l2646
  3375  00152A                     u1820:
  3376  00152A  500E               	movf	strlen@a^0,w,c
  3377  00152C  5C0C               	subwf	strlen@s^0,w,c
  3378  00152E  6E0C               	movwf	?_strlen^0,c
  3379  001530  500F               	movf	(strlen@a+1)^0,w,c
  3380  001532  580D               	subwfb	(strlen@s+1)^0,w,c
  3381  001534  6E0D               	movwf	(?_strlen+1)^0,c
  3382  001536  0012               	return		;funcret
  3383  001538                     __end_of_strlen:
  3384                           	callstack 0
  3385                           
  3386 ;; *************** function _fputs *****************
  3387 ;; Defined at:
  3388 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  s               2   22[COMRAM] PTR const unsigned char 
  3391 ;;		 -> dbuf(32), 
  3392 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  3393 ;;		 -> NULL(0), 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  i               2   27[COMRAM] int 
  3396 ;;  c               1   26[COMRAM] unsigned char 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  2   22[COMRAM] int 
  3399 ;; Registers used:
  3400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;Total ram usage:        7 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    7
  3413 ;; This function calls:
  3414 ;;		_fputc
  3415 ;; This function is called by:
  3416 ;;		_pad
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text7
  3421  001406                     __ptext7:
  3422                           	callstack 0
  3423  001406                     _fputs:
  3424                           	callstack 18
  3425  001406  0E00               	movlw	0
  3426  001408  6E1D               	movwf	(fputs@i+1)^0,c
  3427  00140A  0E00               	movlw	0
  3428  00140C  6E1C               	movwf	fputs@i^0,c
  3429  00140E  EF14  F00A         	goto	l2642
  3430  001412                     l2638:
  3431  001412  C01B  F00E         	movff	fputs@c,fputc@c
  3432  001416  6A0F               	clrf	(fputc@c+1)^0,c
  3433  001418  C019  F010         	movff	fputs@fp,fputc@fp
  3434  00141C  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  3435  001420  EC23  F009         	call	_fputc	;wreg free
  3436  001424  4A1C               	infsnz	fputs@i^0,f,c
  3437  001426  2A1D               	incf	(fputs@i+1)^0,f,c
  3438  001428                     l2642:
  3439  001428  501C               	movf	fputs@i^0,w,c
  3440  00142A  2417               	addwf	fputs@s^0,w,c
  3441  00142C  6ED9               	movwf	fsr2l,c
  3442  00142E  501D               	movf	(fputs@i+1)^0,w,c
  3443  001430  2018               	addwfc	(fputs@s+1)^0,w,c
  3444  001432  6EDA               	movwf	fsr2h,c
  3445  001434  50DF               	movf	indf2,w,c
  3446  001436  6E1B               	movwf	fputs@c^0,c
  3447  001438  501B               	movf	fputs@c^0,w,c
  3448  00143A  A4D8               	btfss	status,2,c
  3449  00143C  EF22  F00A         	goto	u1811
  3450  001440  EF24  F00A         	goto	u1810
  3451  001444                     u1811:
  3452  001444  EF09  F00A         	goto	l2638
  3453  001448                     u1810:
  3454  001448  0012               	return		;funcret
  3455  00144A                     __end_of_fputs:
  3456                           	callstack 0
  3457                           
  3458 ;; *************** function _abs *****************
  3459 ;; Defined at:
  3460 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  a               2   29[COMRAM] int 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  2   29[COMRAM] int 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;Total ram usage:        4 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    4
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_dtoa
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text8
  3489  00144A                     __ptext8:
  3490                           	callstack 0
  3491  00144A                     _abs:
  3492                           	callstack 22
  3493  00144A  BE1F               	btfsc	(abs@a+1)^0,7,c
  3494  00144C  EF32  F00A         	goto	u2000
  3495  001450  501F               	movf	(abs@a+1)^0,w,c
  3496  001452  E106               	bnz	u2001
  3497  001454  041E               	decf	abs@a^0,w,c
  3498  001456  B0D8               	btfsc	status,0,c
  3499  001458  EF30  F00A         	goto	u2001
  3500  00145C  EF32  F00A         	goto	u2000
  3501  001460                     u2001:
  3502  001460  EF40  F00A         	goto	l1117
  3503  001464                     u2000:
  3504  001464  C01E  F020         	movff	abs@a,??_abs
  3505  001468  C01F  F021         	movff	abs@a+1,??_abs+1
  3506  00146C  1E20               	comf	??_abs^0,f,c
  3507  00146E  1E21               	comf	(??_abs+1)^0,f,c
  3508  001470  4A20               	infsnz	??_abs^0,f,c
  3509  001472  2A21               	incf	(??_abs+1)^0,f,c
  3510  001474  C020  F01E         	movff	??_abs,?_abs
  3511  001478  C021  F01F         	movff	??_abs+1,?_abs+1
  3512  00147C  EF44  F00A         	goto	l1120
  3513  001480                     l1117:
  3514  001480  C01E  F01E         	movff	abs@a,?_abs
  3515  001484  C01F  F01F         	movff	abs@a+1,?_abs+1
  3516  001488                     l1120:
  3517  001488  0012               	return		;funcret
  3518  00148A                     __end_of_abs:
  3519                           	callstack 0
  3520                           
  3521 ;; *************** function ___aomod *****************
  3522 ;; Defined at:
  3523 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  dividend        8   11[COMRAM] long long 
  3526 ;;  divisor         8   19[COMRAM] long long 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  sign            1   28[COMRAM] unsigned char 
  3529 ;;  counter         1   27[COMRAM] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  8   11[COMRAM] long long 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3539 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;Total ram usage:       18 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    4
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_dtoa
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text9
  3554  000D3A                     __ptext9:
  3555                           	callstack 0
  3556  000D3A                     ___aomod:
  3557                           	callstack 22
  3558  000D3A  0E00               	movlw	0
  3559  000D3C  6E1D               	movwf	___aomod@sign^0,c
  3560  000D3E  BE13               	btfsc	(___aomod@dividend+7)^0,7,c
  3561  000D40  EFA6  F006         	goto	u1900
  3562  000D44  EFA4  F006         	goto	u1901
  3563  000D48                     u1901:
  3564  000D48  EFB8  F006         	goto	l2706
  3565  000D4C                     u1900:
  3566  000D4C  1E13               	comf	(___aomod@dividend+7)^0,f,c
  3567  000D4E  1E12               	comf	(___aomod@dividend+6)^0,f,c
  3568  000D50  1E11               	comf	(___aomod@dividend+5)^0,f,c
  3569  000D52  1E10               	comf	(___aomod@dividend+4)^0,f,c
  3570  000D54  1E0F               	comf	(___aomod@dividend+3)^0,f,c
  3571  000D56  1E0E               	comf	(___aomod@dividend+2)^0,f,c
  3572  000D58  1E0D               	comf	(___aomod@dividend+1)^0,f,c
  3573  000D5A  6C0C               	negf	___aomod@dividend^0,c
  3574  000D5C  0E00               	movlw	0
  3575  000D5E  220D               	addwfc	(___aomod@dividend+1)^0,f,c
  3576  000D60  220E               	addwfc	(___aomod@dividend+2)^0,f,c
  3577  000D62  220F               	addwfc	(___aomod@dividend+3)^0,f,c
  3578  000D64  2210               	addwfc	(___aomod@dividend+4)^0,f,c
  3579  000D66  2211               	addwfc	(___aomod@dividend+5)^0,f,c
  3580  000D68  2212               	addwfc	(___aomod@dividend+6)^0,f,c
  3581  000D6A  2213               	addwfc	(___aomod@dividend+7)^0,f,c
  3582  000D6C  0E01               	movlw	1
  3583  000D6E  6E1D               	movwf	___aomod@sign^0,c
  3584  000D70                     l2706:
  3585  000D70  BE1B               	btfsc	(___aomod@divisor+7)^0,7,c
  3586  000D72  EFBF  F006         	goto	u1910
  3587  000D76  EFBD  F006         	goto	u1911
  3588  000D7A                     u1911:
  3589  000D7A  EFCF  F006         	goto	l2710
  3590  000D7E                     u1910:
  3591  000D7E  1E1B               	comf	(___aomod@divisor+7)^0,f,c
  3592  000D80  1E1A               	comf	(___aomod@divisor+6)^0,f,c
  3593  000D82  1E19               	comf	(___aomod@divisor+5)^0,f,c
  3594  000D84  1E18               	comf	(___aomod@divisor+4)^0,f,c
  3595  000D86  1E17               	comf	(___aomod@divisor+3)^0,f,c
  3596  000D88  1E16               	comf	(___aomod@divisor+2)^0,f,c
  3597  000D8A  1E15               	comf	(___aomod@divisor+1)^0,f,c
  3598  000D8C  6C14               	negf	___aomod@divisor^0,c
  3599  000D8E  0E00               	movlw	0
  3600  000D90  2215               	addwfc	(___aomod@divisor+1)^0,f,c
  3601  000D92  2216               	addwfc	(___aomod@divisor+2)^0,f,c
  3602  000D94  2217               	addwfc	(___aomod@divisor+3)^0,f,c
  3603  000D96  2218               	addwfc	(___aomod@divisor+4)^0,f,c
  3604  000D98  2219               	addwfc	(___aomod@divisor+5)^0,f,c
  3605  000D9A  221A               	addwfc	(___aomod@divisor+6)^0,f,c
  3606  000D9C  221B               	addwfc	(___aomod@divisor+7)^0,f,c
  3607  000D9E                     l2710:
  3608  000D9E  5014               	movf	___aomod@divisor^0,w,c
  3609  000DA0  1015               	iorwf	(___aomod@divisor+1)^0,w,c
  3610  000DA2  1016               	iorwf	(___aomod@divisor+2)^0,w,c
  3611  000DA4  1017               	iorwf	(___aomod@divisor+3)^0,w,c
  3612  000DA6  1018               	iorwf	(___aomod@divisor+4)^0,w,c
  3613  000DA8  1019               	iorwf	(___aomod@divisor+5)^0,w,c
  3614  000DAA  101A               	iorwf	(___aomod@divisor+6)^0,w,c
  3615  000DAC  101B               	iorwf	(___aomod@divisor+7)^0,w,c
  3616  000DAE  B4D8               	btfsc	status,2,c
  3617  000DB0  EFDC  F006         	goto	u1921
  3618  000DB4  EFDE  F006         	goto	u1920
  3619  000DB8                     u1921:
  3620  000DB8  EF26  F007         	goto	l2726
  3621  000DBC                     u1920:
  3622  000DBC  0E01               	movlw	1
  3623  000DBE  6E1C               	movwf	___aomod@counter^0,c
  3624  000DC0  EFEC  F006         	goto	l2716
  3625  000DC4                     l2714:
  3626  000DC4  90D8               	bcf	status,0,c
  3627  000DC6  3614               	rlcf	___aomod@divisor^0,f,c
  3628  000DC8  3615               	rlcf	(___aomod@divisor+1)^0,f,c
  3629  000DCA  3616               	rlcf	(___aomod@divisor+2)^0,f,c
  3630  000DCC  3617               	rlcf	(___aomod@divisor+3)^0,f,c
  3631  000DCE  3618               	rlcf	(___aomod@divisor+4)^0,f,c
  3632  000DD0  3619               	rlcf	(___aomod@divisor+5)^0,f,c
  3633  000DD2  361A               	rlcf	(___aomod@divisor+6)^0,f,c
  3634  000DD4  361B               	rlcf	(___aomod@divisor+7)^0,f,c
  3635  000DD6  2A1C               	incf	___aomod@counter^0,f,c
  3636  000DD8                     l2716:
  3637  000DD8  AE1B               	btfss	(___aomod@divisor+7)^0,7,c
  3638  000DDA  EFF1  F006         	goto	u1931
  3639  000DDE  EFF3  F006         	goto	u1930
  3640  000DE2                     u1931:
  3641  000DE2  EFE2  F006         	goto	l2714
  3642  000DE6                     u1930:
  3643  000DE6                     l2718:
  3644  000DE6  5014               	movf	___aomod@divisor^0,w,c
  3645  000DE8  5C0C               	subwf	___aomod@dividend^0,w,c
  3646  000DEA  5015               	movf	(___aomod@divisor+1)^0,w,c
  3647  000DEC  580D               	subwfb	(___aomod@dividend+1)^0,w,c
  3648  000DEE  5016               	movf	(___aomod@divisor+2)^0,w,c
  3649  000DF0  580E               	subwfb	(___aomod@dividend+2)^0,w,c
  3650  000DF2  5017               	movf	(___aomod@divisor+3)^0,w,c
  3651  000DF4  580F               	subwfb	(___aomod@dividend+3)^0,w,c
  3652  000DF6  5018               	movf	(___aomod@divisor+4)^0,w,c
  3653  000DF8  5810               	subwfb	(___aomod@dividend+4)^0,w,c
  3654  000DFA  5019               	movf	(___aomod@divisor+5)^0,w,c
  3655  000DFC  5811               	subwfb	(___aomod@dividend+5)^0,w,c
  3656  000DFE  501A               	movf	(___aomod@divisor+6)^0,w,c
  3657  000E00  5812               	subwfb	(___aomod@dividend+6)^0,w,c
  3658  000E02  501B               	movf	(___aomod@divisor+7)^0,w,c
  3659  000E04  5813               	subwfb	(___aomod@dividend+7)^0,w,c
  3660  000E06  A0D8               	btfss	status,0,c
  3661  000E08  EF08  F007         	goto	u1941
  3662  000E0C  EF0A  F007         	goto	u1940
  3663  000E10                     u1941:
  3664  000E10  EF1A  F007         	goto	l2722
  3665  000E14                     u1940:
  3666  000E14  5014               	movf	___aomod@divisor^0,w,c
  3667  000E16  5E0C               	subwf	___aomod@dividend^0,f,c
  3668  000E18  5015               	movf	(___aomod@divisor+1)^0,w,c
  3669  000E1A  5A0D               	subwfb	(___aomod@dividend+1)^0,f,c
  3670  000E1C  5016               	movf	(___aomod@divisor+2)^0,w,c
  3671  000E1E  5A0E               	subwfb	(___aomod@dividend+2)^0,f,c
  3672  000E20  5017               	movf	(___aomod@divisor+3)^0,w,c
  3673  000E22  5A0F               	subwfb	(___aomod@dividend+3)^0,f,c
  3674  000E24  5018               	movf	(___aomod@divisor+4)^0,w,c
  3675  000E26  5A10               	subwfb	(___aomod@dividend+4)^0,f,c
  3676  000E28  5019               	movf	(___aomod@divisor+5)^0,w,c
  3677  000E2A  5A11               	subwfb	(___aomod@dividend+5)^0,f,c
  3678  000E2C  501A               	movf	(___aomod@divisor+6)^0,w,c
  3679  000E2E  5A12               	subwfb	(___aomod@dividend+6)^0,f,c
  3680  000E30  501B               	movf	(___aomod@divisor+7)^0,w,c
  3681  000E32  5A13               	subwfb	(___aomod@dividend+7)^0,f,c
  3682  000E34                     l2722:
  3683  000E34  90D8               	bcf	status,0,c
  3684  000E36  321B               	rrcf	(___aomod@divisor+7)^0,f,c
  3685  000E38  321A               	rrcf	(___aomod@divisor+6)^0,f,c
  3686  000E3A  3219               	rrcf	(___aomod@divisor+5)^0,f,c
  3687  000E3C  3218               	rrcf	(___aomod@divisor+4)^0,f,c
  3688  000E3E  3217               	rrcf	(___aomod@divisor+3)^0,f,c
  3689  000E40  3216               	rrcf	(___aomod@divisor+2)^0,f,c
  3690  000E42  3215               	rrcf	(___aomod@divisor+1)^0,f,c
  3691  000E44  3214               	rrcf	___aomod@divisor^0,f,c
  3692  000E46  2E1C               	decfsz	___aomod@counter^0,f,c
  3693  000E48  EFF3  F006         	goto	l2718
  3694  000E4C                     l2726:
  3695  000E4C  501D               	movf	___aomod@sign^0,w,c
  3696  000E4E  B4D8               	btfsc	status,2,c
  3697  000E50  EF2C  F007         	goto	u1951
  3698  000E54  EF2E  F007         	goto	u1950
  3699  000E58                     u1951:
  3700  000E58  EF3E  F007         	goto	l2730
  3701  000E5C                     u1950:
  3702  000E5C  1E13               	comf	(___aomod@dividend+7)^0,f,c
  3703  000E5E  1E12               	comf	(___aomod@dividend+6)^0,f,c
  3704  000E60  1E11               	comf	(___aomod@dividend+5)^0,f,c
  3705  000E62  1E10               	comf	(___aomod@dividend+4)^0,f,c
  3706  000E64  1E0F               	comf	(___aomod@dividend+3)^0,f,c
  3707  000E66  1E0E               	comf	(___aomod@dividend+2)^0,f,c
  3708  000E68  1E0D               	comf	(___aomod@dividend+1)^0,f,c
  3709  000E6A  6C0C               	negf	___aomod@dividend^0,c
  3710  000E6C  0E00               	movlw	0
  3711  000E6E  220D               	addwfc	(___aomod@dividend+1)^0,f,c
  3712  000E70  220E               	addwfc	(___aomod@dividend+2)^0,f,c
  3713  000E72  220F               	addwfc	(___aomod@dividend+3)^0,f,c
  3714  000E74  2210               	addwfc	(___aomod@dividend+4)^0,f,c
  3715  000E76  2211               	addwfc	(___aomod@dividend+5)^0,f,c
  3716  000E78  2212               	addwfc	(___aomod@dividend+6)^0,f,c
  3717  000E7A  2213               	addwfc	(___aomod@dividend+7)^0,f,c
  3718  000E7C                     l2730:
  3719  000E7C  C00C  F00C         	movff	___aomod@dividend,?___aomod
  3720  000E80  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  3721  000E84  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  3722  000E88  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  3723  000E8C  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  3724  000E90  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  3725  000E94  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  3726  000E98  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  3727  000E9C  0012               	return		;funcret
  3728  000E9E                     __end_of___aomod:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function ___aodiv *****************
  3732 ;; Defined at:
  3733 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  dividend        8   11[COMRAM] long long 
  3736 ;;  divisor         8   19[COMRAM] long long 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  quotient        8   29[COMRAM] long long 
  3739 ;;  sign            1   28[COMRAM] unsigned char 
  3740 ;;  counter         1   27[COMRAM] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  8   11[COMRAM] long long 
  3743 ;; Registers used:
  3744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3750 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;Total ram usage:       26 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    4
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_dtoa
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text10
  3765  000BB2                     __ptext10:
  3766                           	callstack 0
  3767  000BB2                     ___aodiv:
  3768                           	callstack 22
  3769  000BB2  0E00               	movlw	0
  3770  000BB4  6E1D               	movwf	___aodiv@sign^0,c
  3771  000BB6  BE1B               	btfsc	(___aodiv@divisor+7)^0,7,c
  3772  000BB8  EFE2  F005         	goto	u1830
  3773  000BBC  EFE0  F005         	goto	u1831
  3774  000BC0                     u1831:
  3775  000BC0  EFF4  F005         	goto	l2662
  3776  000BC4                     u1830:
  3777  000BC4  1E1B               	comf	(___aodiv@divisor+7)^0,f,c
  3778  000BC6  1E1A               	comf	(___aodiv@divisor+6)^0,f,c
  3779  000BC8  1E19               	comf	(___aodiv@divisor+5)^0,f,c
  3780  000BCA  1E18               	comf	(___aodiv@divisor+4)^0,f,c
  3781  000BCC  1E17               	comf	(___aodiv@divisor+3)^0,f,c
  3782  000BCE  1E16               	comf	(___aodiv@divisor+2)^0,f,c
  3783  000BD0  1E15               	comf	(___aodiv@divisor+1)^0,f,c
  3784  000BD2  6C14               	negf	___aodiv@divisor^0,c
  3785  000BD4  0E00               	movlw	0
  3786  000BD6  2215               	addwfc	(___aodiv@divisor+1)^0,f,c
  3787  000BD8  2216               	addwfc	(___aodiv@divisor+2)^0,f,c
  3788  000BDA  2217               	addwfc	(___aodiv@divisor+3)^0,f,c
  3789  000BDC  2218               	addwfc	(___aodiv@divisor+4)^0,f,c
  3790  000BDE  2219               	addwfc	(___aodiv@divisor+5)^0,f,c
  3791  000BE0  221A               	addwfc	(___aodiv@divisor+6)^0,f,c
  3792  000BE2  221B               	addwfc	(___aodiv@divisor+7)^0,f,c
  3793  000BE4  0E01               	movlw	1
  3794  000BE6  6E1D               	movwf	___aodiv@sign^0,c
  3795  000BE8                     l2662:
  3796  000BE8  BE13               	btfsc	(___aodiv@dividend+7)^0,7,c
  3797  000BEA  EFFB  F005         	goto	u1840
  3798  000BEE  EFF9  F005         	goto	u1841
  3799  000BF2                     u1841:
  3800  000BF2  EF0D  F006         	goto	l2668
  3801  000BF6                     u1840:
  3802  000BF6  1E13               	comf	(___aodiv@dividend+7)^0,f,c
  3803  000BF8  1E12               	comf	(___aodiv@dividend+6)^0,f,c
  3804  000BFA  1E11               	comf	(___aodiv@dividend+5)^0,f,c
  3805  000BFC  1E10               	comf	(___aodiv@dividend+4)^0,f,c
  3806  000BFE  1E0F               	comf	(___aodiv@dividend+3)^0,f,c
  3807  000C00  1E0E               	comf	(___aodiv@dividend+2)^0,f,c
  3808  000C02  1E0D               	comf	(___aodiv@dividend+1)^0,f,c
  3809  000C04  6C0C               	negf	___aodiv@dividend^0,c
  3810  000C06  0E00               	movlw	0
  3811  000C08  220D               	addwfc	(___aodiv@dividend+1)^0,f,c
  3812  000C0A  220E               	addwfc	(___aodiv@dividend+2)^0,f,c
  3813  000C0C  220F               	addwfc	(___aodiv@dividend+3)^0,f,c
  3814  000C0E  2210               	addwfc	(___aodiv@dividend+4)^0,f,c
  3815  000C10  2211               	addwfc	(___aodiv@dividend+5)^0,f,c
  3816  000C12  2212               	addwfc	(___aodiv@dividend+6)^0,f,c
  3817  000C14  2213               	addwfc	(___aodiv@dividend+7)^0,f,c
  3818  000C16  0E01               	movlw	1
  3819  000C18  1A1D               	xorwf	___aodiv@sign^0,f,c
  3820  000C1A                     l2668:
  3821  000C1A  EE20  F01E         	lfsr	2,___aodiv@quotient
  3822  000C1E  0E07               	movlw	7
  3823  000C20                     u1851:
  3824  000C20  6ADE               	clrf	postinc2,c
  3825  000C22  06E8               	decf	wreg,f,c
  3826  000C24  E2FD               	bc	u1851
  3827  000C26  5014               	movf	___aodiv@divisor^0,w,c
  3828  000C28  1015               	iorwf	(___aodiv@divisor+1)^0,w,c
  3829  000C2A  1016               	iorwf	(___aodiv@divisor+2)^0,w,c
  3830  000C2C  1017               	iorwf	(___aodiv@divisor+3)^0,w,c
  3831  000C2E  1018               	iorwf	(___aodiv@divisor+4)^0,w,c
  3832  000C30  1019               	iorwf	(___aodiv@divisor+5)^0,w,c
  3833  000C32  101A               	iorwf	(___aodiv@divisor+6)^0,w,c
  3834  000C34  101B               	iorwf	(___aodiv@divisor+7)^0,w,c
  3835  000C36  B4D8               	btfsc	status,2,c
  3836  000C38  EF20  F006         	goto	u1861
  3837  000C3C  EF22  F006         	goto	u1860
  3838  000C40                     u1861:
  3839  000C40  EF74  F006         	goto	l2690
  3840  000C44                     u1860:
  3841  000C44  0E01               	movlw	1
  3842  000C46  6E1C               	movwf	___aodiv@counter^0,c
  3843  000C48  EF30  F006         	goto	l2676
  3844  000C4C                     l2674:
  3845  000C4C  90D8               	bcf	status,0,c
  3846  000C4E  3614               	rlcf	___aodiv@divisor^0,f,c
  3847  000C50  3615               	rlcf	(___aodiv@divisor+1)^0,f,c
  3848  000C52  3616               	rlcf	(___aodiv@divisor+2)^0,f,c
  3849  000C54  3617               	rlcf	(___aodiv@divisor+3)^0,f,c
  3850  000C56  3618               	rlcf	(___aodiv@divisor+4)^0,f,c
  3851  000C58  3619               	rlcf	(___aodiv@divisor+5)^0,f,c
  3852  000C5A  361A               	rlcf	(___aodiv@divisor+6)^0,f,c
  3853  000C5C  361B               	rlcf	(___aodiv@divisor+7)^0,f,c
  3854  000C5E  2A1C               	incf	___aodiv@counter^0,f,c
  3855  000C60                     l2676:
  3856  000C60  AE1B               	btfss	(___aodiv@divisor+7)^0,7,c
  3857  000C62  EF35  F006         	goto	u1871
  3858  000C66  EF37  F006         	goto	u1870
  3859  000C6A                     u1871:
  3860  000C6A  EF26  F006         	goto	l2674
  3861  000C6E                     u1870:
  3862  000C6E                     l2678:
  3863  000C6E  90D8               	bcf	status,0,c
  3864  000C70  361E               	rlcf	___aodiv@quotient^0,f,c
  3865  000C72  361F               	rlcf	(___aodiv@quotient+1)^0,f,c
  3866  000C74  3620               	rlcf	(___aodiv@quotient+2)^0,f,c
  3867  000C76  3621               	rlcf	(___aodiv@quotient+3)^0,f,c
  3868  000C78  3622               	rlcf	(___aodiv@quotient+4)^0,f,c
  3869  000C7A  3623               	rlcf	(___aodiv@quotient+5)^0,f,c
  3870  000C7C  3624               	rlcf	(___aodiv@quotient+6)^0,f,c
  3871  000C7E  3625               	rlcf	(___aodiv@quotient+7)^0,f,c
  3872  000C80  5014               	movf	___aodiv@divisor^0,w,c
  3873  000C82  5C0C               	subwf	___aodiv@dividend^0,w,c
  3874  000C84  5015               	movf	(___aodiv@divisor+1)^0,w,c
  3875  000C86  580D               	subwfb	(___aodiv@dividend+1)^0,w,c
  3876  000C88  5016               	movf	(___aodiv@divisor+2)^0,w,c
  3877  000C8A  580E               	subwfb	(___aodiv@dividend+2)^0,w,c
  3878  000C8C  5017               	movf	(___aodiv@divisor+3)^0,w,c
  3879  000C8E  580F               	subwfb	(___aodiv@dividend+3)^0,w,c
  3880  000C90  5018               	movf	(___aodiv@divisor+4)^0,w,c
  3881  000C92  5810               	subwfb	(___aodiv@dividend+4)^0,w,c
  3882  000C94  5019               	movf	(___aodiv@divisor+5)^0,w,c
  3883  000C96  5811               	subwfb	(___aodiv@dividend+5)^0,w,c
  3884  000C98  501A               	movf	(___aodiv@divisor+6)^0,w,c
  3885  000C9A  5812               	subwfb	(___aodiv@dividend+6)^0,w,c
  3886  000C9C  501B               	movf	(___aodiv@divisor+7)^0,w,c
  3887  000C9E  5813               	subwfb	(___aodiv@dividend+7)^0,w,c
  3888  000CA0  A0D8               	btfss	status,0,c
  3889  000CA2  EF55  F006         	goto	u1881
  3890  000CA6  EF57  F006         	goto	u1880
  3891  000CAA                     u1881:
  3892  000CAA  EF68  F006         	goto	l2686
  3893  000CAE                     u1880:
  3894  000CAE  5014               	movf	___aodiv@divisor^0,w,c
  3895  000CB0  5E0C               	subwf	___aodiv@dividend^0,f,c
  3896  000CB2  5015               	movf	(___aodiv@divisor+1)^0,w,c
  3897  000CB4  5A0D               	subwfb	(___aodiv@dividend+1)^0,f,c
  3898  000CB6  5016               	movf	(___aodiv@divisor+2)^0,w,c
  3899  000CB8  5A0E               	subwfb	(___aodiv@dividend+2)^0,f,c
  3900  000CBA  5017               	movf	(___aodiv@divisor+3)^0,w,c
  3901  000CBC  5A0F               	subwfb	(___aodiv@dividend+3)^0,f,c
  3902  000CBE  5018               	movf	(___aodiv@divisor+4)^0,w,c
  3903  000CC0  5A10               	subwfb	(___aodiv@dividend+4)^0,f,c
  3904  000CC2  5019               	movf	(___aodiv@divisor+5)^0,w,c
  3905  000CC4  5A11               	subwfb	(___aodiv@dividend+5)^0,f,c
  3906  000CC6  501A               	movf	(___aodiv@divisor+6)^0,w,c
  3907  000CC8  5A12               	subwfb	(___aodiv@dividend+6)^0,f,c
  3908  000CCA  501B               	movf	(___aodiv@divisor+7)^0,w,c
  3909  000CCC  5A13               	subwfb	(___aodiv@dividend+7)^0,f,c
  3910  000CCE  801E               	bsf	___aodiv@quotient^0,0,c
  3911  000CD0                     l2686:
  3912  000CD0  90D8               	bcf	status,0,c
  3913  000CD2  321B               	rrcf	(___aodiv@divisor+7)^0,f,c
  3914  000CD4  321A               	rrcf	(___aodiv@divisor+6)^0,f,c
  3915  000CD6  3219               	rrcf	(___aodiv@divisor+5)^0,f,c
  3916  000CD8  3218               	rrcf	(___aodiv@divisor+4)^0,f,c
  3917  000CDA  3217               	rrcf	(___aodiv@divisor+3)^0,f,c
  3918  000CDC  3216               	rrcf	(___aodiv@divisor+2)^0,f,c
  3919  000CDE  3215               	rrcf	(___aodiv@divisor+1)^0,f,c
  3920  000CE0  3214               	rrcf	___aodiv@divisor^0,f,c
  3921  000CE2  2E1C               	decfsz	___aodiv@counter^0,f,c
  3922  000CE4  EF37  F006         	goto	l2678
  3923  000CE8                     l2690:
  3924  000CE8  501D               	movf	___aodiv@sign^0,w,c
  3925  000CEA  B4D8               	btfsc	status,2,c
  3926  000CEC  EF7A  F006         	goto	u1891
  3927  000CF0  EF7C  F006         	goto	u1890
  3928  000CF4                     u1891:
  3929  000CF4  EF8C  F006         	goto	l2694
  3930  000CF8                     u1890:
  3931  000CF8  1E25               	comf	(___aodiv@quotient+7)^0,f,c
  3932  000CFA  1E24               	comf	(___aodiv@quotient+6)^0,f,c
  3933  000CFC  1E23               	comf	(___aodiv@quotient+5)^0,f,c
  3934  000CFE  1E22               	comf	(___aodiv@quotient+4)^0,f,c
  3935  000D00  1E21               	comf	(___aodiv@quotient+3)^0,f,c
  3936  000D02  1E20               	comf	(___aodiv@quotient+2)^0,f,c
  3937  000D04  1E1F               	comf	(___aodiv@quotient+1)^0,f,c
  3938  000D06  6C1E               	negf	___aodiv@quotient^0,c
  3939  000D08  0E00               	movlw	0
  3940  000D0A  221F               	addwfc	(___aodiv@quotient+1)^0,f,c
  3941  000D0C  2220               	addwfc	(___aodiv@quotient+2)^0,f,c
  3942  000D0E  2221               	addwfc	(___aodiv@quotient+3)^0,f,c
  3943  000D10  2222               	addwfc	(___aodiv@quotient+4)^0,f,c
  3944  000D12  2223               	addwfc	(___aodiv@quotient+5)^0,f,c
  3945  000D14  2224               	addwfc	(___aodiv@quotient+6)^0,f,c
  3946  000D16  2225               	addwfc	(___aodiv@quotient+7)^0,f,c
  3947  000D18                     l2694:
  3948  000D18  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  3949  000D1C  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  3950  000D20  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  3951  000D24  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  3952  000D28  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  3953  000D2C  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  3954  000D30  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  3955  000D34  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  3956  000D38  0012               	return		;funcret
  3957  000D3A                     __end_of___aodiv:
  3958                           	callstack 0
  3959                           
  3960 ;; *************** function _ctoa *****************
  3961 ;; Defined at:
  3962 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3965 ;;		 -> NULL(0), 
  3966 ;;  c               1   24[COMRAM] unsigned char 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  w               2   28[COMRAM] int 
  3969 ;;  l               2   26[COMRAM] int 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  2   22[COMRAM] int 
  3972 ;; Registers used:
  3973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3979 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;Total ram usage:        8 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    7
  3986 ;; This function calls:
  3987 ;;		_fputc
  3988 ;; This function is called by:
  3989 ;;		_vfpfcnvrt
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text11
  3994  0010B0                     __ptext11:
  3995                           	callstack 0
  3996  0010B0                     _ctoa:
  3997                           	callstack 20
  3998  0010B0                     
  3999                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  4000  0010B0  5045               	movf	_width^0,w,c
  4001  0010B2  1046               	iorwf	(_width+1)^0,w,c
  4002  0010B4  A4D8               	btfss	status,2,c
  4003  0010B6  EF5F  F008         	goto	u2011
  4004  0010BA  EF61  F008         	goto	u2010
  4005  0010BE                     u2011:
  4006  0010BE  EF67  F008         	goto	l2764
  4007  0010C2                     u2010:
  4008  0010C2  C045  F01D         	movff	_width,ctoa@w
  4009  0010C6  C046  F01E         	movff	_width+1,ctoa@w+1
  4010  0010CA  EF6D  F008         	goto	l2766
  4011  0010CE                     l2764:
  4012  0010CE  0EFF               	movlw	255
  4013  0010D0  2445               	addwf	_width^0,w,c
  4014  0010D2  6E1D               	movwf	ctoa@w^0,c
  4015  0010D4  0EFF               	movlw	255
  4016  0010D6  2046               	addwfc	(_width+1)^0,w,c
  4017  0010D8  6E1E               	movwf	(ctoa@w+1)^0,c
  4018  0010DA                     l2766:
  4019                           
  4020                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  4021  0010DA  A049               	btfss	_flags^0,0,c
  4022  0010DC  EF72  F008         	goto	u2021
  4023  0010E0  EF74  F008         	goto	u2020
  4024  0010E4                     u2021:
  4025  0010E4  EF7D  F008         	goto	l2770
  4026  0010E8                     u2020:
  4027  0010E8                     
  4028                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  4029  0010E8  C019  F00E         	movff	ctoa@c,fputc@c
  4030  0010EC  6A0F               	clrf	(fputc@c+1)^0,c
  4031  0010EE  C017  F010         	movff	ctoa@fp,fputc@fp
  4032  0010F2  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  4033  0010F6  EC23  F009         	call	_fputc	;wreg free
  4034  0010FA                     l2770:
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  4037  0010FA  BE1E               	btfsc	(ctoa@w+1)^0,7,c
  4038  0010FC  EF82  F008         	goto	u2031
  4039  001100  EF84  F008         	goto	u2030
  4040  001104                     u2031:
  4041  001104  EF86  F008         	goto	l2774
  4042  001108                     u2030:
  4043  001108  EF8A  F008         	goto	l1067
  4044  00110C                     l2774:
  4045  00110C  0E00               	movlw	0
  4046  00110E  6E1E               	movwf	(ctoa@w+1)^0,c
  4047  001110  0E00               	movlw	0
  4048  001112  6E1D               	movwf	ctoa@w^0,c
  4049  001114                     l1067:
  4050                           
  4051                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  4052  001114  0E00               	movlw	0
  4053  001116  6E1C               	movwf	(ctoa@l+1)^0,c
  4054  001118  0E00               	movlw	0
  4055  00111A  6E1B               	movwf	ctoa@l^0,c
  4056                           
  4057                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4058  00111C  EF9C  F008         	goto	l2780
  4059  001120                     l2776:
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  4062  001120  0E00               	movlw	0
  4063  001122  6E0F               	movwf	(fputc@c+1)^0,c
  4064  001124  0E20               	movlw	32
  4065  001126  6E0E               	movwf	fputc@c^0,c
  4066  001128  C017  F010         	movff	ctoa@fp,fputc@fp
  4067  00112C  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  4068  001130  EC23  F009         	call	_fputc	;wreg free
  4069  001134                     
  4070                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  4071  001134  4A1B               	infsnz	ctoa@l^0,f,c
  4072  001136  2A1C               	incf	(ctoa@l+1)^0,f,c
  4073  001138                     l2780:
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4076  001138  501D               	movf	ctoa@w^0,w,c
  4077  00113A  5C1B               	subwf	ctoa@l^0,w,c
  4078  00113C  501C               	movf	(ctoa@l+1)^0,w,c
  4079  00113E  0A80               	xorlw	128
  4080  001140  6E1A               	movwf	??_ctoa^0,c
  4081  001142  501E               	movf	(ctoa@w+1)^0,w,c
  4082  001144  0A80               	xorlw	128
  4083  001146  581A               	subwfb	??_ctoa^0,w,c
  4084  001148  A0D8               	btfss	status,0,c
  4085  00114A  EFA9  F008         	goto	u2041
  4086  00114E  EFAB  F008         	goto	u2040
  4087  001152                     u2041:
  4088  001152  EF90  F008         	goto	l2776
  4089  001156                     u2040:
  4090  001156                     
  4091                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  4092  001156  B049               	btfsc	_flags^0,0,c
  4093  001158  EFB0  F008         	goto	u2051
  4094  00115C  EFB2  F008         	goto	u2050
  4095  001160                     u2051:
  4096  001160  EFBB  F008         	goto	l2784
  4097  001164                     u2050:
  4098  001164                     
  4099                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  4100  001164  C019  F00E         	movff	ctoa@c,fputc@c
  4101  001168  6A0F               	clrf	(fputc@c+1)^0,c
  4102  00116A  C017  F010         	movff	ctoa@fp,fputc@fp
  4103  00116E  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  4104  001172  EC23  F009         	call	_fputc	;wreg free
  4105  001176                     l2784:
  4106                           
  4107                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  4108  001176  0E01               	movlw	1
  4109  001178  241B               	addwf	ctoa@l^0,w,c
  4110  00117A  6E17               	movwf	?_ctoa^0,c
  4111  00117C  0E00               	movlw	0
  4112  00117E  201C               	addwfc	(ctoa@l+1)^0,w,c
  4113  001180  6E18               	movwf	(?_ctoa+1)^0,c
  4114  001182  0012               	return		;funcret
  4115  001184                     __end_of_ctoa:
  4116                           	callstack 0
  4117                           
  4118 ;; *************** function _fputc *****************
  4119 ;; Defined at:
  4120 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  c               2   13[COMRAM] int 
  4123 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4124 ;;		 -> NULL(0), 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  2   13[COMRAM] int 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;Total ram usage:        9 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    6
  4143 ;; This function calls:
  4144 ;;		_putch
  4145 ;; This function is called by:
  4146 ;;		_pad
  4147 ;;		_ctoa
  4148 ;;		_vfpfcnvrt
  4149 ;;		_fputs
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text12
  4154  001246                     __ptext12:
  4155                           	callstack 0
  4156  001246                     _fputc:
  4157                           	callstack 21
  4158  001246  5010               	movf	fputc@fp^0,w,c
  4159  001248  1011               	iorwf	(fputc@fp+1)^0,w,c
  4160  00124A  B4D8               	btfsc	status,2,c
  4161  00124C  EF2A  F009         	goto	u1771
  4162  001250  EF2C  F009         	goto	u1770
  4163  001254                     u1771:
  4164  001254  EF35  F009         	goto	l2626
  4165  001258                     u1770:
  4166  001258  5010               	movf	fputc@fp^0,w,c
  4167  00125A  1011               	iorwf	(fputc@fp+1)^0,w,c
  4168  00125C  A4D8               	btfss	status,2,c
  4169  00125E  EF33  F009         	goto	u1781
  4170  001262  EF35  F009         	goto	u1780
  4171  001266                     u1781:
  4172  001266  EF3A  F009         	goto	l2628
  4173  00126A                     u1780:
  4174  00126A                     l2626:
  4175  00126A  500E               	movf	fputc@c^0,w,c
  4176  00126C  EC44  F00B         	call	_putch
  4177  001270  EF6D  F009         	goto	l1132
  4178  001274                     l2628:
  4179  001274  EE20 F004          	lfsr	2,4
  4180  001278  5010               	movf	fputc@fp^0,w,c
  4181  00127A  26D9               	addwf	fsr2l,f,c
  4182  00127C  5011               	movf	(fputc@fp+1)^0,w,c
  4183  00127E  22DA               	addwfc	fsr2h,f,c
  4184  001280  50DE               	movf	postinc2,w,c
  4185  001282  10DE               	iorwf	postinc2,w,c
  4186  001284  B4D8               	btfsc	status,2,c
  4187  001286  EF47  F009         	goto	u1791
  4188  00128A  EF49  F009         	goto	u1790
  4189  00128E                     u1791:
  4190  00128E  EF64  F009         	goto	l2632
  4191  001292                     u1790:
  4192  001292  EE20 F004          	lfsr	2,4
  4193  001296  5010               	movf	fputc@fp^0,w,c
  4194  001298  26D9               	addwf	fsr2l,f,c
  4195  00129A  5011               	movf	(fputc@fp+1)^0,w,c
  4196  00129C  22DA               	addwfc	fsr2h,f,c
  4197  00129E  EE10 F002          	lfsr	1,2
  4198  0012A2  5010               	movf	fputc@fp^0,w,c
  4199  0012A4  26E1               	addwf	fsr1l,f,c
  4200  0012A6  5011               	movf	(fputc@fp+1)^0,w,c
  4201  0012A8  22E2               	addwfc	fsr1h,f,c
  4202  0012AA  50DE               	movf	postinc2,w,c
  4203  0012AC  5CE6               	subwf	postinc1,w,c
  4204  0012AE  50E6               	movf	postinc1,w,c
  4205  0012B0  0A80               	xorlw	128
  4206  0012B2  6E16               	movwf	(??_fputc+4)^0,c
  4207  0012B4  50DE               	movf	postinc2,w,c
  4208  0012B6  0A80               	xorlw	128
  4209  0012B8  5816               	subwfb	(??_fputc+4)^0,w,c
  4210  0012BA  B0D8               	btfsc	status,0,c
  4211  0012BC  EF62  F009         	goto	u1801
  4212  0012C0  EF64  F009         	goto	u1800
  4213  0012C4                     u1801:
  4214  0012C4  EF6D  F009         	goto	l1132
  4215  0012C8                     u1800:
  4216  0012C8                     l2632:
  4217  0012C8  EE20 F002          	lfsr	2,2
  4218  0012CC  5010               	movf	fputc@fp^0,w,c
  4219  0012CE  26D9               	addwf	fsr2l,f,c
  4220  0012D0  5011               	movf	(fputc@fp+1)^0,w,c
  4221  0012D2  22DA               	addwfc	fsr2h,f,c
  4222  0012D4  2ADE               	incf	postinc2,f,c
  4223  0012D6  0E00               	movlw	0
  4224  0012D8  22DD               	addwfc	postdec2,f,c
  4225  0012DA                     l1132:
  4226  0012DA  0012               	return		;funcret
  4227  0012DC                     __end_of_fputc:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _putch *****************
  4231 ;; Defined at:
  4232 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  txData          1    wreg     unsigned char 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  txData          1   12[COMRAM] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4250 ;;Total ram usage:        1 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    5
  4253 ;; This function calls:
  4254 ;;		_EUSART1_Write
  4255 ;; This function is called by:
  4256 ;;		_fputc
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text13
  4261  001688                     __ptext13:
  4262                           	callstack 0
  4263  001688                     _putch:
  4264                           	callstack 21
  4265                           
  4266                           ;incstack = 0
  4267                           ;putch@txData stored from wreg
  4268  001688  6E0D               	movwf	putch@txData^0,c
  4269  00168A                     
  4270                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4271  00168A  500D               	movf	putch@txData^0,w,c
  4272  00168C  EC24  F00B         	call	_EUSART1_Write
  4273  001690  0012               	return		;funcret
  4274  001692                     __end_of_putch:
  4275                           	callstack 0
  4276                           
  4277 ;; *************** function _EUSART1_Write *****************
  4278 ;; Defined at:
  4279 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  txData          1    wreg     unsigned char 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  txData          1   11[COMRAM] unsigned char 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  1    wreg      void 
  4286 ;; Registers used:
  4287 ;;		wreg
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;Total ram usage:        1 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; Hardware stack levels required when called:    4
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		_putch
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text14
  4308  001648                     __ptext14:
  4309                           	callstack 0
  4310  001648                     _EUSART1_Write:
  4311                           	callstack 21
  4312                           
  4313                           ;incstack = 0
  4314                           ;EUSART1_Write@txData stored from wreg
  4315  001648  6E0C               	movwf	EUSART1_Write@txData^0,c
  4316  00164A                     l300:
  4317                           
  4318                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4319  00164A  A89E               	btfss	158,4,c	;volatile
  4320  00164C  EF2A  F00B         	goto	u1761
  4321  001650  EF2C  F00B         	goto	u1760
  4322  001654                     u1761:
  4323  001654  EF25  F00B         	goto	l300
  4324  001658                     u1760:
  4325  001658                     
  4326                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4327  001658  C00C  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4328  00165C  0012               	return		;funcret
  4329  00165E                     __end_of_EUSART1_Write:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function ___wmul *****************
  4333 ;; Defined at:
  4334 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  multiplier      2   11[COMRAM] unsigned int 
  4337 ;;  multiplicand    2   13[COMRAM] unsigned int 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  product         2   15[COMRAM] unsigned int 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  2   11[COMRAM] unsigned int 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0, prodl, prodh
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;Total ram usage:        6 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    4
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_main
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	text15
  4364  0015EC                     __ptext15:
  4365                           	callstack 0
  4366  0015EC                     ___wmul:
  4367                           	callstack 26
  4368  0015EC  500C               	movf	___wmul@multiplier^0,w,c
  4369  0015EE  020E               	mulwf	___wmul@multiplicand^0,c
  4370  0015F0  CFF3 F010          	movff	prodl,___wmul@product
  4371  0015F4  CFF4 F011          	movff	prodh,___wmul@product+1
  4372  0015F8  500C               	movf	___wmul@multiplier^0,w,c
  4373  0015FA  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  4374  0015FC  50F3               	movf	243,w,c
  4375  0015FE  2611               	addwf	(___wmul@product+1)^0,f,c
  4376  001600  500D               	movf	(___wmul@multiplier+1)^0,w,c
  4377  001602  020E               	mulwf	___wmul@multiplicand^0,c
  4378  001604  50F3               	movf	243,w,c
  4379  001606  2611               	addwf	(___wmul@product+1)^0,f,c
  4380  001608  C010  F00C         	movff	___wmul@product,?___wmul
  4381  00160C  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  4382  001610  0012               	return		;funcret
  4383  001612                     __end_of___wmul:
  4384                           	callstack 0
  4385                           
  4386 ;; *************** function ___lwdiv *****************
  4387 ;; Defined at:
  4388 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  dividend        2   11[COMRAM] unsigned int 
  4391 ;;  divisor         2   13[COMRAM] unsigned int 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  quotient        2   15[COMRAM] unsigned int 
  4394 ;;  counter         1   17[COMRAM] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  2   11[COMRAM] unsigned int 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;Total ram usage:        7 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    4
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_main
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text16
  4419  0012DC                     __ptext16:
  4420                           	callstack 0
  4421  0012DC                     ___lwdiv:
  4422                           	callstack 26
  4423  0012DC  0E00               	movlw	0
  4424  0012DE  6E11               	movwf	(___lwdiv@quotient+1)^0,c
  4425  0012E0  0E00               	movlw	0
  4426  0012E2  6E10               	movwf	___lwdiv@quotient^0,c
  4427  0012E4  500E               	movf	___lwdiv@divisor^0,w,c
  4428  0012E6  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4429  0012E8  B4D8               	btfsc	status,2,c
  4430  0012EA  EF79  F009         	goto	u1571
  4431  0012EE  EF7B  F009         	goto	u1570
  4432  0012F2                     u1571:
  4433  0012F2  EFA3  F009         	goto	l837
  4434  0012F6                     u1570:
  4435  0012F6  0E01               	movlw	1
  4436  0012F8  6E12               	movwf	___lwdiv@counter^0,c
  4437  0012FA  EF83  F009         	goto	l2390
  4438  0012FE                     l2388:
  4439  0012FE  90D8               	bcf	status,0,c
  4440  001300  360E               	rlcf	___lwdiv@divisor^0,f,c
  4441  001302  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4442  001304  2A12               	incf	___lwdiv@counter^0,f,c
  4443  001306                     l2390:
  4444  001306  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  4445  001308  EF88  F009         	goto	u1581
  4446  00130C  EF8A  F009         	goto	u1580
  4447  001310                     u1581:
  4448  001310  EF7F  F009         	goto	l2388
  4449  001314                     u1580:
  4450  001314                     l2392:
  4451  001314  90D8               	bcf	status,0,c
  4452  001316  3610               	rlcf	___lwdiv@quotient^0,f,c
  4453  001318  3611               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4454  00131A  500E               	movf	___lwdiv@divisor^0,w,c
  4455  00131C  5C0C               	subwf	___lwdiv@dividend^0,w,c
  4456  00131E  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  4457  001320  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4458  001322  A0D8               	btfss	status,0,c
  4459  001324  EF96  F009         	goto	u1591
  4460  001328  EF98  F009         	goto	u1590
  4461  00132C                     u1591:
  4462  00132C  EF9D  F009         	goto	l2400
  4463  001330                     u1590:
  4464  001330  500E               	movf	___lwdiv@divisor^0,w,c
  4465  001332  5E0C               	subwf	___lwdiv@dividend^0,f,c
  4466  001334  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  4467  001336  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4468  001338  8010               	bsf	___lwdiv@quotient^0,0,c
  4469  00133A                     l2400:
  4470  00133A  90D8               	bcf	status,0,c
  4471  00133C  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4472  00133E  320E               	rrcf	___lwdiv@divisor^0,f,c
  4473  001340  2E12               	decfsz	___lwdiv@counter^0,f,c
  4474  001342  EF8A  F009         	goto	l2392
  4475  001346                     l837:
  4476  001346  C010  F00C         	movff	___lwdiv@quotient,?___lwdiv
  4477  00134A  C011  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4478  00134E  0012               	return		;funcret
  4479  001350                     __end_of___lwdiv:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function ___aldiv *****************
  4483 ;; Defined at:
  4484 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aldiv.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  dividend        4   11[COMRAM] long 
  4487 ;;  divisor         4   15[COMRAM] long 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  quotient        4   21[COMRAM] long 
  4490 ;;  sign            1   20[COMRAM] unsigned char 
  4491 ;;  counter         1   19[COMRAM] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  4   11[COMRAM] long 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4501 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;Total ram usage:       14 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    4
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text17
  4516  000E9E                     __ptext17:
  4517                           	callstack 0
  4518  000E9E                     ___aldiv:
  4519                           	callstack 26
  4520  000E9E  0E00               	movlw	0
  4521  000EA0  6E15               	movwf	___aldiv@sign^0,c
  4522  000EA2  BE13               	btfsc	(___aldiv@divisor+3)^0,7,c
  4523  000EA4  EF58  F007         	goto	u1510
  4524  000EA8  EF56  F007         	goto	u1511
  4525  000EAC                     u1511:
  4526  000EAC  EF62  F007         	goto	l2346
  4527  000EB0                     u1510:
  4528  000EB0  1E13               	comf	(___aldiv@divisor+3)^0,f,c
  4529  000EB2  1E12               	comf	(___aldiv@divisor+2)^0,f,c
  4530  000EB4  1E11               	comf	(___aldiv@divisor+1)^0,f,c
  4531  000EB6  6C10               	negf	___aldiv@divisor^0,c
  4532  000EB8  0E00               	movlw	0
  4533  000EBA  2211               	addwfc	(___aldiv@divisor+1)^0,f,c
  4534  000EBC  2212               	addwfc	(___aldiv@divisor+2)^0,f,c
  4535  000EBE  2213               	addwfc	(___aldiv@divisor+3)^0,f,c
  4536  000EC0  0E01               	movlw	1
  4537  000EC2  6E15               	movwf	___aldiv@sign^0,c
  4538  000EC4                     l2346:
  4539  000EC4  BE0F               	btfsc	(___aldiv@dividend+3)^0,7,c
  4540  000EC6  EF69  F007         	goto	u1520
  4541  000ECA  EF67  F007         	goto	u1521
  4542  000ECE                     u1521:
  4543  000ECE  EF73  F007         	goto	l2352
  4544  000ED2                     u1520:
  4545  000ED2  1E0F               	comf	(___aldiv@dividend+3)^0,f,c
  4546  000ED4  1E0E               	comf	(___aldiv@dividend+2)^0,f,c
  4547  000ED6  1E0D               	comf	(___aldiv@dividend+1)^0,f,c
  4548  000ED8  6C0C               	negf	___aldiv@dividend^0,c
  4549  000EDA  0E00               	movlw	0
  4550  000EDC  220D               	addwfc	(___aldiv@dividend+1)^0,f,c
  4551  000EDE  220E               	addwfc	(___aldiv@dividend+2)^0,f,c
  4552  000EE0  220F               	addwfc	(___aldiv@dividend+3)^0,f,c
  4553  000EE2  0E01               	movlw	1
  4554  000EE4  1A15               	xorwf	___aldiv@sign^0,f,c
  4555  000EE6                     l2352:
  4556  000EE6  0E00               	movlw	0
  4557  000EE8  6E16               	movwf	___aldiv@quotient^0,c
  4558  000EEA  0E00               	movlw	0
  4559  000EEC  6E17               	movwf	(___aldiv@quotient+1)^0,c
  4560  000EEE  0E00               	movlw	0
  4561  000EF0  6E18               	movwf	(___aldiv@quotient+2)^0,c
  4562  000EF2  0E00               	movlw	0
  4563  000EF4  6E19               	movwf	(___aldiv@quotient+3)^0,c
  4564  000EF6  5010               	movf	___aldiv@divisor^0,w,c
  4565  000EF8  1011               	iorwf	(___aldiv@divisor+1)^0,w,c
  4566  000EFA  1012               	iorwf	(___aldiv@divisor+2)^0,w,c
  4567  000EFC  1013               	iorwf	(___aldiv@divisor+3)^0,w,c
  4568  000EFE  B4D8               	btfsc	status,2,c
  4569  000F00  EF84  F007         	goto	u1531
  4570  000F04  EF86  F007         	goto	u1530
  4571  000F08                     u1531:
  4572  000F08  EFBC  F007         	goto	l2374
  4573  000F0C                     u1530:
  4574  000F0C  0E01               	movlw	1
  4575  000F0E  6E14               	movwf	___aldiv@counter^0,c
  4576  000F10  EF90  F007         	goto	l2360
  4577  000F14                     l2358:
  4578  000F14  90D8               	bcf	status,0,c
  4579  000F16  3610               	rlcf	___aldiv@divisor^0,f,c
  4580  000F18  3611               	rlcf	(___aldiv@divisor+1)^0,f,c
  4581  000F1A  3612               	rlcf	(___aldiv@divisor+2)^0,f,c
  4582  000F1C  3613               	rlcf	(___aldiv@divisor+3)^0,f,c
  4583  000F1E  2A14               	incf	___aldiv@counter^0,f,c
  4584  000F20                     l2360:
  4585  000F20  AE13               	btfss	(___aldiv@divisor+3)^0,7,c
  4586  000F22  EF95  F007         	goto	u1541
  4587  000F26  EF97  F007         	goto	u1540
  4588  000F2A                     u1541:
  4589  000F2A  EF8A  F007         	goto	l2358
  4590  000F2E                     u1540:
  4591  000F2E                     l2362:
  4592  000F2E  90D8               	bcf	status,0,c
  4593  000F30  3616               	rlcf	___aldiv@quotient^0,f,c
  4594  000F32  3617               	rlcf	(___aldiv@quotient+1)^0,f,c
  4595  000F34  3618               	rlcf	(___aldiv@quotient+2)^0,f,c
  4596  000F36  3619               	rlcf	(___aldiv@quotient+3)^0,f,c
  4597  000F38  5010               	movf	___aldiv@divisor^0,w,c
  4598  000F3A  5C0C               	subwf	___aldiv@dividend^0,w,c
  4599  000F3C  5011               	movf	(___aldiv@divisor+1)^0,w,c
  4600  000F3E  580D               	subwfb	(___aldiv@dividend+1)^0,w,c
  4601  000F40  5012               	movf	(___aldiv@divisor+2)^0,w,c
  4602  000F42  580E               	subwfb	(___aldiv@dividend+2)^0,w,c
  4603  000F44  5013               	movf	(___aldiv@divisor+3)^0,w,c
  4604  000F46  580F               	subwfb	(___aldiv@dividend+3)^0,w,c
  4605  000F48  A0D8               	btfss	status,0,c
  4606  000F4A  EFA9  F007         	goto	u1551
  4607  000F4E  EFAB  F007         	goto	u1550
  4608  000F52                     u1551:
  4609  000F52  EFB4  F007         	goto	l2370
  4610  000F56                     u1550:
  4611  000F56  5010               	movf	___aldiv@divisor^0,w,c
  4612  000F58  5E0C               	subwf	___aldiv@dividend^0,f,c
  4613  000F5A  5011               	movf	(___aldiv@divisor+1)^0,w,c
  4614  000F5C  5A0D               	subwfb	(___aldiv@dividend+1)^0,f,c
  4615  000F5E  5012               	movf	(___aldiv@divisor+2)^0,w,c
  4616  000F60  5A0E               	subwfb	(___aldiv@dividend+2)^0,f,c
  4617  000F62  5013               	movf	(___aldiv@divisor+3)^0,w,c
  4618  000F64  5A0F               	subwfb	(___aldiv@dividend+3)^0,f,c
  4619  000F66  8016               	bsf	___aldiv@quotient^0,0,c
  4620  000F68                     l2370:
  4621  000F68  90D8               	bcf	status,0,c
  4622  000F6A  3213               	rrcf	(___aldiv@divisor+3)^0,f,c
  4623  000F6C  3212               	rrcf	(___aldiv@divisor+2)^0,f,c
  4624  000F6E  3211               	rrcf	(___aldiv@divisor+1)^0,f,c
  4625  000F70  3210               	rrcf	___aldiv@divisor^0,f,c
  4626  000F72  2E14               	decfsz	___aldiv@counter^0,f,c
  4627  000F74  EF97  F007         	goto	l2362
  4628  000F78                     l2374:
  4629  000F78  5015               	movf	___aldiv@sign^0,w,c
  4630  000F7A  B4D8               	btfsc	status,2,c
  4631  000F7C  EFC2  F007         	goto	u1561
  4632  000F80  EFC4  F007         	goto	u1560
  4633  000F84                     u1561:
  4634  000F84  EFCC  F007         	goto	l2378
  4635  000F88                     u1560:
  4636  000F88  1E19               	comf	(___aldiv@quotient+3)^0,f,c
  4637  000F8A  1E18               	comf	(___aldiv@quotient+2)^0,f,c
  4638  000F8C  1E17               	comf	(___aldiv@quotient+1)^0,f,c
  4639  000F8E  6C16               	negf	___aldiv@quotient^0,c
  4640  000F90  0E00               	movlw	0
  4641  000F92  2217               	addwfc	(___aldiv@quotient+1)^0,f,c
  4642  000F94  2218               	addwfc	(___aldiv@quotient+2)^0,f,c
  4643  000F96  2219               	addwfc	(___aldiv@quotient+3)^0,f,c
  4644  000F98                     l2378:
  4645  000F98  C016  F00C         	movff	___aldiv@quotient,?___aldiv
  4646  000F9C  C017  F00D         	movff	___aldiv@quotient+1,?___aldiv+1
  4647  000FA0  C018  F00E         	movff	___aldiv@quotient+2,?___aldiv+2
  4648  000FA4  C019  F00F         	movff	___aldiv@quotient+3,?___aldiv+3
  4649  000FA8  0012               	return		;funcret
  4650  000FAA                     __end_of___aldiv:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function _TMR0_WriteTimer *****************
  4654 ;; Defined at:
  4655 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  timerVal        2   11[COMRAM] unsigned short 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;Total ram usage:        2 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    4
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_main
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text18
  4684  001692                     __ptext18:
  4685                           	callstack 0
  4686  001692                     _TMR0_WriteTimer:
  4687                           	callstack 26
  4688  001692                     
  4689                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4690  001692  500D               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4691  001694  6ED7               	movwf	215,c	;volatile
  4692  001696                     
  4693                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4694  001696  C00C  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4695  00169A  0012               	return		;funcret
  4696  00169C                     __end_of_TMR0_WriteTimer:
  4697                           	callstack 0
  4698                           
  4699 ;; *************** function _SYSTEM_Initialize *****************
  4700 ;; Defined at:
  4701 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;Total ram usage:        0 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    6
  4722 ;; This function calls:
  4723 ;;		_ADC_Initialize
  4724 ;;		_EUSART1_Initialize
  4725 ;;		_INTERRUPT_Initialize
  4726 ;;		_OSCILLATOR_Initialize
  4727 ;;		_PIN_MANAGER_Initialize
  4728 ;;		_TMR0_Initialize
  4729 ;; This function is called by:
  4730 ;;		_main
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text19
  4735  00162E                     __ptext19:
  4736                           	callstack 0
  4737  00162E                     _SYSTEM_Initialize:
  4738                           	callstack 24
  4739  00162E                     
  4740                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4741  00162E  EC67  F00B         	call	_INTERRUPT_Initialize	;wreg free
  4742  001632                     
  4743                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4744  001632  ECB7  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  4745  001636                     
  4746                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4747  001636  EC09  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  4748  00163A                     
  4749                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  4750  00163A  EC2F  F00B         	call	_ADC_Initialize	;wreg free
  4751  00163E                     
  4752                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4753  00163E  EC9C  F00A         	call	_TMR0_Initialize	;wreg free
  4754  001642                     
  4755                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  4756  001642  EC45  F00A         	call	_EUSART1_Initialize	;wreg free
  4757  001646  0012               	return		;funcret
  4758  001648                     __end_of_SYSTEM_Initialize:
  4759                           	callstack 0
  4760                           
  4761 ;; *************** function _TMR0_Initialize *****************
  4762 ;; Defined at:
  4763 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;		None
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;Total ram usage:        2 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; Hardware stack levels required when called:    5
  4784 ;; This function calls:
  4785 ;;		_TMR0_SetInterruptHandler
  4786 ;; This function is called by:
  4787 ;;		_SYSTEM_Initialize
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text20
  4792  001538                     __ptext20:
  4793                           	callstack 0
  4794  001538                     _TMR0_Initialize:
  4795                           	callstack 24
  4796  001538                     
  4797                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4798  001538  9CD5               	bcf	213,6,c	;volatile
  4799  00153A                     
  4800                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  4801  00153A  0E00               	movlw	0
  4802  00153C  6ED7               	movwf	215,c	;volatile
  4803                           
  4804                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  4805  00153E  0E00               	movlw	0
  4806  001540  6ED6               	movwf	214,c	;volatile
  4807  001542                     
  4808                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4809  001542  50D6               	movf	214,w,c	;volatile
  4810  001544  CFD7 F00E          	movff	4055,??_TMR0_Initialize	;volatile
  4811  001548  6A0F               	clrf	(??_TMR0_Initialize+1)^0,c
  4812  00154A  C00E  F00F         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4813  00154E  6A0E               	clrf	??_TMR0_Initialize^0,c
  4814  001550  100E               	iorwf	??_TMR0_Initialize^0,w,c
  4815  001552  6E4B               	movwf	_timer0ReloadVal^0,c	;volatile
  4816  001554  500F               	movf	(??_TMR0_Initialize+1)^0,w,c
  4817  001556  6E4C               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4818  001558                     
  4819                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4820  001558  94F2               	bcf	242,2,c	;volatile
  4821  00155A                     
  4822                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4823  00155A  8AF2               	bsf	242,5,c	;volatile
  4824  00155C                     
  4825                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4826  00155C  0ED4               	movlw	low _TMR0_DefaultInterruptHandler
  4827  00155E  6E0C               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4828  001560  0E16               	movlw	high _TMR0_DefaultInterruptHandler
  4829  001562  6E0D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4830  001564  EC4E  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  4831  001568                     
  4832                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  4833  001568  0E9F               	movlw	159
  4834  00156A  6ED5               	movwf	213,c	;volatile
  4835  00156C  0012               	return		;funcret
  4836  00156E                     __end_of_TMR0_Initialize:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _TMR0_SetInterruptHandler *****************
  4840 ;; Defined at:
  4841 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  InterruptHan    2   11[COMRAM] PTR FTN()void 
  4844 ;;		 -> TMR0_DefaultInterruptHandler(1), myTMR0ISR(1), 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;Total ram usage:        2 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    4
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_main
  4867 ;;		_TMR0_Initialize
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text21
  4872  00169C                     __ptext21:
  4873                           	callstack 0
  4874  00169C                     _TMR0_SetInterruptHandler:
  4875                           	callstack 26
  4876  00169C                     
  4877                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4878  00169C  C00C  F0A3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4879  0016A0  C00D  F0A4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4880  0016A4  0012               	return		;funcret
  4881  0016A6                     __end_of_TMR0_SetInterruptHandler:
  4882                           	callstack 0
  4883                           
  4884 ;; *************** function _PIN_MANAGER_Initialize *****************
  4885 ;; Defined at:
  4886 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, status,2
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;Total ram usage:        0 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:    4
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_SYSTEM_Initialize
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	text22
  4915  00156E                     __ptext22:
  4916                           	callstack 0
  4917  00156E                     _PIN_MANAGER_Initialize:
  4918                           	callstack 25
  4919  00156E                     
  4920                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4921  00156E  0E00               	movlw	0
  4922  001570  6E89               	movwf	137,c	;volatile
  4923                           
  4924                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4925  001572  0E00               	movlw	0
  4926  001574  6E8A               	movwf	138,c	;volatile
  4927                           
  4928                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4929  001576  0E00               	movlw	0
  4930  001578  6E8B               	movwf	139,c	;volatile
  4931                           
  4932                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  4933  00157A  0EBF               	movlw	191
  4934  00157C  6E92               	movwf	146,c	;volatile
  4935  00157E                     
  4936                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  4937  00157E  6893               	setf	147,c	;volatile
  4938                           
  4939                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  4940  001580  0EBF               	movlw	191
  4941  001582  6E94               	movwf	148,c	;volatile
  4942                           
  4943                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4944  001584  0E3C               	movlw	60
  4945  001586  010F               	movlb	15	; () banked
  4946  001588  6F3A               	movwf	58,b	;volatile
  4947                           
  4948                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  4949  00158A  0E3F               	movlw	63
  4950  00158C  6F39               	movwf	57,b	;volatile
  4951                           
  4952                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4953  00158E  0E2F               	movlw	47
  4954  001590  6F38               	movwf	56,b	;volatile
  4955                           
  4956                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4957  001592  0E00               	movlw	0
  4958  001594  6E61               	movwf	97,c	;volatile
  4959  001596                     
  4960                           ; BSR set to: 15
  4961                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4962  001596  8EF1               	bsf	241,7,c	;volatile
  4963  001598                     
  4964                           ; BSR set to: 15
  4965  001598  0012               	return		;funcret
  4966  00159A                     __end_of_PIN_MANAGER_Initialize:
  4967                           	callstack 0
  4968                           
  4969 ;; *************** function _OSCILLATOR_Initialize *****************
  4970 ;; Defined at:
  4971 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;		None
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;		None
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      void 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;Total ram usage:        0 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    4
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_SYSTEM_Initialize
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text23
  5000  001612                     __ptext23:
  5001                           	callstack 0
  5002  001612                     _OSCILLATOR_Initialize:
  5003                           	callstack 25
  5004  001612                     
  5005                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  5006  001612  0E70               	movlw	112
  5007  001614  6ED3               	movwf	211,c	;volatile
  5008                           
  5009                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  5010  001616  0E04               	movlw	4
  5011  001618  6ED2               	movwf	210,c	;volatile
  5012                           
  5013                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  5014  00161A  0E40               	movlw	64
  5015  00161C  6E9B               	movwf	155,c	;volatile
  5016  00161E                     l190:
  5017                           
  5018                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  5019  00161E  AED2               	btfss	4050,7,c	;volatile
  5020  001620  EF14  F00B         	goto	u1441
  5021  001624  EF16  F00B         	goto	u1440
  5022  001628                     u1441:
  5023  001628  EF0F  F00B         	goto	l190
  5024  00162C                     u1440:
  5025  00162C  0012               	return		;funcret
  5026  00162E                     __end_of_OSCILLATOR_Initialize:
  5027                           	callstack 0
  5028                           
  5029 ;; *************** function _INTERRUPT_Initialize *****************
  5030 ;; Defined at:
  5031 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		None
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5049 ;;Total ram usage:        0 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    4
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_SYSTEM_Initialize
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text24
  5060  0016CE                     __ptext24:
  5061                           	callstack 0
  5062  0016CE                     _INTERRUPT_Initialize:
  5063                           	callstack 25
  5064  0016CE                     
  5065                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5066  0016CE  9ED0               	bcf	208,7,c	;volatile
  5067  0016D0  0012               	return		;funcret
  5068  0016D2                     __end_of_INTERRUPT_Initialize:
  5069                           	callstack 0
  5070                           
  5071 ;; *************** function _EUSART1_Initialize *****************
  5072 ;; Defined at:
  5073 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;		None
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      void 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;Total ram usage:        0 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    5
  5094 ;; This function calls:
  5095 ;;		_EUSART1_SetErrorHandler
  5096 ;;		_EUSART1_SetFramingErrorHandler
  5097 ;;		_EUSART1_SetOverrunErrorHandler
  5098 ;; This function is called by:
  5099 ;;		_SYSTEM_Initialize
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text25
  5104  00148A                     __ptext25:
  5105                           	callstack 0
  5106  00148A                     _EUSART1_Initialize:
  5107                           	callstack 24
  5108  00148A                     
  5109                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5110  00148A  0E08               	movlw	8
  5111  00148C  6EB8               	movwf	184,c	;volatile
  5112                           
  5113                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5114  00148E  0E90               	movlw	144
  5115  001490  6EAB               	movwf	171,c	;volatile
  5116                           
  5117                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5118  001492  0E24               	movlw	36
  5119  001494  6EAC               	movwf	172,c	;volatile
  5120                           
  5121                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5122  001496  0E82               	movlw	130
  5123  001498  6EAF               	movwf	175,c	;volatile
  5124                           
  5125                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5126  00149A  0E06               	movlw	6
  5127  00149C  6EB0               	movwf	176,c	;volatile
  5128  00149E                     
  5129                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5130  00149E  0E00               	movlw	0
  5131  0014A0  6E0C               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5132  0014A2  0E00               	movlw	0
  5133  0014A4  6E0D               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5134  0014A6  EC58  F00B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5135  0014AA                     
  5136                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5137  0014AA  0E00               	movlw	0
  5138  0014AC  6E0C               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5139  0014AE  0E00               	movlw	0
  5140  0014B0  6E0D               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5141  0014B2  EC53  F00B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5142  0014B6                     
  5143                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5144  0014B6  0E00               	movlw	0
  5145  0014B8  6E0C               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5146  0014BA  0E00               	movlw	0
  5147  0014BC  6E0D               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5148  0014BE  EC5D  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  5149  0014C2                     
  5150                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5151  0014C2  0E00               	movlw	0
  5152  0014C4  0100               	movlb	0	; () banked
  5153  0014C6  6FA5               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5154  0014C8                     
  5155                           ; BSR set to: 0
  5156  0014C8  0012               	return		;funcret
  5157  0014CA                     __end_of_EUSART1_Initialize:
  5158                           	callstack 0
  5159                           
  5160 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5161 ;; Defined at:
  5162 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  5165 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      void 
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, status,0
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;Total ram usage:        2 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:    4
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_EUSART1_Initialize
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           	psect	text26
  5192  0016A6                     __ptext26:
  5193                           	callstack 0
  5194  0016A6                     _EUSART1_SetOverrunErrorHandler:
  5195                           	callstack 24
  5196  0016A6                     
  5197                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5198  0016A6  C00C  F09D         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5199  0016AA  C00D  F09E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5200  0016AE  0012               	return		;funcret
  5201  0016B0                     __end_of_EUSART1_SetOverrunErrorHandler:
  5202                           	callstack 0
  5203                           
  5204 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5205 ;; Defined at:
  5206 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  5209 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;Total ram usage:        2 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    4
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_EUSART1_Initialize
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text27
  5236  0016B0                     __ptext27:
  5237                           	callstack 0
  5238  0016B0                     _EUSART1_SetFramingErrorHandler:
  5239                           	callstack 24
  5240  0016B0                     
  5241                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5242  0016B0  C00C  F09F         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5243  0016B4  C00D  F0A0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5244  0016B8  0012               	return		;funcret
  5245  0016BA                     __end_of_EUSART1_SetFramingErrorHandler:
  5246                           	callstack 0
  5247                           
  5248 ;; *************** function _EUSART1_SetErrorHandler *****************
  5249 ;; Defined at:
  5250 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  5253 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2, status,0
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;Total ram usage:        2 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    4
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_EUSART1_Initialize
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text28
  5280  0016BA                     __ptext28:
  5281                           	callstack 0
  5282  0016BA                     _EUSART1_SetErrorHandler:
  5283                           	callstack 24
  5284  0016BA                     
  5285                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5286  0016BA  C00C  F09B         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5287  0016BE  C00D  F09C         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5288  0016C2  0012               	return		;funcret
  5289  0016C4                     __end_of_EUSART1_SetErrorHandler:
  5290                           	callstack 0
  5291                           
  5292 ;; *************** function _ADC_Initialize *****************
  5293 ;; Defined at:
  5294 ;;		line 62 in file "mcc_generated_files/adc.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; Hardware stack levels required when called:    4
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_SYSTEM_Initialize
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text29
  5323  00165E                     __ptext29:
  5324                           	callstack 0
  5325  00165E                     _ADC_Initialize:
  5326                           	callstack 25
  5327  00165E                     
  5328                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  5329  00165E  0E00               	movlw	0
  5330  001660  6EC1               	movwf	193,c	;volatile
  5331                           
  5332                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  5333  001662  0E26               	movlw	38
  5334  001664  6EC0               	movwf	192,c	;volatile
  5335                           
  5336                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  5337  001666  0E00               	movlw	0
  5338  001668  6EC3               	movwf	195,c	;volatile
  5339                           
  5340                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  5341  00166A  0E00               	movlw	0
  5342  00166C  6EC4               	movwf	196,c	;volatile
  5343                           
  5344                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  5345  00166E  0E11               	movlw	17
  5346  001670  6EC2               	movwf	194,c	;volatile
  5347  001672  0012               	return		;funcret
  5348  001674                     __end_of_ADC_Initialize:
  5349                           	callstack 0
  5350                           
  5351 ;; *************** function _EUSART1_is_rx_ready *****************
  5352 ;; Defined at:
  5353 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      _Bool 
  5360 ;; Registers used:
  5361 ;;		wreg
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;Total ram usage:        0 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    4
  5374 ;; This function calls:
  5375 ;;		Nothing
  5376 ;; This function is called by:
  5377 ;;		_main
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text30
  5382  001674                     __ptext30:
  5383                           	callstack 0
  5384  001674                     _EUSART1_is_rx_ready:
  5385                           	callstack 26
  5386  001674                     
  5387                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5388  001674  BA9E               	btfsc	158,5,c	;volatile
  5389  001676  EF3F  F00B         	goto	u1461
  5390  00167A  EF42  F00B         	goto	u1460
  5391  00167E                     u1461:
  5392  00167E  0E01               	movlw	1
  5393  001680  EF43  F00B         	goto	u1466
  5394  001684                     u1460:
  5395  001684  0E00               	movlw	0
  5396  001686                     u1466:
  5397  001686  0012               	return		;funcret
  5398  001688                     __end_of_EUSART1_is_rx_ready:
  5399                           	callstack 0
  5400                           
  5401 ;; *************** function _EUSART1_Read *****************
  5402 ;; Defined at:
  5403 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      unsigned char 
  5410 ;; Registers used:
  5411 ;;		wreg, status,2
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;Total ram usage:        0 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    4
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_main
  5428 ;;		_getch
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text31
  5433  00159A                     __ptext31:
  5434                           	callstack 0
  5435  00159A                     _EUSART1_Read:
  5436                           	callstack 26
  5437  00159A                     l293:
  5438                           
  5439                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5440  00159A  AA9E               	btfss	158,5,c	;volatile
  5441  00159C  EFD2  F00A         	goto	u1471
  5442  0015A0  EFD4  F00A         	goto	u1470
  5443  0015A4                     u1471:
  5444  0015A4  EFCD  F00A         	goto	l293
  5445  0015A8                     u1470:
  5446  0015A8                     
  5447                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5448  0015A8  0E00               	movlw	0
  5449  0015AA  0100               	movlb	0	; () banked
  5450  0015AC  6FA5               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5451  0015AE                     
  5452                           ; BSR set to: 0
  5453                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5454  0015AE  A2AB               	btfss	171,1,c	;volatile
  5455  0015B0  EFDC  F00A         	goto	u1481
  5456  0015B4  EFDE  F00A         	goto	u1480
  5457  0015B8                     u1481:
  5458  0015B8  EFE0  F00A         	goto	l2318
  5459  0015BC                     u1480:
  5460  0015BC                     
  5461                           ; BSR set to: 0
  5462                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5463  0015BC  98AB               	bcf	171,4,c	;volatile
  5464                           
  5465                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5466  0015BE  88AB               	bsf	171,4,c	;volatile
  5467  0015C0                     l2318:
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5471  0015C0  50AE               	movf	174,w,c	;volatile
  5472  0015C2                     
  5473                           ; BSR set to: 0
  5474  0015C2  0012               	return		;funcret
  5475  0015C4                     __end_of_EUSART1_Read:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function _INTERRUPT_InterruptManager *****************
  5479 ;; Defined at:
  5480 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;Total ram usage:        4 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    3
  5501 ;; This function calls:
  5502 ;;		_TMR0_ISR
  5503 ;; This function is called by:
  5504 ;;		Interrupt level 2
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	intcode
  5509  000008                     __pintcode:
  5510                           	callstack 0
  5511  000008                     _INTERRUPT_InterruptManager:
  5512                           	callstack 18
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;incstack = 0
  5516  000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5517  00000A  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManager
  5518  00000E  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5519  000012  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5520  000016  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5521  00001A                     
  5522                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5523  00001A  AAF2               	btfss	242,5,c	;volatile
  5524  00001C  EF12  F000         	goto	i2u174_41
  5525  000020  EF14  F000         	goto	i2u174_40
  5526  000024                     i2u174_41:
  5527  000024  EF1D  F000         	goto	i2l343
  5528  000028                     i2u174_40:
  5529  000028  A4F2               	btfss	242,2,c	;volatile
  5530  00002A  EF19  F000         	goto	i2u175_41
  5531  00002E  EF1B  F000         	goto	i2u175_40
  5532  000032                     i2u175_41:
  5533  000032  EF1D  F000         	goto	i2l343
  5534  000036                     i2u175_40:
  5535  000036                     
  5536                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5537  000036  EC65  F00A         	call	_TMR0_ISR	;wreg free
  5538  00003A                     i2l343:
  5539  00003A  C00B  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5540  00003E  C00A  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5541  000042  C009  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5542  000046  C008  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5543  00004A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5544  00004C  0011               	retfie		f
  5545  00004E                     __end_of_INTERRUPT_InterruptManager:
  5546                           	callstack 0
  5547                           
  5548 ;; *************** function _TMR0_ISR *****************
  5549 ;; Defined at:
  5550 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;		None
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;		None
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      void 
  5557 ;; Registers used:
  5558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;Total ram usage:        0 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    2
  5571 ;; This function calls:
  5572 ;;		Absolute function
  5573 ;;		_TMR0_DefaultInterruptHandler
  5574 ;;		_myTMR0ISR
  5575 ;; This function is called by:
  5576 ;;		_INTERRUPT_InterruptManager
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text33
  5581  0014CA                     __ptext33:
  5582                           	callstack 0
  5583  0014CA                     _TMR0_ISR:
  5584                           	callstack 18
  5585  0014CA                     
  5586                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5587  0014CA  94F2               	bcf	242,2,c	;volatile
  5588  0014CC                     
  5589                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5590  0014CC  504C               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5591  0014CE  6ED7               	movwf	215,c	;volatile
  5592  0014D0                     
  5593                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5594  0014D0  C04B  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5595  0014D4                     
  5596                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5597  0014D4  0100               	movlb	0	; () banked
  5598  0014D6  51A3               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5599  0014D8  11A4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5600  0014DA  B4D8               	btfsc	status,2,c
  5601  0014DC  EF72  F00A         	goto	i2u149_41
  5602  0014E0  EF74  F00A         	goto	i2u149_40
  5603  0014E4                     i2u149_41:
  5604  0014E4  EF80  F00A         	goto	i2l158
  5605  0014E8                     i2u149_40:
  5606  0014E8                     
  5607                           ; BSR set to: 0
  5608                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  5609  0014E8  D802               	call	i2u150_48
  5610  0014EA  EF80  F00A         	goto	i2u150_49
  5611  0014EE                     i2u150_48:
  5612  0014EE  0005               	push	
  5613  0014F0  6EFA               	movwf	pclath,c
  5614  0014F2  51A3               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5615  0014F4  6EFD               	movwf	tosl,c
  5616  0014F6  51A4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5617  0014F8  6EFE               	movwf	tosh,c
  5618  0014FA  6AFF               	clrf	tosu,c
  5619  0014FC  50FA               	movf	pclath,w,c
  5620  0014FE  0012               	return		;indir
  5621  001500                     i2u150_49:
  5622  001500                     i2l158:
  5623  001500  0012               	return		;funcret
  5624  001502                     __end_of_TMR0_ISR:
  5625                           	callstack 0
  5626                           
  5627 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5628 ;; Defined at:
  5629 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;		None
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;		None
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      void 
  5636 ;; Registers used:
  5637 ;;		None
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;Total ram usage:        0 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; This function calls:
  5650 ;;		Nothing
  5651 ;; This function is called by:
  5652 ;;		_TMR0_Initialize
  5653 ;;		_TMR0_ISR
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text34
  5658  0016D4                     __ptext34:
  5659                           	callstack 0
  5660  0016D4                     _TMR0_DefaultInterruptHandler:
  5661                           	callstack 19
  5662  0016D4  0012               	return		;funcret
  5663  0016D6                     __end_of_TMR0_DefaultInterruptHandler:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function _myTMR0ISR *****************
  5667 ;; Defined at:
  5668 ;;		line 228 in file "main.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  micReading      1    6[COMRAM] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;Total ram usage:        5 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    1
  5689 ;; This function calls:
  5690 ;;		i2_TMR0_WriteTimer
  5691 ;; This function is called by:
  5692 ;;		_main
  5693 ;;		_TMR0_ISR
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           	psect	text35
  5698  000FAA                     __ptext35:
  5699                           	callstack 0
  5700  000FAA                     _myTMR0ISR:
  5701                           	callstack 18
  5702  000FAA                     
  5703                           ;main.c: 231:     uint8_t micReading = ADRESH;
  5704  000FAA  CFC4 F007          	movff	4036,myTMR0ISR@micReading	;volatile
  5705                           
  5706                           ;main.c: 236:     ADCON0bits.GO_NOT_DONE = 1;
  5707  000FAE  82C2               	bsf	194,1,c	;volatile
  5708                           
  5709                           ;main.c: 240:     switch(timerState){
  5710  000FB0  EF3E  F008         	goto	i2l2234
  5711  000FB4                     i2l2208:
  5712                           
  5713                           ;main.c: 244:             if(fillBuffer){
  5714  000FB4  5050               	movf	_fillBuffer^0,w,c
  5715  000FB6  B4D8               	btfsc	status,2,c
  5716  000FB8  EFE0  F007         	goto	i2u140_41
  5717  000FBC  EFE2  F007         	goto	i2u140_40
  5718  000FC0                     i2u140_41:
  5719  000FC0  EF57  F008         	goto	i2l88
  5720  000FC4                     i2u140_40:
  5721  000FC4                     
  5722                           ;main.c: 245:                 timerState = MIC_WAIT_FOR_TRIGGER;
  5723  000FC4  0E01               	movlw	1
  5724  000FC6  6E4F               	movwf	_timerState^0,c
  5725                           
  5726                           ;main.c: 246:                 bufferIdx = 0;
  5727  000FC8  0E00               	movlw	0
  5728  000FCA  6E4E               	movwf	(_bufferIdx+1)^0,c
  5729  000FCC  0E00               	movlw	0
  5730  000FCE  6E4D               	movwf	_bufferIdx^0,c
  5731                           
  5732                           ;main.c: 247:                 fillBuffer = 0;
  5733  000FD0  0E00               	movlw	0
  5734  000FD2  6E50               	movwf	_fillBuffer^0,c
  5735  000FD4  EF57  F008         	goto	i2l88
  5736  000FD8                     i2l2212:
  5737                           
  5738                           ;main.c: 253:             if(micReading >= 128 + thresholdRange || micReading <= 128 - t
      +                          hresholdRange){
  5739  000FD8  0E80               	movlw	128
  5740  000FDA  0101               	movlb	1	; () banked
  5741  000FDC  2593               	addwf	_thresholdRange& (0+255),w,b
  5742  000FDE  6E03               	movwf	??_myTMR0ISR^0,c
  5743  000FE0  0E00               	movlw	0
  5744  000FE2  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  5745  000FE4  6E04               	movwf	(??_myTMR0ISR+1)^0,c
  5746  000FE6  5007               	movf	myTMR0ISR@micReading^0,w,c
  5747  000FE8  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  5748  000FEA  6A06               	clrf	(??_myTMR0ISR+3)^0,c
  5749  000FEC  5003               	movf	??_myTMR0ISR^0,w,c
  5750  000FEE  5C05               	subwf	(??_myTMR0ISR+2)^0,w,c
  5751  000FF0  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5752  000FF2  5806               	subwfb	(??_myTMR0ISR+3)^0,w,c
  5753  000FF4  B0D8               	btfsc	status,0,c
  5754  000FF6  EFFF  F007         	goto	i2u141_41
  5755  000FFA  EF01  F008         	goto	i2u141_40
  5756  000FFE                     i2u141_41:
  5757  000FFE  EF17  F008         	goto	i2l2216
  5758  001002                     i2u141_40:
  5759  001002                     
  5760                           ; BSR set to: 1
  5761  001002  5007               	movf	myTMR0ISR@micReading^0,w,c
  5762  001004  6E03               	movwf	??_myTMR0ISR^0,c
  5763  001006  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  5764  001008  0E80               	movlw	128
  5765  00100A  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  5766  00100C  0E00               	movlw	0
  5767  00100E  6E06               	movwf	(??_myTMR0ISR+3)^0,c
  5768  001010  5193               	movf	_thresholdRange& (0+255),w,b
  5769  001012  5E05               	subwf	(??_myTMR0ISR+2)^0,f,c
  5770  001014  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  5771  001016  5A06               	subwfb	(??_myTMR0ISR+3)^0,f,c
  5772  001018  5003               	movf	??_myTMR0ISR^0,w,c
  5773  00101A  5C05               	subwf	(??_myTMR0ISR+2)^0,w,c
  5774  00101C  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5775  00101E  5806               	subwfb	(??_myTMR0ISR+3)^0,w,c
  5776  001020  A0D8               	btfss	status,0,c
  5777  001022  EF15  F008         	goto	i2u142_41
  5778  001026  EF17  F008         	goto	i2u142_40
  5779  00102A                     i2u142_41:
  5780  00102A  EF57  F008         	goto	i2l88
  5781  00102E                     i2u142_40:
  5782  00102E                     i2l2216:
  5783                           
  5784                           ; BSR set to: 1
  5785                           ;main.c: 254:                 adc_reading[bufferIdx] = micReading;
  5786  00102E  0E00               	movlw	low _adc_reading
  5787  001030  244D               	addwf	_bufferIdx^0,w,c
  5788  001032  6ED9               	movwf	fsr2l,c
  5789  001034  0E02               	movlw	high _adc_reading
  5790  001036  204E               	addwfc	(_bufferIdx+1)^0,w,c
  5791  001038  6EDA               	movwf	fsr2h,c
  5792  00103A  C007  FFDF         	movff	myTMR0ISR@micReading,indf2
  5793  00103E                     
  5794                           ; BSR set to: 1
  5795                           ;main.c: 255:                 bufferIdx += 1;
  5796  00103E  4A4D               	infsnz	_bufferIdx^0,f,c
  5797  001040  2A4E               	incf	(_bufferIdx+1)^0,f,c
  5798  001042                     
  5799                           ; BSR set to: 1
  5800                           ;main.c: 256:                 timerState = MIC_ACQUIRE;
  5801  001042  0E02               	movlw	2
  5802  001044  6E4F               	movwf	_timerState^0,c
  5803  001046  EF57  F008         	goto	i2l88
  5804  00104A                     i2l2222:
  5805                           
  5806                           ;main.c: 260:             adc_reading[bufferIdx] = micReading;
  5807  00104A  0E00               	movlw	low _adc_reading
  5808  00104C  244D               	addwf	_bufferIdx^0,w,c
  5809  00104E  6ED9               	movwf	fsr2l,c
  5810  001050  0E02               	movlw	high _adc_reading
  5811  001052  204E               	addwfc	(_bufferIdx+1)^0,w,c
  5812  001054  6EDA               	movwf	fsr2h,c
  5813  001056  C007  FFDF         	movff	myTMR0ISR@micReading,indf2
  5814  00105A                     
  5815                           ;main.c: 261:             bufferIdx += 1;
  5816  00105A  4A4D               	infsnz	_bufferIdx^0,f,c
  5817  00105C  2A4E               	incf	(_bufferIdx+1)^0,f,c
  5818  00105E                     
  5819                           ;main.c: 262:             if(bufferIdx >= 256){
  5820  00105E  044E               	decf	(_bufferIdx+1)^0,w,c
  5821  001060  A0D8               	btfss	status,0,c
  5822  001062  EF35  F008         	goto	i2u143_41
  5823  001066  EF37  F008         	goto	i2u143_40
  5824  00106A                     i2u143_41:
  5825  00106A  EF57  F008         	goto	i2l88
  5826  00106E                     i2u143_40:
  5827  00106E                     
  5828                           ;main.c: 264:                 samplesCollected = 1;
  5829  00106E  0E01               	movlw	1
  5830  001070  0101               	movlb	1	; () banked
  5831  001072  6F95               	movwf	_samplesCollected& (0+255),b
  5832                           
  5833                           ;main.c: 265:                 timerState = MIC_IDLE;
  5834  001074  0E00               	movlw	0
  5835  001076  6E4F               	movwf	_timerState^0,c
  5836  001078  EF57  F008         	goto	i2l88
  5837  00107C                     i2l2234:
  5838  00107C  504F               	movf	_timerState^0,w,c
  5839  00107E  6E03               	movwf	??_myTMR0ISR^0,c
  5840  001080  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  5841                           
  5842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5843                           ; Switch size 1, requested type "simple"
  5844                           ; Number of cases is 1, Range of values is 0 to 0
  5845                           ; switch strategies available:
  5846                           ; Name         Instructions Cycles
  5847                           ; simple_byte            4     3 (average)
  5848                           ;	Chosen strategy is simple_byte
  5849  001082  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5850  001084  0A00               	xorlw	0	; case 0
  5851  001086  B4D8               	btfsc	status,2,c
  5852  001088  EF48  F008         	goto	i2l3118
  5853  00108C  EF57  F008         	goto	i2l88
  5854  001090                     i2l3118:
  5855                           
  5856                           ; Switch size 1, requested type "simple"
  5857                           ; Number of cases is 3, Range of values is 0 to 2
  5858                           ; switch strategies available:
  5859                           ; Name         Instructions Cycles
  5860                           ; simple_byte           10     6 (average)
  5861                           ;	Chosen strategy is simple_byte
  5862  001090  5003               	movf	??_myTMR0ISR^0,w,c
  5863  001092  0A00               	xorlw	0	; case 0
  5864  001094  B4D8               	btfsc	status,2,c
  5865  001096  EFDA  F007         	goto	i2l2208
  5866  00109A  0A01               	xorlw	1	; case 1
  5867  00109C  B4D8               	btfsc	status,2,c
  5868  00109E  EFEC  F007         	goto	i2l2212
  5869  0010A2  0A03               	xorlw	3	; case 2
  5870  0010A4  B4D8               	btfsc	status,2,c
  5871  0010A6  EF25  F008         	goto	i2l2222
  5872  0010AA  EF57  F008         	goto	i2l88
  5873  0010AE                     i2l88:
  5874  0010AE  0012               	return		;funcret
  5875  0010B0                     __end_of_myTMR0ISR:
  5876                           	callstack 0
  5877                           
  5878 ;; *************** function i2_TMR0_WriteTimer *****************
  5879 ;; Defined at:
  5880 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  timerVal        2    0[COMRAM] unsigned short 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1    wreg      void 
  5887 ;; Registers used:
  5888 ;;		wreg, status,2
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;Total ram usage:        2 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		_myTMR0ISR
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text36
  5908  0016C4                     __ptext36:
  5909                           	callstack 0
  5910  0016C4                     i2_TMR0_WriteTimer:
  5911                           	callstack 18
  5912  0016C4                     
  5913                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5914  0016C4  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  5915  0016C6  6ED7               	movwf	215,c	;volatile
  5916  0016C8                     
  5917                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5918  0016C8  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  5919  0016CC  0012               	return		;funcret
  5920  0016CE                     __end_ofi2_TMR0_WriteTimer:
  5921                           	callstack 0
  5922                           
  5923                           	psect	text37
  5924  000000                     __ptext37:
  5925                           	callstack 0
  5926  000000                     
  5927                           	psect	rparam
  5928  0000                     
  5929                           	psect	temp
  5930  000051                     btemp:
  5931                           	callstack 0
  5932  000051                     	ds	1
  5933  0000                     int$flags	set	btemp
  5934  0000                     wtemp8	set	btemp+1
  5935  0000                     ttemp5	set	btemp+1
  5936  0000                     ttemp6	set	btemp+4
  5937  0000                     ttemp7	set	btemp+8
  5938                           
  5939                           	psect	idloc
  5940                           
  5941                           ;Config register IDLOC0 @ 0x200000
  5942                           ;	unspecified, using default values
  5943  200000                     	org	2097152
  5944  200000  FF                 	db	255
  5945                           
  5946                           ;Config register IDLOC1 @ 0x200001
  5947                           ;	unspecified, using default values
  5948  200001                     	org	2097153
  5949  200001  FF                 	db	255
  5950                           
  5951                           ;Config register IDLOC2 @ 0x200002
  5952                           ;	unspecified, using default values
  5953  200002                     	org	2097154
  5954  200002  FF                 	db	255
  5955                           
  5956                           ;Config register IDLOC3 @ 0x200003
  5957                           ;	unspecified, using default values
  5958  200003                     	org	2097155
  5959  200003  FF                 	db	255
  5960                           
  5961                           ;Config register IDLOC4 @ 0x200004
  5962                           ;	unspecified, using default values
  5963  200004                     	org	2097156
  5964  200004  FF                 	db	255
  5965                           
  5966                           ;Config register IDLOC5 @ 0x200005
  5967                           ;	unspecified, using default values
  5968  200005                     	org	2097157
  5969  200005  FF                 	db	255
  5970                           
  5971                           ;Config register IDLOC6 @ 0x200006
  5972                           ;	unspecified, using default values
  5973  200006                     	org	2097158
  5974  200006  FF                 	db	255
  5975                           
  5976                           ;Config register IDLOC7 @ 0x200007
  5977                           ;	unspecified, using default values
  5978  200007                     	org	2097159
  5979  200007  FF                 	db	255
  5980                           
  5981                           	psect	config
  5982                           
  5983                           ; Padding undefined space
  5984  300000                     	org	3145728
  5985  300000  FF                 	db	255
  5986                           
  5987                           ;Config register CONFIG1H @ 0x300001
  5988                           ;	Oscillator Selection bits
  5989                           ;	FOSC = INTIO67, Internal oscillator block
  5990                           ;	4X PLL Enable
  5991                           ;	PLLCFG = OFF, Oscillator used directly
  5992                           ;	Primary clock enable bit
  5993                           ;	PRICLKEN = ON, Primary clock enabled
  5994                           ;	Fail-Safe Clock Monitor Enable bit
  5995                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5996                           ;	Internal/External Oscillator Switchover bit
  5997                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5998  300001                     	org	3145729
  5999  300001  28                 	db	40
  6000                           
  6001                           ;Config register CONFIG2L @ 0x300002
  6002                           ;	Power-up Timer Enable bit
  6003                           ;	PWRTEN = OFF, Power up timer disabled
  6004                           ;	Brown-out Reset Enable bits
  6005                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6006                           ;	Brown Out Reset Voltage bits
  6007                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6008  300002                     	org	3145730
  6009  300002  1F                 	db	31
  6010                           
  6011                           ;Config register CONFIG2H @ 0x300003
  6012                           ;	Watchdog Timer Enable bits
  6013                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6014                           ;	Watchdog Timer Postscale Select bits
  6015                           ;	WDTPS = 32768, 1:32768
  6016  300003                     	org	3145731
  6017  300003  3C                 	db	60
  6018                           
  6019                           ; Padding undefined space
  6020  300004                     	org	3145732
  6021  300004  FF                 	db	255
  6022                           
  6023                           ;Config register CONFIG3H @ 0x300005
  6024                           ;	CCP2 MUX bit
  6025                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6026                           ;	PORTB A/D Enable bit
  6027                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6028                           ;	P3A/CCP3 Mux bit
  6029                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6030                           ;	HFINTOSC Fast Start-up
  6031                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6032                           ;	Timer3 Clock input mux bit
  6033                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6034                           ;	ECCP2 B output mux bit
  6035                           ;	P2BMX = PORTB5, P2B is on RB5
  6036                           ;	MCLR Pin Enable bit
  6037                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6038  300005                     	org	3145733
  6039  300005  BF                 	db	191
  6040                           
  6041                           ;Config register CONFIG4L @ 0x300006
  6042                           ;	Stack Full/Underflow Reset Enable bit
  6043                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6044                           ;	Single-Supply ICSP Enable bit
  6045                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6046                           ;	Extended Instruction Set Enable bit
  6047                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6048                           ;	Background Debug
  6049                           ;	DEBUG = OFF, Disabled
  6050  300006                     	org	3145734
  6051  300006  85                 	db	133
  6052                           
  6053                           ; Padding undefined space
  6054  300007                     	org	3145735
  6055  300007  FF                 	db	255
  6056                           
  6057                           ;Config register CONFIG5L @ 0x300008
  6058                           ;	Code Protection Block 0
  6059                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6060                           ;	Code Protection Block 1
  6061                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6062                           ;	Code Protection Block 2
  6063                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6064                           ;	Code Protection Block 3
  6065                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6066  300008                     	org	3145736
  6067  300008  0F                 	db	15
  6068                           
  6069                           ;Config register CONFIG5H @ 0x300009
  6070                           ;	Boot Block Code Protection bit
  6071                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6072                           ;	Data EEPROM Code Protection bit
  6073                           ;	CPD = OFF, Data EEPROM not code-protected
  6074  300009                     	org	3145737
  6075  300009  C0                 	db	192
  6076                           
  6077                           ;Config register CONFIG6L @ 0x30000A
  6078                           ;	Write Protection Block 0
  6079                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6080                           ;	Write Protection Block 1
  6081                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6082                           ;	Write Protection Block 2
  6083                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6084                           ;	Write Protection Block 3
  6085                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6086  30000A                     	org	3145738
  6087  30000A  0F                 	db	15
  6088                           
  6089                           ;Config register CONFIG6H @ 0x30000B
  6090                           ;	Configuration Register Write Protection bit
  6091                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6092                           ;	Boot Block Write Protection bit
  6093                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6094                           ;	Data EEPROM Write Protection bit
  6095                           ;	WRTD = OFF, Data EEPROM not write-protected
  6096  30000B                     	org	3145739
  6097  30000B  E0                 	db	224
  6098                           
  6099                           ;Config register CONFIG7L @ 0x30000C
  6100                           ;	Table Read Protection Block 0
  6101                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6102                           ;	Table Read Protection Block 1
  6103                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6104                           ;	Table Read Protection Block 2
  6105                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6106                           ;	Table Read Protection Block 3
  6107                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6108  30000C                     	org	3145740
  6109  30000C  0F                 	db	15
  6110                           
  6111                           ;Config register CONFIG7H @ 0x30000D
  6112                           ;	Boot Block Table Read Protection bit
  6113                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6114  30000D                     	org	3145741
  6115  30000D  40                 	db	64
  6116                           tosu	equ	0xFFF
  6117                           tosh	equ	0xFFE
  6118                           tosl	equ	0xFFD
  6119                           stkptr	equ	0xFFC
  6120                           pclatu	equ	0xFFB
  6121                           pclath	equ	0xFFA
  6122                           pcl	equ	0xFF9
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           prodh	equ	0xFF4
  6128                           prodl	equ	0xFF3
  6129                           indf0	equ	0xFEF
  6130                           postinc0	equ	0xFEE
  6131                           postdec0	equ	0xFED
  6132                           preinc0	equ	0xFEC
  6133                           plusw0	equ	0xFEB
  6134                           fsr0h	equ	0xFEA
  6135                           fsr0l	equ	0xFE9
  6136                           wreg	equ	0xFE8
  6137                           indf1	equ	0xFE7
  6138                           postinc1	equ	0xFE6
  6139                           postdec1	equ	0xFE5
  6140                           preinc1	equ	0xFE4
  6141                           plusw1	equ	0xFE3
  6142                           fsr1h	equ	0xFE2
  6143                           fsr1l	equ	0xFE1
  6144                           bsr	equ	0xFE0
  6145                           indf2	equ	0xFDF
  6146                           postinc2	equ	0xFDE
  6147                           postdec2	equ	0xFDD
  6148                           preinc2	equ	0xFDC
  6149                           plusw2	equ	0xFDB
  6150                           fsr2h	equ	0xFDA
  6151                           fsr2l	equ	0xFD9
  6152                           status	equ	0xFD8

Data Sizes:
    Strings     556
    Constant    0
    Data        2
    BSS         314
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      80
    BANK0           160     57     102
    BANK1           256    147     150
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1332_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[29]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[29]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[29]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), myTMR0ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), myTMR0ISR(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               159   159      0   17755
                                             45 BANK0     12    12      0
                                              0 BANK1    147   147      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                            ___aldiv
                            ___lwdiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   14342
                                             33 BANK0     12     4      8
                            ___aldiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11645
                                             66 COMRAM     2     2      0
                                             27 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   11163
                                             58 COMRAM     8     2      6
                                             18 BANK0      9     9      0
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6701
                                             40 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4435
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             22 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1546
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                             12 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     449
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             11 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             11 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             13 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     159
                                              7 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     159
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           5     5      0     159
                                              2 COMRAM     5     5      0
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   ___aldiv
   ___lwdiv
   ___wmul
   _printf
     ___aldiv (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       i2_TMR0_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     93      96       7       58.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     39      66       5       63.7%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      50       1       85.1%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     24C      12        0.0%
DATA                 0      0     24C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 21 12:17:35 2020

                                            l33 0064                                              l43 0138  
                                            l60 04F6                                              l36 00BC  
                           ___wmul@multiplicand 000E                                 _timer0ReloadVal 004B  
                           myTMR0ISR@micReading 0007                                             l115 1598  
                                           l212 1672                                             l300 164A  
                                           l151 169A                                             l303 165C  
                                           l321 16B8                                             l161 16A4  
                                           l139 156C                                             l324 16AE  
                                           l309 1690                                             l190 161E  
                                           l327 16C2                                             l336 16D0  
                                           l193 162C                                             l425 0FA8  
                                           l346 1610                                             l187 1646  
                                           l284 1686                                             l276 14C8  
                                           l460 0D38                                             l293 159A  
                                           l297 15C2                                             l473 0E9C  
                                           l844 134E                                             l837 1346  
                                           _abs 144A                                             _pad 1184  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1103 0BB0  
                                          l1120 1488                                            l1112 13AA  
                                          l1024 15EA                                            l1113 13B2  
                                          l1051 11C8                                            ?_abs 001E  
                                          l1132 12DA                                            l1140 1448  
                                          l1117 1480                                            l1070 1156  
                                          l1054 120A                                            l1072 1182  
                                          l1056 1244                                            l1080 0744  
                                          l3000 037E                                            l1146 1536  
                                          l3010 0424                                            l3002 039A  
                                          l1067 1114                                            l3012 0430  
                                          l3004 03BC                                            l2310 159A  
                                          l2150 16BA                                            l1078 073C  
                                          l3030 0506                                            l3022 04DE  
                                          l3014 04AA                                            l3006 03D2  
                                          l2312 15A8                                            l2240 156E  
                                          l2144 169C                                            l2400 133A  
                                          l3040 0538                                            l3024 04EC  
                                          l3016 04BA                                            l3008 0410  
                                          l2314 15AE                                            l2306 1674  
                                          l2146 16B0                                            l2242 157E  
                                          l2250 1542                                            l2402 1340  
                                          l1098 097C                                            l3050 05DA  
                                          l3042 0542                                            l3034 0520  
                                          l3018 04C4                                            l2316 15BC  
                                          l2148 16A6                                            l2260 16CE  
                                          l2244 1596                                            l2252 1558  
                                          l2340 0EA2                                            l2332 15EC  
                                          l3116 065A                                            l3052 0626  
                                          l3044 0580                                            l3036 052E  
                                          l3028 04FC                                            l2318 15C0  
                                          l2270 14AA                                            l2262 1612  
                                          l2254 155A                                            l2246 1538  
                                          l2350 0EE2                                            l2342 0EB0  
                                          l2334 1608                                            l3054 062E  
                                          l3046 0594                                            l2264 165E  
                                          l2272 14B6                                            l2256 155C  
                                          l2248 153A                                            l2360 0F20  
                                          l2352 0EE6                                            l2344 0EC0  
                                          l3048 059C                                            l2274 14C2  
                                          l2266 148A                                            l2258 1568  
                                          l2290 163A                                            l2370 0F68  
                                          l2362 0F2E                                            l2354 0EF6  
                                          l2346 0EC4                                            l2338 0E9E  
                                          l3058 0644                                            l2268 149E  
                                          l2292 163E                                            l2284 162E  
                                          l2372 0F72                                            l2364 0F38  
                                          l2356 0F0C                                            l2348 0ED2  
                                          l2620 168A                                            l2700 0D3E  
                                          l2294 1642                                            l2286 1632  
                                          l2366 0F56                                            l2358 0F14  
                                          l2374 0F78                                            l2390 1306  
                                          l2382 12DC                                            l2630 1292  
                                          l2622 1246                                            l2710 0D9E  
                                          l2702 0D4C                                            l2288 1636  
                                          l2296 1692                                            l2376 0F88  
                                          l2368 0F66                                            l2392 1314  
                                          l2384 12E4                                            l2616 164A  
                                          l2632 12C8                                            l2624 1258  
                                          l2720 0E14                                            l2712 0DBC  
                                          l2704 0D6C                                            l2640 1424  
                                          l2800 0730                                            l2298 1696  
                                          l2378 0F98                                            l2394 131A  
                                          l2386 12F6                                            l2618 1658  
                                          l2626 126A                                            l2730 0E7C  
                                          l2722 0E34                                            l2714 0DC4  
                                          l2706 0D70                                            l2642 1428  
                                          l2650 152A                                            l2810 077A  
                                          l2802 074C                                            l2396 1330  
                                          l2388 12FE                                            l2628 1274  
                                          l2660 0BE4                                            l2724 0E46  
                                          l2716 0DD8                                            l2708 0D7E  
                                          l2636 1406                                            l2644 1502  
                                          l2740 11B4                                            l2820 0818  
                                          l2812 0782                                            l2804 075E  
                                          l2900 1350                                            l2398 1338  
                                          l2670 0C26                                            l2662 0BE8  
                                          l2654 0BB2                                            l2718 0DE6  
                                          l2726 0E4C                                            l2638 1412  
                                          l2646 150E                                            l2750 1218  
                                          l2742 11C0                                            l2734 1184  
                                          l2830 08EA                                            l2814 0788  
                                          l2822 087C                                            l2806 076C  
                                          l2902 1358                                            l2910 15CE  
                                          l2760 10B0                                            l2680 0C80  
                                          l2672 0C44                                            l2664 0BF6  
                                          l2656 0BB6                                            l2728 0E5C  
                                          l2648 1512                                            l2752 122C  
                                          l2744 11D4                                            l2736 1192  
                                          l2840 0930                                            l2824 0898  
                                          l2832 08F8                                            l2816 080A  
                                          l2808 0772                                            l2904 1366  
                                          l2920 0072                                            l2770 10FA  
                                          l2762 10C2                                            l2682 0CAE  
                                          l2674 0C4C                                            l2690 0CE8  
                                          l2666 0C16                                            l2658 0BC4  
                                          l2746 11E8                                            l2738 11A6  
                                          l2842 093C                                            l2834 090A  
                                          l2826 08B6                                            l2818 0812  
                                          l2850 097E                                            l2906 138C  
                                          l2930 009E                                            l2922 007E  
                                          l2914 0052                                            l2780 1138  
                                          l2764 10CE                                            l2692 0CF8  
                                          l2684 0CCE                                            l2676 0C60  
                                          l2668 0C1A                                            l2756 144A  
                                          l2748 11EC                                            l2844 0944  
                                          l2836 0918                                            l2828 08D0  
                                          l2860 09EC                                            l2852 09A4  
                                          l2908 15C4                                            l2940 00E0  
                                          l2932 00AC                                            l2924 0080  
                                          l2916 0056                                            l2782 1164  
                                          l2774 110C                                            l2766 10DA  
                                          l2694 0D18                                            l2686 0CD0  
                                          l2678 0C6E                                            l2758 1464  
                                          l2838 091E                                            l2846 0954  
                                          l2790 06BC                                            l2870 0A88  
                                          l2862 0A20                                            l2854 09B2  
                                          l2950 0124                                            l2942 00F6  
                                          l2934 00BA                                            l2926 0082  
                                          l2918 0062                                            ?_pad 001E  
                                          l2784 1176                                            l2776 1120  
                                          l2768 10E8                                            l2688 0CE2  
                                          l2792 06E6                                            l2880 0B3E  
                                          l2872 0AD2                                            l2856 09C2  
                                          l2960 018E                                            l2952 0160  
                                          l2936 00CA                                            l2928 0090  
                                          l2778 1134                                            l2698 0D3A  
                                          l2794 0706                                            l2882 0B52  
                                          l2866 0A3C                                            l2858 09C6  
                                          l2970 01CE                                            l2954 0166  
                                          l2938 00DC                                            l2796 0714  
                                          l2788 069C                                            l2876 0B0A  
                                          l2868 0A62                                            l2892 0B78  
                                          l2980 0202                                            l2972 01DE  
                                          l2956 0176                                            l2948 0100  
                                          l2798 0716                                            l2894 0B9E  
                                          l2878 0B30                                            l2886 0B5E  
                                          l2990 0266                                            l2982 022A  
                                          l2974 01E2                                            l2966 0196  
                                          l2958 0184                                            l2888 0B6C  
                                          l2992 0272                                            l2984 0230  
                                          l2976 01E6                                            l2968 01B2  
                                          l2994 0310                                            l2986 0246  
                                          l2978 01F6                                            l2996 0364  
                                          l2988 025C                                            l2998 0368  
                                          STR_1 FFCE                                            STR_2 FF2A  
                                          STR_3 FFD9                                            STR_4 FFFC  
                                          STR_5 FE4F                                            STR_6 FFE2  
                                          STR_7 FFF8                                            STR_8 FE1A  
                                          STR_9 FFF8                                            u2000 1464  
                                          u2001 1460                                            u2010 10C2  
                                          u2011 10BE                                            u2020 10E8  
                                          u2100 0730                                            u2021 10E4  
                                          u2101 072C                                            u2030 1108  
                                          u2110 075E                                            u2031 1104  
                                          u2111 075A                                            u2040 1156  
                                          u2200 0930                                            u2120 076C  
                                          u2041 1152                                            u2201 092C  
                                          u2121 0768                                            u2050 1164  
                                          u2130 0898                                            u2210 09A4  
                                          u2051 1160                                            u2131 0894  
                                          u2211 09A0                                            u2140 08B6  
                                          u2060 06CE                                            u2220 09EC  
                                          u2300 0124                                            u2141 08B2  
                                          u2061 06C8                                            u2221 09E8  
                                          u2301 0120                                            _LATA 000F89  
                                          u1510 0EB0                                            u2150 08D0  
                                          u2070 06D0                                            u2230 0A62  
                                          u2310 0176                                            _LATB 000F8A  
                                          u1511 0EAC                                            u2151 08CC  
                                          u2231 0A5E                                            u2311 0172  
                                          _LATC 000F8B                                            u1440 162C  
                                          u1520 0ED2                                            u2160 08EA  
                                          u2080 06E6                                            u2240 0A88  
                                          u2400 0594                                            u2320 01B2  
                                          u1441 1628                                            u1521 0ECE  
                                          u2161 08E6                                            u2081 06E2  
                                          u2241 0A84                                            u2401 0590  
                                          u2321 01AE                                            u1530 0F0C  
                                          u2170 08F8                                            u2090 0714  
                                          u2250 0B30                                            u2330 01CE  
                                          u1531 0F08                                            u2171 08F4  
                                          u2091 0710                                            u2251 0B2C  
                                          u2331 01CA                                            u1460 1684  
                                          u1540 0F2E                                            u2180 090A  
                                          u2260 13AA                                            u2340 01F6  
                                          u1461 167E                                            u1541 0F2A  
                                          u2181 0906                                            u2261 13A6  
                                          u2341 01F2                                            u1470 15A8  
                                          u1550 0F56                                            u2190 0918  
                                          u2350 0246                                            u2270 0072  
                                          u1471 15A4                                            u1551 0F52  
                                          u2191 0914                                            u2351 0242  
                                          u2271 006E                                            u1480 15BC  
                                          u1560 0F88                                            u1800 12C8  
                                          u2360 037E                                            u2280 00CA  
                                          u1481 15B8                                            u1561 0F84  
                                          u1801 12C4                                            u2361 037A  
                                          u2281 00C6                                            u1466 1686  
                                          u1570 12F6                                            u1810 1448  
                                          u2370 0424                                            u2290 00DC  
                                          u1571 12F2                                            u1811 1444  
                                          u2371 0420                                            u2291 00D8  
                                          u1580 1314                                            u1900 0D4C  
                                          u1820 152A                                            u2380 04DA  
                                          u1581 1310                                            u1901 0D48  
                                          u1821 1526                                            u2381 04D6  
                                          u1590 1330                                            u1830 0BC4  
                                          u1910 0D7E                                            u2390 051C  
                                          u1591 132C                                            u1831 0BC0  
                                          u1911 0D7A                                            u2391 0518  
                                          u1760 1658                                            u1840 0BF6  
                                          u1920 0DBC                                            u1761 1654  
                                          u1841 0BF2                                            u1921 0DB8  
                                          u1770 1258                                            u1930 0DE6  
                                          u1771 1254                                            u1851 0C20  
                                          u1931 0DE2                                            u1780 126A  
                                          u1860 0C44                                            u1940 0E14  
                                          u1781 1266                                            u1861 0C40  
                                          u1941 0E10                                            u1790 1292  
                                          u1870 0C6E                                            u1950 0E5C  
                                          u1791 128E                                            u1871 0C6A  
                                          u1951 0E58                                            u1880 0CAE  
                                          u1960 1192                                            u1881 0CAA  
                                          u1961 118E                                            u1890 0CF8  
                                          u1970 11B4                                            u1891 0CF4  
                                          u1971 11B0                                            u1980 120A  
                                          u1981 1206                                            u1990 1218  
                                          u1991 1214                                            i2l88 10AE  
                                          _WPUB 000F61                                   _EUSART1_Write 1648  
                                          abs@a 001E                                            _dbuf 00A6  
                                          _ctoa 10B0                                            _main 0052  
                                          _dtoa 069C                                   ?_EUSART1_Read 0001  
                                          _prec 0047                                            _nout 0099  
                                          pad@i 0025                                            pad@p 0022  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0027                                            fsr2l 000FD9  
                                          btemp 0051                                            prodh 000FF4  
                                          prodl 000FF3                                            start 004E  
                                  ___param_bank 000000                                           ??_abs 0020  
                                         ??_pad 0024                         __end_of_TMR0_Initialize 156E  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 162E                                 __end_of___aldiv 0FAA  
                               __end_of___aodiv 0D3A                                           ?_ctoa 0017  
                                         ?_main 0001                                           ?_dtoa 0029  
                               __end_of___aomod 0E9E                                           STR_10 FEAE  
                                         STR_11 FFB0                                           STR_12 FF0F  
                                         STR_20 FDD3                                           STR_21 FED1  
                                         STR_13 FEF2                                           STR_22 FFF2  
                                         STR_14 FED1                                           STR_23 FE81  
                                         STR_15 FFBF                                           STR_24 FFF5  
                                         STR_16 FFEB                                           STR_17 FF8A  
                                         STR_25 FF43                                           STR_26 FF43  
                                         STR_18 FF5B                                           STR_27 FF43  
                                         STR_19 FE83                                           STR_28 FF73  
                                         STR_29 FF9F                                           _T0CON 000FD5  
                               __end_of___lwdiv 1350                                           i2l151 16CC  
                                         i2l164 16D4                                 _TMR0_WriteTimer 1692  
                                         i2l158 1500                                           i2l343 003A  
                                  vfpfcnvrt@fmt 003D                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                       ?_TMR0_SetInterruptHandler 000C  
                              __end_of_TMR0_ISR 1502                                           _flags 0049  
                                         _fputc 1246                                           _fputs 1406  
                                         pad@fp 001E                                           _width 0045  
                                         ctoa@c 0019                                           _putch 1688  
                                         ctoa@l 001B                                           ctoa@w 001D  
                                         main@i 0189                                           dtoa@d 002B  
                                         dtoa@i 0070                                           dtoa@n 0068  
                                         dtoa@p 0062                                           dtoa@s 0066  
                                         dtoa@w 0064                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 000C                                           ttemp5 0052  
                                         ttemp6 0055                                           ttemp7 0059  
                                         status 000FD8                                           wtemp8 0052  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 13B4  
                                  __end_of_ctoa 1184                      __end_of_EUSART1_Initialize 14CA  
                                  __end_of_main 069C                                    __end_of_dtoa 097E  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 001A  
                                        ??_main 008D                                          ??_dtoa 0033  
                                 __activetblptr 000003                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 000E                                          ?_fputs 0017  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l2202 16C4  
                                        i2l2210 0FC4                                          i2l2204 16C8  
                                        i2l2220 1042                                          i2l2212 0FD8  
                                        i2l2222 104A                                          i2l2214 1002  
                                        i2l2206 0FAA                                          i2l2224 105A  
                                        i2l2216 102E                                          i2l2208 0FB4  
                                        i2l2226 105E                                          i2l2218 103E  
                                        i2l2234 107C                                          i2l2330 14E8  
                                        i2l2322 14CA                                          i2l2228 106E  
                                        i2l2324 14CC                                          i2l3118 1090  
                                        i2l2326 14D0                                          i2l2328 14D4  
                                        i2l2560 001A                                          i2l2562 0028  
                                        i2l2564 0036                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   main@crossings 0100  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    vfprintf@cfmt 0043  
                                     ??___aldiv 0014                                       ??___aodiv 001C  
                                     ??___aomod 001C                                          ___wmul 15EC  
                                 main@periodSum 0182                         __end_of_TMR0_WriteTimer 169C  
                                     ??___lwdiv 0010                       i2TMR0_WriteTimer@timerVal 0001  
                      ?_EUSART1_SetErrorHandler 000C                                ?_TMR0_Initialize 0001  
                                        clear_0 13D4                                          clear_1 13EA  
                                        clear_2 13F6                                          _printf 15C4  
                                        pad@buf 0020                ??_EUSART1_SetOverrunErrorHandler 000E  
               ?_EUSART1_SetOverrunErrorHandler 000C                                          ctoa@fp 0017  
                                        dtoa@fp 0029                                          _strlen 1502  
                                        fputc@c 000E                                          fputs@c 001B  
                                        fputs@i 001C                                          fputs@s 0017  
                                  __mediumconst FDD2                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 13B4                                 ??_EUSART1_Write 000C  
      TMR0_SetInterruptHandler@InterruptHandler 000C                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 162E                                      __accesstop 0060  
                       __end_of__initialization 13FC                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0001  
                                  __pidataBANK1 16D2                             ??_SYSTEM_Initialize 0010  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 12DC  
                                 __end_of_fputs 144A                                   __end_of_putch 1692  
                          __end_of_EUSART1_Read 15C4                                         ??_fputc 0012  
                     __end_of_SYSTEM_Initialize 1648                                         ??_fputs 001B  
                            __size_of_myTMR0ISR 0106                                         ??_putch 000D  
                                    __pbssBANK0 0099                                      __pbssBANK1 0195  
                                    __pbssBANK2 0200                 __end_of_EUSART1_SetErrorHandler 16C4  
              __end_of_TMR0_SetInterruptHandler 16A6                                         ?___wmul 000C  
                                    ??_TMR0_ISR 0008                                ?_TMR0_WriteTimer 000C  
                                    _fillBuffer 0050                                         ?_printf 0081  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 000C  
        __end_of_EUSART1_SetFramingErrorHandler 16BA         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 16B0                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0234                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                            _ADC_InterruptHandler 00A1  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aldiv 0E9E                                         ___aodiv 0BB2  
                                       ___aomod 0D3A                                 __size_of___wmul 0026  
                                       ___lwdiv 12DC                               __end_of_myTMR0ISR 10B0  
                                     ?_vfprintf 007B                             _EUSART1_is_rx_ready 1674  
                                       __pcinit 13B4                                         __ramtop 1000  
                                       __ptext0 0052                                         __ptext1 15C4  
                                       __ptext2 1350                                         __ptext3 097E  
                                       __ptext4 069C                                         __ptext5 1184  
                                       __ptext6 1502                                         __ptext7 1406  
                                       __ptext8 144A                                         __ptext9 0D3A  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 1612  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                              ___aldiv@dividend 000C                              _EUSART1_Initialize 148A  
                      ??_PIN_MANAGER_Initialize 000C                                         main@cmd 0186  
                    __size_of_SYSTEM_Initialize 001A                            end_of_initialization 13FC  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0010                     _EUSART1_OverrunErrorHandler 009D  
                                       fputs@fp 0019                               __end_of_vfpfcnvrt 0BB2  
                              ___aldiv@quotient 0016                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002A                                      ??_vfprintf 0043  
                          ??_EUSART1_Initialize 000E                                         strlen@a 000E  
                                       strlen@s 000C                                      _timerState 004F  
                      _TMR0_SetInterruptHandler 169C                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 000C                           ??_EUSART1_is_rx_ready 000C  
                                  _EUSART1_Read 159A                    __end_of_INTERRUPT_Initialize 16D2  
                                   vfpfcnvrt@ap 003F                                     vfpfcnvrt@fp 003B  
                                   vfpfcnvrt@ll 0072                                  __end_of___wmul 1612  
                             __size_of_TMR0_ISR 0038                                  _ADC_Initialize 165E  
                                   _adc_reading 0200                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 15EC                                  __end_of_strlen 1538  
                           start_initialization 13B4                        __size_of_TMR0_Initialize 0036  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 148A  
                                   __end_of_pad 1246                                     putch@txData 000D  
                         __end_of_EUSART1_Write 165E                                     vfprintf@fmt 007D  
                                      ??___wmul 0010                          __end_of_ADC_Initialize 1674  
                                   __pdataBANK1 0193                                 main@avgPeriodUs 0184  
                                      ??_printf 0045                                        ??_strlen 000E  
                                   __pbssCOMRAM 0045                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                ___aodiv@dividend 000C  
              ??_EUSART1_SetFramingErrorHandler 000E                 ?_EUSART1_SetFramingErrorHandler 000C  
                         _TMR0_InterruptHandler 00A3                                ___lwdiv@dividend 000C  
                        _PIN_MANAGER_Initialize 156E                                       _dtoa$1401 0060  
                                     __pintcode 0008                                   __pmediumconst FDD2  
                                      ?___aldiv 000C                                        ?___aodiv 000C  
                                      ?___aomod 000C                                ___aodiv@quotient 001E  
                                      ?___lwdiv 000C                                 ?_ADC_Initialize 0001  
                                     _bufferIdx 004D                    ??_INTERRUPT_InterruptManager 0008  
                             __size_of_vfprintf 0064                                       _myTMR0ISR 0FAA  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 009B  
                       _EUSART1_SetErrorHandler 16BA                                ___lwdiv@quotient 0010  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 16CE  
                               ___aldiv@divisor 0010                               ??_TMR0_Initialize 000E  
                               ___aldiv@counter 0014                                  ___wmul@product 0010  
       EUSART1_SetErrorHandler@interruptHandler 000C                                        i2u140_40 0FC4  
                                      i2u140_41 0FC0                                        i2u141_40 1002  
                                      i2u141_41 0FFE                                        i2u142_40 102E  
                                      i2u142_41 102A                                        i2u143_40 106E  
                                      i2u150_48 14EE                                        i2u143_41 106A  
                                      i2u150_49 1500             __size_of_INTERRUPT_InterruptManager 0046  
                                      i2u149_40 14E8                      ??_TMR0_SetInterruptHandler 000E  
                                      i2u149_41 14E4                                        i2u174_40 0028  
                                      i2u174_41 0024                                        i2u175_40 0036  
                                      i2u175_41 0032                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 14CA  
                                     _vfpfcnvrt 097E                                      _ADCON0bits 000FC2  
                                     main@i_220 018F                                       main@i_221 0187  
                                     main@i_214 018B                                       main@i_225 0191  
                             ___wmul@multiplier 000C                                      ?_myTMR0ISR 0001  
                                     main@crIdx 018D                               i2_TMR0_WriteTimer 16C4  
                                    vfpfcnvrt@c 007A                              ?i2_TMR0_WriteTimer 0001  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                           ??i2_TMR0_WriteTimer 0003                                        __Hrparam 0000  
                                    vfprintf@ap 007F                                        __Lrparam 0000  
                                    vfprintf@fp 007B                         ??_OSCILLATOR_Initialize 000C  
                              __size_of___aldiv 010C                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 0040  
                                    ?_vfpfcnvrt 003B                                __size_of___lwdiv 0074  
                               ___aodiv@divisor 0014                                 ___aodiv@counter 001C  
                     __end_ofi2_TMR0_WriteTimer 16CE                       ??_EUSART1_SetErrorHandler 000E  
                   _EUSART1_DefaultErrorHandler 000000                                 main@periodSumUs 0180  
                   __end_of_EUSART1_is_rx_ready 1688                                 ___lwdiv@divisor 000E  
                               ___lwdiv@counter 0012                                        __ptext10 0BB2  
                                      __ptext11 10B0                                        __ptext20 1538  
                                      __ptext12 1246                                        __ptext21 169C  
                                      __ptext13 1688                                        __ptext30 1674  
                                      __ptext22 156E                                        __ptext14 1648  
                                      __ptext31 159A                                        __ptext23 1612  
                                      __ptext15 15EC                                        __ptext24 16CE  
                                      __ptext16 12DC                                        __ptext33 14CA  
                                      __ptext25 148A                                        __ptext17 0E9E  
                                      __ptext34 16D4                                        __ptext26 16A6  
                                      __ptext18 1692                                        __ptext35 0FAA  
                                      __ptext27 16B0                                        __ptext19 162E  
                                      __ptext36 16C4                                        __ptext28 16BA  
                                      __ptext37 0000                                        __ptext29 165E  
                       TMR0_WriteTimer@timerVal 000C                               ??_TMR0_WriteTimer 000E  
                                 __size_of_ctoa 00D4                                   __size_of_main 064A  
                                 __size_of_dtoa 02E2            __end_of_TMR0_DefaultInterruptHandler 16D6  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 16D4  
EUSART1_SetOverrunErrorHandler@interruptHandler 000C                                        int$flags 0051  
                                      _vfprintf 1350              __end_of_INTERRUPT_InterruptManager 004E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0081  
                   _EUSART1_FramingErrorHandler 009F                                ___aomod@dividend 000C  
                                   ??_myTMR0ISR 0003                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 000C                                        intlevel2 0000  
                              _samplesCollected 0195                                  _thresholdRange 0193  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 16B0  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 16A6  
                                    _RCSTA1bits 000FAB                                ??_ADC_Initialize 000C  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 008B  EUSART1_SetFramingErrorHandler@interruptHandler 000C  
                               ___aomod@divisor 0014                                     ??_vfpfcnvrt 0041  
                               ___aomod@counter 001C                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 00A5                      __size_ofi2_TMR0_WriteTimer 000A  
                               _TMR0_Initialize 1538                                    ___aldiv@sign 0015  
                                  ___aodiv@sign 001D                  __end_of_PIN_MANAGER_Initialize 159A  
                                  ___aomod@sign 001D                                    fp__myTMR0ISR 0000  
