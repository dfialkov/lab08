

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Oct 19 21:54:57 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 05/05/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F26K22 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    90  0000                     
    91 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    92  0000                     
    93 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    94  0000                     
    95                           	psect	idataBANK0
    96  0011AE                     __pidataBANK0:
    97                           	callstack 0
    98                           
    99                           ;initializer for _thresholdRange
   100  0011AE  000A               	dw	10
   101  0000                     _ANSELA	set	3896
   102  0000                     _ANSELB	set	3897
   103  0000                     _ANSELC	set	3898
   104  0000                     _RCONbits	set	4048
   105  0000                     _TXREG1	set	4013
   106  0000                     _RCREG1	set	4014
   107  0000                     _RCSTA1bits	set	4011
   108  0000                     _TXSTA1bits	set	4012
   109  0000                     _PIR1bits	set	3998
   110  0000                     _SPBRGH1	set	4016
   111  0000                     _SPBRG1	set	4015
   112  0000                     _TXSTA1	set	4012
   113  0000                     _RCSTA1	set	4011
   114  0000                     _BAUDCON1	set	4024
   115  0000                     _ADCON0	set	4034
   116  0000                     _ADRESL	set	4035
   117  0000                     _ADCON2	set	4032
   118  0000                     _ADCON1	set	4033
   119  0000                     _OSCTUNE	set	3995
   120  0000                     _OSCCON2	set	4050
   121  0000                     _OSCCON	set	4051
   122  0000                     _T0CON	set	4053
   123  0000                     _TMR0L	set	4054
   124  0000                     _TMR0H	set	4055
   125  0000                     _T0CONbits	set	4053
   126  0000                     _INTCON2bits	set	4081
   127  0000                     _WPUB	set	3937
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISA	set	3986
   131  0000                     _LATC	set	3979
   132  0000                     _LATB	set	3978
   133  0000                     _LATA	set	3977
   134  0000                     _ADRESH	set	4036
   135  0000                     _ADCON0bits	set	4034
   136  0000                     _INTCONbits	set	4082
   137  0000                     _PLLRDY	set	32407
   138                           
   139                           	psect	mediumconst
   140  00FE78                     __pmediumconst:
   141                           	callstack 0
   142  00FE78  00                 	db	0
   143  00FE79                     STR_13:
   144  00FE79  66                 	db	102	;'f'
   145  00FE7A  3A                 	db	58	;':'
   146  00FE7B  20                 	db	32
   147  00FE7C  67                 	db	103	;'g'
   148  00FE7D  61                 	db	97	;'a'
   149  00FE7E  74                 	db	116	;'t'
   150  00FE7F  68                 	db	104	;'h'
   151  00FE80  65                 	db	101	;'e'
   152  00FE81  72                 	db	114	;'r'
   153  00FE82  20                 	db	32
   154  00FE83  35                 	db	53	;'5'
   155  00FE84  31                 	db	49	;'1'
   156  00FE85  32                 	db	50	;'2'
   157  00FE86  20                 	db	32
   158  00FE87  73                 	db	115	;'s'
   159  00FE88  61                 	db	97	;'a'
   160  00FE89  6D                 	db	109	;'m'
   161  00FE8A  70                 	db	112	;'p'
   162  00FE8B  6C                 	db	108	;'l'
   163  00FE8C  65                 	db	101	;'e'
   164  00FE8D  73                 	db	115	;'s'
   165  00FE8E  20                 	db	32
   166  00FE8F  66                 	db	102	;'f'
   167  00FE90  72                 	db	114	;'r'
   168  00FE91  6F                 	db	111	;'o'
   169  00FE92  6D                 	db	109	;'m'
   170  00FE93  20                 	db	32
   171  00FE94  74                 	db	116	;'t'
   172  00FE95  68                 	db	104	;'h'
   173  00FE96  65                 	db	101	;'e'
   174  00FE97  20                 	db	32
   175  00FE98  6D                 	db	109	;'m'
   176  00FE99  69                 	db	105	;'i'
   177  00FE9A  63                 	db	99	;'c'
   178  00FE9B  72                 	db	114	;'r'
   179  00FE9C  6F                 	db	111	;'o'
   180  00FE9D  70                 	db	112	;'p'
   181  00FE9E  68                 	db	104	;'h'
   182  00FE9F  6F                 	db	111	;'o'
   183  00FEA0  6E                 	db	110	;'n'
   184  00FEA1  65                 	db	101	;'e'
   185  00FEA2  20                 	db	32
   186  00FEA3  61                 	db	97	;'a'
   187  00FEA4  6E                 	db	110	;'n'
   188  00FEA5  64                 	db	100	;'d'
   189  00FEA6  20                 	db	32
   190  00FEA7  63                 	db	99	;'c'
   191  00FEA8  61                 	db	97	;'a'
   192  00FEA9  6C                 	db	108	;'l'
   193  00FEAA  63                 	db	99	;'c'
   194  00FEAB  75                 	db	117	;'u'
   195  00FEAC  6C                 	db	108	;'l'
   196  00FEAD  61                 	db	97	;'a'
   197  00FEAE  74                 	db	116	;'t'
   198  00FEAF  65                 	db	101	;'e'
   199  00FEB0  20                 	db	32
   200  00FEB1  74                 	db	116	;'t'
   201  00FEB2  68                 	db	104	;'h'
   202  00FEB3  65                 	db	101	;'e'
   203  00FEB4  20                 	db	32
   204  00FEB5  66                 	db	102	;'f'
   205  00FEB6  72                 	db	114	;'r'
   206  00FEB7  65                 	db	101	;'e'
   207  00FEB8  71                 	db	113	;'q'
   208  00FEB9  75                 	db	117	;'u'
   209  00FEBA  65                 	db	101	;'e'
   210  00FEBB  6E                 	db	110	;'n'
   211  00FEBC  63                 	db	99	;'c'
   212  00FEBD  79                 	db	121	;'y'
   213  00FEBE  0D                 	db	13
   214  00FEBF  0A                 	db	10
   215  00FEC0  00                 	db	0
   216  00FEC1                     STR_5:
   217  00FEC1  54                 	db	84	;'T'
   218  00FEC2  68                 	db	104	;'h'
   219  00FEC3  65                 	db	101	;'e'
   220  00FEC4  20                 	db	32
   221  00FEC5  6C                 	db	108	;'l'
   222  00FEC6  61                 	db	97	;'a'
   223  00FEC7  73                 	db	115	;'s'
   224  00FEC8  74                 	db	116	;'t'
   225  00FEC9  20                 	db	32
   226  00FECA  32                 	db	50	;'2'
   227  00FECB  35                 	db	53	;'5'
   228  00FECC  36                 	db	54	;'6'
   229  00FECD  20                 	db	32
   230  00FECE  41                 	db	65	;'A'
   231  00FECF  44                 	db	68	;'D'
   232  00FED0  43                 	db	67	;'C'
   233  00FED1  20                 	db	32
   234  00FED2  73                 	db	115	;'s'
   235  00FED3  61                 	db	97	;'a'
   236  00FED4  6D                 	db	109	;'m'
   237  00FED5  70                 	db	112	;'p'
   238  00FED6  6C                 	db	108	;'l'
   239  00FED7  65                 	db	101	;'e'
   240  00FED8  73                 	db	115	;'s'
   241  00FED9  20                 	db	32
   242  00FEDA  66                 	db	102	;'f'
   243  00FEDB  72                 	db	114	;'r'
   244  00FEDC  6F                 	db	111	;'o'
   245  00FEDD  6D                 	db	109	;'m'
   246  00FEDE  20                 	db	32
   247  00FEDF  74                 	db	116	;'t'
   248  00FEE0  68                 	db	104	;'h'
   249  00FEE1  65                 	db	101	;'e'
   250  00FEE2  20                 	db	32
   251  00FEE3  6D                 	db	109	;'m'
   252  00FEE4  69                 	db	105	;'i'
   253  00FEE5  63                 	db	99	;'c'
   254  00FEE6  72                 	db	114	;'r'
   255  00FEE7  6F                 	db	111	;'o'
   256  00FEE8  70                 	db	112	;'p'
   257  00FEE9  68                 	db	104	;'h'
   258  00FEEA  6F                 	db	111	;'o'
   259  00FEEB  6E                 	db	110	;'n'
   260  00FEEC  65                 	db	101	;'e'
   261  00FEED  20                 	db	32
   262  00FEEE  61                 	db	97	;'a'
   263  00FEEF  72                 	db	114	;'r'
   264  00FEF0  65                 	db	101	;'e'
   265  00FEF1  3A                 	db	58	;':'
   266  00FEF2  20                 	db	32
   267  00FEF3  0D                 	db	13
   268  00FEF4  0A                 	db	10
   269  00FEF5  00                 	db	0
   270  00FEF6                     STR_12:
   271  00FEF6  54                 	db	84	;'T'
   272  00FEF7  2F                 	db	47
   273  00FEF8  74                 	db	116	;'t'
   274  00FEF9  3A                 	db	58	;':'
   275  00FEFA  20                 	db	32
   276  00FEFB  49                 	db	73	;'I'
   277  00FEFC  6E                 	db	110	;'n'
   278  00FEFD  63                 	db	99	;'c'
   279  00FEFE  72                 	db	114	;'r'
   280  00FEFF  65                 	db	101	;'e'
   281  00FF00  61                 	db	97	;'a'
   282  00FF01  73                 	db	115	;'s'
   283  00FF02  65                 	db	101	;'e'
   284  00FF03  2F                 	db	47
   285  00FF04  64                 	db	100	;'d'
   286  00FF05  65                 	db	101	;'e'
   287  00FF06  63                 	db	99	;'c'
   288  00FF07  72                 	db	114	;'r'
   289  00FF08  65                 	db	101	;'e'
   290  00FF09  61                 	db	97	;'a'
   291  00FF0A  73                 	db	115	;'s'
   292  00FF0B  65                 	db	101	;'e'
   293  00FF0C  20                 	db	32
   294  00FF0D  74                 	db	116	;'t'
   295  00FF0E  68                 	db	104	;'h'
   296  00FF0F  72                 	db	114	;'r'
   297  00FF10  65                 	db	101	;'e'
   298  00FF11  73                 	db	115	;'s'
   299  00FF12  68                 	db	104	;'h'
   300  00FF13  6F                 	db	111	;'o'
   301  00FF14  6C                 	db	108	;'l'
   302  00FF15  64                 	db	100	;'d'
   303  00FF16  20                 	db	32
   304  00FF17  31                 	db	49	;'1'
   305  00FF18  33                 	db	51	;'3'
   306  00FF19  38                 	db	56	;'8'
   307  00FF1A  2D                 	db	45
   308  00FF1B  31                 	db	49	;'1'
   309  00FF1C  31                 	db	49	;'1'
   310  00FF1D  38                 	db	56	;'8'
   311  00FF1E  0D                 	db	13
   312  00FF1F  0A                 	db	10
   313  00FF20  00                 	db	0
   314  00FF21                     STR_7:
   315  00FF21  2D                 	db	45
   316  00FF22  2D                 	db	45
   317  00FF23  2D                 	db	45
   318  00FF24  2D                 	db	45
   319  00FF25  2D                 	db	45
   320  00FF26  2D                 	db	45
   321  00FF27  2D                 	db	45
   322  00FF28  2D                 	db	45
   323  00FF29  2D                 	db	45
   324  00FF2A  2D                 	db	45
   325  00FF2B  2D                 	db	45
   326  00FF2C  2D                 	db	45
   327  00FF2D  2D                 	db	45
   328  00FF2E  2D                 	db	45
   329  00FF2F  2D                 	db	45
   330  00FF30  2D                 	db	45
   331  00FF31  2D                 	db	45
   332  00FF32  2D                 	db	45
   333  00FF33  2D                 	db	45
   334  00FF34  2D                 	db	45
   335  00FF35  2D                 	db	45
   336  00FF36  2D                 	db	45
   337  00FF37  2D                 	db	45
   338  00FF38  2D                 	db	45
   339  00FF39  2D                 	db	45
   340  00FF3A  2D                 	db	45
   341  00FF3B  2D                 	db	45
   342  00FF3C  2D                 	db	45
   343  00FF3D  2D                 	db	45
   344  00FF3E  2D                 	db	45
   345  00FF3F  0D                 	db	13
   346  00FF40  0A                 	db	10
   347  00FF41  00                 	db	0
   348  00FF42                     STR_2:
   349  00FF42  4D                 	db	77	;'M'
   350  00FF43  69                 	db	105	;'i'
   351  00FF44  63                 	db	99	;'c'
   352  00FF45  72                 	db	114	;'r'
   353  00FF46  6F                 	db	111	;'o'
   354  00FF47  70                 	db	112	;'p'
   355  00FF48  68                 	db	104	;'h'
   356  00FF49  6F                 	db	111	;'o'
   357  00FF4A  6E                 	db	110	;'n'
   358  00FF4B  65                 	db	101	;'e'
   359  00FF4C  20                 	db	32
   360  00FF4D  65                 	db	101	;'e'
   361  00FF4E  78                 	db	120	;'x'
   362  00FF4F  70                 	db	112	;'p'
   363  00FF50  65                 	db	101	;'e'
   364  00FF51  72                 	db	114	;'r'
   365  00FF52  69                 	db	105	;'i'
   366  00FF53  6D                 	db	109	;'m'
   367  00FF54  65                 	db	101	;'e'
   368  00FF55  6E                 	db	110	;'n'
   369  00FF56  74                 	db	116	;'t'
   370  00FF57  73                 	db	115	;'s'
   371  00FF58  0D                 	db	13
   372  00FF59  0A                 	db	10
   373  00FF5A  00                 	db	0
   374  00FF5B                     STR_18:
   375  00FF5B  56                 	db	86	;'V'
   376  00FF5C  6F                 	db	111	;'o'
   377  00FF5D  6C                 	db	108	;'l'
   378  00FF5E  75                 	db	117	;'u'
   379  00FF5F  6D                 	db	109	;'m'
   380  00FF60  65                 	db	101	;'e'
   381  00FF61  20                 	db	32
   382  00FF62  72                 	db	114	;'r'
   383  00FF63  61                 	db	97	;'a'
   384  00FF64  6E                 	db	110	;'n'
   385  00FF65  67                 	db	103	;'g'
   386  00FF66  65                 	db	101	;'e'
   387  00FF67  3A                 	db	58	;':'
   388  00FF68  20                 	db	32
   389  00FF69  25                 	db	37
   390  00FF6A  64                 	db	100	;'d'
   391  00FF6B  20                 	db	32
   392  00FF6C  2D                 	db	45
   393  00FF6D  20                 	db	32
   394  00FF6E  25                 	db	37
   395  00FF6F  64                 	db	100	;'d'
   396  00FF70  0D                 	db	13
   397  00FF71  0A                 	db	10
   398  00FF72  00                 	db	0
   399  00FF73                     STR_11:
   400  00FF73  7A                 	db	122	;'z'
   401  00FF74  3A                 	db	58	;':'
   402  00FF75  20                 	db	32
   403  00FF76  43                 	db	67	;'C'
   404  00FF77  6C                 	db	108	;'l'
   405  00FF78  65                 	db	101	;'e'
   406  00FF79  61                 	db	97	;'a'
   407  00FF7A  72                 	db	114	;'r'
   408  00FF7B  20                 	db	32
   409  00FF7C  74                 	db	116	;'t'
   410  00FF7D  68                 	db	104	;'h'
   411  00FF7E  65                 	db	101	;'e'
   412  00FF7F  20                 	db	32
   413  00FF80  74                 	db	116	;'t'
   414  00FF81  65                 	db	101	;'e'
   415  00FF82  72                 	db	114	;'r'
   416  00FF83  6D                 	db	109	;'m'
   417  00FF84  69                 	db	105	;'i'
   418  00FF85  6E                 	db	110	;'n'
   419  00FF86  61                 	db	97	;'a'
   420  00FF87  6C                 	db	108	;'l'
   421  00FF88  0D                 	db	13
   422  00FF89  0A                 	db	10
   423  00FF8A  00                 	db	0
   424  00FF8B                     STR_21:
   425  00FF8B  54                 	db	84	;'T'
   426  00FF8C  68                 	db	104	;'h'
   427  00FF8D  72                 	db	114	;'r'
   428  00FF8E  65                 	db	101	;'e'
   429  00FF8F  73                 	db	115	;'s'
   430  00FF90  68                 	db	104	;'h'
   431  00FF91  6F                 	db	111	;'o'
   432  00FF92  6C                 	db	108	;'l'
   433  00FF93  64                 	db	100	;'d'
   434  00FF94  20                 	db	32
   435  00FF95  61                 	db	97	;'a'
   436  00FF96  74                 	db	116	;'t'
   437  00FF97  20                 	db	32
   438  00FF98  6D                 	db	109	;'m'
   439  00FF99  69                 	db	105	;'i'
   440  00FF9A  6E                 	db	110	;'n'
   441  00FF9B  69                 	db	105	;'i'
   442  00FF9C  6D                 	db	109	;'m'
   443  00FF9D  75                 	db	117	;'u'
   444  00FF9E  6D                 	db	109	;'m'
   445  00FF9F  0D                 	db	13
   446  00FFA0  0A                 	db	10
   447  00FFA1  00                 	db	0
   448  00FFA2                     STR_10:
   449  00FFA2  5A                 	db	90	;'Z'
   450  00FFA3  3A                 	db	58	;':'
   451  00FFA4  20                 	db	32
   452  00FFA5  52                 	db	82	;'R'
   453  00FFA6  65                 	db	101	;'e'
   454  00FFA7  73                 	db	115	;'s'
   455  00FFA8  65                 	db	101	;'e'
   456  00FFA9  74                 	db	116	;'t'
   457  00FFAA  20                 	db	32
   458  00FFAB  70                 	db	112	;'p'
   459  00FFAC  72                 	db	114	;'r'
   460  00FFAD  6F                 	db	111	;'o'
   461  00FFAE  63                 	db	99	;'c'
   462  00FFAF  65                 	db	101	;'e'
   463  00FFB0  73                 	db	115	;'s'
   464  00FFB1  73                 	db	115	;'s'
   465  00FFB2  6F                 	db	111	;'o'
   466  00FFB3  72                 	db	114	;'r'
   467  00FFB4  0D                 	db	13
   468  00FFB5  0A                 	db	10
   469  00FFB6  00                 	db	0
   470  00FFB7                     STR_22:
   471  00FFB7  55                 	db	85	;'U'
   472  00FFB8  6E                 	db	110	;'n'
   473  00FFB9  6B                 	db	107	;'k'
   474  00FFBA  6E                 	db	110	;'n'
   475  00FFBB  6F                 	db	111	;'o'
   476  00FFBC  77                 	db	119	;'w'
   477  00FFBD  6E                 	db	110	;'n'
   478  00FFBE  20                 	db	32
   479  00FFBF  6B                 	db	107	;'k'
   480  00FFC0  65                 	db	101	;'e'
   481  00FFC1  79                 	db	121	;'y'
   482  00FFC2  20                 	db	32
   483  00FFC3  25                 	db	37
   484  00FFC4  63                 	db	99	;'c'
   485  00FFC5  0D                 	db	13
   486  00FFC6  0A                 	db	10
   487  00FFC7  00                 	db	0
   488  00FFC8                     STR_8:
   489  00FFC8  3F                 	db	63	;'?'
   490  00FFC9  3A                 	db	58	;':'
   491  00FFCA  20                 	db	32
   492  00FFCB  48                 	db	72	;'H'
   493  00FFCC  65                 	db	101	;'e'
   494  00FFCD  6C                 	db	108	;'l'
   495  00FFCE  70                 	db	112	;'p'
   496  00FFCF  20                 	db	32
   497  00FFD0  6D                 	db	109	;'m'
   498  00FFD1  65                 	db	101	;'e'
   499  00FFD2  6E                 	db	110	;'n'
   500  00FFD3  75                 	db	117	;'u'
   501  00FFD4  0D                 	db	13
   502  00FFD5  0A                 	db	10
   503  00FFD6  00                 	db	0
   504  00FFD7                     STR_1:
   505  00FFD7  69                 	db	105	;'i'
   506  00FFD8  6E                 	db	110	;'n'
   507  00FFD9  4C                 	db	76	;'L'
   508  00FFDA  61                 	db	97	;'a'
   509  00FFDB  62                 	db	98	;'b'
   510  00FFDC  20                 	db	32
   511  00FFDD  30                 	db	48	;'0'
   512  00FFDE  38                 	db	56	;'8'
   513  00FFDF  0D                 	db	13
   514  00FFE0  0A                 	db	10
   515  00FFE1  00                 	db	0
   516  00FFE2                     STR_3:
   517  00FFE2  44                 	db	68	;'D'
   518  00FFE3  65                 	db	101	;'e'
   519  00FFE4  76                 	db	118	;'v'
   520  00FFE5  27                 	db	39
   521  00FFE6  32                 	db	50	;'2'
   522  00FFE7  31                 	db	49	;'1'
   523  00FFE8  0D                 	db	13
   524  00FFE9  0A                 	db	10
   525  00FFEA  00                 	db	0
   526  00FFEB                     STR_9:
   527  00FFEB  6F                 	db	111	;'o'
   528  00FFEC  3A                 	db	58	;':'
   529  00FFED  20                 	db	32
   530  00FFEE  6B                 	db	107	;'k'
   531  00FFEF  0D                 	db	13
   532  00FFF0  0A                 	db	10
   533  00FFF1  00                 	db	0
   534  00FFF2                     STR_15:
   535  00FFF2  20                 	db	32
   536  00FFF3  6B                 	db	107	;'k'
   537  00FFF4  0D                 	db	13
   538  00FFF5  0A                 	db	10
   539  00FFF6  3E                 	db	62	;'>'
   540  00FFF7  00                 	db	0
   541  00FFF8                     STR_6:
   542  00FFF8  25                 	db	37
   543  00FFF9  64                 	db	100	;'d'
   544  00FFFA  20                 	db	32
   545  00FFFB  00                 	db	0
   546  00FFFC                     STR_4:
   547  00FFFC  3E                 	db	62	;'>'
   548  00FFFD  20                 	db	32
   549  00FFFE  00                 	db	0
   550  00FFFF  00                 	db	0	; dummy byte at the end
   551  0000                     
   552                           ; #config settings
   553                           
   554                           	psect	cinit
   555  000F94                     __pcinit:
   556                           	callstack 0
   557  000F94                     start_initialization:
   558                           	callstack 0
   559  000F94                     __initialization:
   560                           	callstack 0
   561                           
   562                           ; Initialize objects allocated to BANK0 (2 bytes)
   563                           ; load TBLPTR registers with __pidataBANK0
   564  000F94  0EAE               	movlw	low __pidataBANK0
   565  000F96  6EF6               	movwf	tblptrl,c
   566  000F98  0E11               	movlw	high __pidataBANK0
   567  000F9A  6EF7               	movwf	tblptrh,c
   568  000F9C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   569  000F9E  6EF8               	movwf	tblptru,c
   570  000FA0  0009               	tblrd		*+	;fetch initializer
   571  000FA2  CFF5 F0FB          	movff	tablat,__pdataBANK0
   572  000FA6  0009               	tblrd		*+	;fetch initializer
   573  000FA8  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   574                           
   575                           ; Clear objects allocated to BANK0 (109 bytes)
   576  000FAC  EE00  F060         	lfsr	0,__pbssBANK0
   577  000FB0  0E6D               	movlw	109
   578  000FB2                     clear_0:
   579  000FB2  6AEE               	clrf	postinc0,c
   580  000FB4  06E8               	decf	wreg,f,c
   581  000FB6  E1FD               	bnz	clear_0
   582                           
   583                           ; Clear objects allocated to COMRAM (12 bytes)
   584  000FB8  EE00  F047         	lfsr	0,__pbssCOMRAM
   585  000FBC  0E0C               	movlw	12
   586  000FBE                     clear_1:
   587  000FBE  6AEE               	clrf	postinc0,c
   588  000FC0  06E8               	decf	wreg,f,c
   589  000FC2  E1FD               	bnz	clear_1
   590  000FC4                     end_of_initialization:
   591                           	callstack 0
   592  000FC4                     __end_of__initialization:
   593                           	callstack 0
   594  000FC4  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   595  000FC6  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   596  000FC8  0100               	movlb	0
   597  000FCA  EF29  F000         	goto	_main	;jump to C main() function
   598                           
   599                           	psect	bssCOMRAM
   600  000047                     __pbssCOMRAM:
   601                           	callstack 0
   602  000047                     _width:
   603                           	callstack 0
   604  000047                     	ds	2
   605  000049                     _prec:
   606                           	callstack 0
   607  000049                     	ds	2
   608  00004B                     _flags:
   609                           	callstack 0
   610  00004B                     	ds	2
   611  00004D                     _timer0ReloadVal:
   612                           	callstack 0
   613  00004D                     	ds	2
   614  00004F                     _eusart1RxLastError:
   615                           	callstack 0
   616  00004F                     	ds	1
   617  000050                     _bufferIdx:
   618                           	callstack 0
   619  000050                     	ds	1
   620  000051                     _timerState:
   621                           	callstack 0
   622  000051                     	ds	1
   623  000052                     _fillBuffer:
   624                           	callstack 0
   625  000052                     	ds	1
   626                           
   627                           	psect	bssBANK0
   628  000060                     __pbssBANK0:
   629                           	callstack 0
   630  000060                     _adc_reading:
   631                           	callstack 0
   632  000060                     	ds	64
   633  0000A0                     _nout:
   634                           	callstack 0
   635  0000A0                     	ds	2
   636  0000A2                     _EUSART1_ErrorHandler:
   637                           	callstack 0
   638  0000A2                     	ds	2
   639  0000A4                     _EUSART1_OverrunErrorHandler:
   640                           	callstack 0
   641  0000A4                     	ds	2
   642  0000A6                     _EUSART1_FramingErrorHandler:
   643                           	callstack 0
   644  0000A6                     	ds	2
   645  0000A8                     _ADC_InterruptHandler:
   646                           	callstack 0
   647  0000A8                     	ds	2
   648  0000AA                     _TMR0_InterruptHandler:
   649                           	callstack 0
   650  0000AA                     	ds	2
   651  0000AC                     _samplesCollected:
   652                           	callstack 0
   653  0000AC                     	ds	1
   654  0000AD                     _dbuf:
   655                           	callstack 0
   656  0000AD                     	ds	32
   657                           
   658                           	psect	dataBANK0
   659  0000FB                     __pdataBANK0:
   660                           	callstack 0
   661  0000FB                     _thresholdRange:
   662                           	callstack 0
   663  0000FB                     	ds	2
   664                           
   665                           	psect	cstackBANK0
   666  0000CD                     __pcstackBANK0:
   667                           	callstack 0
   668  0000CD                     _dtoa$1386:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x0
   672  0000CD                     	ds	2
   673  0000CF                     dtoa@p:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x2
   677  0000CF                     	ds	2
   678  0000D1                     dtoa@w:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x4
   682  0000D1                     	ds	2
   683  0000D3                     dtoa@s:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x6
   687  0000D3                     	ds	2
   688  0000D5                     dtoa@n:
   689                           	callstack 0
   690                           
   691                           ; 8 bytes @ 0x8
   692  0000D5                     	ds	8
   693  0000DD                     dtoa@i:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x10
   697  0000DD                     	ds	2
   698  0000DF                     vfpfcnvrt@ll:
   699                           	callstack 0
   700                           
   701                           ; 8 bytes @ 0x12
   702  0000DF                     	ds	8
   703  0000E7                     vfpfcnvrt@c:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x1A
   707  0000E7                     	ds	1
   708  0000E8                     ?_vfprintf:
   709                           	callstack 0
   710  0000E8                     vfprintf@fp:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x1B
   714  0000E8                     	ds	2
   715  0000EA                     vfprintf@fmt:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x1D
   719  0000EA                     	ds	2
   720  0000EC                     vfprintf@ap:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x1F
   724  0000EC                     	ds	2
   725  0000EE                     ?_printf:
   726                           	callstack 0
   727  0000EE                     printf@fmt:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x21
   731  0000EE                     	ds	8
   732  0000F6                     printf@ap:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x29
   736  0000F6                     	ds	2
   737  0000F8                     main@cmd:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x2B
   741  0000F8                     	ds	1
   742  0000F9                     main@i_214:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x2C
   746  0000F9                     	ds	1
   747  0000FA                     main@i:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x2D
   751  0000FA                     	ds	1
   752                           
   753                           	psect	cstackCOMRAM
   754  000001                     __pcstackCOMRAM:
   755                           	callstack 0
   756  000001                     i2TMR0_WriteTimer@timerVal:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x0
   760  000001                     	ds	2
   761  000003                     ??_myTMR0ISR:
   762  000003                     
   763                           ; 1 bytes @ 0x2
   764  000003                     	ds	4
   765  000007                     myTMR0ISR@micReading:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x6
   769  000007                     	ds	1
   770  000008                     ??_INTERRUPT_InterruptManager:
   771                           
   772                           ; 1 bytes @ 0x7
   773  000008                     	ds	4
   774  00000C                     ?_strlen:
   775                           	callstack 0
   776  00000C                     ?___aodiv:
   777                           	callstack 0
   778  00000C                     ?___aomod:
   779                           	callstack 0
   780  00000C                     EUSART1_Write@txData:
   781                           	callstack 0
   782  00000C                     TMR0_WriteTimer@timerVal:
   783                           	callstack 0
   784  00000C                     TMR0_SetInterruptHandler@InterruptHandler:
   785                           	callstack 0
   786  00000C                     EUSART1_SetFramingErrorHandler@interruptHandler:
   787                           	callstack 0
   788  00000C                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   789                           	callstack 0
   790  00000C                     EUSART1_SetErrorHandler@interruptHandler:
   791                           	callstack 0
   792  00000C                     strlen@s:
   793                           	callstack 0
   794  00000C                     ___aodiv@dividend:
   795                           	callstack 0
   796  00000C                     ___aomod@dividend:
   797                           	callstack 0
   798                           
   799                           ; 8 bytes @ 0xB
   800  00000C                     	ds	1
   801  00000D                     putch@txData:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0xC
   805  00000D                     	ds	1
   806  00000E                     ??_TMR0_Initialize:
   807  00000E                     fputc@c:
   808                           	callstack 0
   809  00000E                     strlen@a:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0xD
   813  00000E                     	ds	2
   814  000010                     fputc@fp:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0xF
   818  000010                     	ds	2
   819  000012                     ??_fputc:
   820                           
   821                           ; 1 bytes @ 0x11
   822  000012                     	ds	2
   823  000014                     ___aodiv@divisor:
   824                           	callstack 0
   825  000014                     ___aomod@divisor:
   826                           	callstack 0
   827                           
   828                           ; 8 bytes @ 0x13
   829  000014                     	ds	3
   830  000017                     ?_ctoa:
   831                           	callstack 0
   832  000017                     ctoa@fp:
   833                           	callstack 0
   834  000017                     fputs@s:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x16
   838  000017                     	ds	2
   839  000019                     ctoa@c:
   840                           	callstack 0
   841  000019                     fputs@fp:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x18
   845  000019                     	ds	1
   846  00001A                     ??_ctoa:
   847                           
   848                           ; 1 bytes @ 0x19
   849  00001A                     	ds	1
   850  00001B                     fputs@c:
   851                           	callstack 0
   852  00001B                     ctoa@l:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x1A
   856  00001B                     	ds	1
   857  00001C                     ___aodiv@counter:
   858                           	callstack 0
   859  00001C                     ___aomod@counter:
   860                           	callstack 0
   861  00001C                     fputs@i:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x1B
   865  00001C                     	ds	1
   866  00001D                     ___aodiv@sign:
   867                           	callstack 0
   868  00001D                     ___aomod@sign:
   869                           	callstack 0
   870  00001D                     ctoa@w:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x1C
   874  00001D                     	ds	1
   875  00001E                     ?_abs:
   876                           	callstack 0
   877  00001E                     ?_pad:
   878                           	callstack 0
   879  00001E                     pad@fp:
   880                           	callstack 0
   881  00001E                     abs@a:
   882                           	callstack 0
   883  00001E                     ___aodiv@quotient:
   884                           	callstack 0
   885                           
   886                           ; 8 bytes @ 0x1D
   887  00001E                     	ds	2
   888  000020                     ??_abs:
   889  000020                     pad@buf:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x1F
   893  000020                     	ds	2
   894  000022                     pad@p:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x21
   898  000022                     	ds	2
   899  000024                     ??_pad:
   900                           
   901                           ; 1 bytes @ 0x23
   902  000024                     	ds	1
   903  000025                     pad@i:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x24
   907  000025                     	ds	2
   908  000027                     pad@w:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x26
   912  000027                     	ds	2
   913  000029                     ?_dtoa:
   914                           	callstack 0
   915  000029                     dtoa@fp:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x28
   919  000029                     	ds	2
   920  00002B                     dtoa@d:
   921                           	callstack 0
   922                           
   923                           ; 8 bytes @ 0x2A
   924  00002B                     	ds	8
   925  000033                     ??_dtoa:
   926                           
   927                           ; 1 bytes @ 0x32
   928  000033                     	ds	8
   929  00003B                     ?_vfpfcnvrt:
   930                           	callstack 0
   931  00003B                     vfpfcnvrt@fp:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x3A
   935  00003B                     	ds	2
   936  00003D                     vfpfcnvrt@fmt:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x3C
   940  00003D                     	ds	2
   941  00003F                     vfpfcnvrt@ap:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x3E
   945  00003F                     	ds	2
   946  000041                     ??_vfpfcnvrt:
   947                           
   948                           ; 1 bytes @ 0x40
   949  000041                     	ds	2
   950  000043                     vfprintf@cfmt:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x42
   954  000043                     	ds	2
   955  000045                     ??_main:
   956                           
   957                           ; 1 bytes @ 0x44
   958  000045                     	ds	2
   959                           
   960 ;;
   961 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   962 ;;
   963 ;; *************** function _main *****************
   964 ;; Defined at:
   965 ;;		line 45 in file "main.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  i               1   44[BANK0 ] unsigned char 
   970 ;;  i               1   45[BANK0 ] unsigned char 
   971 ;;  cmd             1   43[BANK0 ] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;Total ram usage:        5 bytes
   986 ;; Hardware stack levels required when called:   13
   987 ;; This function calls:
   988 ;;		_EUSART1_Read
   989 ;;		_EUSART1_is_rx_ready
   990 ;;		_SYSTEM_Initialize
   991 ;;		_TMR0_SetInterruptHandler
   992 ;;		_TMR0_WriteTimer
   993 ;;		_printf
   994 ;; This function is called by:
   995 ;;		Startup code after reset
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text0
  1000  000052                     __ptext0:
  1001                           	callstack 0
  1002  000052                     _main:
  1003                           	callstack 18
  1004  000052                     
  1005                           ;main.c: 47: ;main.c: 48:     for (;;) {;main.c: 50:             samplesCollected = 0;
  1006  000052  EC85  F008         	call	_SYSTEM_Initialize	;wreg free
  1007  000056                     
  1008                           ;main.c: 55:             }
  1009  000056  0E00               	movlw	0
  1010  000058  6E0D               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1011  00005A  0E00               	movlw	0
  1012  00005C  6E0C               	movwf	TMR0_WriteTimer@timerVal^0,c
  1013  00005E  ECB7  F008         	call	_TMR0_WriteTimer	;wreg free
  1014  000062                     
  1015                           ;main.c: 56:         }
  1016  000062  94F2               	bcf	242,2,c	;volatile
  1017  000064                     l33:
  1018  000064  A4F2               	btfss	242,2,c	;volatile
  1019  000066  EF37  F000         	goto	u1971
  1020  00006A  EF39  F000         	goto	u1970
  1021  00006E                     u1971:
  1022  00006E  EF32  F000         	goto	l33
  1023  000072                     u1970:
  1024  000072                     
  1025                           ;main.c: 59:             cmd = EUSART1_Read();
  1026  000072  0E46               	movlw	low _myTMR0ISR
  1027  000074  6E0C               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1028  000076  0E0B               	movlw	high _myTMR0ISR
  1029  000078  6E0D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1030  00007A  ECBC  F008         	call	_TMR0_SetInterruptHandler	;wreg free
  1031  00007E                     
  1032                           ;main.c: 60:             switch (cmd) {
  1033  00007E  8EF2               	bsf	242,7,c	;volatile
  1034  000080                     
  1035                           ;main.c: 61: 
  1036  000080  8CF2               	bsf	242,6,c	;volatile
  1037  000082                     
  1038                           ;main.c: 63:                     printf("------------------------------\r\n");
  1039  000082  0ED7               	movlw	low STR_1
  1040  000084  0100               	movlb	0	; () banked
  1041  000086  6FEE               	movwf	printf@fmt& (0+255),b
  1042  000088  0EFF               	movlw	high STR_1
  1043  00008A  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1044  00008C  EC4F  F008         	call	_printf	;wreg free
  1045  000090                     
  1046                           ;main.c: 64:                     printf("?: Help menu\r\n");
  1047  000090  0E42               	movlw	low STR_2
  1048  000092  0100               	movlb	0	; () banked
  1049  000094  6FEE               	movwf	printf@fmt& (0+255),b
  1050  000096  0EFF               	movlw	high STR_2
  1051  000098  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1052  00009A  EC4F  F008         	call	_printf	;wreg free
  1053  00009E                     
  1054                           ;main.c: 65:                     printf("o: k\r\n");
  1055  00009E  0EE2               	movlw	low STR_3
  1056  0000A0  0100               	movlb	0	; () banked
  1057  0000A2  6FEE               	movwf	printf@fmt& (0+255),b
  1058  0000A4  0EFF               	movlw	high STR_3
  1059  0000A6  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1060  0000A8  EC4F  F008         	call	_printf	;wreg free
  1061  0000AC                     
  1062                           ;main.c: 66:                     printf("Z: Reset processor\r\n");
  1063  0000AC  0EFC               	movlw	low STR_4
  1064  0000AE  0100               	movlb	0	; () banked
  1065  0000B0  6FEE               	movwf	printf@fmt& (0+255),b
  1066  0000B2  0EFF               	movlw	high STR_4
  1067  0000B4  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1068  0000B6  EC4F  F008         	call	_printf	;wreg free
  1069  0000BA                     
  1070                           ;main.c: 70: 
  1071  0000BA  82C2               	bsf	194,1,c	;volatile
  1072  0000BC                     l36:
  1073  0000BC  B2C2               	btfsc	194,1,c	;volatile
  1074  0000BE  EF63  F000         	goto	u1981
  1075  0000C2  EF65  F000         	goto	u1980
  1076  0000C6                     u1981:
  1077  0000C6  EF5E  F000         	goto	l36
  1078  0000CA                     u1980:
  1079  0000CA                     l2672:
  1080                           
  1081                           ;main.c: 75: 
  1082  0000CA  0100               	movlb	0	; () banked
  1083  0000CC  51AC               	movf	_samplesCollected& (0+255),w,b
  1084  0000CE  B4D8               	btfsc	status,2,c
  1085  0000D0  EF6C  F000         	goto	u1991
  1086  0000D4  EF6E  F000         	goto	u1990
  1087  0000D8                     u1991:
  1088  0000D8  EF94  F000         	goto	l2690
  1089  0000DC                     u1990:
  1090  0000DC                     
  1091                           ; BSR set to: 0
  1092                           ;main.c: 76: 
  1093  0000DC  0E00               	movlw	0
  1094  0000DE  6FAC               	movwf	_samplesCollected& (0+255),b
  1095  0000E0                     
  1096                           ; BSR set to: 0
  1097                           ;main.c: 77:                 case 'o':
  1098  0000E0  0EC1               	movlw	low STR_5
  1099  0000E2  6FEE               	movwf	printf@fmt& (0+255),b
  1100  0000E4  0EFE               	movlw	high STR_5
  1101  0000E6  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1102  0000E8  EC4F  F008         	call	_printf	;wreg free
  1103  0000EC                     
  1104                           ;main.c: 79:                     break;
  1105  0000EC  0E00               	movlw	0
  1106  0000EE  0100               	movlb	0	; () banked
  1107  0000F0  6FF9               	movwf	main@i_214& (0+255),b
  1108  0000F2                     l2684:
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;main.c: 80: 
  1112  0000F2  0EF8               	movlw	low STR_6
  1113  0000F4  6FEE               	movwf	printf@fmt& (0+255),b
  1114  0000F6  0EFF               	movlw	high STR_6
  1115  0000F8  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1116  0000FA  0E60               	movlw	low _adc_reading
  1117  0000FC  25F9               	addwf	main@i_214& (0+255),w,b
  1118  0000FE  6ED9               	movwf	fsr2l,c
  1119  000100  6ADA               	clrf	fsr2h,c
  1120  000102  0E00               	movlw	high _adc_reading
  1121  000104  22DA               	addwfc	fsr2h,f,c
  1122  000106  50DF               	movf	indf2,w,c
  1123  000108  6E45               	movwf	??_main^0,c
  1124  00010A  5045               	movf	??_main^0,w,c
  1125  00010C  6FF0               	movwf	(?_printf+2)& (0+255),b
  1126  00010E  6BF1               	clrf	(?_printf+3)& (0+255),b
  1127  000110  EC4F  F008         	call	_printf	;wreg free
  1128  000114                     
  1129                           ;main.c: 81: 
  1130  000114  0100               	movlb	0	; () banked
  1131  000116  2BF9               	incf	main@i_214& (0+255),f,b
  1132  000118                     
  1133                           ; BSR set to: 0
  1134  000118  0E3F               	movlw	63
  1135  00011A  65F9               	cpfsgt	main@i_214& (0+255),b
  1136  00011C  EF92  F000         	goto	u2001
  1137  000120  EF94  F000         	goto	u2000
  1138  000124                     u2001:
  1139  000124  EF79  F000         	goto	l2684
  1140  000128                     u2000:
  1141  000128                     l2690:
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;main.c: 84:                 case 'Z':
  1145  000128  ECA8  F008         	call	_EUSART1_is_rx_ready	;wreg free
  1146  00012C  0900               	iorlw	0
  1147  00012E  B4D8               	btfsc	status,2,c
  1148  000130  EF9C  F000         	goto	u2011
  1149  000134  EF9E  F000         	goto	u2010
  1150  000138                     u2011:
  1151  000138  EF65  F000         	goto	l2672
  1152  00013C                     u2010:
  1153  00013C                     
  1154                           ;main.c: 85:                     for (i = 0; i < 40; i++) printf("\n");
  1155  00013C  EC63  F008         	call	_EUSART1_Read	;wreg free
  1156  000140  0100               	movlb	0	; () banked
  1157  000142  6FF8               	movwf	main@cmd& (0+255),b
  1158                           
  1159                           ;main.c: 86:                     __asm("reset");
  1160  000144  EF77  F001         	goto	l2740
  1161  000148                     l2694:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;main.c: 89: 
  1165  000148  0E21               	movlw	low STR_7
  1166  00014A  6FEE               	movwf	printf@fmt& (0+255),b
  1167  00014C  0EFF               	movlw	high STR_7
  1168  00014E  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1169  000150  EC4F  F008         	call	_printf	;wreg free
  1170                           
  1171                           ;main.c: 90: 
  1172  000154  0EC8               	movlw	low STR_8
  1173  000156  0100               	movlb	0	; () banked
  1174  000158  6FEE               	movwf	printf@fmt& (0+255),b
  1175  00015A  0EFF               	movlw	high STR_8
  1176  00015C  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1177  00015E  EC4F  F008         	call	_printf	;wreg free
  1178                           
  1179                           ;main.c: 91: 
  1180  000162  0EEB               	movlw	low STR_9
  1181  000164  0100               	movlb	0	; () banked
  1182  000166  6FEE               	movwf	printf@fmt& (0+255),b
  1183  000168  0EFF               	movlw	high STR_9
  1184  00016A  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1185  00016C  EC4F  F008         	call	_printf	;wreg free
  1186                           
  1187                           ;main.c: 92:                 case 'z':
  1188  000170  0EA2               	movlw	low STR_10
  1189  000172  0100               	movlb	0	; () banked
  1190  000174  6FEE               	movwf	printf@fmt& (0+255),b
  1191  000176  0EFF               	movlw	high STR_10
  1192  000178  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1193  00017A  EC4F  F008         	call	_printf	;wreg free
  1194                           
  1195                           ;main.c: 93:                     for (i = 0; i < 40; i++) printf("\n>");
  1196  00017E  0E73               	movlw	low STR_11
  1197  000180  0100               	movlb	0	; () banked
  1198  000182  6FEE               	movwf	printf@fmt& (0+255),b
  1199  000184  0EFF               	movlw	high STR_11
  1200  000186  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1201  000188  EC4F  F008         	call	_printf	;wreg free
  1202                           
  1203                           ;main.c: 94:                     break;
  1204  00018C  0EF6               	movlw	low STR_12
  1205  00018E  0100               	movlb	0	; () banked
  1206  000190  6FEE               	movwf	printf@fmt& (0+255),b
  1207  000192  0EFE               	movlw	high STR_12
  1208  000194  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1209  000196  EC4F  F008         	call	_printf	;wreg free
  1210                           
  1211                           ;main.c: 95: 
  1212  00019A  0E79               	movlw	low STR_13
  1213  00019C  0100               	movlb	0	; () banked
  1214  00019E  6FEE               	movwf	printf@fmt& (0+255),b
  1215  0001A0  0EFE               	movlw	high STR_13
  1216  0001A2  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1217  0001A4  EC4F  F008         	call	_printf	;wreg free
  1218                           
  1219                           ;main.c: 97:                     thresholdRange += 5;
  1220  0001A8  0E21               	movlw	low STR_7
  1221  0001AA  0100               	movlb	0	; () banked
  1222  0001AC  6FEE               	movwf	printf@fmt& (0+255),b
  1223  0001AE  0EFF               	movlw	high STR_7
  1224  0001B0  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1225  0001B2  EC4F  F008         	call	_printf	;wreg free
  1226                           
  1227                           ;main.c: 98:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRang
      +                          e, 128 + thresholdRange);
  1228  0001B6  EF65  F000         	goto	l2672
  1229  0001BA                     l2696:
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;main.c: 104:                     }
  1233  0001BA  0EF2               	movlw	low STR_15
  1234  0001BC  6FEE               	movwf	printf@fmt& (0+255),b
  1235  0001BE  0EFF               	movlw	high STR_15
  1236  0001C0  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1237  0001C2  EC4F  F008         	call	_printf	;wreg free
  1238                           
  1239                           ;main.c: 105:                     else{
  1240  0001C6  EF65  F000         	goto	l2672
  1241  0001CA                     l2698:
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;main.c: 111:                 case 'f':
  1245  0001CA  0E00               	movlw	0
  1246  0001CC  6FFA               	movwf	main@i& (0+255),b
  1247  0001CE                     l2704:
  1248                           
  1249                           ; BSR set to: 0
  1250  0001CE  0EF4               	movlw	low (STR_5+51)
  1251  0001D0  6FEE               	movwf	printf@fmt& (0+255),b
  1252  0001D2  0EFE               	movlw	high (STR_5+51)
  1253  0001D4  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1254  0001D6  EC4F  F008         	call	_printf	;wreg free
  1255  0001DA  0100               	movlb	0	; () banked
  1256  0001DC  2BFA               	incf	main@i& (0+255),f,b
  1257  0001DE                     
  1258                           ; BSR set to: 0
  1259  0001DE  0E27               	movlw	39
  1260  0001E0  65FA               	cpfsgt	main@i& (0+255),b
  1261  0001E2  EFF5  F000         	goto	u2021
  1262  0001E6  EFF7  F000         	goto	u2020
  1263  0001EA                     u2021:
  1264  0001EA  EFE7  F000         	goto	l2704
  1265  0001EE                     u2020:
  1266  0001EE                     
  1267                           ; BSR set to: 0
  1268  0001EE  00FF               	reset		;# 
  1269                           
  1270                           ;main.c: 113:                     fillBuffer = 1;
  1271  0001F0  EF65  F000         	goto	l2672
  1272  0001F4                     l2710:
  1273                           
  1274                           ; BSR set to: 0
  1275  0001F4  0E00               	movlw	0
  1276  0001F6  6FFA               	movwf	main@i& (0+255),b
  1277  0001F8                     l2716:
  1278                           
  1279                           ; BSR set to: 0
  1280  0001F8  0EF5               	movlw	low (STR_15+3)
  1281  0001FA  6FEE               	movwf	printf@fmt& (0+255),b
  1282  0001FC  0EFF               	movlw	high (STR_15+3)
  1283  0001FE  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1284  000200  EC4F  F008         	call	_printf	;wreg free
  1285  000204  0100               	movlb	0	; () banked
  1286  000206  2BFA               	incf	main@i& (0+255),f,b
  1287  000208                     
  1288                           ; BSR set to: 0
  1289  000208  0E27               	movlw	39
  1290  00020A  65FA               	cpfsgt	main@i& (0+255),b
  1291  00020C  EF0A  F001         	goto	u2031
  1292  000210  EF0C  F001         	goto	u2030
  1293  000214                     u2031:
  1294  000214  EFFC  F000         	goto	l2716
  1295  000218                     u2030:
  1296  000218  EF65  F000         	goto	l2672
  1297  00021C                     l2722:
  1298                           
  1299                           ; BSR set to: 0
  1300  00021C  0E05               	movlw	5
  1301  00021E  27FB               	addwf	_thresholdRange& (0+255),f,b
  1302  000220  0E00               	movlw	0
  1303  000222  23FC               	addwfc	(_thresholdRange+1)& (0+255),f,b
  1304  000224                     
  1305                           ; BSR set to: 0
  1306  000224  0E5B               	movlw	low STR_18
  1307  000226  6FEE               	movwf	printf@fmt& (0+255),b
  1308  000228  0EFF               	movlw	high STR_18
  1309  00022A  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1310  00022C  51FB               	movf	_thresholdRange& (0+255),w,b
  1311  00022E  0880               	sublw	128
  1312  000230  6FF0               	movwf	(?_printf+2)& (0+255),b
  1313  000232  51FC               	movf	(_thresholdRange+1)& (0+255),w,b
  1314  000234  A0D8               	btfss	status,0,c
  1315  000236  2AE8               	incf	wreg,f,c
  1316  000238  0800               	sublw	0
  1317  00023A  6FF1               	movwf	(?_printf+3)& (0+255),b
  1318  00023C  0E80               	movlw	128
  1319  00023E  25FB               	addwf	_thresholdRange& (0+255),w,b
  1320  000240  6FF2               	movwf	(?_printf+4)& (0+255),b
  1321  000242  0E00               	movlw	0
  1322  000244  21FC               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1323  000246  6FF3               	movwf	(?_printf+5)& (0+255),b
  1324  000248  EC4F  F008         	call	_printf	;wreg free
  1325  00024C  EF65  F000         	goto	l2672
  1326  000250                     l2726:
  1327                           
  1328                           ; BSR set to: 0
  1329  000250  51FB               	movf	_thresholdRange& (0+255),w,b
  1330  000252  11FC               	iorwf	(_thresholdRange+1)& (0+255),w,b
  1331  000254  B4D8               	btfsc	status,2,c
  1332  000256  EF2F  F001         	goto	u2041
  1333  00025A  EF31  F001         	goto	u2040
  1334  00025E                     u2041:
  1335  00025E  EF4B  F001         	goto	l2732
  1336  000262                     u2040:
  1337  000262                     
  1338                           ; BSR set to: 0
  1339  000262  0E05               	movlw	5
  1340  000264  5FFB               	subwf	_thresholdRange& (0+255),f,b
  1341  000266  0E00               	movlw	0
  1342  000268  5BFC               	subwfb	(_thresholdRange+1)& (0+255),f,b
  1343  00026A                     
  1344                           ; BSR set to: 0
  1345  00026A  0E5B               	movlw	low STR_18
  1346  00026C  6FEE               	movwf	printf@fmt& (0+255),b
  1347  00026E  0EFF               	movlw	high STR_18
  1348  000270  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1349  000272  51FB               	movf	_thresholdRange& (0+255),w,b
  1350  000274  0880               	sublw	128
  1351  000276  6FF0               	movwf	(?_printf+2)& (0+255),b
  1352  000278  51FC               	movf	(_thresholdRange+1)& (0+255),w,b
  1353  00027A  A0D8               	btfss	status,0,c
  1354  00027C  2AE8               	incf	wreg,f,c
  1355  00027E  0800               	sublw	0
  1356  000280  6FF1               	movwf	(?_printf+3)& (0+255),b
  1357  000282  0E80               	movlw	128
  1358  000284  25FB               	addwf	_thresholdRange& (0+255),w,b
  1359  000286  6FF2               	movwf	(?_printf+4)& (0+255),b
  1360  000288  0E00               	movlw	0
  1361  00028A  21FC               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1362  00028C  6FF3               	movwf	(?_printf+5)& (0+255),b
  1363  00028E  EC4F  F008         	call	_printf	;wreg free
  1364  000292  EF65  F000         	goto	l2672
  1365  000296                     l2732:
  1366                           
  1367                           ; BSR set to: 0
  1368  000296  0E5B               	movlw	low STR_18
  1369  000298  6FEE               	movwf	printf@fmt& (0+255),b
  1370  00029A  0EFF               	movlw	high STR_18
  1371  00029C  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1372  00029E  51FB               	movf	_thresholdRange& (0+255),w,b
  1373  0002A0  0880               	sublw	128
  1374  0002A2  6FF0               	movwf	(?_printf+2)& (0+255),b
  1375  0002A4  51FC               	movf	(_thresholdRange+1)& (0+255),w,b
  1376  0002A6  A0D8               	btfss	status,0,c
  1377  0002A8  2AE8               	incf	wreg,f,c
  1378  0002AA  0800               	sublw	0
  1379  0002AC  6FF1               	movwf	(?_printf+3)& (0+255),b
  1380  0002AE  0E80               	movlw	128
  1381  0002B0  25FB               	addwf	_thresholdRange& (0+255),w,b
  1382  0002B2  6FF2               	movwf	(?_printf+4)& (0+255),b
  1383  0002B4  0E00               	movlw	0
  1384  0002B6  21FC               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1385  0002B8  6FF3               	movwf	(?_printf+5)& (0+255),b
  1386  0002BA  EC4F  F008         	call	_printf	;wreg free
  1387  0002BE  0E8B               	movlw	low STR_21
  1388  0002C0  0100               	movlb	0	; () banked
  1389  0002C2  6FEE               	movwf	printf@fmt& (0+255),b
  1390  0002C4  0EFF               	movlw	high STR_21
  1391  0002C6  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1392  0002C8  EC4F  F008         	call	_printf	;wreg free
  1393  0002CC  EF65  F000         	goto	l2672
  1394  0002D0                     l2734:
  1395                           
  1396                           ; BSR set to: 0
  1397  0002D0  0E01               	movlw	1
  1398  0002D2  6E52               	movwf	_fillBuffer^0,c
  1399  0002D4  EF65  F000         	goto	l2672
  1400  0002D8                     l2736:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;main.c: 177:                     printf("Unknown key %c\r\n", cmd);
  1404  0002D8  0EB7               	movlw	low STR_22
  1405  0002DA  6FEE               	movwf	printf@fmt& (0+255),b
  1406  0002DC  0EFF               	movlw	high STR_22
  1407  0002DE  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1408  0002E0  C0F8  F0F0         	movff	main@cmd,?_printf+2
  1409  0002E4  6BF1               	clrf	(?_printf+3)& (0+255),b
  1410  0002E6  EC4F  F008         	call	_printf	;wreg free
  1411                           
  1412                           ;main.c: 178:                     break;
  1413  0002EA  EF65  F000         	goto	l2672
  1414  0002EE                     l2740:
  1415                           
  1416                           ; BSR set to: 0
  1417  0002EE  51F8               	movf	main@cmd& (0+255),w,b
  1418  0002F0  6E45               	movwf	??_main^0,c
  1419  0002F2  6A46               	clrf	(??_main+1)^0,c
  1420                           
  1421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1422                           ; Switch size 1, requested type "simple"
  1423                           ; Number of cases is 1, Range of values is 0 to 0
  1424                           ; switch strategies available:
  1425                           ; Name         Instructions Cycles
  1426                           ; simple_byte            4     3 (average)
  1427                           ;	Chosen strategy is simple_byte
  1428  0002F4  5046               	movf	(??_main+1)^0,w,c
  1429  0002F6  0A00               	xorlw	0	; case 0
  1430  0002F8  B4D8               	btfsc	status,2,c
  1431  0002FA  EF81  F001         	goto	l2798
  1432  0002FE  EF6C  F001         	goto	l2736
  1433  000302                     l2798:
  1434                           
  1435                           ; BSR set to: 0
  1436                           ; Switch size 1, requested type "simple"
  1437                           ; Number of cases is 7, Range of values is 63 to 122
  1438                           ; switch strategies available:
  1439                           ; Name         Instructions Cycles
  1440                           ; simple_byte           22    12 (average)
  1441                           ;	Chosen strategy is simple_byte
  1442  000302  5045               	movf	??_main^0,w,c
  1443  000304  0A3F               	xorlw	63	; case 63
  1444  000306  B4D8               	btfsc	status,2,c
  1445  000308  EFA4  F000         	goto	l2694
  1446  00030C  0A6B               	xorlw	107	; case 84
  1447  00030E  B4D8               	btfsc	status,2,c
  1448  000310  EF0E  F001         	goto	l2722
  1449  000314  0A0E               	xorlw	14	; case 90
  1450  000316  B4D8               	btfsc	status,2,c
  1451  000318  EFE5  F000         	goto	l2698
  1452  00031C  0A3C               	xorlw	60	; case 102
  1453  00031E  B4D8               	btfsc	status,2,c
  1454  000320  EF68  F001         	goto	l2734
  1455  000324  0A09               	xorlw	9	; case 111
  1456  000326  B4D8               	btfsc	status,2,c
  1457  000328  EFDD  F000         	goto	l2696
  1458  00032C  0A1B               	xorlw	27	; case 116
  1459  00032E  B4D8               	btfsc	status,2,c
  1460  000330  EF28  F001         	goto	l2726
  1461  000334  0A0E               	xorlw	14	; case 122
  1462  000336  B4D8               	btfsc	status,2,c
  1463  000338  EFFA  F000         	goto	l2710
  1464  00033C  EF6C  F001         	goto	l2736
  1465  000340  EF27  F000         	goto	start
  1466  000344                     __end_of_main:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _printf *****************
  1470 ;; Defined at:
  1471 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  1474 ;;		 -> STR_22(17), STR_21(23), STR_20(24), STR_19(24), 
  1475 ;;		 -> STR_18(24), STR_17(3), STR_16(2), STR_15(6), 
  1476 ;;		 -> STR_14(33), STR_13(72), STR_12(43), STR_11(24), 
  1477 ;;		 -> STR_10(21), STR_9(7), STR_8(15), STR_7(33), 
  1478 ;;		 -> STR_6(4), STR_5(53), STR_4(3), STR_3(9), 
  1479 ;;		 -> STR_2(25), STR_1(11), 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  ap              2   41[BANK0 ] PTR void [1]
  1482 ;;		 -> ?_printf(2), 
  1483 ;;  ret             2    0        int 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  2   33[BANK0 ] int 
  1486 ;; Registers used:
  1487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1493 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;Total ram usage:       10 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:   12
  1500 ;; This function calls:
  1501 ;;		_vfprintf
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text1
  1508  00109E                     __ptext1:
  1509                           	callstack 0
  1510  00109E                     _printf:
  1511                           	callstack 18
  1512  00109E  0EF0               	movlw	low (?_printf+2)
  1513  0010A0  0100               	movlb	0	; () banked
  1514  0010A2  6FF6               	movwf	printf@ap& (0+255),b
  1515  0010A4  0E00               	movlw	high (?_printf+2)
  1516  0010A6  6FF7               	movwf	(printf@ap+1)& (0+255),b
  1517  0010A8                     
  1518                           ; BSR set to: 0
  1519  0010A8  0E00               	movlw	0
  1520  0010AA  6FE8               	movwf	vfprintf@fp& (0+255),b
  1521  0010AC  0E00               	movlw	0
  1522  0010AE  6FE9               	movwf	(vfprintf@fp+1)& (0+255),b
  1523  0010B0  C0EE  F0EA         	movff	printf@fmt,vfprintf@fmt
  1524  0010B4  C0EF  F0EB         	movff	printf@fmt+1,vfprintf@fmt+1
  1525  0010B8  0EF6               	movlw	low printf@ap
  1526  0010BA  6FEC               	movwf	vfprintf@ap& (0+255),b
  1527  0010BC  0E00               	movlw	high printf@ap
  1528  0010BE  6FED               	movwf	(vfprintf@ap+1)& (0+255),b
  1529  0010C0  EC37  F007         	call	_vfprintf	;wreg free
  1530  0010C4  0012               	return		;funcret
  1531  0010C6                     __end_of_printf:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _vfprintf *****************
  1535 ;; Defined at:
  1536 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  1539 ;;		 -> NULL(0), 
  1540 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  1541 ;;		 -> STR_22(17), STR_21(23), STR_20(24), STR_19(24), 
  1542 ;;		 -> STR_18(24), STR_17(3), STR_16(2), STR_15(6), 
  1543 ;;		 -> STR_14(33), STR_13(72), STR_12(43), STR_11(24), 
  1544 ;;		 -> STR_10(21), STR_9(7), STR_8(15), STR_7(33), 
  1545 ;;		 -> STR_6(4), STR_5(53), STR_4(3), STR_3(9), 
  1546 ;;		 -> STR_2(25), STR_1(11), 
  1547 ;;  ap              2   31[BANK0 ] PTR PTR void 
  1548 ;;		 -> printf@ap(2), 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  cfmt            2   66[COMRAM] PTR unsigned char 
  1551 ;;		 -> STR_22(17), STR_21(23), STR_20(24), STR_19(24), 
  1552 ;;		 -> STR_18(24), STR_17(3), STR_16(2), STR_15(6), 
  1553 ;;		 -> STR_14(33), STR_13(72), STR_12(43), STR_11(24), 
  1554 ;;		 -> STR_10(21), STR_9(7), STR_8(15), STR_7(33), 
  1555 ;;		 -> STR_6(4), STR_5(53), STR_4(3), STR_3(9), 
  1556 ;;		 -> STR_2(25), STR_1(11), 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  2   27[BANK0 ] int 
  1559 ;; Registers used:
  1560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1566 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;Total ram usage:        8 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:   11
  1573 ;; This function calls:
  1574 ;;		_vfpfcnvrt
  1575 ;; This function is called by:
  1576 ;;		_printf
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text2
  1581  000E6E                     __ptext2:
  1582                           	callstack 0
  1583  000E6E                     _vfprintf:
  1584                           	callstack 18
  1585  000E6E                     
  1586                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1587  000E6E  C0EA  F043         	movff	vfprintf@fmt,vfprintf@cfmt
  1588  000E72  C0EB  F044         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1589  000E76                     
  1590                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1591  000E76  0E00               	movlw	0
  1592  000E78  0100               	movlb	0	; () banked
  1593  000E7A  6FA1               	movwf	(_nout+1)& (0+255),b
  1594  000E7C  0E00               	movlw	0
  1595  000E7E  6FA0               	movwf	_nout& (0+255),b
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1598  000E80  EF55  F007         	goto	l2642
  1599  000E84                     l2640:
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1603  000E84  C0E8  F03B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1604  000E88  C0E9  F03C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1605  000E8C  0E43               	movlw	low vfprintf@cfmt
  1606  000E8E  6E3D               	movwf	vfpfcnvrt@fmt^0,c
  1607  000E90  0E00               	movlw	high vfprintf@cfmt
  1608  000E92  6E3E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1609  000E94  C0EC  F03F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1610  000E98  C0ED  F040         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1611  000E9C  EC13  F003         	call	_vfpfcnvrt	;wreg free
  1612  000EA0  503B               	movf	?_vfpfcnvrt^0,w,c
  1613  000EA2  0100               	movlb	0	; () banked
  1614  000EA4  27A0               	addwf	_nout& (0+255),f,b
  1615  000EA6  503C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1616  000EA8  23A1               	addwfc	(_nout+1)& (0+255),f,b
  1617  000EAA                     l2642:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1621  000EAA  C043  FFF6         	movff	vfprintf@cfmt,tblptrl
  1622  000EAE  C044  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1623  000EB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1624  000EB2  6AF8               	clrf	tblptru,c
  1625  000EB4                     	endif
  1626  000EB4                     	if	0	;tblptru may be non-zero
  1627  000EB4                     	endif
  1628  000EB4  0008               	tblrd		*
  1629  000EB6  50F5               	movf	tablat,w,c
  1630  000EB8  0900               	iorlw	0
  1631  000EBA  A4D8               	btfss	status,2,c
  1632  000EBC  EF62  F007         	goto	u1961
  1633  000EC0  EF64  F007         	goto	u1960
  1634  000EC4                     u1961:
  1635  000EC4  EF42  F007         	goto	l2640
  1636  000EC8                     u1960:
  1637  000EC8                     
  1638                           ; BSR set to: 0
  1639                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1640  000EC8  C0A0  F0E8         	movff	_nout,?_vfprintf
  1641  000ECC  C0A1  F0E9         	movff	_nout+1,?_vfprintf+1
  1642  000ED0                     
  1643                           ; BSR set to: 0
  1644  000ED0  0012               	return		;funcret
  1645  000ED2                     __end_of_vfprintf:
  1646                           	callstack 0
  1647                           
  1648 ;; *************** function _vfpfcnvrt *****************
  1649 ;; Defined at:
  1650 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  fp              2   58[COMRAM] PTR struct _IO_FILE
  1653 ;;		 -> NULL(0), 
  1654 ;;  fmt             2   60[COMRAM] PTR PTR unsigned char 
  1655 ;;		 -> vfprintf@cfmt(2), 
  1656 ;;  ap              2   62[COMRAM] PTR PTR void 
  1657 ;;		 -> printf@ap(2), 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  ll              8   18[BANK0 ] long long 
  1660 ;;  llu             8    0        unsigned long long 
  1661 ;;  f               4    0        unsigned long long 
  1662 ;;  vp              3    0        PTR void 
  1663 ;;  ct              3    0        unsigned char [3]
  1664 ;;  cp              3    0        PTR unsigned char 
  1665 ;;  i               2    0        int 
  1666 ;;  done            2    0        int 
  1667 ;;  c               1   26[BANK0 ] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  2   58[COMRAM] int 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1677 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;Total ram usage:       17 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:   10
  1684 ;; This function calls:
  1685 ;;		_ctoa
  1686 ;;		_dtoa
  1687 ;;		_fputc
  1688 ;; This function is called by:
  1689 ;;		_vfprintf
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text3
  1694  000626                     __ptext3:
  1695                           	callstack 0
  1696  000626                     _vfpfcnvrt:
  1697                           	callstack 18
  1698  000626                     
  1699                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1700  000626  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1701  00062A  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1702  00062E  CFDE FFF6          	movff	postinc2,tblptrl
  1703  000632  CFDD FFF7          	movff	postdec2,tblptrh
  1704  000636                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1705  000636  6AF8               	clrf	tblptru,c
  1706  000638                     	endif
  1707  000638                     	if	0	;tblptru may be non-zero
  1708  000638                     	endif
  1709  000638  0008               	tblrd		*
  1710  00063A  50F5               	movf	tablat,w,c
  1711  00063C  0A25               	xorlw	37
  1712  00063E  A4D8               	btfss	status,2,c
  1713  000640  EF24  F003         	goto	u1911
  1714  000644  EF26  F003         	goto	u1910
  1715  000648                     u1911:
  1716  000648  EF10  F004         	goto	l2628
  1717  00064C                     u1910:
  1718  00064C                     
  1719                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1720  00064C  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1721  000650  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1722  000654  2ADE               	incf	postinc2,f,c
  1723  000656  0E00               	movlw	0
  1724  000658  22DD               	addwfc	postdec2,f,c
  1725  00065A                     
  1726                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1727  00065A  0E00               	movlw	0
  1728  00065C  6E48               	movwf	(_width+1)^0,c
  1729  00065E  0E00               	movlw	0
  1730  000660  6E47               	movwf	_width^0,c
  1731  000662  C047  F04B         	movff	_width,_flags
  1732  000666  C048  F04C         	movff	_width+1,_flags+1
  1733  00066A                     
  1734                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1735  00066A  6849               	setf	_prec^0,c
  1736  00066C  684A               	setf	(_prec+1)^0,c
  1737  00066E                     
  1738                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  1739  00066E  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1740  000672  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1741  000676  CFDE FFF6          	movff	postinc2,tblptrl
  1742  00067A  CFDD FFF7          	movff	postdec2,tblptrh
  1743  00067E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1744  00067E  6AF8               	clrf	tblptru,c
  1745  000680                     	endif
  1746  000680                     	if	0	;tblptru may be non-zero
  1747  000680                     	endif
  1748  000680  0008               	tblrd		*
  1749  000682  50F5               	movf	tablat,w,c
  1750  000684  0A63               	xorlw	99
  1751  000686  A4D8               	btfss	status,2,c
  1752  000688  EF48  F003         	goto	u1921
  1753  00068C  EF4A  F003         	goto	u1920
  1754  000690                     u1921:
  1755  000690  EF72  F003         	goto	l2602
  1756  000694                     u1920:
  1757  000694                     
  1758                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  1759  000694  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1760  000698  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1761  00069C  2ADE               	incf	postinc2,f,c
  1762  00069E  0E00               	movlw	0
  1763  0006A0  22DD               	addwfc	postdec2,f,c
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1766  0006A2  C03F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1767  0006A6  C040  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1768  0006AA  CFDF F041          	movff	indf2,??_vfpfcnvrt
  1769  0006AE  0E02               	movlw	2
  1770  0006B0  26DE               	addwf	postinc2,f,c
  1771  0006B2  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  1772  0006B6  0E00               	movlw	0
  1773  0006B8  22DD               	addwfc	postdec2,f,c
  1774  0006BA  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1775  0006BE  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1776  0006C2  50DF               	movf	indf2,w,c
  1777  0006C4  0100               	movlb	0	; () banked
  1778  0006C6  6FE7               	movwf	vfpfcnvrt@c& (0+255),b
  1779  0006C8                     
  1780                           ; BSR set to: 0
  1781                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  1782  0006C8  C03B  F017         	movff	vfpfcnvrt@fp,ctoa@fp
  1783  0006CC  C03C  F018         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1784  0006D0  C0E7  F019         	movff	vfpfcnvrt@c,ctoa@c
  1785  0006D4  EC21  F006         	call	_ctoa	;wreg free
  1786  0006D8  C017  F03B         	movff	?_ctoa,?_vfpfcnvrt
  1787  0006DC  C018  F03C         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1788  0006E0  EF2C  F004         	goto	l1091
  1789  0006E4                     l2602:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1792  0006E4  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1793  0006E8  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1794  0006EC  CFDE FFF6          	movff	postinc2,tblptrl
  1795  0006F0  CFDD FFF7          	movff	postdec2,tblptrh
  1796  0006F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1797  0006F4  6AF8               	clrf	tblptru,c
  1798  0006F6                     	endif
  1799  0006F6                     	if	0	;tblptru may be non-zero
  1800  0006F6                     	endif
  1801  0006F6  0008               	tblrd		*
  1802  0006F8  50F5               	movf	tablat,w,c
  1803  0006FA  0A64               	xorlw	100
  1804  0006FC  B4D8               	btfsc	status,2,c
  1805  0006FE  EF83  F003         	goto	u1931
  1806  000702  EF85  F003         	goto	u1930
  1807  000706                     u1931:
  1808  000706  EF98  F003         	goto	l2606
  1809  00070A                     u1930:
  1810  00070A  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1811  00070E  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1812  000712  CFDE FFF6          	movff	postinc2,tblptrl
  1813  000716  CFDD FFF7          	movff	postdec2,tblptrh
  1814  00071A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1815  00071A  6AF8               	clrf	tblptru,c
  1816  00071C                     	endif
  1817  00071C                     	if	0	;tblptru may be non-zero
  1818  00071C                     	endif
  1819  00071C  0008               	tblrd		*
  1820  00071E  50F5               	movf	tablat,w,c
  1821  000720  0A69               	xorlw	105
  1822  000722  A4D8               	btfss	status,2,c
  1823  000724  EF96  F003         	goto	u1941
  1824  000728  EF98  F003         	goto	u1940
  1825  00072C                     u1941:
  1826  00072C  EFD9  F003         	goto	l2612
  1827  000730                     u1940:
  1828  000730                     l2606:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1831  000730  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1832  000734  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1833  000738  2ADE               	incf	postinc2,f,c
  1834  00073A  0E00               	movlw	0
  1835  00073C  22DD               	addwfc	postdec2,f,c
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1838  00073E  C03F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1839  000742  C040  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1840  000746  CFDF F041          	movff	indf2,??_vfpfcnvrt
  1841  00074A  0E02               	movlw	2
  1842  00074C  26DE               	addwf	postinc2,f,c
  1843  00074E  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  1844  000752  0E00               	movlw	0
  1845  000754  22DD               	addwfc	postdec2,f,c
  1846  000756  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1847  00075A  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1848  00075E  CFDE F0DF          	movff	postinc2,vfpfcnvrt@ll
  1849  000762  CFDD F0E0          	movff	postdec2,vfpfcnvrt@ll+1
  1850  000766  0100               	movlb	0	; () banked
  1851  000768  0E00               	movlw	0
  1852  00076A  BFE0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1853  00076C  0EFF               	movlw	-1
  1854  00076E  6FE1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1855  000770  6FE2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1856  000772  6FE3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1857  000774  6FE4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1858  000776  6FE5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1859  000778  6FE6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1860  00077A                     
  1861                           ; BSR set to: 0
  1862                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1863  00077A  C03B  F029         	movff	vfpfcnvrt@fp,dtoa@fp
  1864  00077E  C03C  F02A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1865  000782  C0DF  F02B         	movff	vfpfcnvrt@ll,dtoa@d
  1866  000786  C0E0  F02C         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1867  00078A  C0E1  F02D         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1868  00078E  C0E2  F02E         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1869  000792  C0E3  F02F         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1870  000796  C0E4  F030         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1871  00079A  C0E5  F031         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1872  00079E  C0E6  F032         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1873  0007A2  ECA2  F001         	call	_dtoa	;wreg free
  1874  0007A6  C029  F03B         	movff	?_dtoa,?_vfpfcnvrt
  1875  0007AA  C02A  F03C         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1876  0007AE  EF2C  F004         	goto	l1091
  1877  0007B2                     l2612:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1880  0007B2  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1881  0007B6  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1882  0007BA  CFDE FFF6          	movff	postinc2,tblptrl
  1883  0007BE  CFDD FFF7          	movff	postdec2,tblptrh
  1884  0007C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1885  0007C2  6AF8               	clrf	tblptru,c
  1886  0007C4                     	endif
  1887  0007C4                     	if	0	;tblptru may be non-zero
  1888  0007C4                     	endif
  1889  0007C4  0008               	tblrd		*
  1890  0007C6  50F5               	movf	tablat,w,c
  1891  0007C8  0A25               	xorlw	37
  1892  0007CA  A4D8               	btfss	status,2,c
  1893  0007CC  EFEA  F003         	goto	u1951
  1894  0007D0  EFEC  F003         	goto	u1950
  1895  0007D4                     u1951:
  1896  0007D4  EF03  F004         	goto	l2622
  1897  0007D8                     u1950:
  1898  0007D8                     
  1899                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1900  0007D8  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1901  0007DC  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1902  0007E0  2ADE               	incf	postinc2,f,c
  1903  0007E2  0E00               	movlw	0
  1904  0007E4  22DD               	addwfc	postdec2,f,c
  1905  0007E6                     
  1906                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1907  0007E6  0E00               	movlw	0
  1908  0007E8  6E0F               	movwf	(fputc@c+1)^0,c
  1909  0007EA  0E25               	movlw	37
  1910  0007EC  6E0E               	movwf	fputc@c^0,c
  1911  0007EE  C03B  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1912  0007F2  C03C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1913  0007F6  ECEC  F006         	call	_fputc	;wreg free
  1914  0007FA                     l2618:
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1917  0007FA  0E00               	movlw	0
  1918  0007FC  6E3C               	movwf	(?_vfpfcnvrt+1)^0,c
  1919  0007FE  0E01               	movlw	1
  1920  000800  6E3B               	movwf	?_vfpfcnvrt^0,c
  1921  000802  EF2C  F004         	goto	l1091
  1922  000806                     l2622:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1925  000806  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1926  00080A  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1927  00080E  2ADE               	incf	postinc2,f,c
  1928  000810  0E00               	movlw	0
  1929  000812  22DD               	addwfc	postdec2,f,c
  1930  000814                     
  1931                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1932  000814  0E00               	movlw	0
  1933  000816  6E3C               	movwf	(?_vfpfcnvrt+1)^0,c
  1934  000818  0E00               	movlw	0
  1935  00081A  6E3B               	movwf	?_vfpfcnvrt^0,c
  1936  00081C  EF2C  F004         	goto	l1091
  1937  000820                     l2628:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1940  000820  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1941  000824  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1942  000828  CFDE FFF6          	movff	postinc2,tblptrl
  1943  00082C  CFDD FFF7          	movff	postdec2,tblptrh
  1944  000830                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1945  000830  6AF8               	clrf	tblptru,c
  1946  000832                     	endif
  1947  000832                     	if	0	;tblptru may be non-zero
  1948  000832                     	endif
  1949  000832  0008               	tblrd		*
  1950  000834  50F5               	movf	tablat,w,c
  1951  000836  6E0E               	movwf	fputc@c^0,c
  1952  000838  6A0F               	clrf	(fputc@c+1)^0,c
  1953  00083A  C03B  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1954  00083E  C03C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1955  000842  ECEC  F006         	call	_fputc	;wreg free
  1956  000846                     
  1957                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1958  000846  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1959  00084A  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1960  00084E  2ADE               	incf	postinc2,f,c
  1961  000850  0E00               	movlw	0
  1962  000852  22DD               	addwfc	postdec2,f,c
  1963  000854  EFFD  F003         	goto	l2618
  1964  000858                     l1091:
  1965  000858  0012               	return		;funcret
  1966  00085A                     __end_of_vfpfcnvrt:
  1967                           	callstack 0
  1968                           
  1969 ;; *************** function _dtoa *****************
  1970 ;; Defined at:
  1971 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  1974 ;;		 -> NULL(0), 
  1975 ;;  d               8   42[COMRAM] long long 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  n               8    8[BANK0 ] long long 
  1978 ;;  i               2   16[BANK0 ] int 
  1979 ;;  s               2    6[BANK0 ] int 
  1980 ;;  w               2    4[BANK0 ] int 
  1981 ;;  p               2    2[BANK0 ] int 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2   40[COMRAM] int 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1991 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Totals:        18      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;Total ram usage:       36 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    9
  1998 ;; This function calls:
  1999 ;;		___aodiv
  2000 ;;		___aomod
  2001 ;;		_abs
  2002 ;;		_pad
  2003 ;; This function is called by:
  2004 ;;		_vfpfcnvrt
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text4
  2009  000344                     __ptext4:
  2010                           	callstack 0
  2011  000344                     _dtoa:
  2012                           	callstack 18
  2013  000344                     
  2014                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2015  000344  C02B  F0D5         	movff	dtoa@d,dtoa@n
  2016  000348  C02C  F0D6         	movff	dtoa@d+1,dtoa@n+1
  2017  00034C  C02D  F0D7         	movff	dtoa@d+2,dtoa@n+2
  2018  000350  C02E  F0D8         	movff	dtoa@d+3,dtoa@n+3
  2019  000354  C02F  F0D9         	movff	dtoa@d+4,dtoa@n+4
  2020  000358  C030  F0DA         	movff	dtoa@d+5,dtoa@n+5
  2021  00035C  C031  F0DB         	movff	dtoa@d+6,dtoa@n+6
  2022  000360  C032  F0DC         	movff	dtoa@d+7,dtoa@n+7
  2023  000364                     
  2024                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2025  000364  0100               	movlb	0	; () banked
  2026  000366  BFDC               	btfsc	(dtoa@n+7)& (0+255),7,b
  2027  000368  EFB8  F001         	goto	u1761
  2028  00036C  EFBB  F001         	goto	u1760
  2029  000370                     u1761:
  2030  000370  0E01               	movlw	1
  2031  000372  EFBC  F001         	goto	u1770
  2032  000376                     u1760:
  2033  000376  0E00               	movlw	0
  2034  000378                     u1770:
  2035  000378  6FD3               	movwf	dtoa@s& (0+255),b
  2036  00037A  6BD4               	clrf	(dtoa@s+1)& (0+255),b
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2039  00037C  51D3               	movf	dtoa@s& (0+255),w,b
  2040  00037E  11D4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2041  000380  B4D8               	btfsc	status,2,c
  2042  000382  EFC5  F001         	goto	u1781
  2043  000386  EFC7  F001         	goto	u1780
  2044  00038A                     u1781:
  2045  00038A  EFD7  F001         	goto	l2530
  2046  00038E                     u1780:
  2047  00038E                     
  2048                           ; BSR set to: 0
  2049                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2050  00038E  1FDC               	comf	(dtoa@n+7)& (0+255),f,b
  2051  000390  1FDB               	comf	(dtoa@n+6)& (0+255),f,b
  2052  000392  1FDA               	comf	(dtoa@n+5)& (0+255),f,b
  2053  000394  1FD9               	comf	(dtoa@n+4)& (0+255),f,b
  2054  000396  1FD8               	comf	(dtoa@n+3)& (0+255),f,b
  2055  000398  1FD7               	comf	(dtoa@n+2)& (0+255),f,b
  2056  00039A  1FD6               	comf	(dtoa@n+1)& (0+255),f,b
  2057  00039C  6DD5               	negf	dtoa@n& (0+255),b
  2058  00039E  0E00               	movlw	0
  2059  0003A0  23D6               	addwfc	(dtoa@n+1)& (0+255),f,b
  2060  0003A2  23D7               	addwfc	(dtoa@n+2)& (0+255),f,b
  2061  0003A4  23D8               	addwfc	(dtoa@n+3)& (0+255),f,b
  2062  0003A6  23D9               	addwfc	(dtoa@n+4)& (0+255),f,b
  2063  0003A8  23DA               	addwfc	(dtoa@n+5)& (0+255),f,b
  2064  0003AA  23DB               	addwfc	(dtoa@n+6)& (0+255),f,b
  2065  0003AC  23DC               	addwfc	(dtoa@n+7)& (0+255),f,b
  2066  0003AE                     l2530:
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2070  0003AE  BE4A               	btfsc	(_prec+1)^0,7,c
  2071  0003B0  EFDC  F001         	goto	u1791
  2072  0003B4  EFDE  F001         	goto	u1790
  2073  0003B8                     u1791:
  2074  0003B8  EFDF  F001         	goto	l2534
  2075  0003BC                     u1790:
  2076  0003BC                     
  2077                           ; BSR set to: 0
  2078                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2079  0003BC  924B               	bcf	_flags^0,1,c
  2080  0003BE                     l2534:
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2084  0003BE  BE4A               	btfsc	(_prec+1)^0,7,c
  2085  0003C0  EFEC  F001         	goto	u1800
  2086  0003C4  504A               	movf	(_prec+1)^0,w,c
  2087  0003C6  E106               	bnz	u1801
  2088  0003C8  0449               	decf	_prec^0,w,c
  2089  0003CA  B0D8               	btfsc	status,0,c
  2090  0003CC  EFEA  F001         	goto	u1801
  2091  0003D0  EFEC  F001         	goto	u1800
  2092  0003D4                     u1801:
  2093  0003D4  EFF2  F001         	goto	l1066
  2094  0003D8                     u1800:
  2095  0003D8                     
  2096                           ; BSR set to: 0
  2097  0003D8  0E00               	movlw	0
  2098  0003DA  6FD0               	movwf	(dtoa@p+1)& (0+255),b
  2099  0003DC  0E01               	movlw	1
  2100  0003DE  6FCF               	movwf	dtoa@p& (0+255),b
  2101  0003E0  EFF6  F001         	goto	l1068
  2102  0003E4                     l1066:
  2103                           
  2104                           ; BSR set to: 0
  2105  0003E4  C049  F0CF         	movff	_prec,dtoa@p
  2106  0003E8  C04A  F0D0         	movff	_prec+1,dtoa@p+1
  2107  0003EC                     l1068:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2111  0003EC  C047  F0D1         	movff	_width,dtoa@w
  2112  0003F0  C048  F0D2         	movff	_width+1,dtoa@w+1
  2113  0003F4                     
  2114                           ; BSR set to: 0
  2115                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2116  0003F4  51D3               	movf	dtoa@s& (0+255),w,b
  2117  0003F6  11D4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2118  0003F8  A4D8               	btfss	status,2,c
  2119  0003FA  EF01  F002         	goto	u1811
  2120  0003FE  EF03  F002         	goto	u1810
  2121  000402                     u1811:
  2122  000402  EF0A  F002         	goto	l2542
  2123  000406                     u1810:
  2124  000406                     
  2125                           ; BSR set to: 0
  2126  000406  A44B               	btfss	_flags^0,2,c
  2127  000408  EF08  F002         	goto	u1821
  2128  00040C  EF0A  F002         	goto	u1820
  2129  000410                     u1821:
  2130  000410  EF0D  F002         	goto	l2544
  2131  000414                     u1820:
  2132  000414                     l2542:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  2136  000414  07D1               	decf	dtoa@w& (0+255),f,b
  2137  000416  A0D8               	btfss	status,0,c
  2138  000418  07D2               	decf	(dtoa@w+1)& (0+255),f,b
  2139  00041A                     l2544:
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2143  00041A  0E00               	movlw	0
  2144  00041C  6FDE               	movwf	(dtoa@i+1)& (0+255),b
  2145  00041E  0E1F               	movlw	31
  2146  000420  6FDD               	movwf	dtoa@i& (0+255),b
  2147  000422                     
  2148                           ; BSR set to: 0
  2149                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2150  000422  0E00               	movlw	0
  2151  000424  6FCC               	movwf	(_dbuf+31)& (0+255),b
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2154  000426  EF92  F002         	goto	l2558
  2155  00042A                     l2548:
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  2159  00042A  07DD               	decf	dtoa@i& (0+255),f,b
  2160  00042C  A0D8               	btfss	status,0,c
  2161  00042E  07DE               	decf	(dtoa@i+1)& (0+255),f,b
  2162  000430                     
  2163                           ; BSR set to: 0
  2164                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2165  000430  0EAD               	movlw	low _dbuf
  2166  000432  25DD               	addwf	dtoa@i& (0+255),w,b
  2167  000434  6ED9               	movwf	fsr2l,c
  2168  000436  0E00               	movlw	high _dbuf
  2169  000438  21DE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2170  00043A  6EDA               	movwf	fsr2h,c
  2171  00043C  C0D5  F00C         	movff	dtoa@n,___aomod@dividend
  2172  000440  C0D6  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  2173  000444  C0D7  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  2174  000448  C0D8  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  2175  00044C  C0D9  F010         	movff	dtoa@n+4,___aomod@dividend+4
  2176  000450  C0DA  F011         	movff	dtoa@n+5,___aomod@dividend+5
  2177  000454  C0DB  F012         	movff	dtoa@n+6,___aomod@dividend+6
  2178  000458  C0DC  F013         	movff	dtoa@n+7,___aomod@dividend+7
  2179  00045C  0E0A               	movlw	10
  2180  00045E  6E14               	movwf	___aomod@divisor^0,c
  2181  000460  0E00               	movlw	0
  2182  000462  6E15               	movwf	(___aomod@divisor+1)^0,c
  2183  000464  0E00               	movlw	0
  2184  000466  6E16               	movwf	(___aomod@divisor+2)^0,c
  2185  000468  0E00               	movlw	0
  2186  00046A  6E17               	movwf	(___aomod@divisor+3)^0,c
  2187  00046C  0E00               	movlw	0
  2188  00046E  6E18               	movwf	(___aomod@divisor+4)^0,c
  2189  000470  0E00               	movlw	0
  2190  000472  6E19               	movwf	(___aomod@divisor+5)^0,c
  2191  000474  0E00               	movlw	0
  2192  000476  6E1A               	movwf	(___aomod@divisor+6)^0,c
  2193  000478  0E00               	movlw	0
  2194  00047A  6E1B               	movwf	(___aomod@divisor+7)^0,c
  2195  00047C  ECF1  F004         	call	___aomod	;wreg free
  2196  000480  C00C  F033         	movff	?___aomod,??_dtoa
  2197  000484  C00D  F034         	movff	?___aomod+1,??_dtoa+1
  2198  000488  C00E  F035         	movff	?___aomod+2,??_dtoa+2
  2199  00048C  C00F  F036         	movff	?___aomod+3,??_dtoa+3
  2200  000490  C010  F037         	movff	?___aomod+4,??_dtoa+4
  2201  000494  C011  F038         	movff	?___aomod+5,??_dtoa+5
  2202  000498  C012  F039         	movff	?___aomod+6,??_dtoa+6
  2203  00049C  C013  F03A         	movff	?___aomod+7,??_dtoa+7
  2204  0004A0  C033  F01E         	movff	??_dtoa,abs@a
  2205  0004A4  C035  F01F         	movff	??_dtoa+2,abs@a+1
  2206  0004A8  EC8B  F007         	call	_abs	;wreg free
  2207  0004AC  501E               	movf	?_abs^0,w,c
  2208  0004AE  0F30               	addlw	48
  2209  0004B0  6EDF               	movwf	indf2,c
  2210  0004B2                     
  2211                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2212  0004B2  0100               	movlb	0	; () banked
  2213  0004B4  07CF               	decf	dtoa@p& (0+255),f,b
  2214  0004B6  A0D8               	btfss	status,0,c
  2215  0004B8  07D0               	decf	(dtoa@p+1)& (0+255),f,b
  2216  0004BA                     
  2217                           ; BSR set to: 0
  2218                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2219  0004BA  07D1               	decf	dtoa@w& (0+255),f,b
  2220  0004BC  A0D8               	btfss	status,0,c
  2221  0004BE  07D2               	decf	(dtoa@w+1)& (0+255),f,b
  2222  0004C0                     
  2223                           ; BSR set to: 0
  2224                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2225  0004C0  C0D5  F00C         	movff	dtoa@n,___aodiv@dividend
  2226  0004C4  C0D6  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  2227  0004C8  C0D7  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  2228  0004CC  C0D8  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  2229  0004D0  C0D9  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  2230  0004D4  C0DA  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  2231  0004D8  C0DB  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  2232  0004DC  C0DC  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  2233  0004E0  0E0A               	movlw	10
  2234  0004E2  6E14               	movwf	___aodiv@divisor^0,c
  2235  0004E4  0E00               	movlw	0
  2236  0004E6  6E15               	movwf	(___aodiv@divisor+1)^0,c
  2237  0004E8  0E00               	movlw	0
  2238  0004EA  6E16               	movwf	(___aodiv@divisor+2)^0,c
  2239  0004EC  0E00               	movlw	0
  2240  0004EE  6E17               	movwf	(___aodiv@divisor+3)^0,c
  2241  0004F0  0E00               	movlw	0
  2242  0004F2  6E18               	movwf	(___aodiv@divisor+4)^0,c
  2243  0004F4  0E00               	movlw	0
  2244  0004F6  6E19               	movwf	(___aodiv@divisor+5)^0,c
  2245  0004F8  0E00               	movlw	0
  2246  0004FA  6E1A               	movwf	(___aodiv@divisor+6)^0,c
  2247  0004FC  0E00               	movlw	0
  2248  0004FE  6E1B               	movwf	(___aodiv@divisor+7)^0,c
  2249  000500  EC2D  F004         	call	___aodiv	;wreg free
  2250  000504  C00C  F0D5         	movff	?___aodiv,dtoa@n
  2251  000508  C00D  F0D6         	movff	?___aodiv+1,dtoa@n+1
  2252  00050C  C00E  F0D7         	movff	?___aodiv+2,dtoa@n+2
  2253  000510  C00F  F0D8         	movff	?___aodiv+3,dtoa@n+3
  2254  000514  C010  F0D9         	movff	?___aodiv+4,dtoa@n+4
  2255  000518  C011  F0DA         	movff	?___aodiv+5,dtoa@n+5
  2256  00051C  C012  F0DB         	movff	?___aodiv+6,dtoa@n+6
  2257  000520  C013  F0DC         	movff	?___aodiv+7,dtoa@n+7
  2258  000524                     l2558:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2261  000524  0100               	movlb	0	; () banked
  2262  000526  BFDE               	btfsc	(dtoa@i+1)& (0+255),7,b
  2263  000528  EF9E  F002         	goto	u1831
  2264  00052C  51DE               	movf	(dtoa@i+1)& (0+255),w,b
  2265  00052E  E108               	bnz	u1830
  2266  000530  05DD               	decf	dtoa@i& (0+255),w,b
  2267  000532  A0D8               	btfss	status,0,c
  2268  000534  EF9E  F002         	goto	u1831
  2269  000538  EFA0  F002         	goto	u1830
  2270  00053C                     u1831:
  2271  00053C  EFD0  F002         	goto	l2568
  2272  000540                     u1830:
  2273  000540                     
  2274                           ; BSR set to: 0
  2275  000540  51D5               	movf	dtoa@n& (0+255),w,b
  2276  000542  11D6               	iorwf	(dtoa@n+1)& (0+255),w,b
  2277  000544  11D7               	iorwf	(dtoa@n+2)& (0+255),w,b
  2278  000546  11D8               	iorwf	(dtoa@n+3)& (0+255),w,b
  2279  000548  11D9               	iorwf	(dtoa@n+4)& (0+255),w,b
  2280  00054A  11DA               	iorwf	(dtoa@n+5)& (0+255),w,b
  2281  00054C  11DB               	iorwf	(dtoa@n+6)& (0+255),w,b
  2282  00054E  11DC               	iorwf	(dtoa@n+7)& (0+255),w,b
  2283  000550  A4D8               	btfss	status,2,c
  2284  000552  EFAD  F002         	goto	u1841
  2285  000556  EFAF  F002         	goto	u1840
  2286  00055A                     u1841:
  2287  00055A  EF15  F002         	goto	l2548
  2288  00055E                     u1840:
  2289  00055E                     
  2290                           ; BSR set to: 0
  2291  00055E  BFD0               	btfsc	(dtoa@p+1)& (0+255),7,b
  2292  000560  EFBC  F002         	goto	u1850
  2293  000564  51D0               	movf	(dtoa@p+1)& (0+255),w,b
  2294  000566  E106               	bnz	u1851
  2295  000568  05CF               	decf	dtoa@p& (0+255),w,b
  2296  00056A  B0D8               	btfsc	status,0,c
  2297  00056C  EFBA  F002         	goto	u1851
  2298  000570  EFBC  F002         	goto	u1850
  2299  000574                     u1851:
  2300  000574  EF15  F002         	goto	l2548
  2301  000578                     u1850:
  2302  000578                     
  2303                           ; BSR set to: 0
  2304  000578  BFD2               	btfsc	(dtoa@w+1)& (0+255),7,b
  2305  00057A  EFC7  F002         	goto	u1861
  2306  00057E  51D2               	movf	(dtoa@w+1)& (0+255),w,b
  2307  000580  E108               	bnz	u1860
  2308  000582  05D1               	decf	dtoa@w& (0+255),w,b
  2309  000584  A0D8               	btfss	status,0,c
  2310  000586  EFC7  F002         	goto	u1861
  2311  00058A  EFC9  F002         	goto	u1860
  2312  00058E                     u1861:
  2313  00058E  EFD0  F002         	goto	l2568
  2314  000592                     u1860:
  2315  000592                     
  2316                           ; BSR set to: 0
  2317  000592  B24B               	btfsc	_flags^0,1,c
  2318  000594  EFCE  F002         	goto	u1871
  2319  000598  EFD0  F002         	goto	u1870
  2320  00059C                     u1871:
  2321  00059C  EF15  F002         	goto	l2548
  2322  0005A0                     u1870:
  2323  0005A0                     l2568:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2327  0005A0  51D3               	movf	dtoa@s& (0+255),w,b
  2328  0005A2  11D4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2329  0005A4  A4D8               	btfss	status,2,c
  2330  0005A6  EFD7  F002         	goto	u1881
  2331  0005AA  EFD9  F002         	goto	u1880
  2332  0005AE                     u1881:
  2333  0005AE  EFE0  F002         	goto	l2572
  2334  0005B2                     u1880:
  2335  0005B2                     
  2336                           ; BSR set to: 0
  2337  0005B2  A44B               	btfss	_flags^0,2,c
  2338  0005B4  EFDE  F002         	goto	u1891
  2339  0005B8  EFE0  F002         	goto	u1890
  2340  0005BC                     u1891:
  2341  0005BC  EFFE  F002         	goto	l2582
  2342  0005C0                     u1890:
  2343  0005C0                     l2572:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  2347  0005C0  07DD               	decf	dtoa@i& (0+255),f,b
  2348  0005C2  A0D8               	btfss	status,0,c
  2349  0005C4  07DE               	decf	(dtoa@i+1)& (0+255),f,b
  2350  0005C6                     
  2351                           ; BSR set to: 0
  2352                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2353  0005C6  51D3               	movf	dtoa@s& (0+255),w,b
  2354  0005C8  11D4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2355  0005CA  A4D8               	btfss	status,2,c
  2356  0005CC  EFEA  F002         	goto	u1901
  2357  0005D0  EFEC  F002         	goto	u1900
  2358  0005D4                     u1901:
  2359  0005D4  EFF2  F002         	goto	l2578
  2360  0005D8                     u1900:
  2361  0005D8                     
  2362                           ; BSR set to: 0
  2363  0005D8  0E00               	movlw	0
  2364  0005DA  6FCE               	movwf	(_dtoa$1386+1)& (0+255),b
  2365  0005DC  0E2B               	movlw	43
  2366  0005DE  6FCD               	movwf	_dtoa$1386& (0+255),b
  2367  0005E0  EFF6  F002         	goto	l2580
  2368  0005E4                     l2578:
  2369                           
  2370                           ; BSR set to: 0
  2371  0005E4  0E00               	movlw	0
  2372  0005E6  6FCE               	movwf	(_dtoa$1386+1)& (0+255),b
  2373  0005E8  0E2D               	movlw	45
  2374  0005EA  6FCD               	movwf	_dtoa$1386& (0+255),b
  2375  0005EC                     l2580:
  2376                           
  2377                           ; BSR set to: 0
  2378  0005EC  0EAD               	movlw	low _dbuf
  2379  0005EE  25DD               	addwf	dtoa@i& (0+255),w,b
  2380  0005F0  6ED9               	movwf	fsr2l,c
  2381  0005F2  0E00               	movlw	high _dbuf
  2382  0005F4  21DE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2383  0005F6  6EDA               	movwf	fsr2h,c
  2384  0005F8  C0CD  FFDF         	movff	_dtoa$1386,indf2
  2385  0005FC                     l2582:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2389  0005FC  C029  F01E         	movff	dtoa@fp,pad@fp
  2390  000600  C02A  F01F         	movff	dtoa@fp+1,pad@fp+1
  2391  000604  0EAD               	movlw	low _dbuf
  2392  000606  25DD               	addwf	dtoa@i& (0+255),w,b
  2393  000608  6E20               	movwf	pad@buf^0,c
  2394  00060A  0E00               	movlw	high _dbuf
  2395  00060C  21DE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2396  00060E  6E21               	movwf	(pad@buf+1)^0,c
  2397  000610  C0D1  F022         	movff	dtoa@w,pad@p
  2398  000614  C0D2  F023         	movff	dtoa@w+1,pad@p+1
  2399  000618  EC8B  F006         	call	_pad	;wreg free
  2400  00061C  C01E  F029         	movff	?_pad,?_dtoa
  2401  000620  C01F  F02A         	movff	?_pad+1,?_dtoa+1
  2402  000624  0012               	return		;funcret
  2403  000626                     __end_of_dtoa:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _pad *****************
  2407 ;; Defined at:
  2408 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  2411 ;;		 -> NULL(0), 
  2412 ;;  buf             2   31[COMRAM] PTR unsigned char 
  2413 ;;		 -> dbuf(32), 
  2414 ;;  p               2   33[COMRAM] int 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  w               2   38[COMRAM] int 
  2417 ;;  i               2   36[COMRAM] int 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  2   29[COMRAM] int 
  2420 ;; Registers used:
  2421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2427 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;Total ram usage:       11 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    8
  2434 ;; This function calls:
  2435 ;;		_fputc
  2436 ;;		_fputs
  2437 ;;		_strlen
  2438 ;; This function is called by:
  2439 ;;		_dtoa
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text5
  2444  000D16                     __ptext5:
  2445                           	callstack 0
  2446  000D16                     _pad:
  2447                           	callstack 18
  2448  000D16                     
  2449                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2450  000D16  A04B               	btfss	_flags^0,0,c
  2451  000D18  EF90  F006         	goto	u1661
  2452  000D1C  EF92  F006         	goto	u1660
  2453  000D20                     u1661:
  2454  000D20  EF9C  F006         	goto	l2474
  2455  000D24                     u1660:
  2456  000D24                     
  2457                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2458  000D24  C020  F017         	movff	pad@buf,fputs@s
  2459  000D28  C021  F018         	movff	pad@buf+1,fputs@s+1
  2460  000D2C  C01E  F019         	movff	pad@fp,fputs@fp
  2461  000D30  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  2462  000D34  EC69  F007         	call	_fputs	;wreg free
  2463  000D38                     l2474:
  2464                           
  2465                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2466  000D38  BE23               	btfsc	(pad@p+1)^0,7,c
  2467  000D3A  EFA1  F006         	goto	u1671
  2468  000D3E  EFA3  F006         	goto	u1670
  2469  000D42                     u1671:
  2470  000D42  EFA9  F006         	goto	l2478
  2471  000D46                     u1670:
  2472  000D46  C022  F027         	movff	pad@p,pad@w
  2473  000D4A  C023  F028         	movff	pad@p+1,pad@w+1
  2474  000D4E  EFAD  F006         	goto	l1039
  2475  000D52                     l2478:
  2476  000D52  0E00               	movlw	0
  2477  000D54  6E28               	movwf	(pad@w+1)^0,c
  2478  000D56  0E00               	movlw	0
  2479  000D58  6E27               	movwf	pad@w^0,c
  2480  000D5A                     l1039:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2483  000D5A  0E00               	movlw	0
  2484  000D5C  6E26               	movwf	(pad@i+1)^0,c
  2485  000D5E  0E00               	movlw	0
  2486  000D60  6E25               	movwf	pad@i^0,c
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2489  000D62  EFBF  F006         	goto	l2484
  2490  000D66                     l2480:
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2493  000D66  0E00               	movlw	0
  2494  000D68  6E0F               	movwf	(fputc@c+1)^0,c
  2495  000D6A  0E20               	movlw	32
  2496  000D6C  6E0E               	movwf	fputc@c^0,c
  2497  000D6E  C01E  F010         	movff	pad@fp,fputc@fp
  2498  000D72  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  2499  000D76  ECEC  F006         	call	_fputc	;wreg free
  2500  000D7A                     
  2501                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2502  000D7A  4A25               	infsnz	pad@i^0,f,c
  2503  000D7C  2A26               	incf	(pad@i+1)^0,f,c
  2504  000D7E                     l2484:
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2507  000D7E  5027               	movf	pad@w^0,w,c
  2508  000D80  5C25               	subwf	pad@i^0,w,c
  2509  000D82  5026               	movf	(pad@i+1)^0,w,c
  2510  000D84  0A80               	xorlw	128
  2511  000D86  6E24               	movwf	??_pad^0,c
  2512  000D88  5028               	movf	(pad@w+1)^0,w,c
  2513  000D8A  0A80               	xorlw	128
  2514  000D8C  5824               	subwfb	??_pad^0,w,c
  2515  000D8E  A0D8               	btfss	status,0,c
  2516  000D90  EFCC  F006         	goto	u1681
  2517  000D94  EFCE  F006         	goto	u1680
  2518  000D98                     u1681:
  2519  000D98  EFB3  F006         	goto	l2480
  2520  000D9C                     u1680:
  2521  000D9C                     
  2522                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2523  000D9C  B04B               	btfsc	_flags^0,0,c
  2524  000D9E  EFD3  F006         	goto	u1691
  2525  000DA2  EFD5  F006         	goto	u1690
  2526  000DA6                     u1691:
  2527  000DA6  EFDF  F006         	goto	l2488
  2528  000DAA                     u1690:
  2529  000DAA                     
  2530                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2531  000DAA  C020  F017         	movff	pad@buf,fputs@s
  2532  000DAE  C021  F018         	movff	pad@buf+1,fputs@s+1
  2533  000DB2  C01E  F019         	movff	pad@fp,fputs@fp
  2534  000DB6  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  2535  000DBA  EC69  F007         	call	_fputs	;wreg free
  2536  000DBE                     l2488:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2539  000DBE  C020  F00C         	movff	pad@buf,strlen@s
  2540  000DC2  C021  F00D         	movff	pad@buf+1,strlen@s+1
  2541  000DC6  EC03  F008         	call	_strlen	;wreg free
  2542  000DCA  5027               	movf	pad@w^0,w,c
  2543  000DCC  240C               	addwf	?_strlen^0,w,c
  2544  000DCE  6E1E               	movwf	?_pad^0,c
  2545  000DD0  5028               	movf	(pad@w+1)^0,w,c
  2546  000DD2  200D               	addwfc	(?_strlen+1)^0,w,c
  2547  000DD4  6E1F               	movwf	(?_pad+1)^0,c
  2548  000DD6  0012               	return		;funcret
  2549  000DD8                     __end_of_pad:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function _strlen *****************
  2553 ;; Defined at:
  2554 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  s               2   11[COMRAM] PTR const unsigned char 
  2557 ;;		 -> dbuf(32), 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  a               2   13[COMRAM] PTR const unsigned char 
  2560 ;;		 -> dbuf(32), 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  2   11[COMRAM] unsigned int 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;Total ram usage:        4 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    4
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_pad
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text6
  2585  001006                     __ptext6:
  2586                           	callstack 0
  2587  001006                     _strlen:
  2588                           	callstack 21
  2589  001006  C00C  F00E         	movff	strlen@s,strlen@a
  2590  00100A  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  2591  00100E  EF0B  F008         	goto	l2384
  2592  001012                     l2382:
  2593  001012  4A0C               	infsnz	strlen@s^0,f,c
  2594  001014  2A0D               	incf	(strlen@s+1)^0,f,c
  2595  001016                     l2384:
  2596  001016  C00C  FFD9         	movff	strlen@s,fsr2l
  2597  00101A  C00D  FFDA         	movff	strlen@s+1,fsr2h
  2598  00101E  50DF               	movf	indf2,w,c
  2599  001020  A4D8               	btfss	status,2,c
  2600  001022  EF15  F008         	goto	u1521
  2601  001026  EF17  F008         	goto	u1520
  2602  00102A                     u1521:
  2603  00102A  EF09  F008         	goto	l2382
  2604  00102E                     u1520:
  2605  00102E  500E               	movf	strlen@a^0,w,c
  2606  001030  5C0C               	subwf	strlen@s^0,w,c
  2607  001032  6E0C               	movwf	?_strlen^0,c
  2608  001034  500F               	movf	(strlen@a+1)^0,w,c
  2609  001036  580D               	subwfb	(strlen@s+1)^0,w,c
  2610  001038  6E0D               	movwf	(?_strlen+1)^0,c
  2611  00103A  0012               	return		;funcret
  2612  00103C                     __end_of_strlen:
  2613                           	callstack 0
  2614                           
  2615 ;; *************** function _fputs *****************
  2616 ;; Defined at:
  2617 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  s               2   22[COMRAM] PTR const unsigned char 
  2620 ;;		 -> dbuf(32), 
  2621 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  2622 ;;		 -> NULL(0), 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  i               2   27[COMRAM] int 
  2625 ;;  c               1   26[COMRAM] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  2   22[COMRAM] int 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;Total ram usage:        7 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    7
  2642 ;; This function calls:
  2643 ;;		_fputc
  2644 ;; This function is called by:
  2645 ;;		_pad
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text7
  2650  000ED2                     __ptext7:
  2651                           	callstack 0
  2652  000ED2                     _fputs:
  2653                           	callstack 18
  2654  000ED2  0E00               	movlw	0
  2655  000ED4  6E1D               	movwf	(fputs@i+1)^0,c
  2656  000ED6  0E00               	movlw	0
  2657  000ED8  6E1C               	movwf	fputs@i^0,c
  2658  000EDA  EF7A  F007         	goto	l2378
  2659  000EDE                     l2374:
  2660  000EDE  C01B  F00E         	movff	fputs@c,fputc@c
  2661  000EE2  6A0F               	clrf	(fputc@c+1)^0,c
  2662  000EE4  C019  F010         	movff	fputs@fp,fputc@fp
  2663  000EE8  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  2664  000EEC  ECEC  F006         	call	_fputc	;wreg free
  2665  000EF0  4A1C               	infsnz	fputs@i^0,f,c
  2666  000EF2  2A1D               	incf	(fputs@i+1)^0,f,c
  2667  000EF4                     l2378:
  2668  000EF4  501C               	movf	fputs@i^0,w,c
  2669  000EF6  2417               	addwf	fputs@s^0,w,c
  2670  000EF8  6ED9               	movwf	fsr2l,c
  2671  000EFA  501D               	movf	(fputs@i+1)^0,w,c
  2672  000EFC  2018               	addwfc	(fputs@s+1)^0,w,c
  2673  000EFE  6EDA               	movwf	fsr2h,c
  2674  000F00  50DF               	movf	indf2,w,c
  2675  000F02  6E1B               	movwf	fputs@c^0,c
  2676  000F04  501B               	movf	fputs@c^0,w,c
  2677  000F06  A4D8               	btfss	status,2,c
  2678  000F08  EF88  F007         	goto	u1511
  2679  000F0C  EF8A  F007         	goto	u1510
  2680  000F10                     u1511:
  2681  000F10  EF6F  F007         	goto	l2374
  2682  000F14                     u1510:
  2683  000F14  0012               	return		;funcret
  2684  000F16                     __end_of_fputs:
  2685                           	callstack 0
  2686                           
  2687 ;; *************** function _abs *****************
  2688 ;; Defined at:
  2689 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  a               2   29[COMRAM] int 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;		None
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  2   29[COMRAM] int 
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;Total ram usage:        4 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    4
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_dtoa
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text8
  2718  000F16                     __ptext8:
  2719                           	callstack 0
  2720  000F16                     _abs:
  2721                           	callstack 22
  2722  000F16  BE1F               	btfsc	(abs@a+1)^0,7,c
  2723  000F18  EF98  F007         	goto	u1700
  2724  000F1C  501F               	movf	(abs@a+1)^0,w,c
  2725  000F1E  E106               	bnz	u1701
  2726  000F20  041E               	decf	abs@a^0,w,c
  2727  000F22  B0D8               	btfsc	status,0,c
  2728  000F24  EF96  F007         	goto	u1701
  2729  000F28  EF98  F007         	goto	u1700
  2730  000F2C                     u1701:
  2731  000F2C  EFA6  F007         	goto	l1105
  2732  000F30                     u1700:
  2733  000F30  C01E  F020         	movff	abs@a,??_abs
  2734  000F34  C01F  F021         	movff	abs@a+1,??_abs+1
  2735  000F38  1E20               	comf	??_abs^0,f,c
  2736  000F3A  1E21               	comf	(??_abs+1)^0,f,c
  2737  000F3C  4A20               	infsnz	??_abs^0,f,c
  2738  000F3E  2A21               	incf	(??_abs+1)^0,f,c
  2739  000F40  C020  F01E         	movff	??_abs,?_abs
  2740  000F44  C021  F01F         	movff	??_abs+1,?_abs+1
  2741  000F48  EFAA  F007         	goto	l1108
  2742  000F4C                     l1105:
  2743  000F4C  C01E  F01E         	movff	abs@a,?_abs
  2744  000F50  C01F  F01F         	movff	abs@a+1,?_abs+1
  2745  000F54                     l1108:
  2746  000F54  0012               	return		;funcret
  2747  000F56                     __end_of_abs:
  2748                           	callstack 0
  2749                           
  2750 ;; *************** function ___aomod *****************
  2751 ;; Defined at:
  2752 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  dividend        8   11[COMRAM] long long 
  2755 ;;  divisor         8   19[COMRAM] long long 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  sign            1   28[COMRAM] unsigned char 
  2758 ;;  counter         1   27[COMRAM] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  8   11[COMRAM] long long 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2768 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;Total ram usage:       18 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    4
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_dtoa
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text9
  2783  0009E2                     __ptext9:
  2784                           	callstack 0
  2785  0009E2                     ___aomod:
  2786                           	callstack 22
  2787  0009E2  0E00               	movlw	0
  2788  0009E4  6E1D               	movwf	___aomod@sign^0,c
  2789  0009E6  BE13               	btfsc	(___aomod@dividend+7)^0,7,c
  2790  0009E8  EFFA  F004         	goto	u1600
  2791  0009EC  EFF8  F004         	goto	u1601
  2792  0009F0                     u1601:
  2793  0009F0  EF0C  F005         	goto	l2442
  2794  0009F4                     u1600:
  2795  0009F4  1E13               	comf	(___aomod@dividend+7)^0,f,c
  2796  0009F6  1E12               	comf	(___aomod@dividend+6)^0,f,c
  2797  0009F8  1E11               	comf	(___aomod@dividend+5)^0,f,c
  2798  0009FA  1E10               	comf	(___aomod@dividend+4)^0,f,c
  2799  0009FC  1E0F               	comf	(___aomod@dividend+3)^0,f,c
  2800  0009FE  1E0E               	comf	(___aomod@dividend+2)^0,f,c
  2801  000A00  1E0D               	comf	(___aomod@dividend+1)^0,f,c
  2802  000A02  6C0C               	negf	___aomod@dividend^0,c
  2803  000A04  0E00               	movlw	0
  2804  000A06  220D               	addwfc	(___aomod@dividend+1)^0,f,c
  2805  000A08  220E               	addwfc	(___aomod@dividend+2)^0,f,c
  2806  000A0A  220F               	addwfc	(___aomod@dividend+3)^0,f,c
  2807  000A0C  2210               	addwfc	(___aomod@dividend+4)^0,f,c
  2808  000A0E  2211               	addwfc	(___aomod@dividend+5)^0,f,c
  2809  000A10  2212               	addwfc	(___aomod@dividend+6)^0,f,c
  2810  000A12  2213               	addwfc	(___aomod@dividend+7)^0,f,c
  2811  000A14  0E01               	movlw	1
  2812  000A16  6E1D               	movwf	___aomod@sign^0,c
  2813  000A18                     l2442:
  2814  000A18  BE1B               	btfsc	(___aomod@divisor+7)^0,7,c
  2815  000A1A  EF13  F005         	goto	u1610
  2816  000A1E  EF11  F005         	goto	u1611
  2817  000A22                     u1611:
  2818  000A22  EF23  F005         	goto	l2446
  2819  000A26                     u1610:
  2820  000A26  1E1B               	comf	(___aomod@divisor+7)^0,f,c
  2821  000A28  1E1A               	comf	(___aomod@divisor+6)^0,f,c
  2822  000A2A  1E19               	comf	(___aomod@divisor+5)^0,f,c
  2823  000A2C  1E18               	comf	(___aomod@divisor+4)^0,f,c
  2824  000A2E  1E17               	comf	(___aomod@divisor+3)^0,f,c
  2825  000A30  1E16               	comf	(___aomod@divisor+2)^0,f,c
  2826  000A32  1E15               	comf	(___aomod@divisor+1)^0,f,c
  2827  000A34  6C14               	negf	___aomod@divisor^0,c
  2828  000A36  0E00               	movlw	0
  2829  000A38  2215               	addwfc	(___aomod@divisor+1)^0,f,c
  2830  000A3A  2216               	addwfc	(___aomod@divisor+2)^0,f,c
  2831  000A3C  2217               	addwfc	(___aomod@divisor+3)^0,f,c
  2832  000A3E  2218               	addwfc	(___aomod@divisor+4)^0,f,c
  2833  000A40  2219               	addwfc	(___aomod@divisor+5)^0,f,c
  2834  000A42  221A               	addwfc	(___aomod@divisor+6)^0,f,c
  2835  000A44  221B               	addwfc	(___aomod@divisor+7)^0,f,c
  2836  000A46                     l2446:
  2837  000A46  5014               	movf	___aomod@divisor^0,w,c
  2838  000A48  1015               	iorwf	(___aomod@divisor+1)^0,w,c
  2839  000A4A  1016               	iorwf	(___aomod@divisor+2)^0,w,c
  2840  000A4C  1017               	iorwf	(___aomod@divisor+3)^0,w,c
  2841  000A4E  1018               	iorwf	(___aomod@divisor+4)^0,w,c
  2842  000A50  1019               	iorwf	(___aomod@divisor+5)^0,w,c
  2843  000A52  101A               	iorwf	(___aomod@divisor+6)^0,w,c
  2844  000A54  101B               	iorwf	(___aomod@divisor+7)^0,w,c
  2845  000A56  B4D8               	btfsc	status,2,c
  2846  000A58  EF30  F005         	goto	u1621
  2847  000A5C  EF32  F005         	goto	u1620
  2848  000A60                     u1621:
  2849  000A60  EF7A  F005         	goto	l2462
  2850  000A64                     u1620:
  2851  000A64  0E01               	movlw	1
  2852  000A66  6E1C               	movwf	___aomod@counter^0,c
  2853  000A68  EF40  F005         	goto	l2452
  2854  000A6C                     l2450:
  2855  000A6C  90D8               	bcf	status,0,c
  2856  000A6E  3614               	rlcf	___aomod@divisor^0,f,c
  2857  000A70  3615               	rlcf	(___aomod@divisor+1)^0,f,c
  2858  000A72  3616               	rlcf	(___aomod@divisor+2)^0,f,c
  2859  000A74  3617               	rlcf	(___aomod@divisor+3)^0,f,c
  2860  000A76  3618               	rlcf	(___aomod@divisor+4)^0,f,c
  2861  000A78  3619               	rlcf	(___aomod@divisor+5)^0,f,c
  2862  000A7A  361A               	rlcf	(___aomod@divisor+6)^0,f,c
  2863  000A7C  361B               	rlcf	(___aomod@divisor+7)^0,f,c
  2864  000A7E  2A1C               	incf	___aomod@counter^0,f,c
  2865  000A80                     l2452:
  2866  000A80  AE1B               	btfss	(___aomod@divisor+7)^0,7,c
  2867  000A82  EF45  F005         	goto	u1631
  2868  000A86  EF47  F005         	goto	u1630
  2869  000A8A                     u1631:
  2870  000A8A  EF36  F005         	goto	l2450
  2871  000A8E                     u1630:
  2872  000A8E                     l2454:
  2873  000A8E  5014               	movf	___aomod@divisor^0,w,c
  2874  000A90  5C0C               	subwf	___aomod@dividend^0,w,c
  2875  000A92  5015               	movf	(___aomod@divisor+1)^0,w,c
  2876  000A94  580D               	subwfb	(___aomod@dividend+1)^0,w,c
  2877  000A96  5016               	movf	(___aomod@divisor+2)^0,w,c
  2878  000A98  580E               	subwfb	(___aomod@dividend+2)^0,w,c
  2879  000A9A  5017               	movf	(___aomod@divisor+3)^0,w,c
  2880  000A9C  580F               	subwfb	(___aomod@dividend+3)^0,w,c
  2881  000A9E  5018               	movf	(___aomod@divisor+4)^0,w,c
  2882  000AA0  5810               	subwfb	(___aomod@dividend+4)^0,w,c
  2883  000AA2  5019               	movf	(___aomod@divisor+5)^0,w,c
  2884  000AA4  5811               	subwfb	(___aomod@dividend+5)^0,w,c
  2885  000AA6  501A               	movf	(___aomod@divisor+6)^0,w,c
  2886  000AA8  5812               	subwfb	(___aomod@dividend+6)^0,w,c
  2887  000AAA  501B               	movf	(___aomod@divisor+7)^0,w,c
  2888  000AAC  5813               	subwfb	(___aomod@dividend+7)^0,w,c
  2889  000AAE  A0D8               	btfss	status,0,c
  2890  000AB0  EF5C  F005         	goto	u1641
  2891  000AB4  EF5E  F005         	goto	u1640
  2892  000AB8                     u1641:
  2893  000AB8  EF6E  F005         	goto	l2458
  2894  000ABC                     u1640:
  2895  000ABC  5014               	movf	___aomod@divisor^0,w,c
  2896  000ABE  5E0C               	subwf	___aomod@dividend^0,f,c
  2897  000AC0  5015               	movf	(___aomod@divisor+1)^0,w,c
  2898  000AC2  5A0D               	subwfb	(___aomod@dividend+1)^0,f,c
  2899  000AC4  5016               	movf	(___aomod@divisor+2)^0,w,c
  2900  000AC6  5A0E               	subwfb	(___aomod@dividend+2)^0,f,c
  2901  000AC8  5017               	movf	(___aomod@divisor+3)^0,w,c
  2902  000ACA  5A0F               	subwfb	(___aomod@dividend+3)^0,f,c
  2903  000ACC  5018               	movf	(___aomod@divisor+4)^0,w,c
  2904  000ACE  5A10               	subwfb	(___aomod@dividend+4)^0,f,c
  2905  000AD0  5019               	movf	(___aomod@divisor+5)^0,w,c
  2906  000AD2  5A11               	subwfb	(___aomod@dividend+5)^0,f,c
  2907  000AD4  501A               	movf	(___aomod@divisor+6)^0,w,c
  2908  000AD6  5A12               	subwfb	(___aomod@dividend+6)^0,f,c
  2909  000AD8  501B               	movf	(___aomod@divisor+7)^0,w,c
  2910  000ADA  5A13               	subwfb	(___aomod@dividend+7)^0,f,c
  2911  000ADC                     l2458:
  2912  000ADC  90D8               	bcf	status,0,c
  2913  000ADE  321B               	rrcf	(___aomod@divisor+7)^0,f,c
  2914  000AE0  321A               	rrcf	(___aomod@divisor+6)^0,f,c
  2915  000AE2  3219               	rrcf	(___aomod@divisor+5)^0,f,c
  2916  000AE4  3218               	rrcf	(___aomod@divisor+4)^0,f,c
  2917  000AE6  3217               	rrcf	(___aomod@divisor+3)^0,f,c
  2918  000AE8  3216               	rrcf	(___aomod@divisor+2)^0,f,c
  2919  000AEA  3215               	rrcf	(___aomod@divisor+1)^0,f,c
  2920  000AEC  3214               	rrcf	___aomod@divisor^0,f,c
  2921  000AEE  2E1C               	decfsz	___aomod@counter^0,f,c
  2922  000AF0  EF47  F005         	goto	l2454
  2923  000AF4                     l2462:
  2924  000AF4  501D               	movf	___aomod@sign^0,w,c
  2925  000AF6  B4D8               	btfsc	status,2,c
  2926  000AF8  EF80  F005         	goto	u1651
  2927  000AFC  EF82  F005         	goto	u1650
  2928  000B00                     u1651:
  2929  000B00  EF92  F005         	goto	l2466
  2930  000B04                     u1650:
  2931  000B04  1E13               	comf	(___aomod@dividend+7)^0,f,c
  2932  000B06  1E12               	comf	(___aomod@dividend+6)^0,f,c
  2933  000B08  1E11               	comf	(___aomod@dividend+5)^0,f,c
  2934  000B0A  1E10               	comf	(___aomod@dividend+4)^0,f,c
  2935  000B0C  1E0F               	comf	(___aomod@dividend+3)^0,f,c
  2936  000B0E  1E0E               	comf	(___aomod@dividend+2)^0,f,c
  2937  000B10  1E0D               	comf	(___aomod@dividend+1)^0,f,c
  2938  000B12  6C0C               	negf	___aomod@dividend^0,c
  2939  000B14  0E00               	movlw	0
  2940  000B16  220D               	addwfc	(___aomod@dividend+1)^0,f,c
  2941  000B18  220E               	addwfc	(___aomod@dividend+2)^0,f,c
  2942  000B1A  220F               	addwfc	(___aomod@dividend+3)^0,f,c
  2943  000B1C  2210               	addwfc	(___aomod@dividend+4)^0,f,c
  2944  000B1E  2211               	addwfc	(___aomod@dividend+5)^0,f,c
  2945  000B20  2212               	addwfc	(___aomod@dividend+6)^0,f,c
  2946  000B22  2213               	addwfc	(___aomod@dividend+7)^0,f,c
  2947  000B24                     l2466:
  2948  000B24  C00C  F00C         	movff	___aomod@dividend,?___aomod
  2949  000B28  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  2950  000B2C  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  2951  000B30  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  2952  000B34  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  2953  000B38  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  2954  000B3C  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  2955  000B40  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  2956  000B44  0012               	return		;funcret
  2957  000B46                     __end_of___aomod:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function ___aodiv *****************
  2961 ;; Defined at:
  2962 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  dividend        8   11[COMRAM] long long 
  2965 ;;  divisor         8   19[COMRAM] long long 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  quotient        8   29[COMRAM] long long 
  2968 ;;  sign            1   28[COMRAM] unsigned char 
  2969 ;;  counter         1   27[COMRAM] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  8   11[COMRAM] long long 
  2972 ;; Registers used:
  2973 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2979 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;Total ram usage:       26 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    4
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_dtoa
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text10
  2994  00085A                     __ptext10:
  2995                           	callstack 0
  2996  00085A                     ___aodiv:
  2997                           	callstack 22
  2998  00085A  0E00               	movlw	0
  2999  00085C  6E1D               	movwf	___aodiv@sign^0,c
  3000  00085E  BE1B               	btfsc	(___aodiv@divisor+7)^0,7,c
  3001  000860  EF36  F004         	goto	u1530
  3002  000864  EF34  F004         	goto	u1531
  3003  000868                     u1531:
  3004  000868  EF48  F004         	goto	l2398
  3005  00086C                     u1530:
  3006  00086C  1E1B               	comf	(___aodiv@divisor+7)^0,f,c
  3007  00086E  1E1A               	comf	(___aodiv@divisor+6)^0,f,c
  3008  000870  1E19               	comf	(___aodiv@divisor+5)^0,f,c
  3009  000872  1E18               	comf	(___aodiv@divisor+4)^0,f,c
  3010  000874  1E17               	comf	(___aodiv@divisor+3)^0,f,c
  3011  000876  1E16               	comf	(___aodiv@divisor+2)^0,f,c
  3012  000878  1E15               	comf	(___aodiv@divisor+1)^0,f,c
  3013  00087A  6C14               	negf	___aodiv@divisor^0,c
  3014  00087C  0E00               	movlw	0
  3015  00087E  2215               	addwfc	(___aodiv@divisor+1)^0,f,c
  3016  000880  2216               	addwfc	(___aodiv@divisor+2)^0,f,c
  3017  000882  2217               	addwfc	(___aodiv@divisor+3)^0,f,c
  3018  000884  2218               	addwfc	(___aodiv@divisor+4)^0,f,c
  3019  000886  2219               	addwfc	(___aodiv@divisor+5)^0,f,c
  3020  000888  221A               	addwfc	(___aodiv@divisor+6)^0,f,c
  3021  00088A  221B               	addwfc	(___aodiv@divisor+7)^0,f,c
  3022  00088C  0E01               	movlw	1
  3023  00088E  6E1D               	movwf	___aodiv@sign^0,c
  3024  000890                     l2398:
  3025  000890  BE13               	btfsc	(___aodiv@dividend+7)^0,7,c
  3026  000892  EF4F  F004         	goto	u1540
  3027  000896  EF4D  F004         	goto	u1541
  3028  00089A                     u1541:
  3029  00089A  EF61  F004         	goto	l2404
  3030  00089E                     u1540:
  3031  00089E  1E13               	comf	(___aodiv@dividend+7)^0,f,c
  3032  0008A0  1E12               	comf	(___aodiv@dividend+6)^0,f,c
  3033  0008A2  1E11               	comf	(___aodiv@dividend+5)^0,f,c
  3034  0008A4  1E10               	comf	(___aodiv@dividend+4)^0,f,c
  3035  0008A6  1E0F               	comf	(___aodiv@dividend+3)^0,f,c
  3036  0008A8  1E0E               	comf	(___aodiv@dividend+2)^0,f,c
  3037  0008AA  1E0D               	comf	(___aodiv@dividend+1)^0,f,c
  3038  0008AC  6C0C               	negf	___aodiv@dividend^0,c
  3039  0008AE  0E00               	movlw	0
  3040  0008B0  220D               	addwfc	(___aodiv@dividend+1)^0,f,c
  3041  0008B2  220E               	addwfc	(___aodiv@dividend+2)^0,f,c
  3042  0008B4  220F               	addwfc	(___aodiv@dividend+3)^0,f,c
  3043  0008B6  2210               	addwfc	(___aodiv@dividend+4)^0,f,c
  3044  0008B8  2211               	addwfc	(___aodiv@dividend+5)^0,f,c
  3045  0008BA  2212               	addwfc	(___aodiv@dividend+6)^0,f,c
  3046  0008BC  2213               	addwfc	(___aodiv@dividend+7)^0,f,c
  3047  0008BE  0E01               	movlw	1
  3048  0008C0  1A1D               	xorwf	___aodiv@sign^0,f,c
  3049  0008C2                     l2404:
  3050  0008C2  EE20  F01E         	lfsr	2,___aodiv@quotient
  3051  0008C6  0E07               	movlw	7
  3052  0008C8                     u1551:
  3053  0008C8  6ADE               	clrf	postinc2,c
  3054  0008CA  06E8               	decf	wreg,f,c
  3055  0008CC  E2FD               	bc	u1551
  3056  0008CE  5014               	movf	___aodiv@divisor^0,w,c
  3057  0008D0  1015               	iorwf	(___aodiv@divisor+1)^0,w,c
  3058  0008D2  1016               	iorwf	(___aodiv@divisor+2)^0,w,c
  3059  0008D4  1017               	iorwf	(___aodiv@divisor+3)^0,w,c
  3060  0008D6  1018               	iorwf	(___aodiv@divisor+4)^0,w,c
  3061  0008D8  1019               	iorwf	(___aodiv@divisor+5)^0,w,c
  3062  0008DA  101A               	iorwf	(___aodiv@divisor+6)^0,w,c
  3063  0008DC  101B               	iorwf	(___aodiv@divisor+7)^0,w,c
  3064  0008DE  B4D8               	btfsc	status,2,c
  3065  0008E0  EF74  F004         	goto	u1561
  3066  0008E4  EF76  F004         	goto	u1560
  3067  0008E8                     u1561:
  3068  0008E8  EFC8  F004         	goto	l2426
  3069  0008EC                     u1560:
  3070  0008EC  0E01               	movlw	1
  3071  0008EE  6E1C               	movwf	___aodiv@counter^0,c
  3072  0008F0  EF84  F004         	goto	l2412
  3073  0008F4                     l2410:
  3074  0008F4  90D8               	bcf	status,0,c
  3075  0008F6  3614               	rlcf	___aodiv@divisor^0,f,c
  3076  0008F8  3615               	rlcf	(___aodiv@divisor+1)^0,f,c
  3077  0008FA  3616               	rlcf	(___aodiv@divisor+2)^0,f,c
  3078  0008FC  3617               	rlcf	(___aodiv@divisor+3)^0,f,c
  3079  0008FE  3618               	rlcf	(___aodiv@divisor+4)^0,f,c
  3080  000900  3619               	rlcf	(___aodiv@divisor+5)^0,f,c
  3081  000902  361A               	rlcf	(___aodiv@divisor+6)^0,f,c
  3082  000904  361B               	rlcf	(___aodiv@divisor+7)^0,f,c
  3083  000906  2A1C               	incf	___aodiv@counter^0,f,c
  3084  000908                     l2412:
  3085  000908  AE1B               	btfss	(___aodiv@divisor+7)^0,7,c
  3086  00090A  EF89  F004         	goto	u1571
  3087  00090E  EF8B  F004         	goto	u1570
  3088  000912                     u1571:
  3089  000912  EF7A  F004         	goto	l2410
  3090  000916                     u1570:
  3091  000916                     l2414:
  3092  000916  90D8               	bcf	status,0,c
  3093  000918  361E               	rlcf	___aodiv@quotient^0,f,c
  3094  00091A  361F               	rlcf	(___aodiv@quotient+1)^0,f,c
  3095  00091C  3620               	rlcf	(___aodiv@quotient+2)^0,f,c
  3096  00091E  3621               	rlcf	(___aodiv@quotient+3)^0,f,c
  3097  000920  3622               	rlcf	(___aodiv@quotient+4)^0,f,c
  3098  000922  3623               	rlcf	(___aodiv@quotient+5)^0,f,c
  3099  000924  3624               	rlcf	(___aodiv@quotient+6)^0,f,c
  3100  000926  3625               	rlcf	(___aodiv@quotient+7)^0,f,c
  3101  000928  5014               	movf	___aodiv@divisor^0,w,c
  3102  00092A  5C0C               	subwf	___aodiv@dividend^0,w,c
  3103  00092C  5015               	movf	(___aodiv@divisor+1)^0,w,c
  3104  00092E  580D               	subwfb	(___aodiv@dividend+1)^0,w,c
  3105  000930  5016               	movf	(___aodiv@divisor+2)^0,w,c
  3106  000932  580E               	subwfb	(___aodiv@dividend+2)^0,w,c
  3107  000934  5017               	movf	(___aodiv@divisor+3)^0,w,c
  3108  000936  580F               	subwfb	(___aodiv@dividend+3)^0,w,c
  3109  000938  5018               	movf	(___aodiv@divisor+4)^0,w,c
  3110  00093A  5810               	subwfb	(___aodiv@dividend+4)^0,w,c
  3111  00093C  5019               	movf	(___aodiv@divisor+5)^0,w,c
  3112  00093E  5811               	subwfb	(___aodiv@dividend+5)^0,w,c
  3113  000940  501A               	movf	(___aodiv@divisor+6)^0,w,c
  3114  000942  5812               	subwfb	(___aodiv@dividend+6)^0,w,c
  3115  000944  501B               	movf	(___aodiv@divisor+7)^0,w,c
  3116  000946  5813               	subwfb	(___aodiv@dividend+7)^0,w,c
  3117  000948  A0D8               	btfss	status,0,c
  3118  00094A  EFA9  F004         	goto	u1581
  3119  00094E  EFAB  F004         	goto	u1580
  3120  000952                     u1581:
  3121  000952  EFBC  F004         	goto	l2422
  3122  000956                     u1580:
  3123  000956  5014               	movf	___aodiv@divisor^0,w,c
  3124  000958  5E0C               	subwf	___aodiv@dividend^0,f,c
  3125  00095A  5015               	movf	(___aodiv@divisor+1)^0,w,c
  3126  00095C  5A0D               	subwfb	(___aodiv@dividend+1)^0,f,c
  3127  00095E  5016               	movf	(___aodiv@divisor+2)^0,w,c
  3128  000960  5A0E               	subwfb	(___aodiv@dividend+2)^0,f,c
  3129  000962  5017               	movf	(___aodiv@divisor+3)^0,w,c
  3130  000964  5A0F               	subwfb	(___aodiv@dividend+3)^0,f,c
  3131  000966  5018               	movf	(___aodiv@divisor+4)^0,w,c
  3132  000968  5A10               	subwfb	(___aodiv@dividend+4)^0,f,c
  3133  00096A  5019               	movf	(___aodiv@divisor+5)^0,w,c
  3134  00096C  5A11               	subwfb	(___aodiv@dividend+5)^0,f,c
  3135  00096E  501A               	movf	(___aodiv@divisor+6)^0,w,c
  3136  000970  5A12               	subwfb	(___aodiv@dividend+6)^0,f,c
  3137  000972  501B               	movf	(___aodiv@divisor+7)^0,w,c
  3138  000974  5A13               	subwfb	(___aodiv@dividend+7)^0,f,c
  3139  000976  801E               	bsf	___aodiv@quotient^0,0,c
  3140  000978                     l2422:
  3141  000978  90D8               	bcf	status,0,c
  3142  00097A  321B               	rrcf	(___aodiv@divisor+7)^0,f,c
  3143  00097C  321A               	rrcf	(___aodiv@divisor+6)^0,f,c
  3144  00097E  3219               	rrcf	(___aodiv@divisor+5)^0,f,c
  3145  000980  3218               	rrcf	(___aodiv@divisor+4)^0,f,c
  3146  000982  3217               	rrcf	(___aodiv@divisor+3)^0,f,c
  3147  000984  3216               	rrcf	(___aodiv@divisor+2)^0,f,c
  3148  000986  3215               	rrcf	(___aodiv@divisor+1)^0,f,c
  3149  000988  3214               	rrcf	___aodiv@divisor^0,f,c
  3150  00098A  2E1C               	decfsz	___aodiv@counter^0,f,c
  3151  00098C  EF8B  F004         	goto	l2414
  3152  000990                     l2426:
  3153  000990  501D               	movf	___aodiv@sign^0,w,c
  3154  000992  B4D8               	btfsc	status,2,c
  3155  000994  EFCE  F004         	goto	u1591
  3156  000998  EFD0  F004         	goto	u1590
  3157  00099C                     u1591:
  3158  00099C  EFE0  F004         	goto	l2430
  3159  0009A0                     u1590:
  3160  0009A0  1E25               	comf	(___aodiv@quotient+7)^0,f,c
  3161  0009A2  1E24               	comf	(___aodiv@quotient+6)^0,f,c
  3162  0009A4  1E23               	comf	(___aodiv@quotient+5)^0,f,c
  3163  0009A6  1E22               	comf	(___aodiv@quotient+4)^0,f,c
  3164  0009A8  1E21               	comf	(___aodiv@quotient+3)^0,f,c
  3165  0009AA  1E20               	comf	(___aodiv@quotient+2)^0,f,c
  3166  0009AC  1E1F               	comf	(___aodiv@quotient+1)^0,f,c
  3167  0009AE  6C1E               	negf	___aodiv@quotient^0,c
  3168  0009B0  0E00               	movlw	0
  3169  0009B2  221F               	addwfc	(___aodiv@quotient+1)^0,f,c
  3170  0009B4  2220               	addwfc	(___aodiv@quotient+2)^0,f,c
  3171  0009B6  2221               	addwfc	(___aodiv@quotient+3)^0,f,c
  3172  0009B8  2222               	addwfc	(___aodiv@quotient+4)^0,f,c
  3173  0009BA  2223               	addwfc	(___aodiv@quotient+5)^0,f,c
  3174  0009BC  2224               	addwfc	(___aodiv@quotient+6)^0,f,c
  3175  0009BE  2225               	addwfc	(___aodiv@quotient+7)^0,f,c
  3176  0009C0                     l2430:
  3177  0009C0  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  3178  0009C4  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  3179  0009C8  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  3180  0009CC  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  3181  0009D0  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  3182  0009D4  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  3183  0009D8  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  3184  0009DC  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  3185  0009E0  0012               	return		;funcret
  3186  0009E2                     __end_of___aodiv:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function _ctoa *****************
  3190 ;; Defined at:
  3191 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3194 ;;		 -> NULL(0), 
  3195 ;;  c               1   24[COMRAM] unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  w               2   28[COMRAM] int 
  3198 ;;  l               2   26[COMRAM] int 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  2   22[COMRAM] int 
  3201 ;; Registers used:
  3202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3208 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;Total ram usage:        8 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    7
  3215 ;; This function calls:
  3216 ;;		_fputc
  3217 ;; This function is called by:
  3218 ;;		_vfpfcnvrt
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text11
  3223  000C42                     __ptext11:
  3224                           	callstack 0
  3225  000C42                     _ctoa:
  3226                           	callstack 20
  3227  000C42                     
  3228                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3229  000C42  5047               	movf	_width^0,w,c
  3230  000C44  1048               	iorwf	(_width+1)^0,w,c
  3231  000C46  A4D8               	btfss	status,2,c
  3232  000C48  EF28  F006         	goto	u1711
  3233  000C4C  EF2A  F006         	goto	u1710
  3234  000C50                     u1711:
  3235  000C50  EF30  F006         	goto	l2500
  3236  000C54                     u1710:
  3237  000C54  C047  F01D         	movff	_width,ctoa@w
  3238  000C58  C048  F01E         	movff	_width+1,ctoa@w+1
  3239  000C5C  EF36  F006         	goto	l2502
  3240  000C60                     l2500:
  3241  000C60  0EFF               	movlw	255
  3242  000C62  2447               	addwf	_width^0,w,c
  3243  000C64  6E1D               	movwf	ctoa@w^0,c
  3244  000C66  0EFF               	movlw	255
  3245  000C68  2048               	addwfc	(_width+1)^0,w,c
  3246  000C6A  6E1E               	movwf	(ctoa@w+1)^0,c
  3247  000C6C                     l2502:
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3250  000C6C  A04B               	btfss	_flags^0,0,c
  3251  000C6E  EF3B  F006         	goto	u1721
  3252  000C72  EF3D  F006         	goto	u1720
  3253  000C76                     u1721:
  3254  000C76  EF46  F006         	goto	l2506
  3255  000C7A                     u1720:
  3256  000C7A                     
  3257                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3258  000C7A  C019  F00E         	movff	ctoa@c,fputc@c
  3259  000C7E  6A0F               	clrf	(fputc@c+1)^0,c
  3260  000C80  C017  F010         	movff	ctoa@fp,fputc@fp
  3261  000C84  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  3262  000C88  ECEC  F006         	call	_fputc	;wreg free
  3263  000C8C                     l2506:
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3266  000C8C  BE1E               	btfsc	(ctoa@w+1)^0,7,c
  3267  000C8E  EF4B  F006         	goto	u1731
  3268  000C92  EF4D  F006         	goto	u1730
  3269  000C96                     u1731:
  3270  000C96  EF4F  F006         	goto	l2510
  3271  000C9A                     u1730:
  3272  000C9A  EF53  F006         	goto	l1055
  3273  000C9E                     l2510:
  3274  000C9E  0E00               	movlw	0
  3275  000CA0  6E1E               	movwf	(ctoa@w+1)^0,c
  3276  000CA2  0E00               	movlw	0
  3277  000CA4  6E1D               	movwf	ctoa@w^0,c
  3278  000CA6                     l1055:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3281  000CA6  0E00               	movlw	0
  3282  000CA8  6E1C               	movwf	(ctoa@l+1)^0,c
  3283  000CAA  0E00               	movlw	0
  3284  000CAC  6E1B               	movwf	ctoa@l^0,c
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3287  000CAE  EF65  F006         	goto	l2516
  3288  000CB2                     l2512:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3291  000CB2  0E00               	movlw	0
  3292  000CB4  6E0F               	movwf	(fputc@c+1)^0,c
  3293  000CB6  0E20               	movlw	32
  3294  000CB8  6E0E               	movwf	fputc@c^0,c
  3295  000CBA  C017  F010         	movff	ctoa@fp,fputc@fp
  3296  000CBE  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  3297  000CC2  ECEC  F006         	call	_fputc	;wreg free
  3298  000CC6                     
  3299                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3300  000CC6  4A1B               	infsnz	ctoa@l^0,f,c
  3301  000CC8  2A1C               	incf	(ctoa@l+1)^0,f,c
  3302  000CCA                     l2516:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3305  000CCA  501D               	movf	ctoa@w^0,w,c
  3306  000CCC  5C1B               	subwf	ctoa@l^0,w,c
  3307  000CCE  501C               	movf	(ctoa@l+1)^0,w,c
  3308  000CD0  0A80               	xorlw	128
  3309  000CD2  6E1A               	movwf	??_ctoa^0,c
  3310  000CD4  501E               	movf	(ctoa@w+1)^0,w,c
  3311  000CD6  0A80               	xorlw	128
  3312  000CD8  581A               	subwfb	??_ctoa^0,w,c
  3313  000CDA  A0D8               	btfss	status,0,c
  3314  000CDC  EF72  F006         	goto	u1741
  3315  000CE0  EF74  F006         	goto	u1740
  3316  000CE4                     u1741:
  3317  000CE4  EF59  F006         	goto	l2512
  3318  000CE8                     u1740:
  3319  000CE8                     
  3320                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3321  000CE8  B04B               	btfsc	_flags^0,0,c
  3322  000CEA  EF79  F006         	goto	u1751
  3323  000CEE  EF7B  F006         	goto	u1750
  3324  000CF2                     u1751:
  3325  000CF2  EF84  F006         	goto	l2520
  3326  000CF6                     u1750:
  3327  000CF6                     
  3328                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3329  000CF6  C019  F00E         	movff	ctoa@c,fputc@c
  3330  000CFA  6A0F               	clrf	(fputc@c+1)^0,c
  3331  000CFC  C017  F010         	movff	ctoa@fp,fputc@fp
  3332  000D00  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  3333  000D04  ECEC  F006         	call	_fputc	;wreg free
  3334  000D08                     l2520:
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3337  000D08  0E01               	movlw	1
  3338  000D0A  241B               	addwf	ctoa@l^0,w,c
  3339  000D0C  6E17               	movwf	?_ctoa^0,c
  3340  000D0E  0E00               	movlw	0
  3341  000D10  201C               	addwfc	(ctoa@l+1)^0,w,c
  3342  000D12  6E18               	movwf	(?_ctoa+1)^0,c
  3343  000D14  0012               	return		;funcret
  3344  000D16                     __end_of_ctoa:
  3345                           	callstack 0
  3346                           
  3347 ;; *************** function _fputc *****************
  3348 ;; Defined at:
  3349 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  c               2   13[COMRAM] int 
  3352 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3353 ;;		 -> NULL(0), 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  2   13[COMRAM] int 
  3358 ;; Registers used:
  3359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;Total ram usage:        9 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    6
  3372 ;; This function calls:
  3373 ;;		_putch
  3374 ;; This function is called by:
  3375 ;;		_pad
  3376 ;;		_ctoa
  3377 ;;		_vfpfcnvrt
  3378 ;;		_fputs
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text12
  3383  000DD8                     __ptext12:
  3384                           	callstack 0
  3385  000DD8                     _fputc:
  3386                           	callstack 21
  3387  000DD8  5010               	movf	fputc@fp^0,w,c
  3388  000DDA  1011               	iorwf	(fputc@fp+1)^0,w,c
  3389  000DDC  B4D8               	btfsc	status,2,c
  3390  000DDE  EFF3  F006         	goto	u1471
  3391  000DE2  EFF5  F006         	goto	u1470
  3392  000DE6                     u1471:
  3393  000DE6  EFFE  F006         	goto	l2362
  3394  000DEA                     u1470:
  3395  000DEA  5010               	movf	fputc@fp^0,w,c
  3396  000DEC  1011               	iorwf	(fputc@fp+1)^0,w,c
  3397  000DEE  A4D8               	btfss	status,2,c
  3398  000DF0  EFFC  F006         	goto	u1481
  3399  000DF4  EFFE  F006         	goto	u1480
  3400  000DF8                     u1481:
  3401  000DF8  EF03  F007         	goto	l2364
  3402  000DFC                     u1480:
  3403  000DFC                     l2362:
  3404  000DFC  500E               	movf	fputc@c^0,w,c
  3405  000DFE  ECB2  F008         	call	_putch
  3406  000E02  EF36  F007         	goto	l1120
  3407  000E06                     l2364:
  3408  000E06  EE20 F004          	lfsr	2,4
  3409  000E0A  5010               	movf	fputc@fp^0,w,c
  3410  000E0C  26D9               	addwf	fsr2l,f,c
  3411  000E0E  5011               	movf	(fputc@fp+1)^0,w,c
  3412  000E10  22DA               	addwfc	fsr2h,f,c
  3413  000E12  50DE               	movf	postinc2,w,c
  3414  000E14  10DE               	iorwf	postinc2,w,c
  3415  000E16  B4D8               	btfsc	status,2,c
  3416  000E18  EF10  F007         	goto	u1491
  3417  000E1C  EF12  F007         	goto	u1490
  3418  000E20                     u1491:
  3419  000E20  EF2D  F007         	goto	l2368
  3420  000E24                     u1490:
  3421  000E24  EE20 F004          	lfsr	2,4
  3422  000E28  5010               	movf	fputc@fp^0,w,c
  3423  000E2A  26D9               	addwf	fsr2l,f,c
  3424  000E2C  5011               	movf	(fputc@fp+1)^0,w,c
  3425  000E2E  22DA               	addwfc	fsr2h,f,c
  3426  000E30  EE10 F002          	lfsr	1,2
  3427  000E34  5010               	movf	fputc@fp^0,w,c
  3428  000E36  26E1               	addwf	fsr1l,f,c
  3429  000E38  5011               	movf	(fputc@fp+1)^0,w,c
  3430  000E3A  22E2               	addwfc	fsr1h,f,c
  3431  000E3C  50DE               	movf	postinc2,w,c
  3432  000E3E  5CE6               	subwf	postinc1,w,c
  3433  000E40  50E6               	movf	postinc1,w,c
  3434  000E42  0A80               	xorlw	128
  3435  000E44  6E16               	movwf	(??_fputc+4)^0,c
  3436  000E46  50DE               	movf	postinc2,w,c
  3437  000E48  0A80               	xorlw	128
  3438  000E4A  5816               	subwfb	(??_fputc+4)^0,w,c
  3439  000E4C  B0D8               	btfsc	status,0,c
  3440  000E4E  EF2B  F007         	goto	u1501
  3441  000E52  EF2D  F007         	goto	u1500
  3442  000E56                     u1501:
  3443  000E56  EF36  F007         	goto	l1120
  3444  000E5A                     u1500:
  3445  000E5A                     l2368:
  3446  000E5A  EE20 F002          	lfsr	2,2
  3447  000E5E  5010               	movf	fputc@fp^0,w,c
  3448  000E60  26D9               	addwf	fsr2l,f,c
  3449  000E62  5011               	movf	(fputc@fp+1)^0,w,c
  3450  000E64  22DA               	addwfc	fsr2h,f,c
  3451  000E66  2ADE               	incf	postinc2,f,c
  3452  000E68  0E00               	movlw	0
  3453  000E6A  22DD               	addwfc	postdec2,f,c
  3454  000E6C                     l1120:
  3455  000E6C  0012               	return		;funcret
  3456  000E6E                     __end_of_fputc:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _putch *****************
  3460 ;; Defined at:
  3461 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  txData          1    wreg     unsigned char 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  txData          1   12[COMRAM] unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;Total ram usage:        1 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    5
  3482 ;; This function calls:
  3483 ;;		_EUSART1_Write
  3484 ;; This function is called by:
  3485 ;;		_fputc
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text13
  3490  001164                     __ptext13:
  3491                           	callstack 0
  3492  001164                     _putch:
  3493                           	callstack 21
  3494                           
  3495                           ;incstack = 0
  3496                           ;putch@txData stored from wreg
  3497  001164  6E0D               	movwf	putch@txData^0,c
  3498  001166                     
  3499                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3500  001166  500D               	movf	putch@txData^0,w,c
  3501  001168  EC92  F008         	call	_EUSART1_Write
  3502  00116C  0012               	return		;funcret
  3503  00116E                     __end_of_putch:
  3504                           	callstack 0
  3505                           
  3506 ;; *************** function _EUSART1_Write *****************
  3507 ;; Defined at:
  3508 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  txData          1    wreg     unsigned char 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  txData          1   11[COMRAM] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;Total ram usage:        1 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    4
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_putch
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text14
  3537  001124                     __ptext14:
  3538                           	callstack 0
  3539  001124                     _EUSART1_Write:
  3540                           	callstack 21
  3541                           
  3542                           ;incstack = 0
  3543                           ;EUSART1_Write@txData stored from wreg
  3544  001124  6E0C               	movwf	EUSART1_Write@txData^0,c
  3545  001126                     l288:
  3546                           
  3547                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3548  001126  A89E               	btfss	158,4,c	;volatile
  3549  001128  EF98  F008         	goto	u1461
  3550  00112C  EF9A  F008         	goto	u1460
  3551  001130                     u1461:
  3552  001130  EF93  F008         	goto	l288
  3553  001134                     u1460:
  3554  001134                     
  3555                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3556  001134  C00C  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3557  001138  0012               	return		;funcret
  3558  00113A                     __end_of_EUSART1_Write:
  3559                           	callstack 0
  3560                           
  3561 ;; *************** function _TMR0_WriteTimer *****************
  3562 ;; Defined at:
  3563 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  timerVal        2   11[COMRAM] unsigned short 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;Total ram usage:        2 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    4
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text15
  3592  00116E                     __ptext15:
  3593                           	callstack 0
  3594  00116E                     _TMR0_WriteTimer:
  3595                           	callstack 26
  3596  00116E                     
  3597                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  3598  00116E  500D               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  3599  001170  6ED7               	movwf	215,c	;volatile
  3600  001172                     
  3601                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  3602  001172  C00C  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  3603  001176  0012               	return		;funcret
  3604  001178                     __end_of_TMR0_WriteTimer:
  3605                           	callstack 0
  3606                           
  3607 ;; *************** function _SYSTEM_Initialize *****************
  3608 ;; Defined at:
  3609 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2, status,0, cstack
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;Total ram usage:        0 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    6
  3630 ;; This function calls:
  3631 ;;		_ADC_Initialize
  3632 ;;		_EUSART1_Initialize
  3633 ;;		_INTERRUPT_Initialize
  3634 ;;		_OSCILLATOR_Initialize
  3635 ;;		_PIN_MANAGER_Initialize
  3636 ;;		_TMR0_Initialize
  3637 ;; This function is called by:
  3638 ;;		_main
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text16
  3643  00110A                     __ptext16:
  3644                           	callstack 0
  3645  00110A                     _SYSTEM_Initialize:
  3646                           	callstack 24
  3647  00110A                     
  3648                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3649  00110A  ECD5  F008         	call	_INTERRUPT_Initialize	;wreg free
  3650  00110E                     
  3651                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3652  00110E  EC39  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  3653  001112                     
  3654                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3655  001112  EC77  F008         	call	_OSCILLATOR_Initialize	;wreg free
  3656  001116                     
  3657                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  3658  001116  EC9D  F008         	call	_ADC_Initialize	;wreg free
  3659  00111A                     
  3660                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3661  00111A  EC1E  F008         	call	_TMR0_Initialize	;wreg free
  3662  00111E                     
  3663                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  3664  00111E  ECAB  F007         	call	_EUSART1_Initialize	;wreg free
  3665  001122  0012               	return		;funcret
  3666  001124                     __end_of_SYSTEM_Initialize:
  3667                           	callstack 0
  3668                           
  3669 ;; *************** function _TMR0_Initialize *****************
  3670 ;; Defined at:
  3671 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;Total ram usage:        2 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    5
  3692 ;; This function calls:
  3693 ;;		_TMR0_SetInterruptHandler
  3694 ;; This function is called by:
  3695 ;;		_SYSTEM_Initialize
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text17
  3700  00103C                     __ptext17:
  3701                           	callstack 0
  3702  00103C                     _TMR0_Initialize:
  3703                           	callstack 24
  3704  00103C                     
  3705                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3706  00103C  9CD5               	bcf	213,6,c	;volatile
  3707  00103E                     
  3708                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  3709  00103E  0E00               	movlw	0
  3710  001040  6ED7               	movwf	215,c	;volatile
  3711                           
  3712                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  3713  001042  0E00               	movlw	0
  3714  001044  6ED6               	movwf	214,c	;volatile
  3715  001046                     
  3716                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3717  001046  50D6               	movf	214,w,c	;volatile
  3718  001048  CFD7 F00E          	movff	4055,??_TMR0_Initialize	;volatile
  3719  00104C  6A0F               	clrf	(??_TMR0_Initialize+1)^0,c
  3720  00104E  C00E  F00F         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3721  001052  6A0E               	clrf	??_TMR0_Initialize^0,c
  3722  001054  100E               	iorwf	??_TMR0_Initialize^0,w,c
  3723  001056  6E4D               	movwf	_timer0ReloadVal^0,c	;volatile
  3724  001058  500F               	movf	(??_TMR0_Initialize+1)^0,w,c
  3725  00105A  6E4E               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  3726  00105C                     
  3727                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  3728  00105C  94F2               	bcf	242,2,c	;volatile
  3729  00105E                     
  3730                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  3731  00105E  8AF2               	bsf	242,5,c	;volatile
  3732  001060                     
  3733                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3734  001060  0EB0               	movlw	low _TMR0_DefaultInterruptHandler
  3735  001062  6E0C               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3736  001064  0E11               	movlw	high _TMR0_DefaultInterruptHandler
  3737  001066  6E0D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3738  001068  ECBC  F008         	call	_TMR0_SetInterruptHandler	;wreg free
  3739  00106C                     
  3740                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  3741  00106C  0E9F               	movlw	159
  3742  00106E  6ED5               	movwf	213,c	;volatile
  3743  001070  0012               	return		;funcret
  3744  001072                     __end_of_TMR0_Initialize:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _TMR0_SetInterruptHandler *****************
  3748 ;; Defined at:
  3749 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  InterruptHan    2   11[COMRAM] PTR FTN()void 
  3752 ;;		 -> TMR0_DefaultInterruptHandler(1), myTMR0ISR(1), 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;Total ram usage:        2 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    4
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_main
  3775 ;;		_TMR0_Initialize
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text18
  3780  001178                     __ptext18:
  3781                           	callstack 0
  3782  001178                     _TMR0_SetInterruptHandler:
  3783                           	callstack 26
  3784  001178                     
  3785                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  3786  001178  C00C  F0AA         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3787  00117C  C00D  F0AB         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3788  001180  0012               	return		;funcret
  3789  001182                     __end_of_TMR0_SetInterruptHandler:
  3790                           	callstack 0
  3791                           
  3792 ;; *************** function _PIN_MANAGER_Initialize *****************
  3793 ;; Defined at:
  3794 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;Total ram usage:        0 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    4
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_SYSTEM_Initialize
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text19
  3823  001072                     __ptext19:
  3824                           	callstack 0
  3825  001072                     _PIN_MANAGER_Initialize:
  3826                           	callstack 25
  3827  001072                     
  3828                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3829  001072  0E00               	movlw	0
  3830  001074  6E89               	movwf	137,c	;volatile
  3831                           
  3832                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3833  001076  0E00               	movlw	0
  3834  001078  6E8A               	movwf	138,c	;volatile
  3835                           
  3836                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3837  00107A  0E00               	movlw	0
  3838  00107C  6E8B               	movwf	139,c	;volatile
  3839                           
  3840                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  3841  00107E  0EBF               	movlw	191
  3842  001080  6E92               	movwf	146,c	;volatile
  3843  001082                     
  3844                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  3845  001082  6893               	setf	147,c	;volatile
  3846                           
  3847                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  3848  001084  0EBF               	movlw	191
  3849  001086  6E94               	movwf	148,c	;volatile
  3850                           
  3851                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3852  001088  0E3C               	movlw	60
  3853  00108A  010F               	movlb	15	; () banked
  3854  00108C  6F3A               	movwf	58,b	;volatile
  3855                           
  3856                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  3857  00108E  0E3F               	movlw	63
  3858  001090  6F39               	movwf	57,b	;volatile
  3859                           
  3860                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  3861  001092  0E2F               	movlw	47
  3862  001094  6F38               	movwf	56,b	;volatile
  3863                           
  3864                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3865  001096  0E00               	movlw	0
  3866  001098  6E61               	movwf	97,c	;volatile
  3867  00109A                     
  3868                           ; BSR set to: 15
  3869                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3870  00109A  8EF1               	bsf	241,7,c	;volatile
  3871  00109C                     
  3872                           ; BSR set to: 15
  3873  00109C  0012               	return		;funcret
  3874  00109E                     __end_of_PIN_MANAGER_Initialize:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _OSCILLATOR_Initialize *****************
  3878 ;; Defined at:
  3879 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;Total ram usage:        0 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    4
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_SYSTEM_Initialize
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text20
  3908  0010EE                     __ptext20:
  3909                           	callstack 0
  3910  0010EE                     _OSCILLATOR_Initialize:
  3911                           	callstack 25
  3912  0010EE                     
  3913                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3914  0010EE  0E70               	movlw	112
  3915  0010F0  6ED3               	movwf	211,c	;volatile
  3916                           
  3917                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  3918  0010F2  0E04               	movlw	4
  3919  0010F4  6ED2               	movwf	210,c	;volatile
  3920                           
  3921                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  3922  0010F6  0E40               	movlw	64
  3923  0010F8  6E9B               	movwf	155,c	;volatile
  3924  0010FA                     l178:
  3925                           
  3926                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  3927  0010FA  AED2               	btfss	4050,7,c	;volatile
  3928  0010FC  EF82  F008         	goto	u1291
  3929  001100  EF84  F008         	goto	u1290
  3930  001104                     u1291:
  3931  001104  EF7D  F008         	goto	l178
  3932  001108                     u1290:
  3933  001108  0012               	return		;funcret
  3934  00110A                     __end_of_OSCILLATOR_Initialize:
  3935                           	callstack 0
  3936                           
  3937 ;; *************** function _INTERRUPT_Initialize *****************
  3938 ;; Defined at:
  3939 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;		None
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		None
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;Total ram usage:        0 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    4
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_SYSTEM_Initialize
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text21
  3968  0011AA                     __ptext21:
  3969                           	callstack 0
  3970  0011AA                     _INTERRUPT_Initialize:
  3971                           	callstack 25
  3972  0011AA                     
  3973                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3974  0011AA  9ED0               	bcf	208,7,c	;volatile
  3975  0011AC  0012               	return		;funcret
  3976  0011AE                     __end_of_INTERRUPT_Initialize:
  3977                           	callstack 0
  3978                           
  3979 ;; *************** function _EUSART1_Initialize *****************
  3980 ;; Defined at:
  3981 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;Total ram usage:        0 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    5
  4002 ;; This function calls:
  4003 ;;		_EUSART1_SetErrorHandler
  4004 ;;		_EUSART1_SetFramingErrorHandler
  4005 ;;		_EUSART1_SetOverrunErrorHandler
  4006 ;; This function is called by:
  4007 ;;		_SYSTEM_Initialize
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text22
  4012  000F56                     __ptext22:
  4013                           	callstack 0
  4014  000F56                     _EUSART1_Initialize:
  4015                           	callstack 24
  4016  000F56                     
  4017                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4018  000F56  0E08               	movlw	8
  4019  000F58  6EB8               	movwf	184,c	;volatile
  4020                           
  4021                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4022  000F5A  0E90               	movlw	144
  4023  000F5C  6EAB               	movwf	171,c	;volatile
  4024                           
  4025                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4026  000F5E  0E24               	movlw	36
  4027  000F60  6EAC               	movwf	172,c	;volatile
  4028                           
  4029                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  4030  000F62  0E82               	movlw	130
  4031  000F64  6EAF               	movwf	175,c	;volatile
  4032                           
  4033                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  4034  000F66  0E06               	movlw	6
  4035  000F68  6EB0               	movwf	176,c	;volatile
  4036  000F6A                     
  4037                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4038  000F6A  0E00               	movlw	0
  4039  000F6C  6E0C               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4040  000F6E  0E00               	movlw	0
  4041  000F70  6E0D               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4042  000F72  ECC6  F008         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4043  000F76                     
  4044                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4045  000F76  0E00               	movlw	0
  4046  000F78  6E0C               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4047  000F7A  0E00               	movlw	0
  4048  000F7C  6E0D               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4049  000F7E  ECC1  F008         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4050  000F82                     
  4051                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4052  000F82  0E00               	movlw	0
  4053  000F84  6E0C               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4054  000F86  0E00               	movlw	0
  4055  000F88  6E0D               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4056  000F8A  ECCB  F008         	call	_EUSART1_SetErrorHandler	;wreg free
  4057  000F8E                     
  4058                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4059  000F8E  0E00               	movlw	0
  4060  000F90  6E4F               	movwf	_eusart1RxLastError^0,c	;volatile
  4061  000F92  0012               	return		;funcret
  4062  000F94                     __end_of_EUSART1_Initialize:
  4063                           	callstack 0
  4064                           
  4065 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4066 ;; Defined at:
  4067 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  4070 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;Total ram usage:        2 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    4
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_EUSART1_Initialize
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text23
  4097  001182                     __ptext23:
  4098                           	callstack 0
  4099  001182                     _EUSART1_SetOverrunErrorHandler:
  4100                           	callstack 24
  4101  001182                     
  4102                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4103  001182  C00C  F0A4         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4104  001186  C00D  F0A5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4105  00118A  0012               	return		;funcret
  4106  00118C                     __end_of_EUSART1_SetOverrunErrorHandler:
  4107                           	callstack 0
  4108                           
  4109 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4110 ;; Defined at:
  4111 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  4114 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;Total ram usage:        2 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    4
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_EUSART1_Initialize
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text24
  4141  00118C                     __ptext24:
  4142                           	callstack 0
  4143  00118C                     _EUSART1_SetFramingErrorHandler:
  4144                           	callstack 24
  4145  00118C                     
  4146                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4147  00118C  C00C  F0A6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4148  001190  C00D  F0A7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4149  001194  0012               	return		;funcret
  4150  001196                     __end_of_EUSART1_SetFramingErrorHandler:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _EUSART1_SetErrorHandler *****************
  4154 ;; Defined at:
  4155 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  4158 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;Total ram usage:        2 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    4
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_EUSART1_Initialize
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text25
  4185  001196                     __ptext25:
  4186                           	callstack 0
  4187  001196                     _EUSART1_SetErrorHandler:
  4188                           	callstack 24
  4189  001196                     
  4190                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4191  001196  C00C  F0A2         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4192  00119A  C00D  F0A3         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4193  00119E  0012               	return		;funcret
  4194  0011A0                     __end_of_EUSART1_SetErrorHandler:
  4195                           	callstack 0
  4196                           
  4197 ;; *************** function _ADC_Initialize *****************
  4198 ;; Defined at:
  4199 ;;		line 62 in file "mcc_generated_files/adc.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;		None
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;		None
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      void 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;Total ram usage:        0 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    4
  4220 ;; This function calls:
  4221 ;;		Nothing
  4222 ;; This function is called by:
  4223 ;;		_SYSTEM_Initialize
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text26
  4228  00113A                     __ptext26:
  4229                           	callstack 0
  4230  00113A                     _ADC_Initialize:
  4231                           	callstack 25
  4232  00113A                     
  4233                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  4234  00113A  0E00               	movlw	0
  4235  00113C  6EC1               	movwf	193,c	;volatile
  4236                           
  4237                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  4238  00113E  0E26               	movlw	38
  4239  001140  6EC0               	movwf	192,c	;volatile
  4240                           
  4241                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  4242  001142  0E00               	movlw	0
  4243  001144  6EC3               	movwf	195,c	;volatile
  4244                           
  4245                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  4246  001146  0E00               	movlw	0
  4247  001148  6EC4               	movwf	196,c	;volatile
  4248                           
  4249                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  4250  00114A  0E11               	movlw	17
  4251  00114C  6EC2               	movwf	194,c	;volatile
  4252  00114E  0012               	return		;funcret
  4253  001150                     __end_of_ADC_Initialize:
  4254                           	callstack 0
  4255                           
  4256 ;; *************** function _EUSART1_is_rx_ready *****************
  4257 ;; Defined at:
  4258 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      _Bool 
  4265 ;; Registers used:
  4266 ;;		wreg
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;Total ram usage:        0 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    4
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_main
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text27
  4287  001150                     __ptext27:
  4288                           	callstack 0
  4289  001150                     _EUSART1_is_rx_ready:
  4290                           	callstack 26
  4291  001150                     
  4292                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4293  001150  BA9E               	btfsc	158,5,c	;volatile
  4294  001152  EFAD  F008         	goto	u1311
  4295  001156  EFB0  F008         	goto	u1310
  4296  00115A                     u1311:
  4297  00115A  0E01               	movlw	1
  4298  00115C  EFB1  F008         	goto	u1316
  4299  001160                     u1310:
  4300  001160  0E00               	movlw	0
  4301  001162                     u1316:
  4302  001162  0012               	return		;funcret
  4303  001164                     __end_of_EUSART1_is_rx_ready:
  4304                           	callstack 0
  4305                           
  4306 ;; *************** function _EUSART1_Read *****************
  4307 ;; Defined at:
  4308 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      unsigned char 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;Total ram usage:        0 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    4
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;;		_getch
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text28
  4338  0010C6                     __ptext28:
  4339                           	callstack 0
  4340  0010C6                     _EUSART1_Read:
  4341                           	callstack 26
  4342  0010C6                     l281:
  4343                           
  4344                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4345  0010C6  AA9E               	btfss	158,5,c	;volatile
  4346  0010C8  EF68  F008         	goto	u1321
  4347  0010CC  EF6A  F008         	goto	u1320
  4348  0010D0                     u1321:
  4349  0010D0  EF63  F008         	goto	l281
  4350  0010D4                     u1320:
  4351  0010D4                     
  4352                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4353  0010D4  0E00               	movlw	0
  4354  0010D6  6E4F               	movwf	_eusart1RxLastError^0,c	;volatile
  4355  0010D8                     
  4356                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4357  0010D8  A2AB               	btfss	171,1,c	;volatile
  4358  0010DA  EF71  F008         	goto	u1331
  4359  0010DE  EF73  F008         	goto	u1330
  4360  0010E2                     u1331:
  4361  0010E2  EF75  F008         	goto	l2180
  4362  0010E6                     u1330:
  4363  0010E6                     
  4364                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4365  0010E6  98AB               	bcf	171,4,c	;volatile
  4366                           
  4367                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4368  0010E8  88AB               	bsf	171,4,c	;volatile
  4369  0010EA                     l2180:
  4370                           
  4371                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4372  0010EA  50AE               	movf	174,w,c	;volatile
  4373  0010EC  0012               	return		;funcret
  4374  0010EE                     __end_of_EUSART1_Read:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function _INTERRUPT_InterruptManager *****************
  4378 ;; Defined at:
  4379 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;Total ram usage:        4 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    3
  4400 ;; This function calls:
  4401 ;;		_TMR0_ISR
  4402 ;; This function is called by:
  4403 ;;		Interrupt level 2
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	intcode
  4408  000008                     __pintcode:
  4409                           	callstack 0
  4410  000008                     _INTERRUPT_InterruptManager:
  4411                           	callstack 18
  4412                           
  4413                           ;incstack = 0
  4414  000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4415  00000A  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManager
  4416  00000E  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4417  000012  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  4418  000016  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  4419  00001A                     
  4420                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4421  00001A  AAF2               	btfss	242,5,c	;volatile
  4422  00001C  EF12  F000         	goto	i2u144_41
  4423  000020  EF14  F000         	goto	i2u144_40
  4424  000024                     i2u144_41:
  4425  000024  EF1D  F000         	goto	i2l331
  4426  000028                     i2u144_40:
  4427  000028  A4F2               	btfss	242,2,c	;volatile
  4428  00002A  EF19  F000         	goto	i2u145_41
  4429  00002E  EF1B  F000         	goto	i2u145_40
  4430  000032                     i2u145_41:
  4431  000032  EF1D  F000         	goto	i2l331
  4432  000036                     i2u145_40:
  4433  000036                     
  4434                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  4435  000036  ECE7  F007         	call	_TMR0_ISR	;wreg free
  4436  00003A                     i2l331:
  4437  00003A  C00B  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  4438  00003E  C00A  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  4439  000042  C009  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4440  000046  C008  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4441  00004A  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4442  00004C  0011               	retfie		f
  4443  00004E                     __end_of_INTERRUPT_InterruptManager:
  4444                           	callstack 0
  4445                           
  4446 ;; *************** function _TMR0_ISR *****************
  4447 ;; Defined at:
  4448 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;Total ram usage:        0 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    2
  4469 ;; This function calls:
  4470 ;;		Absolute function
  4471 ;;		_TMR0_DefaultInterruptHandler
  4472 ;;		_myTMR0ISR
  4473 ;; This function is called by:
  4474 ;;		_INTERRUPT_InterruptManager
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text30
  4479  000FCE                     __ptext30:
  4480                           	callstack 0
  4481  000FCE                     _TMR0_ISR:
  4482                           	callstack 18
  4483  000FCE                     
  4484                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  4485  000FCE  94F2               	bcf	242,2,c	;volatile
  4486  000FD0                     
  4487                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  4488  000FD0  504E               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  4489  000FD2  6ED7               	movwf	215,c	;volatile
  4490  000FD4                     
  4491                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  4492  000FD4  C04D  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4493  000FD8                     
  4494                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  4495  000FD8  0100               	movlb	0	; () banked
  4496  000FDA  51AA               	movf	_TMR0_InterruptHandler& (0+255),w,b
  4497  000FDC  11AB               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  4498  000FDE  B4D8               	btfsc	status,2,c
  4499  000FE0  EFF4  F007         	goto	i2u134_41
  4500  000FE4  EFF6  F007         	goto	i2u134_40
  4501  000FE8                     i2u134_41:
  4502  000FE8  EF02  F008         	goto	i2l146
  4503  000FEC                     i2u134_40:
  4504  000FEC                     
  4505                           ; BSR set to: 0
  4506                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  4507  000FEC  D802               	call	i2u135_48
  4508  000FEE  EF02  F008         	goto	i2u135_49
  4509  000FF2                     i2u135_48:
  4510  000FF2  0005               	push	
  4511  000FF4  6EFA               	movwf	pclath,c
  4512  000FF6  51AA               	movf	_TMR0_InterruptHandler& (0+255),w,b
  4513  000FF8  6EFD               	movwf	tosl,c
  4514  000FFA  51AB               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  4515  000FFC  6EFE               	movwf	tosh,c
  4516  000FFE  6AFF               	clrf	tosu,c
  4517  001000  50FA               	movf	pclath,w,c
  4518  001002  0012               	return		;indir
  4519  001004                     i2u135_49:
  4520  001004                     i2l146:
  4521  001004  0012               	return		;funcret
  4522  001006                     __end_of_TMR0_ISR:
  4523                           	callstack 0
  4524                           
  4525 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4526 ;; Defined at:
  4527 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		None
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;Total ram usage:        0 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_TMR0_Initialize
  4551 ;;		_TMR0_ISR
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text31
  4556  0011B0                     __ptext31:
  4557                           	callstack 0
  4558  0011B0                     _TMR0_DefaultInterruptHandler:
  4559                           	callstack 19
  4560  0011B0  0012               	return		;funcret
  4561  0011B2                     __end_of_TMR0_DefaultInterruptHandler:
  4562                           	callstack 0
  4563                           
  4564 ;; *************** function _myTMR0ISR *****************
  4565 ;; Defined at:
  4566 ;;		line 193 in file "main.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;		None
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  micReading      1    6[COMRAM] unsigned char 
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  1    wreg      void 
  4573 ;; Registers used:
  4574 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;Total ram usage:        5 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    1
  4587 ;; This function calls:
  4588 ;;		i2_TMR0_WriteTimer
  4589 ;; This function is called by:
  4590 ;;		_main
  4591 ;;		_TMR0_ISR
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text32
  4596  000B46                     __ptext32:
  4597                           	callstack 0
  4598  000B46                     _myTMR0ISR:
  4599                           	callstack 18
  4600  000B46                     
  4601                           ;main.c: 195:     uint8_t micReading = ADRESH;
  4602  000B46  CFC4 F007          	movff	4036,myTMR0ISR@micReading	;volatile
  4603                           
  4604                           ;main.c: 200:     switch(timerState){
  4605  000B4A  EF07  F006         	goto	i2l2096
  4606  000B4E                     i2l2070:
  4607                           
  4608                           ;main.c: 204:             if(fillBuffer){
  4609  000B4E  5052               	movf	_fillBuffer^0,w,c
  4610  000B50  B4D8               	btfsc	status,2,c
  4611  000B52  EFAD  F005         	goto	i2u125_41
  4612  000B56  EFAF  F005         	goto	i2u125_40
  4613  000B5A                     i2u125_41:
  4614  000B5A  EF20  F006         	goto	i2l76
  4615  000B5E                     i2u125_40:
  4616  000B5E                     
  4617                           ;main.c: 205:                 timerState = MIC_WAIT_FOR_TRIGGER;
  4618  000B5E  0E01               	movlw	1
  4619  000B60  6E51               	movwf	_timerState^0,c
  4620                           
  4621                           ;main.c: 206:                 bufferIdx = 0;
  4622  000B62  0E00               	movlw	0
  4623  000B64  6E50               	movwf	_bufferIdx^0,c
  4624                           
  4625                           ;main.c: 207:                 fillBuffer = 0;
  4626  000B66  0E00               	movlw	0
  4627  000B68  6E52               	movwf	_fillBuffer^0,c
  4628  000B6A  EF20  F006         	goto	i2l76
  4629  000B6E                     i2l2074:
  4630                           
  4631                           ;main.c: 213:             if(micReading <= 128 + thresholdRange && micReading >= 128 - t
      +                          hresholdRange){
  4632  000B6E  5007               	movf	myTMR0ISR@micReading^0,w,c
  4633  000B70  6E03               	movwf	??_myTMR0ISR^0,c
  4634  000B72  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  4635  000B74  0E80               	movlw	128
  4636  000B76  0100               	movlb	0	; () banked
  4637  000B78  25FB               	addwf	_thresholdRange& (0+255),w,b
  4638  000B7A  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  4639  000B7C  0E00               	movlw	0
  4640  000B7E  21FC               	addwfc	(_thresholdRange+1)& (0+255),w,b
  4641  000B80  6E06               	movwf	(??_myTMR0ISR+3)^0,c
  4642  000B82  5003               	movf	??_myTMR0ISR^0,w,c
  4643  000B84  5C05               	subwf	(??_myTMR0ISR+2)^0,w,c
  4644  000B86  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  4645  000B88  5806               	subwfb	(??_myTMR0ISR+3)^0,w,c
  4646  000B8A  A0D8               	btfss	status,0,c
  4647  000B8C  EFCA  F005         	goto	i2u126_41
  4648  000B90  EFCC  F005         	goto	i2u126_40
  4649  000B94                     i2u126_41:
  4650  000B94  EF20  F006         	goto	i2l76
  4651  000B98                     i2u126_40:
  4652  000B98                     
  4653                           ; BSR set to: 0
  4654  000B98  0E80               	movlw	128
  4655  000B9A  6E03               	movwf	??_myTMR0ISR^0,c
  4656  000B9C  0E00               	movlw	0
  4657  000B9E  6E04               	movwf	(??_myTMR0ISR+1)^0,c
  4658  000BA0  51FB               	movf	_thresholdRange& (0+255),w,b
  4659  000BA2  5E03               	subwf	??_myTMR0ISR^0,f,c
  4660  000BA4  51FC               	movf	(_thresholdRange+1)& (0+255),w,b
  4661  000BA6  5A04               	subwfb	(??_myTMR0ISR+1)^0,f,c
  4662  000BA8  5007               	movf	myTMR0ISR@micReading^0,w,c
  4663  000BAA  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  4664  000BAC  6A06               	clrf	(??_myTMR0ISR+3)^0,c
  4665  000BAE  5003               	movf	??_myTMR0ISR^0,w,c
  4666  000BB0  5C05               	subwf	(??_myTMR0ISR+2)^0,w,c
  4667  000BB2  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  4668  000BB4  5806               	subwfb	(??_myTMR0ISR+3)^0,w,c
  4669  000BB6  A0D8               	btfss	status,0,c
  4670  000BB8  EFE0  F005         	goto	i2u127_41
  4671  000BBC  EFE2  F005         	goto	i2u127_40
  4672  000BC0                     i2u127_41:
  4673  000BC0  EF20  F006         	goto	i2l76
  4674  000BC4                     i2u127_40:
  4675  000BC4                     
  4676                           ; BSR set to: 0
  4677                           ;main.c: 214:                 adc_reading[bufferIdx] = micReading;
  4678  000BC4  0E60               	movlw	low _adc_reading
  4679  000BC6  2450               	addwf	_bufferIdx^0,w,c
  4680  000BC8  6ED9               	movwf	fsr2l,c
  4681  000BCA  6ADA               	clrf	fsr2h,c
  4682  000BCC  0E00               	movlw	high _adc_reading
  4683  000BCE  22DA               	addwfc	fsr2h,f,c
  4684  000BD0  C007  FFDF         	movff	myTMR0ISR@micReading,indf2
  4685  000BD4                     
  4686                           ; BSR set to: 0
  4687                           ;main.c: 215:                 bufferIdx += 1;
  4688  000BD4  2A50               	incf	_bufferIdx^0,f,c
  4689  000BD6                     
  4690                           ; BSR set to: 0
  4691                           ;main.c: 216:                 timerState = MIC_ACQUIRE;
  4692  000BD6  0E02               	movlw	2
  4693  000BD8  6E51               	movwf	_timerState^0,c
  4694  000BDA  EF20  F006         	goto	i2l76
  4695  000BDE                     i2l2084:
  4696                           
  4697                           ;main.c: 220:             adc_reading[bufferIdx] = micReading;
  4698  000BDE  0E60               	movlw	low _adc_reading
  4699  000BE0  2450               	addwf	_bufferIdx^0,w,c
  4700  000BE2  6ED9               	movwf	fsr2l,c
  4701  000BE4  6ADA               	clrf	fsr2h,c
  4702  000BE6  0E00               	movlw	high _adc_reading
  4703  000BE8  22DA               	addwfc	fsr2h,f,c
  4704  000BEA  C007  FFDF         	movff	myTMR0ISR@micReading,indf2
  4705  000BEE                     
  4706                           ;main.c: 221:             bufferIdx += 1;
  4707  000BEE  2A50               	incf	_bufferIdx^0,f,c
  4708  000BF0                     
  4709                           ;main.c: 222:             if(bufferIdx >= 64){
  4710  000BF0  0E3F               	movlw	63
  4711  000BF2  6450               	cpfsgt	_bufferIdx^0,c
  4712  000BF4  EFFE  F005         	goto	i2u128_41
  4713  000BF8  EF00  F006         	goto	i2u128_40
  4714  000BFC                     i2u128_41:
  4715  000BFC  EF20  F006         	goto	i2l76
  4716  000C00                     i2u128_40:
  4717  000C00                     
  4718                           ;main.c: 224:                 samplesCollected = 1;
  4719  000C00  0E01               	movlw	1
  4720  000C02  0100               	movlb	0	; () banked
  4721  000C04  6FAC               	movwf	_samplesCollected& (0+255),b
  4722                           
  4723                           ;main.c: 225:                 timerState = MIC_IDLE;
  4724  000C06  0E00               	movlw	0
  4725  000C08  6E51               	movwf	_timerState^0,c
  4726  000C0A  EF20  F006         	goto	i2l76
  4727  000C0E                     i2l2096:
  4728  000C0E  5051               	movf	_timerState^0,w,c
  4729  000C10  6E03               	movwf	??_myTMR0ISR^0,c
  4730  000C12  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  4731                           
  4732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4733                           ; Switch size 1, requested type "simple"
  4734                           ; Number of cases is 1, Range of values is 0 to 0
  4735                           ; switch strategies available:
  4736                           ; Name         Instructions Cycles
  4737                           ; simple_byte            4     3 (average)
  4738                           ;	Chosen strategy is simple_byte
  4739  000C14  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  4740  000C16  0A00               	xorlw	0	; case 0
  4741  000C18  B4D8               	btfsc	status,2,c
  4742  000C1A  EF11  F006         	goto	i2l2800
  4743  000C1E  EF20  F006         	goto	i2l76
  4744  000C22                     i2l2800:
  4745                           
  4746                           ; Switch size 1, requested type "simple"
  4747                           ; Number of cases is 3, Range of values is 0 to 2
  4748                           ; switch strategies available:
  4749                           ; Name         Instructions Cycles
  4750                           ; simple_byte           10     6 (average)
  4751                           ;	Chosen strategy is simple_byte
  4752  000C22  5003               	movf	??_myTMR0ISR^0,w,c
  4753  000C24  0A00               	xorlw	0	; case 0
  4754  000C26  B4D8               	btfsc	status,2,c
  4755  000C28  EFA7  F005         	goto	i2l2070
  4756  000C2C  0A01               	xorlw	1	; case 1
  4757  000C2E  B4D8               	btfsc	status,2,c
  4758  000C30  EFB7  F005         	goto	i2l2074
  4759  000C34  0A03               	xorlw	3	; case 2
  4760  000C36  B4D8               	btfsc	status,2,c
  4761  000C38  EFEF  F005         	goto	i2l2084
  4762  000C3C  EF20  F006         	goto	i2l76
  4763  000C40                     i2l76:
  4764  000C40  0012               	return		;funcret
  4765  000C42                     __end_of_myTMR0ISR:
  4766                           	callstack 0
  4767                           
  4768 ;; *************** function i2_TMR0_WriteTimer *****************
  4769 ;; Defined at:
  4770 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  timerVal        2    0[COMRAM] unsigned short 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;Total ram usage:        2 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_myTMR0ISR
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text33
  4798  0011A0                     __ptext33:
  4799                           	callstack 0
  4800  0011A0                     i2_TMR0_WriteTimer:
  4801                           	callstack 18
  4802  0011A0                     
  4803                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4804  0011A0  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  4805  0011A2  6ED7               	movwf	215,c	;volatile
  4806  0011A4                     
  4807                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4808  0011A4  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  4809  0011A8  0012               	return		;funcret
  4810  0011AA                     __end_ofi2_TMR0_WriteTimer:
  4811                           	callstack 0
  4812                           
  4813                           	psect	text34
  4814  000000                     __ptext34:
  4815                           	callstack 0
  4816  000000                     
  4817                           	psect	rparam
  4818  0000                     
  4819                           	psect	temp
  4820  000053                     btemp:
  4821                           	callstack 0
  4822  000053                     	ds	1
  4823  0000                     int$flags	set	btemp
  4824  0000                     wtemp8	set	btemp+1
  4825  0000                     ttemp5	set	btemp+1
  4826  0000                     ttemp6	set	btemp+4
  4827  0000                     ttemp7	set	btemp+8
  4828                           
  4829                           	psect	idloc
  4830                           
  4831                           ;Config register IDLOC0 @ 0x200000
  4832                           ;	unspecified, using default values
  4833  200000                     	org	2097152
  4834  200000  FF                 	db	255
  4835                           
  4836                           ;Config register IDLOC1 @ 0x200001
  4837                           ;	unspecified, using default values
  4838  200001                     	org	2097153
  4839  200001  FF                 	db	255
  4840                           
  4841                           ;Config register IDLOC2 @ 0x200002
  4842                           ;	unspecified, using default values
  4843  200002                     	org	2097154
  4844  200002  FF                 	db	255
  4845                           
  4846                           ;Config register IDLOC3 @ 0x200003
  4847                           ;	unspecified, using default values
  4848  200003                     	org	2097155
  4849  200003  FF                 	db	255
  4850                           
  4851                           ;Config register IDLOC4 @ 0x200004
  4852                           ;	unspecified, using default values
  4853  200004                     	org	2097156
  4854  200004  FF                 	db	255
  4855                           
  4856                           ;Config register IDLOC5 @ 0x200005
  4857                           ;	unspecified, using default values
  4858  200005                     	org	2097157
  4859  200005  FF                 	db	255
  4860                           
  4861                           ;Config register IDLOC6 @ 0x200006
  4862                           ;	unspecified, using default values
  4863  200006                     	org	2097158
  4864  200006  FF                 	db	255
  4865                           
  4866                           ;Config register IDLOC7 @ 0x200007
  4867                           ;	unspecified, using default values
  4868  200007                     	org	2097159
  4869  200007  FF                 	db	255
  4870                           
  4871                           	psect	config
  4872                           
  4873                           ; Padding undefined space
  4874  300000                     	org	3145728
  4875  300000  FF                 	db	255
  4876                           
  4877                           ;Config register CONFIG1H @ 0x300001
  4878                           ;	Oscillator Selection bits
  4879                           ;	FOSC = INTIO67, Internal oscillator block
  4880                           ;	4X PLL Enable
  4881                           ;	PLLCFG = OFF, Oscillator used directly
  4882                           ;	Primary clock enable bit
  4883                           ;	PRICLKEN = ON, Primary clock enabled
  4884                           ;	Fail-Safe Clock Monitor Enable bit
  4885                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4886                           ;	Internal/External Oscillator Switchover bit
  4887                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4888  300001                     	org	3145729
  4889  300001  28                 	db	40
  4890                           
  4891                           ;Config register CONFIG2L @ 0x300002
  4892                           ;	Power-up Timer Enable bit
  4893                           ;	PWRTEN = OFF, Power up timer disabled
  4894                           ;	Brown-out Reset Enable bits
  4895                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4896                           ;	Brown Out Reset Voltage bits
  4897                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4898  300002                     	org	3145730
  4899  300002  1F                 	db	31
  4900                           
  4901                           ;Config register CONFIG2H @ 0x300003
  4902                           ;	Watchdog Timer Enable bits
  4903                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4904                           ;	Watchdog Timer Postscale Select bits
  4905                           ;	WDTPS = 32768, 1:32768
  4906  300003                     	org	3145731
  4907  300003  3C                 	db	60
  4908                           
  4909                           ; Padding undefined space
  4910  300004                     	org	3145732
  4911  300004  FF                 	db	255
  4912                           
  4913                           ;Config register CONFIG3H @ 0x300005
  4914                           ;	CCP2 MUX bit
  4915                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4916                           ;	PORTB A/D Enable bit
  4917                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4918                           ;	P3A/CCP3 Mux bit
  4919                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4920                           ;	HFINTOSC Fast Start-up
  4921                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4922                           ;	Timer3 Clock input mux bit
  4923                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4924                           ;	ECCP2 B output mux bit
  4925                           ;	P2BMX = PORTB5, P2B is on RB5
  4926                           ;	MCLR Pin Enable bit
  4927                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4928  300005                     	org	3145733
  4929  300005  BF                 	db	191
  4930                           
  4931                           ;Config register CONFIG4L @ 0x300006
  4932                           ;	Stack Full/Underflow Reset Enable bit
  4933                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4934                           ;	Single-Supply ICSP Enable bit
  4935                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4936                           ;	Extended Instruction Set Enable bit
  4937                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4938                           ;	Background Debug
  4939                           ;	DEBUG = OFF, Disabled
  4940  300006                     	org	3145734
  4941  300006  85                 	db	133
  4942                           
  4943                           ; Padding undefined space
  4944  300007                     	org	3145735
  4945  300007  FF                 	db	255
  4946                           
  4947                           ;Config register CONFIG5L @ 0x300008
  4948                           ;	Code Protection Block 0
  4949                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4950                           ;	Code Protection Block 1
  4951                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4952                           ;	Code Protection Block 2
  4953                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4954                           ;	Code Protection Block 3
  4955                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4956  300008                     	org	3145736
  4957  300008  0F                 	db	15
  4958                           
  4959                           ;Config register CONFIG5H @ 0x300009
  4960                           ;	Boot Block Code Protection bit
  4961                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4962                           ;	Data EEPROM Code Protection bit
  4963                           ;	CPD = OFF, Data EEPROM not code-protected
  4964  300009                     	org	3145737
  4965  300009  C0                 	db	192
  4966                           
  4967                           ;Config register CONFIG6L @ 0x30000A
  4968                           ;	Write Protection Block 0
  4969                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4970                           ;	Write Protection Block 1
  4971                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4972                           ;	Write Protection Block 2
  4973                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4974                           ;	Write Protection Block 3
  4975                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4976  30000A                     	org	3145738
  4977  30000A  0F                 	db	15
  4978                           
  4979                           ;Config register CONFIG6H @ 0x30000B
  4980                           ;	Configuration Register Write Protection bit
  4981                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4982                           ;	Boot Block Write Protection bit
  4983                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4984                           ;	Data EEPROM Write Protection bit
  4985                           ;	WRTD = OFF, Data EEPROM not write-protected
  4986  30000B                     	org	3145739
  4987  30000B  E0                 	db	224
  4988                           
  4989                           ;Config register CONFIG7L @ 0x30000C
  4990                           ;	Table Read Protection Block 0
  4991                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4992                           ;	Table Read Protection Block 1
  4993                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4994                           ;	Table Read Protection Block 2
  4995                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4996                           ;	Table Read Protection Block 3
  4997                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4998  30000C                     	org	3145740
  4999  30000C  0F                 	db	15
  5000                           
  5001                           ;Config register CONFIG7H @ 0x30000D
  5002                           ;	Boot Block Table Read Protection bit
  5003                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5004  30000D                     	org	3145741
  5005  30000D  40                 	db	64
  5006                           tosu	equ	0xFFF
  5007                           tosh	equ	0xFFE
  5008                           tosl	equ	0xFFD
  5009                           stkptr	equ	0xFFC
  5010                           pclatu	equ	0xFFB
  5011                           pclath	equ	0xFFA
  5012                           pcl	equ	0xFF9
  5013                           tblptru	equ	0xFF8
  5014                           tblptrh	equ	0xFF7
  5015                           tblptrl	equ	0xFF6
  5016                           tablat	equ	0xFF5
  5017                           prodh	equ	0xFF4
  5018                           prodl	equ	0xFF3
  5019                           indf0	equ	0xFEF
  5020                           postinc0	equ	0xFEE
  5021                           postdec0	equ	0xFED
  5022                           preinc0	equ	0xFEC
  5023                           plusw0	equ	0xFEB
  5024                           fsr0h	equ	0xFEA
  5025                           fsr0l	equ	0xFE9
  5026                           wreg	equ	0xFE8
  5027                           indf1	equ	0xFE7
  5028                           postinc1	equ	0xFE6
  5029                           postdec1	equ	0xFE5
  5030                           preinc1	equ	0xFE4
  5031                           plusw1	equ	0xFE3
  5032                           fsr1h	equ	0xFE2
  5033                           fsr1l	equ	0xFE1
  5034                           bsr	equ	0xFE0
  5035                           indf2	equ	0xFDF
  5036                           postinc2	equ	0xFDE
  5037                           postdec2	equ	0xFDD
  5038                           preinc2	equ	0xFDC
  5039                           plusw2	equ	0xFDB
  5040                           fsr2h	equ	0xFDA
  5041                           fsr2l	equ	0xFD9
  5042                           status	equ	0xFD8

Data Sizes:
    Strings     390
    Constant    0
    Data        2
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      82
    BANK0           160     46     157
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1317_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_22(CODE[17]), STR_21(CODE[23]), STR_20(CODE[24]), STR_19(CODE[24]), 
		 -> STR_18(CODE[24]), STR_17(CODE[3]), STR_16(CODE[2]), STR_15(CODE[6]), 
		 -> STR_14(CODE[33]), STR_13(CODE[72]), STR_12(CODE[43]), STR_11(CODE[24]), 
		 -> STR_10(CODE[21]), STR_9(CODE[7]), STR_8(CODE[15]), STR_7(CODE[33]), 
		 -> STR_6(CODE[4]), STR_5(CODE[53]), STR_4(CODE[3]), STR_3(CODE[9]), 
		 -> STR_2(CODE[25]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 72
		 -> STR_22(CODE[17]), STR_21(CODE[23]), STR_20(CODE[24]), STR_19(CODE[24]), 
		 -> STR_18(CODE[24]), STR_17(CODE[3]), STR_16(CODE[2]), STR_15(CODE[6]), 
		 -> STR_14(CODE[33]), STR_13(CODE[72]), STR_12(CODE[43]), STR_11(CODE[24]), 
		 -> STR_10(CODE[21]), STR_9(CODE[7]), STR_8(CODE[15]), STR_7(CODE[33]), 
		 -> STR_6(CODE[4]), STR_5(CODE[53]), STR_4(CODE[3]), STR_3(CODE[9]), 
		 -> STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_22(CODE[17]), STR_21(CODE[23]), STR_20(CODE[24]), STR_19(CODE[24]), 
		 -> STR_18(CODE[24]), STR_17(CODE[3]), STR_16(CODE[2]), STR_15(CODE[6]), 
		 -> STR_14(CODE[33]), STR_13(CODE[72]), STR_12(CODE[43]), STR_11(CODE[24]), 
		 -> STR_10(CODE[21]), STR_9(CODE[7]), STR_8(CODE[15]), STR_7(CODE[33]), 
		 -> STR_6(CODE[4]), STR_5(CODE[53]), STR_4(CODE[3]), STR_3(CODE[9]), 
		 -> STR_2(CODE[25]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), myTMR0ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), myTMR0ISR(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   14824
                                             68 COMRAM     2     2      0
                                             43 BANK0      3     3      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   13712
                                             33 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11645
                                             66 COMRAM     2     2      0
                                             27 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   11163
                                             58 COMRAM     8     2      6
                                             18 BANK0      9     9      0
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6701
                                             40 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4435
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             22 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1546
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                             12 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             13 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     159
                                              7 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     159
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           5     5      0     159
                                              2 COMRAM     5     5      0
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       i2_TMR0_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      52       1       87.2%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EF      12        0.0%
DATA                 0      0      EF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Oct 19 21:54:57 2020

                                            l33 0064                                              l50 01EE  
                                            l36 00BC                                 _timer0ReloadVal 004D  
                           myTMR0ISR@micReading 0007                                             l103 109C  
                                           l200 114E                                             l127 1070  
                                           l312 118A                                             l315 119E  
                                           l139 1176                                             l324 11AC  
                                           l309 1194                                             l181 1108  
                                           l149 1180                                             l175 1122  
                                           l272 1162                                             l264 0F92  
                                           l281 10C6                                             l178 10FA  
                                           l291 1138                                             l285 10EC  
                                           l461 0B44                                             l288 1126  
                                           l448 09E0                                             l297 116C  
                                           _abs 0F16                                             _pad 0D16  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1100 0EC8  
                                          l1012 10C4                                            l1101 0ED0  
                                          l1120 0E6C                                            l1105 0F4C  
                                          l2010 1182                                            l1042 0D9C  
                                          ?_abs 001E                                            l2012 1196  
                                          l1060 0D14                                            l1108 0F54  
                                          l1044 0DD6                                            l2102 1072  
                                          l2006 1178                                            l2110 103E  
                                          l1134 103A                                            l1055 0CA6  
                                          l1039 0D5A                                            l2008 118C  
                                          l2104 1082                                            l2120 106C  
                                          l2112 1046                                            l1128 0F14  
                                          l2130 0F6A                                            l2122 11AA  
                                          l2106 109A                                            l2114 105C  
                                          l1058 0CE8                                            l1066 03E4  
                                          l1091 0858                                            l2132 0F76  
                                          l2124 10EE                                            l2116 105E  
                                          l2108 103C                                            l1068 03EC  
                                          l2126 113A                                            l2134 0F82  
                                          l2118 1060                                            l2150 1112  
                                          l1086 0624                                            l2136 0F8E  
                                          l2128 0F56                                            l2152 1116  
                                          l2160 1172                                            l2400 089E  
                                          l2154 111A                                            l2146 110A  
                                          l2410 08F4                                            l2402 08BE  
                                          l2180 10EA                                            l2172 10C6  
                                          l2156 111E                                            l2148 110E  
                                          l2500 0C60                                            l2420 0976  
                                          l2412 0908                                            l2404 08C2  
                                          l2174 10D4                                            l2158 116E  
                                          l2510 0C9E                                            l2502 0C6C  
                                          l2430 09C0                                            l2422 0978  
                                          l2414 0916                                            l2406 08CE  
                                          l2176 10D8                                            l2168 1150  
                                          l2352 1126                                            l2360 0DEA  
                                          l2520 0D08                                            l2512 0CB2  
                                          l2504 0C7A                                            l2424 098A  
                                          l2416 0928                                            l2408 08EC  
                                          l2440 0A14                                            l2178 10E6  
                                          l2354 1134                                            l2362 0DFC  
                                          l2514 0CC6                                            l2506 0C8C  
                                          l2418 0956                                            l2426 0990  
                                          l2450 0A6C                                            l2442 0A18  
                                          l2434 09E2                                            l2530 03AE  
                                          l2602 06E4                                            l2356 1166  
                                          l2364 0E06                                            l2516 0CCA  
                                          l2428 09A0                                            l2460 0AEE  
                                          l2452 0A80                                            l2444 0A26  
                                          l2436 09E6                                            l2372 0ED2  
                                          l2380 1006                                            l2540 0406  
                                          l2532 03BC                                            l2524 0344  
                                          l2612 07B2                                            l2604 070A  
                                          l2366 0E24                                            l2358 0DD8  
                                          l2518 0CF6                                            l2390 085A  
                                          l2454 0A8E                                            l2462 0AF4  
                                          l2446 0A46                                            l2438 09F4  
                                          l2374 0EDE                                            l2382 1012  
                                          l2470 0D16                                            l2550 0430  
                                          l2542 0414                                            l2534 03BE  
                                          l2526 0364                                            l2630 0846  
                                          l2614 07D8                                            l2622 0806  
                                          l2606 0730                                            l2710 01F4  
                                          l2368 0E5A                                            l2392 085E  
                                          l2464 0B04                                            l2456 0ABC  
                                          l2448 0A64                                            l2376 0EF0  
                                          l2384 1016                                            l2480 0D66  
                                          l2472 0D24                                            l2560 0540  
                                          l2552 04B2                                            l2544 041A  
                                          l2536 03D8                                            l2528 038E  
                                          l2624 0814                                            l2616 07E6  
                                          l2608 077A                                            l2640 0E84  
                                          l2720 0208                                            l2704 01CE  
                                          l2394 086C                                            l2466 0B24  
                                          l2458 0ADC                                            l2378 0EF4  
                                          l2386 102E                                            l2482 0D7A  
                                          l2474 0D38                                            l2570 05B2  
                                          l2562 055E                                            l2554 04BA  
                                          l2546 0422                                            l2538 03F4  
                                          l2618 07FA                                            l2642 0EAA  
                                          l2730 026A                                            l2722 021C  
                                          l2706 01DA                                            l2650 0052  
                                          l2396 088C                                            l2492 0F16  
                                          l2484 0D7E                                            l2476 0D46  
                                          l2580 05EC                                            l2572 05C0  
                                          l2564 0578                                            l2556 04C0  
                                          l2548 042A                                            l2628 0820  
                                          l2636 0E6E                                            l2644 109E  
                                          l2732 0296                                            l2724 0224  
                                          l2716 01F8                                            l2708 01DE  
                                          l2740 02EE                                            l2660 0080  
                                          l2652 0056                                            l2398 0890  
                                          l2494 0F30                                            l2486 0DAA  
                                          l2478 0D52                                            l2574 05C6  
                                          l2582 05FC                                            l2566 0592  
                                          l2558 0524                                            l2590 065A  
                                          l2638 0E76                                            l2646 10A8  
                                          l2734 02D0                                            l2726 0250  
                                          l2718 0204                                            l2670 00BA  
                                          l2662 0082                                            l2654 0062  
                                          l2496 0C42                                            l2488 0DBE  
                                          l2576 05D8                                            l2568 05A0  
                                          l2592 066A                                            l2736 02D8  
                                          l2728 0262                                            l2672 00CA  
                                          l2664 0090                                            l2656 0072  
                                          l2498 0C54                                            l2578 05E4  
                                          l2594 066E                                            l2586 0626  
                                          l2674 00DC                                            l2690 0128  
                                          l2666 009E                                            l2658 007E  
                                          l2596 0694                                            l2588 064C  
                                          l2692 013C                                            l2684 00F2  
                                          l2676 00E0                                            l2668 00AC  
                                          l2598 06C8                                            l2694 0148  
                                          l2686 0114                                            l2678 00EC  
                                          ?_pad 001E                                            l2696 01BA  
                                          l2688 0118                                            l2698 01CA  
                                          l2798 0302                                            STR_1 FFD7  
                                          STR_2 FF42                                            STR_3 FFE2  
                                          STR_4 FFFC                                            STR_5 FEC1  
                                          STR_6 FFF8                                            STR_7 FF21  
                                          STR_8 FFC8                                            STR_9 FFEB  
                                          u2000 0128                                            u2001 0124  
                                          u2010 013C                                            u2011 0138  
                                          u2020 01EE                                            u2021 01EA  
                                          u1310 1160                                            u2030 0218  
                                          u1311 115A                                            u2031 0214  
                                          u1320 10D4                                            u2040 0262  
                                          u1321 10D0                                            u2041 025E  
                                          u1330 10E6                                            u1331 10E2  
                                          u1316 1162                                            u1500 0E5A  
                                          u1501 0E56                                            _LATA 000F89  
                                          u1510 0F14                                            _LATB 000F8A  
                                          u1511 0F10                                            _LATC 000F8B  
                                          u1600 09F4                                            u1520 102E  
                                          u1601 09F0                                            u1521 102A  
                                          u1290 1108                                            u1530 086C  
                                          u1610 0A26                                            u1291 1104  
                                          u1531 0868                                            u1611 0A22  
                                          u1460 1134                                            u1540 089E  
                                          u1620 0A64                                            u1700 0F30  
                                          u1461 1130                                            u1541 089A  
                                          u1621 0A60                                            u1701 0F2C  
                                          u1470 0DEA                                            u1710 0C54  
                                          u1630 0A8E                                            u1471 0DE6  
                                          u1711 0C50                                            u1551 08C8  
                                          u1631 0A8A                                            u1480 0DFC  
                                          u1720 0C7A                                            u1560 08EC  
                                          u1640 0ABC                                            u1800 03D8  
                                          u1481 0DF8                                            u1721 0C76  
                                          u1561 08E8                                            u1641 0AB8  
                                          u1801 03D4                                            u1490 0E24  
                                          u1730 0C9A                                            u1570 0916  
                                          u1650 0B04                                            u1810 0406  
                                          u1491 0E20                                            u1731 0C96  
                                          u1571 0912                                            u1651 0B00  
                                          u1811 0402                                            u1740 0CE8  
                                          u1580 0956                                            u1660 0D24  
                                          u1900 05D8                                            u1820 0414  
                                          u1741 0CE4                                            u1581 0952  
                                          u1661 0D20                                            u1901 05D4  
                                          u1821 0410                                            u1750 0CF6  
                                          u1590 09A0                                            u1670 0D46  
                                          u1830 0540                                            u1910 064C  
                                          u1751 0CF2                                            u1591 099C  
                                          u1671 0D42                                            u1831 053C  
                                          u1911 0648                                            u1680 0D9C  
                                          u1840 055E                                            u1760 0376  
                                          u1920 0694                                            u1681 0D98  
                                          u1841 055A                                            u1761 0370  
                                          u1921 0690                                            u1690 0DAA  
                                          u1850 0578                                            u1770 0378  
                                          u1930 070A                                            u1691 0DA6  
                                          u1851 0574                                            u1931 0706  
                                          u1860 0592                                            u1780 038E  
                                          u1940 0730                                            u1861 058E  
                                          u1781 038A                                            u1941 072C  
                                          u1870 05A0                                            u1790 03BC  
                                          u1950 07D8                                            u1871 059C  
                                          u1791 03B8                                            u1951 07D4  
                                          u1880 05B2                                            u1960 0EC8  
                                          u1881 05AE                                            u1961 0EC4  
                                          u1890 05C0                                            u1970 0072  
                                          u1891 05BC                                            u1971 006E  
                                          u1980 00CA                                            u1981 00C6  
                                          u1990 00DC                                            u1991 00D8  
                                          i2l76 0C40                                            _WPUB 000F61  
                                 _EUSART1_Write 1124                                            abs@a 001E  
                                          _dbuf 00AD                                            _ctoa 0C42  
                                          _main 0052                                            _dtoa 0344  
                                 ?_EUSART1_Read 0001                                            _prec 0049  
                                          _nout 00A0                                            pad@i 0025  
                                          pad@p 0022                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0027  
                                          fsr2l 000FD9                                            btemp 0053  
                                          start 004E                                    ___param_bank 000000  
                                         ??_abs 0020                                           ??_pad 0024  
                       __end_of_TMR0_Initialize 1072                  ??_TMR0_DefaultInterruptHandler 0001  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 110A  
                               __end_of___aodiv 09E2                                           ?_ctoa 0017  
                                         ?_main 0001                                           ?_dtoa 0029  
                               __end_of___aomod 0B46                                           STR_10 FFA2  
                                         STR_11 FF73                                           STR_20 FF5B  
                                         STR_12 FEF6                                           STR_21 FF8B  
                                         STR_13 FE79                                           STR_14 FF21  
                                         STR_22 FFB7                                           STR_15 FFF2  
                                         STR_16 FEF4                                           STR_17 FFF5  
                                         STR_18 FF5B                                           STR_19 FF5B  
                                         _T0CON 000FD5                                           i2l152 11B0  
                                         i2l146 1004                                           i2l139 11A8  
                                         i2l331 003A                                 _TMR0_WriteTimer 116E  
                                  vfpfcnvrt@fmt 003D                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                       ?_TMR0_SetInterruptHandler 000C  
                              __end_of_TMR0_ISR 1006                                           _flags 004B  
                                         _fputc 0DD8                                           _fputs 0ED2  
                                         pad@fp 001E                                           _width 0047  
                                         ctoa@c 0019                                           _putch 1164  
                                         ctoa@l 001B                                           ctoa@w 001D  
                                         main@i 00FA                                           dtoa@d 002B  
                                         dtoa@i 00DD                                           dtoa@n 00D5  
                                         dtoa@p 00CF                                           dtoa@s 00D3  
                                         dtoa@w 00D1                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 000C                                           ttemp5 0054  
                                         ttemp6 0057                                           ttemp7 005B  
                                         status 000FD8                                           wtemp8 0054  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 0F94  
                                  __end_of_ctoa 0D16                      __end_of_EUSART1_Initialize 0F94  
                                  __end_of_main 0344                                    __end_of_dtoa 0626  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 001A  
                                        ??_main 0045                                          ??_dtoa 0033  
                                 __activetblptr 000003                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 000E                                          ?_fputs 0017  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l2300 0036  
                                        i2l2070 0B4E                                          i2l2064 11A0  
                                        i2l2080 0BD4                                          i2l2072 0B5E  
                                        i2l2066 11A4                                          i2l2090 0C00  
                                        i2l2082 0BD6                                          i2l2074 0B6E  
                                        i2l2084 0BDE                                          i2l2076 0B98  
                                        i2l2068 0B46                                          i2l2086 0BEE  
                                        i2l2078 0BC4                                          i2l2190 0FD8  
                                        i2l2088 0BF0                                          i2l2096 0C0E  
                                        i2l2192 0FEC                                          i2l2184 0FCE  
                                        i2l2186 0FD0                                          i2l2188 0FD4  
                                        i2l2800 0C22                                          i2l2296 001A  
                                        i2l2298 0028                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                  vfprintf@cfmt 0043                                       ??___aodiv 001C  
                                     ??___aomod 001C                         __end_of_TMR0_WriteTimer 1178  
                     i2TMR0_WriteTimer@timerVal 0001                        ?_EUSART1_SetErrorHandler 000C  
                              ?_TMR0_Initialize 0001                                          clear_0 0FB2  
                                        clear_1 0FBE                                          _printf 109E  
                                        pad@buf 0020                ??_EUSART1_SetOverrunErrorHandler 000E  
               ?_EUSART1_SetOverrunErrorHandler 000C                                          ctoa@fp 0017  
                                        dtoa@fp 0029                                          _strlen 1006  
                                        fputc@c 000E                                          fputs@c 001B  
                                        fputs@i 001C                                          fputs@s 0017  
                                  __mediumconst FE78                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 0ED2                                 ??_EUSART1_Write 000C  
      TMR0_SetInterruptHandler@InterruptHandler 000C                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 110A                                      __accesstop 0060  
                       __end_of__initialization 0FC4                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 11AE                             ??_SYSTEM_Initialize 0010  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 0E6E  
                                 __end_of_fputs 0F16                                   __end_of_putch 116E  
                          __end_of_EUSART1_Read 10EE                                         ??_fputc 0012  
                     __end_of_SYSTEM_Initialize 1124                                         ??_fputs 001B  
                            __size_of_myTMR0ISR 00FC                                         ??_putch 000D  
                                    __pbssBANK0 0060                 __end_of_EUSART1_SetErrorHandler 11A0  
              __end_of_TMR0_SetInterruptHandler 1182                                      ??_TMR0_ISR 0008  
                              ?_TMR0_WriteTimer 000C                                      _fillBuffer 0052  
                                       ?_printf 00EE                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 000C          __end_of_EUSART1_SetFramingErrorHandler 1196  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 118C  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0234  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                          _ADC_InterruptHandler 00A8                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 085A  
                                       ___aomod 09E2                               __end_of_myTMR0ISR 0C42  
                                     ?_vfprintf 00E8                             _EUSART1_is_rx_ready 1150  
                                       __pcinit 0F94                                         __ramtop 1000  
                                       __ptext0 0052                                         __ptext1 109E  
                                       __ptext2 0E6E                                         __ptext3 0626  
                                       __ptext4 0344                                         __ptext5 0D16  
                                       __ptext6 1006                                         __ptext7 0ED2  
                                       __ptext8 0F16                                         __ptext9 09E2  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 10EE  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                            _EUSART1_Initialize 0F56                        ??_PIN_MANAGER_Initialize 000C  
                                       main@cmd 00F8                      __size_of_SYSTEM_Initialize 001A  
                          end_of_initialization 0FC4                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0010  
                   _EUSART1_OverrunErrorHandler 00A4                                         fputs@fp 0019  
                             __end_of_vfpfcnvrt 085A                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0028  
                                    ??_vfprintf 0043                            ??_EUSART1_Initialize 000E  
                                       strlen@a 000E                                         strlen@s 000C  
                                    _timerState 0051                        _TMR0_SetInterruptHandler 1178  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 000C  
                         ??_EUSART1_is_rx_ready 000C                                    _EUSART1_Read 10C6  
                  __end_of_INTERRUPT_Initialize 11AE                                     vfpfcnvrt@ap 003F  
                                   vfpfcnvrt@fp 003B                                     vfpfcnvrt@ll 00DF  
                             __size_of_TMR0_ISR 0038                                  _ADC_Initialize 113A  
                                   _adc_reading 0060                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 10C6                                  __end_of_strlen 103C  
                           start_initialization 0F94                        __size_of_TMR0_Initialize 0036  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 0F56  
                                   __end_of_pad 0DD8                                     putch@txData 000D  
                         __end_of_EUSART1_Write 113A                                     vfprintf@fmt 00EA  
                        __end_of_ADC_Initialize 1150                                     __pdataBANK0 00FB  
                                      ??_printf 0045                                        ??_strlen 000E  
                                   __pbssCOMRAM 0047                                   __pcstackBANK0 00CD  
                              ___aodiv@dividend 000C                ??_EUSART1_SetFramingErrorHandler 000E  
               ?_EUSART1_SetFramingErrorHandler 000C                           _TMR0_InterruptHandler 00AA  
                        _PIN_MANAGER_Initialize 1072                                       _dtoa$1386 00CD  
                                     __pintcode 0008                                   __pmediumconst FE78  
                                      ?___aodiv 000C                                        ?___aomod 000C  
                              ___aodiv@quotient 001E                                 ?_ADC_Initialize 0001  
                                     _bufferIdx 0050                    ??_INTERRUPT_InterruptManager 0008  
                             __size_of_vfprintf 0064                                       _myTMR0ISR 0B46  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 00A2  
                       _EUSART1_SetErrorHandler 1196                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 11AA                               ??_TMR0_Initialize 000E  
       EUSART1_SetErrorHandler@interruptHandler 000C                                        i2u125_40 0B5E  
                                      i2u125_41 0B5A                                        i2u126_40 0B98  
                                      i2u134_40 0FEC                                        i2u126_41 0B94  
                                      i2u134_41 0FE8                                        i2u127_40 0BC4  
                                      i2u127_41 0BC0             __size_of_INTERRUPT_InterruptManager 0046  
                                      i2u128_40 0C00                                        i2u135_48 0FF2  
                                      i2u144_40 0028                                        i2u128_41 0BFC  
                                      i2u135_49 1004                                        i2u144_41 0024  
                                      i2u145_40 0036                                        i2u145_41 0032  
                    ??_TMR0_SetInterruptHandler 000E                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 0FCE  
                                     _vfpfcnvrt 0626                                      _ADCON0bits 000FC2  
                                     main@i_214 00F9                                      ?_myTMR0ISR 0001  
                             i2_TMR0_WriteTimer 11A0                                      vfpfcnvrt@c 00E7  
                            ?i2_TMR0_WriteTimer 0001                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                             ??i2_TMR0_WriteTimer 0003  
                                      __Hrparam 0000                                      vfprintf@ap 00EC  
                                      __Lrparam 0000                                      vfprintf@fp 00E8  
                       ??_OSCILLATOR_Initialize 000C                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 003E  
                                    ?_vfpfcnvrt 003B                                 ___aodiv@divisor 0014  
                               ___aodiv@counter 001C                       __end_ofi2_TMR0_WriteTimer 11AA  
                     ??_EUSART1_SetErrorHandler 000E                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 1164                                        __ptext10 085A  
                                      __ptext11 0C42                                        __ptext20 10EE  
                                      __ptext12 0DD8                                        __ptext21 11AA  
                                      __ptext13 1164                                        __ptext30 0FCE  
                                      __ptext22 0F56                                        __ptext14 1124  
                                      __ptext31 11B0                                        __ptext23 1182  
                                      __ptext15 116E                                        __ptext32 0B46  
                                      __ptext24 118C                                        __ptext16 110A  
                                      __ptext33 11A0                                        __ptext25 1196  
                                      __ptext17 103C                                        __ptext34 0000  
                                      __ptext26 113A                                        __ptext18 1178  
                                      __ptext27 1150                                        __ptext19 1072  
                                      __ptext28 10C6                         TMR0_WriteTimer@timerVal 000C  
                             ??_TMR0_WriteTimer 000E                                   __size_of_ctoa 00D4  
                                 __size_of_main 02F2                                   __size_of_dtoa 02E2  
          __end_of_TMR0_DefaultInterruptHandler 11B2           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 11B0  EUSART1_SetOverrunErrorHandler@interruptHandler 000C  
                                      int$flags 0053                                        _vfprintf 0E6E  
            __end_of_INTERRUPT_InterruptManager 004E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00EE                     _EUSART1_FramingErrorHandler 00A6  
                              ___aomod@dividend 000C                                     ??_myTMR0ISR 0003  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 000C  
                                      intlevel2 0000                                _samplesCollected 00AC  
                                _thresholdRange 00FB                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 118C         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1182                                      _RCSTA1bits 000FAB  
                              ??_ADC_Initialize 000C                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 00F6  
EUSART1_SetFramingErrorHandler@interruptHandler 000C                                 ___aomod@divisor 0014  
                                   ??_vfpfcnvrt 0041                                 ___aomod@counter 001C  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 004F  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 103C  
                                  ___aodiv@sign 001D                  __end_of_PIN_MANAGER_Initialize 109E  
                                  ___aomod@sign 001D                                    fp__myTMR0ISR 0000  
