

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 21 08:58:12 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 05/05/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F26K22 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    96  0000                     
    97 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    98  0000                     
    99 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   100  0000                     
   101                           	psect	idataBANK1
   102  0016CC                     __pidataBANK1:
   103                           	callstack 0
   104                           
   105                           ;initializer for _thresholdRange
   106  0016CC  000A               	dw	10
   107  0000                     _ANSELA	set	3896
   108  0000                     _ANSELB	set	3897
   109  0000                     _ANSELC	set	3898
   110  0000                     _RCONbits	set	4048
   111  0000                     _TXREG1	set	4013
   112  0000                     _RCREG1	set	4014
   113  0000                     _RCSTA1bits	set	4011
   114  0000                     _TXSTA1bits	set	4012
   115  0000                     _PIR1bits	set	3998
   116  0000                     _SPBRGH1	set	4016
   117  0000                     _SPBRG1	set	4015
   118  0000                     _TXSTA1	set	4012
   119  0000                     _RCSTA1	set	4011
   120  0000                     _BAUDCON1	set	4024
   121  0000                     _ADCON0	set	4034
   122  0000                     _ADRESL	set	4035
   123  0000                     _ADCON2	set	4032
   124  0000                     _ADCON1	set	4033
   125  0000                     _OSCTUNE	set	3995
   126  0000                     _OSCCON2	set	4050
   127  0000                     _OSCCON	set	4051
   128  0000                     _T0CON	set	4053
   129  0000                     _TMR0L	set	4054
   130  0000                     _TMR0H	set	4055
   131  0000                     _T0CONbits	set	4053
   132  0000                     _INTCON2bits	set	4081
   133  0000                     _WPUB	set	3937
   134  0000                     _TRISC	set	3988
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISA	set	3986
   137  0000                     _LATC	set	3979
   138  0000                     _LATB	set	3978
   139  0000                     _LATA	set	3977
   140  0000                     _ADRESH	set	4036
   141  0000                     _ADCON0bits	set	4034
   142  0000                     _INTCONbits	set	4082
   143  0000                     _PLLRDY	set	32407
   144                           
   145                           	psect	mediumconst
   146  00FDD2                     __pmediumconst:
   147                           	callstack 0
   148  00FDD2  00                 	db	0
   149  00FDD3                     STR_20:
   150  00FDD3  66                 	db	102	;'f'
   151  00FDD4  3A                 	db	58	;':'
   152  00FDD5  20                 	db	32
   153  00FDD6  67                 	db	103	;'g'
   154  00FDD7  61                 	db	97	;'a'
   155  00FDD8  74                 	db	116	;'t'
   156  00FDD9  68                 	db	104	;'h'
   157  00FDDA  65                 	db	101	;'e'
   158  00FDDB  72                 	db	114	;'r'
   159  00FDDC  20                 	db	32
   160  00FDDD  25                 	db	37
   161  00FDDE  64                 	db	100	;'d'
   162  00FDDF  20                 	db	32
   163  00FDE0  73                 	db	115	;'s'
   164  00FDE1  61                 	db	97	;'a'
   165  00FDE2  6D                 	db	109	;'m'
   166  00FDE3  70                 	db	112	;'p'
   167  00FDE4  6C                 	db	108	;'l'
   168  00FDE5  65                 	db	101	;'e'
   169  00FDE6  73                 	db	115	;'s'
   170  00FDE7  20                 	db	32
   171  00FDE8  66                 	db	102	;'f'
   172  00FDE9  72                 	db	114	;'r'
   173  00FDEA  6F                 	db	111	;'o'
   174  00FDEB  6D                 	db	109	;'m'
   175  00FDEC  20                 	db	32
   176  00FDED  74                 	db	116	;'t'
   177  00FDEE  68                 	db	104	;'h'
   178  00FDEF  65                 	db	101	;'e'
   179  00FDF0  20                 	db	32
   180  00FDF1  6D                 	db	109	;'m'
   181  00FDF2  69                 	db	105	;'i'
   182  00FDF3  63                 	db	99	;'c'
   183  00FDF4  72                 	db	114	;'r'
   184  00FDF5  6F                 	db	111	;'o'
   185  00FDF6  70                 	db	112	;'p'
   186  00FDF7  68                 	db	104	;'h'
   187  00FDF8  6F                 	db	111	;'o'
   188  00FDF9  6E                 	db	110	;'n'
   189  00FDFA  65                 	db	101	;'e'
   190  00FDFB  20                 	db	32
   191  00FDFC  61                 	db	97	;'a'
   192  00FDFD  6E                 	db	110	;'n'
   193  00FDFE  64                 	db	100	;'d'
   194  00FDFF  20                 	db	32
   195  00FE00  63                 	db	99	;'c'
   196  00FE01  61                 	db	97	;'a'
   197  00FE02  6C                 	db	108	;'l'
   198  00FE03  63                 	db	99	;'c'
   199  00FE04  75                 	db	117	;'u'
   200  00FE05  6C                 	db	108	;'l'
   201  00FE06  61                 	db	97	;'a'
   202  00FE07  74                 	db	116	;'t'
   203  00FE08  65                 	db	101	;'e'
   204  00FE09  20                 	db	32
   205  00FE0A  74                 	db	116	;'t'
   206  00FE0B  68                 	db	104	;'h'
   207  00FE0C  65                 	db	101	;'e'
   208  00FE0D  20                 	db	32
   209  00FE0E  66                 	db	102	;'f'
   210  00FE0F  72                 	db	114	;'r'
   211  00FE10  65                 	db	101	;'e'
   212  00FE11  71                 	db	113	;'q'
   213  00FE12  75                 	db	117	;'u'
   214  00FE13  65                 	db	101	;'e'
   215  00FE14  6E                 	db	110	;'n'
   216  00FE15  63                 	db	99	;'c'
   217  00FE16  79                 	db	121	;'y'
   218  00FE17  0D                 	db	13
   219  00FE18  0A                 	db	10
   220  00FE19  00                 	db	0
   221  00FE1A                     STR_8:
   222  00FE1A  0D                 	db	13
   223  00FE1B  0A                 	db	10
   224  00FE1C  54                 	db	84	;'T'
   225  00FE1D  68                 	db	104	;'h'
   226  00FE1E  65                 	db	101	;'e'
   227  00FE1F  20                 	db	32
   228  00FE20  73                 	db	115	;'s'
   229  00FE21  6F                 	db	111	;'o'
   230  00FE22  75                 	db	117	;'u'
   231  00FE23  6E                 	db	110	;'n'
   232  00FE24  64                 	db	100	;'d'
   233  00FE25  20                 	db	32
   234  00FE26  77                 	db	119	;'w'
   235  00FE27  61                 	db	97	;'a'
   236  00FE28  76                 	db	118	;'v'
   237  00FE29  65                 	db	101	;'e'
   238  00FE2A  20                 	db	32
   239  00FE2B  63                 	db	99	;'c'
   240  00FE2C  72                 	db	114	;'r'
   241  00FE2D  6F                 	db	111	;'o'
   242  00FE2E  73                 	db	115	;'s'
   243  00FE2F  73                 	db	115	;'s'
   244  00FE30  65                 	db	101	;'e'
   245  00FE31  64                 	db	100	;'d'
   246  00FE32  20                 	db	32
   247  00FE33  61                 	db	97	;'a'
   248  00FE34  74                 	db	116	;'t'
   249  00FE35  20                 	db	32
   250  00FE36  74                 	db	116	;'t'
   251  00FE37  68                 	db	104	;'h'
   252  00FE38  65                 	db	101	;'e'
   253  00FE39  20                 	db	32
   254  00FE3A  66                 	db	102	;'f'
   255  00FE3B  6F                 	db	111	;'o'
   256  00FE3C  6C                 	db	108	;'l'
   257  00FE3D  6C                 	db	108	;'l'
   258  00FE3E  6F                 	db	111	;'o'
   259  00FE3F  77                 	db	119	;'w'
   260  00FE40  69                 	db	105	;'i'
   261  00FE41  6E                 	db	110	;'n'
   262  00FE42  67                 	db	103	;'g'
   263  00FE43  20                 	db	32
   264  00FE44  69                 	db	105	;'i'
   265  00FE45  6E                 	db	110	;'n'
   266  00FE46  64                 	db	100	;'d'
   267  00FE47  69                 	db	105	;'i'
   268  00FE48  63                 	db	99	;'c'
   269  00FE49  65                 	db	101	;'e'
   270  00FE4A  73                 	db	115	;'s'
   271  00FE4B  3A                 	db	58	;':'
   272  00FE4C  0D                 	db	13
   273  00FE4D  0A                 	db	10
   274  00FE4E  00                 	db	0
   275  00FE4F                     STR_5:
   276  00FE4F  54                 	db	84	;'T'
   277  00FE50  68                 	db	104	;'h'
   278  00FE51  65                 	db	101	;'e'
   279  00FE52  20                 	db	32
   280  00FE53  6C                 	db	108	;'l'
   281  00FE54  61                 	db	97	;'a'
   282  00FE55  73                 	db	115	;'s'
   283  00FE56  74                 	db	116	;'t'
   284  00FE57  20                 	db	32
   285  00FE58  25                 	db	37
   286  00FE59  64                 	db	100	;'d'
   287  00FE5A  20                 	db	32
   288  00FE5B  41                 	db	65	;'A'
   289  00FE5C  44                 	db	68	;'D'
   290  00FE5D  43                 	db	67	;'C'
   291  00FE5E  20                 	db	32
   292  00FE5F  73                 	db	115	;'s'
   293  00FE60  61                 	db	97	;'a'
   294  00FE61  6D                 	db	109	;'m'
   295  00FE62  70                 	db	112	;'p'
   296  00FE63  6C                 	db	108	;'l'
   297  00FE64  65                 	db	101	;'e'
   298  00FE65  73                 	db	115	;'s'
   299  00FE66  20                 	db	32
   300  00FE67  66                 	db	102	;'f'
   301  00FE68  72                 	db	114	;'r'
   302  00FE69  6F                 	db	111	;'o'
   303  00FE6A  6D                 	db	109	;'m'
   304  00FE6B  20                 	db	32
   305  00FE6C  74                 	db	116	;'t'
   306  00FE6D  68                 	db	104	;'h'
   307  00FE6E  65                 	db	101	;'e'
   308  00FE6F  20                 	db	32
   309  00FE70  6D                 	db	109	;'m'
   310  00FE71  69                 	db	105	;'i'
   311  00FE72  63                 	db	99	;'c'
   312  00FE73  72                 	db	114	;'r'
   313  00FE74  6F                 	db	111	;'o'
   314  00FE75  70                 	db	112	;'p'
   315  00FE76  68                 	db	104	;'h'
   316  00FE77  6F                 	db	111	;'o'
   317  00FE78  6E                 	db	110	;'n'
   318  00FE79  65                 	db	101	;'e'
   319  00FE7A  20                 	db	32
   320  00FE7B  61                 	db	97	;'a'
   321  00FE7C  72                 	db	114	;'r'
   322  00FE7D  65                 	db	101	;'e'
   323  00FE7E  3A                 	db	58	;':'
   324  00FE7F  20                 	db	32
   325  00FE80  0D                 	db	13
   326  00FE81  0A                 	db	10
   327  00FE82  00                 	db	0
   328  00FE83                     STR_19:
   329  00FE83  54                 	db	84	;'T'
   330  00FE84  2F                 	db	47
   331  00FE85  74                 	db	116	;'t'
   332  00FE86  3A                 	db	58	;':'
   333  00FE87  20                 	db	32
   334  00FE88  49                 	db	73	;'I'
   335  00FE89  6E                 	db	110	;'n'
   336  00FE8A  63                 	db	99	;'c'
   337  00FE8B  72                 	db	114	;'r'
   338  00FE8C  65                 	db	101	;'e'
   339  00FE8D  61                 	db	97	;'a'
   340  00FE8E  73                 	db	115	;'s'
   341  00FE8F  65                 	db	101	;'e'
   342  00FE90  2F                 	db	47
   343  00FE91  64                 	db	100	;'d'
   344  00FE92  65                 	db	101	;'e'
   345  00FE93  63                 	db	99	;'c'
   346  00FE94  72                 	db	114	;'r'
   347  00FE95  65                 	db	101	;'e'
   348  00FE96  61                 	db	97	;'a'
   349  00FE97  73                 	db	115	;'s'
   350  00FE98  65                 	db	101	;'e'
   351  00FE99  20                 	db	32
   352  00FE9A  74                 	db	116	;'t'
   353  00FE9B  68                 	db	104	;'h'
   354  00FE9C  72                 	db	114	;'r'
   355  00FE9D  65                 	db	101	;'e'
   356  00FE9E  73                 	db	115	;'s'
   357  00FE9F  68                 	db	104	;'h'
   358  00FEA0  6F                 	db	111	;'o'
   359  00FEA1  6C                 	db	108	;'l'
   360  00FEA2  64                 	db	100	;'d'
   361  00FEA3  20                 	db	32
   362  00FEA4  31                 	db	49	;'1'
   363  00FEA5  33                 	db	51	;'3'
   364  00FEA6  38                 	db	56	;'8'
   365  00FEA7  2D                 	db	45
   366  00FEA8  31                 	db	49	;'1'
   367  00FEA9  31                 	db	49	;'1'
   368  00FEAA  38                 	db	56	;'8'
   369  00FEAB  0D                 	db	13
   370  00FEAC  0A                 	db	10
   371  00FEAD  00                 	db	0
   372  00FEAE                     STR_10:
   373  00FEAE  0D                 	db	13
   374  00FEAF  0A                 	db	10
   375  00FEB0  54                 	db	84	;'T'
   376  00FEB1  68                 	db	104	;'h'
   377  00FEB2  65                 	db	101	;'e'
   378  00FEB3  20                 	db	32
   379  00FEB4  73                 	db	115	;'s'
   380  00FEB5  6F                 	db	111	;'o'
   381  00FEB6  75                 	db	117	;'u'
   382  00FEB7  6E                 	db	110	;'n'
   383  00FEB8  64                 	db	100	;'d'
   384  00FEB9  20                 	db	32
   385  00FEBA  77                 	db	119	;'w'
   386  00FEBB  61                 	db	97	;'a'
   387  00FEBC  76                 	db	118	;'v'
   388  00FEBD  65                 	db	101	;'e'
   389  00FEBE  20                 	db	32
   390  00FEBF  68                 	db	104	;'h'
   391  00FEC0  61                 	db	97	;'a'
   392  00FEC1  64                 	db	100	;'d'
   393  00FEC2  20                 	db	32
   394  00FEC3  25                 	db	37
   395  00FEC4  64                 	db	100	;'d'
   396  00FEC5  20                 	db	32
   397  00FEC6  70                 	db	112	;'p'
   398  00FEC7  65                 	db	101	;'e'
   399  00FEC8  72                 	db	114	;'r'
   400  00FEC9  69                 	db	105	;'i'
   401  00FECA  6F                 	db	111	;'o'
   402  00FECB  64                 	db	100	;'d'
   403  00FECC  73                 	db	115	;'s'
   404  00FECD  3A                 	db	58	;':'
   405  00FECE  0D                 	db	13
   406  00FECF  0A                 	db	10
   407  00FED0  00                 	db	0
   408  00FED1                     STR_14:
   409  00FED1  2D                 	db	45
   410  00FED2  2D                 	db	45
   411  00FED3  2D                 	db	45
   412  00FED4  2D                 	db	45
   413  00FED5  2D                 	db	45
   414  00FED6  2D                 	db	45
   415  00FED7  2D                 	db	45
   416  00FED8  2D                 	db	45
   417  00FED9  2D                 	db	45
   418  00FEDA  2D                 	db	45
   419  00FEDB  2D                 	db	45
   420  00FEDC  2D                 	db	45
   421  00FEDD  2D                 	db	45
   422  00FEDE  2D                 	db	45
   423  00FEDF  2D                 	db	45
   424  00FEE0  2D                 	db	45
   425  00FEE1  2D                 	db	45
   426  00FEE2  2D                 	db	45
   427  00FEE3  2D                 	db	45
   428  00FEE4  2D                 	db	45
   429  00FEE5  2D                 	db	45
   430  00FEE6  2D                 	db	45
   431  00FEE7  2D                 	db	45
   432  00FEE8  2D                 	db	45
   433  00FEE9  2D                 	db	45
   434  00FEEA  2D                 	db	45
   435  00FEEB  2D                 	db	45
   436  00FEEC  2D                 	db	45
   437  00FEED  2D                 	db	45
   438  00FEEE  2D                 	db	45
   439  00FEEF  0D                 	db	13
   440  00FEF0  0A                 	db	10
   441  00FEF1  00                 	db	0
   442  00FEF2                     STR_13:
   443  00FEF2  0D                 	db	13
   444  00FEF3  07                 	db	7
   445  00FEF4  76                 	db	118	;'v'
   446  00FEF5  65                 	db	101	;'e'
   447  00FEF6  72                 	db	114	;'r'
   448  00FEF7  61                 	db	97	;'a'
   449  00FEF8  67                 	db	103	;'g'
   450  00FEF9  65                 	db	101	;'e'
   451  00FEFA  20                 	db	32
   452  00FEFB  66                 	db	102	;'f'
   453  00FEFC  72                 	db	114	;'r'
   454  00FEFD  65                 	db	101	;'e'
   455  00FEFE  71                 	db	113	;'q'
   456  00FEFF  75                 	db	117	;'u'
   457  00FF00  65                 	db	101	;'e'
   458  00FF01  6E                 	db	110	;'n'
   459  00FF02  64                 	db	100	;'d'
   460  00FF03  79                 	db	121	;'y'
   461  00FF04  20                 	db	32
   462  00FF05  3D                 	db	61	;'='
   463  00FF06  20                 	db	32
   464  00FF07  25                 	db	37
   465  00FF08  64                 	db	100	;'d'
   466  00FF09  20                 	db	32
   467  00FF0A  48                 	db	72	;'H'
   468  00FF0B  7A                 	db	122	;'z'
   469  00FF0C  0D                 	db	13
   470  00FF0D  0A                 	db	10
   471  00FF0E  00                 	db	0
   472  00FF0F                     STR_12:
   473  00FF0F  0D                 	db	13
   474  00FF10  0A                 	db	10
   475  00FF11  61                 	db	97	;'a'
   476  00FF12  76                 	db	118	;'v'
   477  00FF13  65                 	db	101	;'e'
   478  00FF14  72                 	db	114	;'r'
   479  00FF15  61                 	db	97	;'a'
   480  00FF16  67                 	db	103	;'g'
   481  00FF17  65                 	db	101	;'e'
   482  00FF18  20                 	db	32
   483  00FF19  70                 	db	112	;'p'
   484  00FF1A  65                 	db	101	;'e'
   485  00FF1B  72                 	db	114	;'r'
   486  00FF1C  69                 	db	105	;'i'
   487  00FF1D  6F                 	db	111	;'o'
   488  00FF1E  64                 	db	100	;'d'
   489  00FF1F  20                 	db	32
   490  00FF20  3D                 	db	61	;'='
   491  00FF21  20                 	db	32
   492  00FF22  25                 	db	37
   493  00FF23  64                 	db	100	;'d'
   494  00FF24  20                 	db	32
   495  00FF25  75                 	db	117	;'u'
   496  00FF26  73                 	db	115	;'s'
   497  00FF27  0D                 	db	13
   498  00FF28  0A                 	db	10
   499  00FF29  00                 	db	0
   500  00FF2A                     STR_2:
   501  00FF2A  4D                 	db	77	;'M'
   502  00FF2B  69                 	db	105	;'i'
   503  00FF2C  63                 	db	99	;'c'
   504  00FF2D  72                 	db	114	;'r'
   505  00FF2E  6F                 	db	111	;'o'
   506  00FF2F  70                 	db	112	;'p'
   507  00FF30  68                 	db	104	;'h'
   508  00FF31  6F                 	db	111	;'o'
   509  00FF32  6E                 	db	110	;'n'
   510  00FF33  65                 	db	101	;'e'
   511  00FF34  20                 	db	32
   512  00FF35  65                 	db	101	;'e'
   513  00FF36  78                 	db	120	;'x'
   514  00FF37  70                 	db	112	;'p'
   515  00FF38  65                 	db	101	;'e'
   516  00FF39  72                 	db	114	;'r'
   517  00FF3A  69                 	db	105	;'i'
   518  00FF3B  6D                 	db	109	;'m'
   519  00FF3C  65                 	db	101	;'e'
   520  00FF3D  6E                 	db	110	;'n'
   521  00FF3E  74                 	db	116	;'t'
   522  00FF3F  73                 	db	115	;'s'
   523  00FF40  0D                 	db	13
   524  00FF41  0A                 	db	10
   525  00FF42  00                 	db	0
   526  00FF43                     STR_25:
   527  00FF43  56                 	db	86	;'V'
   528  00FF44  6F                 	db	111	;'o'
   529  00FF45  6C                 	db	108	;'l'
   530  00FF46  75                 	db	117	;'u'
   531  00FF47  6D                 	db	109	;'m'
   532  00FF48  65                 	db	101	;'e'
   533  00FF49  20                 	db	32
   534  00FF4A  72                 	db	114	;'r'
   535  00FF4B  61                 	db	97	;'a'
   536  00FF4C  6E                 	db	110	;'n'
   537  00FF4D  67                 	db	103	;'g'
   538  00FF4E  65                 	db	101	;'e'
   539  00FF4F  3A                 	db	58	;':'
   540  00FF50  20                 	db	32
   541  00FF51  25                 	db	37
   542  00FF52  64                 	db	100	;'d'
   543  00FF53  20                 	db	32
   544  00FF54  2D                 	db	45
   545  00FF55  20                 	db	32
   546  00FF56  25                 	db	37
   547  00FF57  64                 	db	100	;'d'
   548  00FF58  0D                 	db	13
   549  00FF59  0A                 	db	10
   550  00FF5A  00                 	db	0
   551  00FF5B                     STR_18:
   552  00FF5B  7A                 	db	122	;'z'
   553  00FF5C  3A                 	db	58	;':'
   554  00FF5D  20                 	db	32
   555  00FF5E  43                 	db	67	;'C'
   556  00FF5F  6C                 	db	108	;'l'
   557  00FF60  65                 	db	101	;'e'
   558  00FF61  61                 	db	97	;'a'
   559  00FF62  72                 	db	114	;'r'
   560  00FF63  20                 	db	32
   561  00FF64  74                 	db	116	;'t'
   562  00FF65  68                 	db	104	;'h'
   563  00FF66  65                 	db	101	;'e'
   564  00FF67  20                 	db	32
   565  00FF68  74                 	db	116	;'t'
   566  00FF69  65                 	db	101	;'e'
   567  00FF6A  72                 	db	114	;'r'
   568  00FF6B  6D                 	db	109	;'m'
   569  00FF6C  69                 	db	105	;'i'
   570  00FF6D  6E                 	db	110	;'n'
   571  00FF6E  61                 	db	97	;'a'
   572  00FF6F  6C                 	db	108	;'l'
   573  00FF70  0D                 	db	13
   574  00FF71  0A                 	db	10
   575  00FF72  00                 	db	0
   576  00FF73                     STR_28:
   577  00FF73  54                 	db	84	;'T'
   578  00FF74  68                 	db	104	;'h'
   579  00FF75  72                 	db	114	;'r'
   580  00FF76  65                 	db	101	;'e'
   581  00FF77  73                 	db	115	;'s'
   582  00FF78  68                 	db	104	;'h'
   583  00FF79  6F                 	db	111	;'o'
   584  00FF7A  6C                 	db	108	;'l'
   585  00FF7B  64                 	db	100	;'d'
   586  00FF7C  20                 	db	32
   587  00FF7D  61                 	db	97	;'a'
   588  00FF7E  74                 	db	116	;'t'
   589  00FF7F  20                 	db	32
   590  00FF80  6D                 	db	109	;'m'
   591  00FF81  69                 	db	105	;'i'
   592  00FF82  6E                 	db	110	;'n'
   593  00FF83  69                 	db	105	;'i'
   594  00FF84  6D                 	db	109	;'m'
   595  00FF85  75                 	db	117	;'u'
   596  00FF86  6D                 	db	109	;'m'
   597  00FF87  0D                 	db	13
   598  00FF88  0A                 	db	10
   599  00FF89  00                 	db	0
   600  00FF8A                     STR_17:
   601  00FF8A  5A                 	db	90	;'Z'
   602  00FF8B  3A                 	db	58	;':'
   603  00FF8C  20                 	db	32
   604  00FF8D  52                 	db	82	;'R'
   605  00FF8E  65                 	db	101	;'e'
   606  00FF8F  73                 	db	115	;'s'
   607  00FF90  65                 	db	101	;'e'
   608  00FF91  74                 	db	116	;'t'
   609  00FF92  20                 	db	32
   610  00FF93  70                 	db	112	;'p'
   611  00FF94  72                 	db	114	;'r'
   612  00FF95  6F                 	db	111	;'o'
   613  00FF96  63                 	db	99	;'c'
   614  00FF97  65                 	db	101	;'e'
   615  00FF98  73                 	db	115	;'s'
   616  00FF99  73                 	db	115	;'s'
   617  00FF9A  6F                 	db	111	;'o'
   618  00FF9B  72                 	db	114	;'r'
   619  00FF9C  0D                 	db	13
   620  00FF9D  0A                 	db	10
   621  00FF9E  00                 	db	0
   622  00FF9F                     STR_29:
   623  00FF9F  55                 	db	85	;'U'
   624  00FFA0  6E                 	db	110	;'n'
   625  00FFA1  6B                 	db	107	;'k'
   626  00FFA2  6E                 	db	110	;'n'
   627  00FFA3  6F                 	db	111	;'o'
   628  00FFA4  77                 	db	119	;'w'
   629  00FFA5  6E                 	db	110	;'n'
   630  00FFA6  20                 	db	32
   631  00FFA7  6B                 	db	107	;'k'
   632  00FFA8  65                 	db	101	;'e'
   633  00FFA9  79                 	db	121	;'y'
   634  00FFAA  20                 	db	32
   635  00FFAB  25                 	db	37
   636  00FFAC  63                 	db	99	;'c'
   637  00FFAD  0D                 	db	13
   638  00FFAE  0A                 	db	10
   639  00FFAF  00                 	db	0
   640  00FFB0                     STR_11:
   641  00FFB0  25                 	db	37
   642  00FFB1  64                 	db	100	;'d'
   643  00FFB2  20                 	db	32
   644  00FFB3  2D                 	db	45
   645  00FFB4  20                 	db	32
   646  00FFB5  25                 	db	37
   647  00FFB6  64                 	db	100	;'d'
   648  00FFB7  20                 	db	32
   649  00FFB8  3D                 	db	61	;'='
   650  00FFB9  20                 	db	32
   651  00FFBA  25                 	db	37
   652  00FFBB  64                 	db	100	;'d'
   653  00FFBC  0D                 	db	13
   654  00FFBD  0A                 	db	10
   655  00FFBE  00                 	db	0
   656  00FFBF                     STR_15:
   657  00FFBF  3F                 	db	63	;'?'
   658  00FFC0  3A                 	db	58	;':'
   659  00FFC1  20                 	db	32
   660  00FFC2  48                 	db	72	;'H'
   661  00FFC3  65                 	db	101	;'e'
   662  00FFC4  6C                 	db	108	;'l'
   663  00FFC5  70                 	db	112	;'p'
   664  00FFC6  20                 	db	32
   665  00FFC7  6D                 	db	109	;'m'
   666  00FFC8  65                 	db	101	;'e'
   667  00FFC9  6E                 	db	110	;'n'
   668  00FFCA  75                 	db	117	;'u'
   669  00FFCB  0D                 	db	13
   670  00FFCC  0A                 	db	10
   671  00FFCD  00                 	db	0
   672  00FFCE                     STR_1:
   673  00FFCE  69                 	db	105	;'i'
   674  00FFCF  6E                 	db	110	;'n'
   675  00FFD0  4C                 	db	76	;'L'
   676  00FFD1  61                 	db	97	;'a'
   677  00FFD2  62                 	db	98	;'b'
   678  00FFD3  20                 	db	32
   679  00FFD4  30                 	db	48	;'0'
   680  00FFD5  38                 	db	56	;'8'
   681  00FFD6  0D                 	db	13
   682  00FFD7  0A                 	db	10
   683  00FFD8  00                 	db	0
   684  00FFD9                     STR_3:
   685  00FFD9  44                 	db	68	;'D'
   686  00FFDA  65                 	db	101	;'e'
   687  00FFDB  76                 	db	118	;'v'
   688  00FFDC  27                 	db	39
   689  00FFDD  32                 	db	50	;'2'
   690  00FFDE  31                 	db	49	;'1'
   691  00FFDF  0D                 	db	13
   692  00FFE0  0A                 	db	10
   693  00FFE1  00                 	db	0
   694  00FFE2                     STR_6:
   695  00FFE2  0D                 	db	13
   696  00FFE3  0A                 	db	10
   697  00FFE4  53                 	db	83	;'S'
   698  00FFE5  5B                 	db	91	;'['
   699  00FFE6  25                 	db	37
   700  00FFE7  64                 	db	100	;'d'
   701  00FFE8  5D                 	db	93	;']'
   702  00FFE9  20                 	db	32
   703  00FFEA  00                 	db	0
   704  00FFEB                     STR_16:
   705  00FFEB  6F                 	db	111	;'o'
   706  00FFEC  3A                 	db	58	;':'
   707  00FFED  20                 	db	32
   708  00FFEE  6B                 	db	107	;'k'
   709  00FFEF  0D                 	db	13
   710  00FFF0  0A                 	db	10
   711  00FFF1  00                 	db	0
   712  00FFF2                     STR_22:
   713  00FFF2  20                 	db	32
   714  00FFF3  6B                 	db	107	;'k'
   715  00FFF4  0D                 	db	13
   716  00FFF5  0A                 	db	10
   717  00FFF6  3E                 	db	62	;'>'
   718  00FFF7  00                 	db	0
   719  00FFF8                     STR_7:
   720  00FFF8  25                 	db	37
   721  00FFF9  64                 	db	100	;'d'
   722  00FFFA  20                 	db	32
   723  00FFFB  00                 	db	0
   724  00FFFC                     STR_4:
   725  00FFFC  3E                 	db	62	;'>'
   726  00FFFD  20                 	db	32
   727  00FFFE  00                 	db	0
   728  00FFFF  00                 	db	0	; dummy byte at the end
   729  0000                     
   730                           ; #config settings
   731                           
   732                           	psect	cinit
   733  0013AE                     __pcinit:
   734                           	callstack 0
   735  0013AE                     start_initialization:
   736                           	callstack 0
   737  0013AE                     __initialization:
   738                           	callstack 0
   739                           
   740                           ; Initialize objects allocated to BANK1 (2 bytes)
   741                           ; load TBLPTR registers with __pidataBANK1
   742  0013AE  0ECC               	movlw	low __pidataBANK1
   743  0013B0  6EF6               	movwf	tblptrl,c
   744  0013B2  0E16               	movlw	high __pidataBANK1
   745  0013B4  6EF7               	movwf	tblptrh,c
   746  0013B6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   747  0013B8  6EF8               	movwf	tblptru,c
   748  0013BA  0009               	tblrd		*+	;fetch initializer
   749  0013BC  CFF5 F193          	movff	tablat,__pdataBANK1
   750  0013C0  0009               	tblrd		*+	;fetch initializer
   751  0013C2  CFF5 F194          	movff	tablat,__pdataBANK1+1
   752                           
   753                           ; Clear objects allocated to BANK2 (256 bytes)
   754  0013C6  EE02  F000         	lfsr	0,__pbssBANK2
   755  0013CA  EE11 F000          	lfsr	1,256
   756  0013CE                     clear_0:
   757  0013CE  6AEE               	clrf	postinc0,c
   758  0013D0  50E5               	movf	postdec1,w,c
   759  0013D2  50E1               	movf	fsr1l,w,c
   760  0013D4  E1FC               	bnz	clear_0
   761  0013D6  50E2               	movf	fsr1h,w,c
   762  0013D8  E1FA               	bnz	clear_0
   763                           
   764                           ; Clear objects allocated to BANK1 (1 bytes)
   765  0013DA  0101               	movlb	1
   766  0013DC  6B95               	clrf	__pbssBANK1& (0+255),b
   767                           
   768                           ; Clear objects allocated to BANK0 (45 bytes)
   769  0013DE  EE00  F099         	lfsr	0,__pbssBANK0
   770  0013E2  0E2D               	movlw	45
   771  0013E4                     clear_1:
   772  0013E4  6AEE               	clrf	postinc0,c
   773  0013E6  06E8               	decf	wreg,f,c
   774  0013E8  E1FD               	bnz	clear_1
   775                           
   776                           ; Clear objects allocated to COMRAM (12 bytes)
   777  0013EA  EE00  F045         	lfsr	0,__pbssCOMRAM
   778  0013EE  0E0C               	movlw	12
   779  0013F0                     clear_2:
   780  0013F0  6AEE               	clrf	postinc0,c
   781  0013F2  06E8               	decf	wreg,f,c
   782  0013F4  E1FD               	bnz	clear_2
   783  0013F6                     end_of_initialization:
   784                           	callstack 0
   785  0013F6                     __end_of__initialization:
   786                           	callstack 0
   787  0013F6  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   788  0013F8  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   789  0013FA  0100               	movlb	0
   790  0013FC  EF29  F000         	goto	_main	;jump to C main() function
   791                           
   792                           	psect	bssCOMRAM
   793  000045                     __pbssCOMRAM:
   794                           	callstack 0
   795  000045                     _width:
   796                           	callstack 0
   797  000045                     	ds	2
   798  000047                     _prec:
   799                           	callstack 0
   800  000047                     	ds	2
   801  000049                     _flags:
   802                           	callstack 0
   803  000049                     	ds	2
   804  00004B                     _timer0ReloadVal:
   805                           	callstack 0
   806  00004B                     	ds	2
   807  00004D                     _bufferIdx:
   808                           	callstack 0
   809  00004D                     	ds	2
   810  00004F                     _timerState:
   811                           	callstack 0
   812  00004F                     	ds	1
   813  000050                     _fillBuffer:
   814                           	callstack 0
   815  000050                     	ds	1
   816                           
   817                           	psect	bssBANK0
   818  000099                     __pbssBANK0:
   819                           	callstack 0
   820  000099                     _nout:
   821                           	callstack 0
   822  000099                     	ds	2
   823  00009B                     _EUSART1_ErrorHandler:
   824                           	callstack 0
   825  00009B                     	ds	2
   826  00009D                     _EUSART1_OverrunErrorHandler:
   827                           	callstack 0
   828  00009D                     	ds	2
   829  00009F                     _EUSART1_FramingErrorHandler:
   830                           	callstack 0
   831  00009F                     	ds	2
   832  0000A1                     _ADC_InterruptHandler:
   833                           	callstack 0
   834  0000A1                     	ds	2
   835  0000A3                     _TMR0_InterruptHandler:
   836                           	callstack 0
   837  0000A3                     	ds	2
   838  0000A5                     _eusart1RxLastError:
   839                           	callstack 0
   840  0000A5                     	ds	1
   841  0000A6                     _dbuf:
   842                           	callstack 0
   843  0000A6                     	ds	32
   844                           
   845                           	psect	bssBANK1
   846  000195                     __pbssBANK1:
   847                           	callstack 0
   848  000195                     _samplesCollected:
   849                           	callstack 0
   850  000195                     	ds	1
   851                           
   852                           	psect	dataBANK1
   853  000193                     __pdataBANK1:
   854                           	callstack 0
   855  000193                     _thresholdRange:
   856                           	callstack 0
   857  000193                     	ds	2
   858                           
   859                           	psect	bssBANK2
   860  000200                     __pbssBANK2:
   861                           	callstack 0
   862  000200                     _adc_reading:
   863                           	callstack 0
   864  000200                     	ds	256
   865                           
   866                           	psect	cstackBANK1
   867  000100                     __pcstackBANK1:
   868                           	callstack 0
   869  000100                     main@crossings:
   870                           	callstack 0
   871                           
   872                           ; 128 bytes @ 0x0
   873  000100                     	ds	128
   874  000180                     main@avgPeriod:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x80
   878  000180                     	ds	2
   879  000182                     main@periodSum:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x82
   883  000182                     	ds	2
   884  000184                     main@avgPeriodUs:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x84
   888  000184                     	ds	2
   889  000186                     main@cmd:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x86
   893  000186                     	ds	1
   894  000187                     main@i_221:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x87
   898  000187                     	ds	2
   899  000189                     main@i:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x89
   903  000189                     	ds	2
   904  00018B                     main@i_214:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x8B
   908  00018B                     	ds	2
   909  00018D                     main@crIdx:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x8D
   913  00018D                     	ds	2
   914  00018F                     main@i_220:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x8F
   918  00018F                     	ds	2
   919  000191                     main@i_225:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x91
   923  000191                     	ds	2
   924                           
   925                           	psect	cstackBANK0
   926  000060                     __pcstackBANK0:
   927                           	callstack 0
   928  000060                     _dtoa$1401:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x0
   932  000060                     	ds	2
   933  000062                     dtoa@p:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x2
   937  000062                     	ds	2
   938  000064                     dtoa@w:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x4
   942  000064                     	ds	2
   943  000066                     dtoa@s:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x6
   947  000066                     	ds	2
   948  000068                     dtoa@n:
   949                           	callstack 0
   950                           
   951                           ; 8 bytes @ 0x8
   952  000068                     	ds	8
   953  000070                     dtoa@i:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x10
   957  000070                     	ds	2
   958  000072                     vfpfcnvrt@ll:
   959                           	callstack 0
   960                           
   961                           ; 8 bytes @ 0x12
   962  000072                     	ds	8
   963  00007A                     vfpfcnvrt@c:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x1A
   967  00007A                     	ds	1
   968  00007B                     ?_vfprintf:
   969                           	callstack 0
   970  00007B                     vfprintf@fp:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x1B
   974  00007B                     	ds	2
   975  00007D                     vfprintf@fmt:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x1D
   979  00007D                     	ds	2
   980  00007F                     vfprintf@ap:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x1F
   984  00007F                     	ds	2
   985  000081                     ?_printf:
   986                           	callstack 0
   987  000081                     printf@fmt:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x21
   991  000081                     	ds	10
   992  00008B                     printf@ap:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x2B
   996  00008B                     	ds	2
   997  00008D                     ??_main:
   998                           
   999                           ; 1 bytes @ 0x2D
  1000  00008D                     	ds	12
  1001                           
  1002                           	psect	cstackCOMRAM
  1003  000001                     __pcstackCOMRAM:
  1004                           	callstack 0
  1005  000001                     i2TMR0_WriteTimer@timerVal:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x0
  1009  000001                     	ds	2
  1010  000003                     ??_myTMR0ISR:
  1011  000003                     
  1012                           ; 1 bytes @ 0x2
  1013  000003                     	ds	4
  1014  000007                     myTMR0ISR@micReading:
  1015                           	callstack 0
  1016                           
  1017                           ; 1 bytes @ 0x6
  1018  000007                     	ds	1
  1019  000008                     ??_INTERRUPT_InterruptManager:
  1020                           
  1021                           ; 1 bytes @ 0x7
  1022  000008                     	ds	4
  1023  00000C                     ?_strlen:
  1024                           	callstack 0
  1025  00000C                     ?___wmul:
  1026                           	callstack 0
  1027  00000C                     ?___lwdiv:
  1028                           	callstack 0
  1029  00000C                     ?___aldiv:
  1030                           	callstack 0
  1031  00000C                     ?___aodiv:
  1032                           	callstack 0
  1033  00000C                     ?___aomod:
  1034                           	callstack 0
  1035  00000C                     EUSART1_Write@txData:
  1036                           	callstack 0
  1037  00000C                     TMR0_WriteTimer@timerVal:
  1038                           	callstack 0
  1039  00000C                     TMR0_SetInterruptHandler@InterruptHandler:
  1040                           	callstack 0
  1041  00000C                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1042                           	callstack 0
  1043  00000C                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1044                           	callstack 0
  1045  00000C                     EUSART1_SetErrorHandler@interruptHandler:
  1046                           	callstack 0
  1047  00000C                     ___wmul@multiplier:
  1048                           	callstack 0
  1049  00000C                     ___lwdiv@dividend:
  1050                           	callstack 0
  1051  00000C                     strlen@s:
  1052                           	callstack 0
  1053  00000C                     ___aldiv@dividend:
  1054                           	callstack 0
  1055  00000C                     ___aodiv@dividend:
  1056                           	callstack 0
  1057  00000C                     ___aomod@dividend:
  1058                           	callstack 0
  1059                           
  1060                           ; 8 bytes @ 0xB
  1061  00000C                     	ds	1
  1062  00000D                     putch@txData:
  1063                           	callstack 0
  1064                           
  1065                           ; 1 bytes @ 0xC
  1066  00000D                     	ds	1
  1067  00000E                     ??_TMR0_Initialize:
  1068  00000E                     ___wmul@multiplicand:
  1069                           	callstack 0
  1070  00000E                     ___lwdiv@divisor:
  1071                           	callstack 0
  1072  00000E                     fputc@c:
  1073                           	callstack 0
  1074  00000E                     strlen@a:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0xD
  1078  00000E                     	ds	2
  1079  000010                     ___wmul@product:
  1080                           	callstack 0
  1081  000010                     ___lwdiv@quotient:
  1082                           	callstack 0
  1083  000010                     fputc@fp:
  1084                           	callstack 0
  1085  000010                     ___aldiv@divisor:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0xF
  1089  000010                     	ds	2
  1090  000012                     ??_fputc:
  1091  000012                     ___lwdiv@counter:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x11
  1095  000012                     	ds	2
  1096  000014                     ___aldiv@counter:
  1097                           	callstack 0
  1098  000014                     ___aodiv@divisor:
  1099                           	callstack 0
  1100  000014                     ___aomod@divisor:
  1101                           	callstack 0
  1102                           
  1103                           ; 8 bytes @ 0x13
  1104  000014                     	ds	1
  1105  000015                     ___aldiv@sign:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x14
  1109  000015                     	ds	1
  1110  000016                     ___aldiv@quotient:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x15
  1114  000016                     	ds	1
  1115  000017                     ?_ctoa:
  1116                           	callstack 0
  1117  000017                     ctoa@fp:
  1118                           	callstack 0
  1119  000017                     fputs@s:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x16
  1123  000017                     	ds	2
  1124  000019                     ctoa@c:
  1125                           	callstack 0
  1126  000019                     fputs@fp:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x18
  1130  000019                     	ds	1
  1131  00001A                     ??_ctoa:
  1132                           
  1133                           ; 1 bytes @ 0x19
  1134  00001A                     	ds	1
  1135  00001B                     fputs@c:
  1136                           	callstack 0
  1137  00001B                     ctoa@l:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x1A
  1141  00001B                     	ds	1
  1142  00001C                     ___aodiv@counter:
  1143                           	callstack 0
  1144  00001C                     ___aomod@counter:
  1145                           	callstack 0
  1146  00001C                     fputs@i:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x1B
  1150  00001C                     	ds	1
  1151  00001D                     ___aodiv@sign:
  1152                           	callstack 0
  1153  00001D                     ___aomod@sign:
  1154                           	callstack 0
  1155  00001D                     ctoa@w:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x1C
  1159  00001D                     	ds	1
  1160  00001E                     ?_abs:
  1161                           	callstack 0
  1162  00001E                     ?_pad:
  1163                           	callstack 0
  1164  00001E                     pad@fp:
  1165                           	callstack 0
  1166  00001E                     abs@a:
  1167                           	callstack 0
  1168  00001E                     ___aodiv@quotient:
  1169                           	callstack 0
  1170                           
  1171                           ; 8 bytes @ 0x1D
  1172  00001E                     	ds	2
  1173  000020                     ??_abs:
  1174  000020                     pad@buf:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x1F
  1178  000020                     	ds	2
  1179  000022                     pad@p:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x21
  1183  000022                     	ds	2
  1184  000024                     ??_pad:
  1185                           
  1186                           ; 1 bytes @ 0x23
  1187  000024                     	ds	1
  1188  000025                     pad@i:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x24
  1192  000025                     	ds	2
  1193  000027                     pad@w:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x26
  1197  000027                     	ds	2
  1198  000029                     ?_dtoa:
  1199                           	callstack 0
  1200  000029                     dtoa@fp:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x28
  1204  000029                     	ds	2
  1205  00002B                     dtoa@d:
  1206                           	callstack 0
  1207                           
  1208                           ; 8 bytes @ 0x2A
  1209  00002B                     	ds	8
  1210  000033                     ??_dtoa:
  1211                           
  1212                           ; 1 bytes @ 0x32
  1213  000033                     	ds	8
  1214  00003B                     ?_vfpfcnvrt:
  1215                           	callstack 0
  1216  00003B                     vfpfcnvrt@fp:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x3A
  1220  00003B                     	ds	2
  1221  00003D                     vfpfcnvrt@fmt:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x3C
  1225  00003D                     	ds	2
  1226  00003F                     vfpfcnvrt@ap:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x3E
  1230  00003F                     	ds	2
  1231  000041                     ??_vfpfcnvrt:
  1232                           
  1233                           ; 1 bytes @ 0x40
  1234  000041                     	ds	2
  1235  000043                     vfprintf@cfmt:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x42
  1239  000043                     	ds	2
  1240  000045                     
  1241                           ; 1 bytes @ 0x44
  1242 ;;
  1243 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1244 ;;
  1245 ;; *************** function _main *****************
  1246 ;; Defined at:
  1247 ;;		line 45 in file "main.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  i               2  145[BANK1 ] unsigned short 
  1252 ;;  i               2  135[BANK1 ] unsigned short 
  1253 ;;  i               2  143[BANK1 ] unsigned short 
  1254 ;;  i               2  139[BANK1 ] unsigned short 
  1255 ;;  crossings     128    0[BANK1 ] unsigned char [128]
  1256 ;;  crIdx           2  141[BANK1 ] unsigned short 
  1257 ;;  avgPeriodUs     2  132[BANK1 ] unsigned short 
  1258 ;;  periodSum       2  130[BANK1 ] unsigned short 
  1259 ;;  avgPeriod       2  128[BANK1 ] unsigned short 
  1260 ;;  i               2  137[BANK1 ] unsigned short 
  1261 ;;  cmd             1  134[BANK1 ] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Locals:         0       0     147       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Totals:         0      12     147       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;Total ram usage:      159 bytes
  1276 ;; Hardware stack levels required when called:   13
  1277 ;; This function calls:
  1278 ;;		_EUSART1_Read
  1279 ;;		_EUSART1_is_rx_ready
  1280 ;;		_SYSTEM_Initialize
  1281 ;;		_TMR0_SetInterruptHandler
  1282 ;;		_TMR0_WriteTimer
  1283 ;;		___aldiv
  1284 ;;		___lwdiv
  1285 ;;		___wmul
  1286 ;;		_printf
  1287 ;; This function is called by:
  1288 ;;		Startup code after reset
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text0
  1293  000052                     __ptext0:
  1294                           	callstack 0
  1295  000052                     _main:
  1296                           	callstack 18
  1297  000052                     
  1298                           ;main.c: 54:     uint16_t i;;main.c: 55:     char cmd;;main.c: 57:     SYSTEM_Initialize
      +                          ();
  1299  000052  EC14  F00B         	call	_SYSTEM_Initialize	;wreg free
  1300  000056                     
  1301                           ;main.c: 62:     TMR0_WriteTimer(0x0000);
  1302  000056  0E00               	movlw	0
  1303  000058  6E0D               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1304  00005A  0E00               	movlw	0
  1305  00005C  6E0C               	movwf	TMR0_WriteTimer@timerVal^0,c
  1306  00005E  EC46  F00B         	call	_TMR0_WriteTimer	;wreg free
  1307  000062                     
  1308                           ;main.c: 63:     INTCONbits.TMR0IF = 0;
  1309  000062  94F2               	bcf	242,2,c	;volatile
  1310  000064                     l33:
  1311  000064  A4F2               	btfss	242,2,c	;volatile
  1312  000066  EF37  F000         	goto	u2271
  1313  00006A  EF39  F000         	goto	u2270
  1314  00006E                     u2271:
  1315  00006E  EF32  F000         	goto	l33
  1316  000072                     u2270:
  1317  000072                     
  1318                           ;main.c: 66:     TMR0_SetInterruptHandler(myTMR0ISR);
  1319  000072  0EA4               	movlw	low _myTMR0ISR
  1320  000074  6E0C               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1321  000076  0E0F               	movlw	high _myTMR0ISR
  1322  000078  6E0D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1323  00007A  EC4B  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  1324  00007E                     
  1325                           ;main.c: 67:     (INTCONbits.GIE = 1);
  1326  00007E  8EF2               	bsf	242,7,c	;volatile
  1327  000080                     
  1328                           ;main.c: 68:     (INTCONbits.PEIE = 1);
  1329  000080  8CF2               	bsf	242,6,c	;volatile
  1330  000082                     
  1331                           ;main.c: 70:     printf("inLab 08\r\n");
  1332  000082  0ECE               	movlw	low STR_1
  1333  000084  0100               	movlb	0	; () banked
  1334  000086  6F81               	movwf	printf@fmt& (0+255),b
  1335  000088  0EFF               	movlw	high STR_1
  1336  00008A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1337  00008C  ECDF  F00A         	call	_printf	;wreg free
  1338  000090                     
  1339                           ;main.c: 71:     printf("Microphone experiments\r\n");
  1340  000090  0E2A               	movlw	low STR_2
  1341  000092  0100               	movlb	0	; () banked
  1342  000094  6F81               	movwf	printf@fmt& (0+255),b
  1343  000096  0EFF               	movlw	high STR_2
  1344  000098  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1345  00009A  ECDF  F00A         	call	_printf	;wreg free
  1346  00009E                     
  1347                           ;main.c: 72:     printf("Dev'21\r\n");
  1348  00009E  0ED9               	movlw	low STR_3
  1349  0000A0  0100               	movlb	0	; () banked
  1350  0000A2  6F81               	movwf	printf@fmt& (0+255),b
  1351  0000A4  0EFF               	movlw	high STR_3
  1352  0000A6  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1353  0000A8  ECDF  F00A         	call	_printf	;wreg free
  1354  0000AC                     
  1355                           ;main.c: 73:     printf("> ");
  1356  0000AC  0EFC               	movlw	low STR_4
  1357  0000AE  0100               	movlb	0	; () banked
  1358  0000B0  6F81               	movwf	printf@fmt& (0+255),b
  1359  0000B2  0EFF               	movlw	high STR_4
  1360  0000B4  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1361  0000B6  ECDF  F00A         	call	_printf	;wreg free
  1362  0000BA                     
  1363                           ;main.c: 77:     ADCON0bits.GO_NOT_DONE = 1;
  1364  0000BA  82C2               	bsf	194,1,c	;volatile
  1365  0000BC                     l36:
  1366  0000BC  B2C2               	btfsc	194,1,c	;volatile
  1367  0000BE  EF63  F000         	goto	u2281
  1368  0000C2  EF65  F000         	goto	u2280
  1369  0000C6                     u2281:
  1370  0000C6  EF5E  F000         	goto	l36
  1371  0000CA                     u2280:
  1372  0000CA                     l2934:
  1373                           
  1374                           ;main.c: 82:         if(samplesCollected){
  1375  0000CA  0101               	movlb	1	; () banked
  1376  0000CC  5195               	movf	_samplesCollected& (0+255),w,b
  1377  0000CE  B4D8               	btfsc	status,2,c
  1378  0000D0  EF6C  F000         	goto	u2291
  1379  0000D4  EF6E  F000         	goto	u2290
  1380  0000D8                     u2291:
  1381  0000D8  EF05  F002         	goto	l3006
  1382  0000DC                     u2290:
  1383  0000DC                     
  1384                           ; BSR set to: 1
  1385                           ;main.c: 83:             samplesCollected = 0;
  1386  0000DC  0E00               	movlw	0
  1387  0000DE  6F95               	movwf	_samplesCollected& (0+255),b
  1388  0000E0                     
  1389                           ; BSR set to: 1
  1390                           ;main.c: 84:             printf("The last %d ADC samples from the microphone are: \r\n",
      +                           256);
  1391  0000E0  0E4F               	movlw	low STR_5
  1392  0000E2  0100               	movlb	0	; () banked
  1393  0000E4  6F81               	movwf	printf@fmt& (0+255),b
  1394  0000E6  0EFE               	movlw	high STR_5
  1395  0000E8  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1396  0000EA  0E01               	movlw	1
  1397  0000EC  6F84               	movwf	(?_printf+3)& (0+255),b
  1398  0000EE  0E00               	movlw	0
  1399  0000F0  6F83               	movwf	(?_printf+2)& (0+255),b
  1400  0000F2  ECDF  F00A         	call	_printf	;wreg free
  1401  0000F6                     
  1402                           ;main.c: 86:             for(uint16_t i = 0;i<256;i++){
  1403  0000F6  0E00               	movlw	0
  1404  0000F8  0101               	movlb	1	; () banked
  1405  0000FA  6F8C               	movwf	(main@i_214+1)& (0+255),b
  1406  0000FC  0E00               	movlw	0
  1407  0000FE  6F8B               	movwf	main@i_214& (0+255),b
  1408  000100                     l2946:
  1409                           
  1410                           ; BSR set to: 1
  1411                           ;main.c: 87:                 if(i % 16 == 0){
  1412  000100  0E0F               	movlw	15
  1413  000102  158B               	andwf	main@i_214& (0+255),w,b
  1414  000104  0100               	movlb	0	; () banked
  1415  000106  6F8D               	movwf	??_main& (0+255),b
  1416  000108  0E00               	movlw	0
  1417  00010A  0101               	movlb	1	; () banked
  1418  00010C  158C               	andwf	(main@i_214+1)& (0+255),w,b
  1419  00010E  0100               	movlb	0	; () banked
  1420  000110  6F8E               	movwf	(??_main+1)& (0+255),b
  1421  000112  518D               	movf	??_main& (0+255),w,b
  1422  000114  118E               	iorwf	(??_main+1)& (0+255),w,b
  1423  000116  A4D8               	btfss	status,2,c
  1424  000118  EF90  F000         	goto	u2301
  1425  00011C  EF92  F000         	goto	u2300
  1426  000120                     u2301:
  1427  000120  EF9C  F000         	goto	l43
  1428  000124                     u2300:
  1429  000124                     
  1430                           ; BSR set to: 0
  1431                           ;main.c: 88:                     printf("\r\nS[%d] ", i);
  1432  000124  0EE2               	movlw	low STR_6
  1433  000126  6F81               	movwf	printf@fmt& (0+255),b
  1434  000128  0EFF               	movlw	high STR_6
  1435  00012A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1436  00012C  C18B  F083         	movff	main@i_214,?_printf+2
  1437  000130  C18C  F084         	movff	main@i_214+1,?_printf+3
  1438  000134  ECDF  F00A         	call	_printf	;wreg free
  1439  000138                     l43:
  1440                           
  1441                           ;main.c: 90:                 printf("%d ", adc_reading[i]);
  1442  000138  0EF8               	movlw	low STR_7
  1443  00013A  0100               	movlb	0	; () banked
  1444  00013C  6F81               	movwf	printf@fmt& (0+255),b
  1445  00013E  0EFF               	movlw	high STR_7
  1446  000140  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1447  000142  0E00               	movlw	low _adc_reading
  1448  000144  0101               	movlb	1	; () banked
  1449  000146  258B               	addwf	main@i_214& (0+255),w,b
  1450  000148  6ED9               	movwf	fsr2l,c
  1451  00014A  0E02               	movlw	high _adc_reading
  1452  00014C  218C               	addwfc	(main@i_214+1)& (0+255),w,b
  1453  00014E  6EDA               	movwf	fsr2h,c
  1454  000150  50DF               	movf	indf2,w,c
  1455  000152  0100               	movlb	0	; () banked
  1456  000154  6F8D               	movwf	??_main& (0+255),b
  1457  000156  518D               	movf	??_main& (0+255),w,b
  1458  000158  6F83               	movwf	(?_printf+2)& (0+255),b
  1459  00015A  6B84               	clrf	(?_printf+3)& (0+255),b
  1460  00015C  ECDF  F00A         	call	_printf	;wreg free
  1461  000160                     
  1462                           ;main.c: 91:             }
  1463  000160  0101               	movlb	1	; () banked
  1464  000162  4B8B               	infsnz	main@i_214& (0+255),f,b
  1465  000164  2B8C               	incf	(main@i_214+1)& (0+255),f,b
  1466  000166                     
  1467                           ; BSR set to: 1
  1468  000166  058C               	decf	(main@i_214+1)& (0+255),w,b
  1469  000168  A0D8               	btfss	status,0,c
  1470  00016A  EFB9  F000         	goto	u2311
  1471  00016E  EFBB  F000         	goto	u2310
  1472  000172                     u2311:
  1473  000172  EF80  F000         	goto	l2946
  1474  000176                     u2310:
  1475  000176                     
  1476                           ; BSR set to: 1
  1477                           ;main.c: 92:             printf("\r\nThe sound wave crossed at the following indices:\r\
      +                          n");
  1478  000176  0E1A               	movlw	low STR_8
  1479  000178  0100               	movlb	0	; () banked
  1480  00017A  6F81               	movwf	printf@fmt& (0+255),b
  1481  00017C  0EFE               	movlw	high STR_8
  1482  00017E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1483  000180  ECDF  F00A         	call	_printf	;wreg free
  1484  000184                     
  1485                           ;main.c: 93:             uint8_t crossings[256/2];;main.c: 94:             uint16_t crId
      +                          x = 0;
  1486  000184  0E00               	movlw	0
  1487  000186  0101               	movlb	1	; () banked
  1488  000188  6F8E               	movwf	(main@crIdx+1)& (0+255),b
  1489  00018A  0E00               	movlw	0
  1490  00018C  6F8D               	movwf	main@crIdx& (0+255),b
  1491  00018E                     
  1492                           ; BSR set to: 1
  1493                           ;main.c: 95:             for(uint16_t i = 1;i<256;i++){
  1494  00018E  0E00               	movlw	0
  1495  000190  6F90               	movwf	(main@i_220+1)& (0+255),b
  1496  000192  0E01               	movlw	1
  1497  000194  6F8F               	movwf	main@i_220& (0+255),b
  1498  000196                     l2964:
  1499                           
  1500                           ; BSR set to: 1
  1501                           ;main.c: 96:                 if(adc_reading[i-1] <= 128 && adc_reading[i] > 128){
  1502  000196  0EFF               	movlw	low (_adc_reading+65535)
  1503  000198  258F               	addwf	main@i_220& (0+255),w,b
  1504  00019A  6ED9               	movwf	fsr2l,c
  1505  00019C  0E01               	movlw	high (_adc_reading+65535)
  1506  00019E  2190               	addwfc	(main@i_220+1)& (0+255),w,b
  1507  0001A0  6EDA               	movwf	fsr2h,c
  1508  0001A2  0E81               	movlw	129
  1509  0001A4  60DF               	cpfslt	indf2,c
  1510  0001A6  EFD7  F000         	goto	u2321
  1511  0001AA  EFD9  F000         	goto	u2320
  1512  0001AE                     u2321:
  1513  0001AE  EFF1  F000         	goto	l2972
  1514  0001B2                     u2320:
  1515  0001B2                     
  1516                           ; BSR set to: 1
  1517  0001B2  0E00               	movlw	low _adc_reading
  1518  0001B4  258F               	addwf	main@i_220& (0+255),w,b
  1519  0001B6  6ED9               	movwf	fsr2l,c
  1520  0001B8  0E02               	movlw	high _adc_reading
  1521  0001BA  2190               	addwfc	(main@i_220+1)& (0+255),w,b
  1522  0001BC  6EDA               	movwf	fsr2h,c
  1523  0001BE  0E80               	movlw	128
  1524  0001C0  64DF               	cpfsgt	indf2,c
  1525  0001C2  EFE5  F000         	goto	u2331
  1526  0001C6  EFE7  F000         	goto	u2330
  1527  0001CA                     u2331:
  1528  0001CA  EFF1  F000         	goto	l2972
  1529  0001CE                     u2330:
  1530  0001CE                     
  1531                           ; BSR set to: 1
  1532                           ;main.c: 97:                     crossings[crIdx] = i - 1;
  1533  0001CE  0E00               	movlw	low main@crossings
  1534  0001D0  258D               	addwf	main@crIdx& (0+255),w,b
  1535  0001D2  6ED9               	movwf	fsr2l,c
  1536  0001D4  0E01               	movlw	high main@crossings
  1537  0001D6  218E               	addwfc	(main@crIdx+1)& (0+255),w,b
  1538  0001D8  6EDA               	movwf	fsr2h,c
  1539  0001DA  058F               	decf	main@i_220& (0+255),w,b
  1540  0001DC  6EDF               	movwf	indf2,c
  1541  0001DE                     
  1542                           ; BSR set to: 1
  1543                           ;main.c: 98:                     crIdx += 1;
  1544  0001DE  4B8D               	infsnz	main@crIdx& (0+255),f,b
  1545  0001E0  2B8E               	incf	(main@crIdx+1)& (0+255),f,b
  1546  0001E2                     l2972:
  1547                           
  1548                           ; BSR set to: 1
  1549                           ;main.c: 100:             }
  1550  0001E2  4B8F               	infsnz	main@i_220& (0+255),f,b
  1551  0001E4  2B90               	incf	(main@i_220+1)& (0+255),f,b
  1552  0001E6                     
  1553                           ; BSR set to: 1
  1554  0001E6  0590               	decf	(main@i_220+1)& (0+255),w,b
  1555  0001E8  A0D8               	btfss	status,0,c
  1556  0001EA  EFF9  F000         	goto	u2341
  1557  0001EE  EFFB  F000         	goto	u2340
  1558  0001F2                     u2341:
  1559  0001F2  EFCB  F000         	goto	l2964
  1560  0001F6                     u2340:
  1561  0001F6                     
  1562                           ; BSR set to: 1
  1563                           ;main.c: 101:             for(uint16_t i = 0;i<crIdx;i++){
  1564  0001F6  0E00               	movlw	0
  1565  0001F8  6F88               	movwf	(main@i_221+1)& (0+255),b
  1566  0001FA  0E00               	movlw	0
  1567  0001FC  6F87               	movwf	main@i_221& (0+255),b
  1568  0001FE  EF18  F001         	goto	l2982
  1569  000202                     l2978:
  1570                           
  1571                           ; BSR set to: 1
  1572                           ;main.c: 102:                 printf("%d ", crossings[i]);
  1573  000202  0EF8               	movlw	low STR_7
  1574  000204  0100               	movlb	0	; () banked
  1575  000206  6F81               	movwf	printf@fmt& (0+255),b
  1576  000208  0EFF               	movlw	high STR_7
  1577  00020A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1578  00020C  0E00               	movlw	low main@crossings
  1579  00020E  0101               	movlb	1	; () banked
  1580  000210  2587               	addwf	main@i_221& (0+255),w,b
  1581  000212  6ED9               	movwf	fsr2l,c
  1582  000214  0E01               	movlw	high main@crossings
  1583  000216  2188               	addwfc	(main@i_221+1)& (0+255),w,b
  1584  000218  6EDA               	movwf	fsr2h,c
  1585  00021A  50DF               	movf	indf2,w,c
  1586  00021C  0100               	movlb	0	; () banked
  1587  00021E  6F8D               	movwf	??_main& (0+255),b
  1588  000220  518D               	movf	??_main& (0+255),w,b
  1589  000222  6F83               	movwf	(?_printf+2)& (0+255),b
  1590  000224  6B84               	clrf	(?_printf+3)& (0+255),b
  1591  000226  ECDF  F00A         	call	_printf	;wreg free
  1592  00022A                     
  1593                           ;main.c: 103:             }
  1594  00022A  0101               	movlb	1	; () banked
  1595  00022C  4B87               	infsnz	main@i_221& (0+255),f,b
  1596  00022E  2B88               	incf	(main@i_221+1)& (0+255),f,b
  1597  000230                     l2982:
  1598                           
  1599                           ; BSR set to: 1
  1600  000230  518D               	movf	main@crIdx& (0+255),w,b
  1601  000232  5D87               	subwf	main@i_221& (0+255),w,b
  1602  000234  518E               	movf	(main@crIdx+1)& (0+255),w,b
  1603  000236  5988               	subwfb	(main@i_221+1)& (0+255),w,b
  1604  000238  A0D8               	btfss	status,0,c
  1605  00023A  EF21  F001         	goto	u2351
  1606  00023E  EF23  F001         	goto	u2350
  1607  000242                     u2351:
  1608  000242  EF01  F001         	goto	l2978
  1609  000246                     u2350:
  1610  000246                     
  1611                           ; BSR set to: 1
  1612                           ;main.c: 104:             printf("\r\nThe sound wave had %d periods:\r\n", crIdx);
  1613  000246  0EAE               	movlw	low STR_10
  1614  000248  0100               	movlb	0	; () banked
  1615  00024A  6F81               	movwf	printf@fmt& (0+255),b
  1616  00024C  0EFE               	movlw	high STR_10
  1617  00024E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1618  000250  C18D  F083         	movff	main@crIdx,?_printf+2
  1619  000254  C18E  F084         	movff	main@crIdx+1,?_printf+3
  1620  000258  ECDF  F00A         	call	_printf	;wreg free
  1621  00025C                     
  1622                           ;main.c: 105:             uint16_t periodSum = 0;
  1623  00025C  0E00               	movlw	0
  1624  00025E  0101               	movlb	1	; () banked
  1625  000260  6F83               	movwf	(main@periodSum+1)& (0+255),b
  1626  000262  0E00               	movlw	0
  1627  000264  6F82               	movwf	main@periodSum& (0+255),b
  1628  000266                     
  1629                           ; BSR set to: 1
  1630                           ;main.c: 106:             for(uint16_t i = 1;i<crIdx;i++){
  1631  000266  0E00               	movlw	0
  1632  000268  6F92               	movwf	(main@i_225+1)& (0+255),b
  1633  00026A  0E01               	movlw	1
  1634  00026C  6F91               	movwf	main@i_225& (0+255),b
  1635  00026E  EFB4  F001         	goto	l2996
  1636  000272                     l2990:
  1637                           
  1638                           ; BSR set to: 1
  1639                           ;main.c: 107:                 printf("%d - %d = %d\r\n", crossings[i], crossings[i-1], c
      +                          rossings[i] - crossings[i-1]);
  1640  000272  0EB0               	movlw	low STR_11
  1641  000274  0100               	movlb	0	; () banked
  1642  000276  6F81               	movwf	printf@fmt& (0+255),b
  1643  000278  0EFF               	movlw	high STR_11
  1644  00027A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1645  00027C  0E00               	movlw	low main@crossings
  1646  00027E  0101               	movlb	1	; () banked
  1647  000280  2591               	addwf	main@i_225& (0+255),w,b
  1648  000282  6ED9               	movwf	fsr2l,c
  1649  000284  0E01               	movlw	high main@crossings
  1650  000286  2192               	addwfc	(main@i_225+1)& (0+255),w,b
  1651  000288  6EDA               	movwf	fsr2h,c
  1652  00028A  50DF               	movf	indf2,w,c
  1653  00028C  0100               	movlb	0	; () banked
  1654  00028E  6F8D               	movwf	??_main& (0+255),b
  1655  000290  518D               	movf	??_main& (0+255),w,b
  1656  000292  6F83               	movwf	(?_printf+2)& (0+255),b
  1657  000294  6B84               	clrf	(?_printf+3)& (0+255),b
  1658  000296  0EFF               	movlw	255
  1659  000298  6F8E               	movwf	(??_main+1)& (0+255),b
  1660  00029A  0EFF               	movlw	255
  1661  00029C  6F8F               	movwf	(??_main+2)& (0+255),b
  1662  00029E  C191  F090         	movff	main@i_225,??_main+3
  1663  0002A2  C192  F091         	movff	main@i_225+1,??_main+4
  1664  0002A6  518E               	movf	(??_main+1)& (0+255),w,b
  1665  0002A8  2790               	addwf	(??_main+3)& (0+255),f,b
  1666  0002AA  518F               	movf	(??_main+2)& (0+255),w,b
  1667  0002AC  2391               	addwfc	(??_main+4)& (0+255),f,b
  1668  0002AE  0E00               	movlw	low main@crossings
  1669  0002B0  2590               	addwf	(??_main+3)& (0+255),w,b
  1670  0002B2  6ED9               	movwf	fsr2l,c
  1671  0002B4  0E01               	movlw	high main@crossings
  1672  0002B6  2191               	addwfc	(??_main+4)& (0+255),w,b
  1673  0002B8  6EDA               	movwf	fsr2h,c
  1674  0002BA  50DF               	movf	indf2,w,c
  1675  0002BC  6F92               	movwf	(??_main+5)& (0+255),b
  1676  0002BE  5192               	movf	(??_main+5)& (0+255),w,b
  1677  0002C0  6F85               	movwf	(?_printf+4)& (0+255),b
  1678  0002C2  6B86               	clrf	(?_printf+5)& (0+255),b
  1679  0002C4  0E00               	movlw	low main@crossings
  1680  0002C6  0101               	movlb	1	; () banked
  1681  0002C8  2591               	addwf	main@i_225& (0+255),w,b
  1682  0002CA  6ED9               	movwf	fsr2l,c
  1683  0002CC  0E01               	movlw	high main@crossings
  1684  0002CE  2192               	addwfc	(main@i_225+1)& (0+255),w,b
  1685  0002D0  6EDA               	movwf	fsr2h,c
  1686  0002D2  50DF               	movf	indf2,w,c
  1687  0002D4  0100               	movlb	0	; () banked
  1688  0002D6  6F93               	movwf	(??_main+6)& (0+255),b
  1689  0002D8  0EFF               	movlw	255
  1690  0002DA  6F94               	movwf	(??_main+7)& (0+255),b
  1691  0002DC  0EFF               	movlw	255
  1692  0002DE  6F95               	movwf	(??_main+8)& (0+255),b
  1693  0002E0  C191  F096         	movff	main@i_225,??_main+9
  1694  0002E4  C192  F097         	movff	main@i_225+1,??_main+10
  1695  0002E8  5194               	movf	(??_main+7)& (0+255),w,b
  1696  0002EA  2796               	addwf	(??_main+9)& (0+255),f,b
  1697  0002EC  5195               	movf	(??_main+8)& (0+255),w,b
  1698  0002EE  2397               	addwfc	(??_main+10)& (0+255),f,b
  1699  0002F0  0E00               	movlw	low main@crossings
  1700  0002F2  2596               	addwf	(??_main+9)& (0+255),w,b
  1701  0002F4  6ED9               	movwf	fsr2l,c
  1702  0002F6  0E01               	movlw	high main@crossings
  1703  0002F8  2197               	addwfc	(??_main+10)& (0+255),w,b
  1704  0002FA  6EDA               	movwf	fsr2h,c
  1705  0002FC  50DF               	movf	indf2,w,c
  1706  0002FE  6F98               	movwf	(??_main+11)& (0+255),b
  1707  000300  5198               	movf	(??_main+11)& (0+255),w,b
  1708  000302  5D93               	subwf	(??_main+6)& (0+255),w,b
  1709  000304  6F87               	movwf	(?_printf+6)& (0+255),b
  1710  000306  6B88               	clrf	(?_printf+7)& (0+255),b
  1711  000308  A0D8               	btfss	status,0,c
  1712  00030A  0788               	decf	(?_printf+7)& (0+255),f,b
  1713  00030C  ECDF  F00A         	call	_printf	;wreg free
  1714  000310                     
  1715                           ;main.c: 108:                 periodSum += crossings[i] - crossings[i-1];
  1716  000310  0E00               	movlw	low main@crossings
  1717  000312  0101               	movlb	1	; () banked
  1718  000314  2591               	addwf	main@i_225& (0+255),w,b
  1719  000316  6ED9               	movwf	fsr2l,c
  1720  000318  0E01               	movlw	high main@crossings
  1721  00031A  2192               	addwfc	(main@i_225+1)& (0+255),w,b
  1722  00031C  6EDA               	movwf	fsr2h,c
  1723  00031E  50DF               	movf	indf2,w,c
  1724  000320  0100               	movlb	0	; () banked
  1725  000322  6F8D               	movwf	??_main& (0+255),b
  1726  000324  6B8E               	clrf	(??_main+1)& (0+255),b
  1727  000326  0EFF               	movlw	255
  1728  000328  6F8F               	movwf	(??_main+2)& (0+255),b
  1729  00032A  0EFF               	movlw	255
  1730  00032C  6F90               	movwf	(??_main+3)& (0+255),b
  1731  00032E  C191  F091         	movff	main@i_225,??_main+4
  1732  000332  C192  F092         	movff	main@i_225+1,??_main+5
  1733  000336  518F               	movf	(??_main+2)& (0+255),w,b
  1734  000338  2791               	addwf	(??_main+4)& (0+255),f,b
  1735  00033A  5190               	movf	(??_main+3)& (0+255),w,b
  1736  00033C  2392               	addwfc	(??_main+5)& (0+255),f,b
  1737  00033E  0E00               	movlw	low main@crossings
  1738  000340  2591               	addwf	(??_main+4)& (0+255),w,b
  1739  000342  6ED9               	movwf	fsr2l,c
  1740  000344  0E01               	movlw	high main@crossings
  1741  000346  2192               	addwfc	(??_main+5)& (0+255),w,b
  1742  000348  6EDA               	movwf	fsr2h,c
  1743  00034A  50DF               	movf	indf2,w,c
  1744  00034C  6F93               	movwf	(??_main+6)& (0+255),b
  1745  00034E  5193               	movf	(??_main+6)& (0+255),w,b
  1746  000350  5F8D               	subwf	??_main& (0+255),f,b
  1747  000352  0E00               	movlw	0
  1748  000354  5B8E               	subwfb	(??_main+1)& (0+255),f,b
  1749  000356  518D               	movf	??_main& (0+255),w,b
  1750  000358  0101               	movlb	1	; () banked
  1751  00035A  2782               	addwf	main@periodSum& (0+255),f,b
  1752  00035C  0100               	movlb	0	; () banked
  1753  00035E  518E               	movf	(??_main+1)& (0+255),w,b
  1754  000360  0101               	movlb	1	; () banked
  1755  000362  2383               	addwfc	(main@periodSum+1)& (0+255),f,b
  1756  000364                     
  1757                           ; BSR set to: 1
  1758                           ;main.c: 109:             }
  1759  000364  4B91               	infsnz	main@i_225& (0+255),f,b
  1760  000366  2B92               	incf	(main@i_225+1)& (0+255),f,b
  1761  000368                     l2996:
  1762                           
  1763                           ; BSR set to: 1
  1764  000368  518D               	movf	main@crIdx& (0+255),w,b
  1765  00036A  5D91               	subwf	main@i_225& (0+255),w,b
  1766  00036C  518E               	movf	(main@crIdx+1)& (0+255),w,b
  1767  00036E  5992               	subwfb	(main@i_225+1)& (0+255),w,b
  1768  000370  A0D8               	btfss	status,0,c
  1769  000372  EFBD  F001         	goto	u2361
  1770  000376  EFBF  F001         	goto	u2360
  1771  00037A                     u2361:
  1772  00037A  EF39  F001         	goto	l2990
  1773  00037E                     u2360:
  1774  00037E                     
  1775                           ; BSR set to: 1
  1776                           ;main.c: 110:             uint16_t avgPeriod = periodSum/crIdx;
  1777  00037E  C182  F00C         	movff	main@periodSum,___lwdiv@dividend
  1778  000382  C183  F00D         	movff	main@periodSum+1,___lwdiv@dividend+1
  1779  000386  C18D  F00E         	movff	main@crIdx,___lwdiv@divisor
  1780  00038A  C18E  F00F         	movff	main@crIdx+1,___lwdiv@divisor+1
  1781  00038E  EC6B  F009         	call	___lwdiv	;wreg free
  1782  000392  C00C  F180         	movff	?___lwdiv,main@avgPeriod
  1783  000396  C00D  F181         	movff	?___lwdiv+1,main@avgPeriod+1
  1784  00039A                     
  1785                           ;main.c: 111:             uint16_t avgPeriodUs = avgPeriod * 25;
  1786  00039A  C180  F00C         	movff	main@avgPeriod,___wmul@multiplier
  1787  00039E  C181  F00D         	movff	main@avgPeriod+1,___wmul@multiplier+1
  1788  0003A2  0E00               	movlw	0
  1789  0003A4  6E0F               	movwf	(___wmul@multiplicand+1)^0,c
  1790  0003A6  0E19               	movlw	25
  1791  0003A8  6E0E               	movwf	___wmul@multiplicand^0,c
  1792  0003AA  ECF3  F00A         	call	___wmul	;wreg free
  1793  0003AE  C00C  F184         	movff	?___wmul,main@avgPeriodUs
  1794  0003B2  C00D  F185         	movff	?___wmul+1,main@avgPeriodUs+1
  1795  0003B6                     
  1796                           ;main.c: 112:             printf("\r\naverage period = %d us\r\n", avgPeriodUs);
  1797  0003B6  0E0F               	movlw	low STR_12
  1798  0003B8  0100               	movlb	0	; () banked
  1799  0003BA  6F81               	movwf	printf@fmt& (0+255),b
  1800  0003BC  0EFF               	movlw	high STR_12
  1801  0003BE  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1802  0003C0  C184  F083         	movff	main@avgPeriodUs,?_printf+2
  1803  0003C4  C185  F084         	movff	main@avgPeriodUs+1,?_printf+3
  1804  0003C8  ECDF  F00A         	call	_printf	;wreg free
  1805  0003CC                     
  1806                           ;main.c: 113:             printf("\r\average frequendy = %d Hz\r\n", 1000000/avgPeriodUs
      +                          );
  1807  0003CC  0EF2               	movlw	low STR_13
  1808  0003CE  0100               	movlb	0	; () banked
  1809  0003D0  6F81               	movwf	printf@fmt& (0+255),b
  1810  0003D2  0EFE               	movlw	high STR_13
  1811  0003D4  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1812  0003D6  0E40               	movlw	64
  1813  0003D8  6E0C               	movwf	___aldiv@dividend^0,c
  1814  0003DA  0E42               	movlw	66
  1815  0003DC  6E0D               	movwf	(___aldiv@dividend+1)^0,c
  1816  0003DE  0E0F               	movlw	15
  1817  0003E0  6E0E               	movwf	(___aldiv@dividend+2)^0,c
  1818  0003E2  0E00               	movlw	0
  1819  0003E4  6E0F               	movwf	(___aldiv@dividend+3)^0,c
  1820  0003E6  C184  F010         	movff	main@avgPeriodUs,___aldiv@divisor
  1821  0003EA  C185  F011         	movff	main@avgPeriodUs+1,___aldiv@divisor+1
  1822  0003EE  6A12               	clrf	(___aldiv@divisor+2)^0,c
  1823  0003F0  6A13               	clrf	(___aldiv@divisor+3)^0,c
  1824  0003F2  EC4C  F007         	call	___aldiv	;wreg free
  1825  0003F6  C00C  F083         	movff	?___aldiv,?_printf+2
  1826  0003FA  C00D  F084         	movff	?___aldiv+1,?_printf+3
  1827  0003FE  C00E  F085         	movff	?___aldiv+2,?_printf+4
  1828  000402  C00F  F086         	movff	?___aldiv+3,?_printf+5
  1829  000406  ECDF  F00A         	call	_printf	;wreg free
  1830  00040A                     l3006:
  1831                           
  1832                           ;main.c: 116:         if ((EUSART1_is_rx_ready())) {
  1833  00040A  EC37  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  1834  00040E  0900               	iorlw	0
  1835  000410  B4D8               	btfsc	status,2,c
  1836  000412  EF0D  F002         	goto	u2371
  1837  000416  EF0F  F002         	goto	u2370
  1838  00041A                     u2371:
  1839  00041A  EF65  F000         	goto	l2934
  1840  00041E                     u2370:
  1841  00041E                     
  1842                           ;main.c: 117:             cmd = EUSART1_Read();
  1843  00041E  ECCA  F00A         	call	_EUSART1_Read	;wreg free
  1844  000422  0101               	movlb	1	; () banked
  1845  000424  6F86               	movwf	main@cmd& (0+255),b
  1846                           
  1847                           ;main.c: 118:             switch (cmd) {
  1848  000426  EF1F  F003         	goto	l3056
  1849  00042A                     l3010:
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;main.c: 121:                     printf("------------------------------\r\n");
  1853  00042A  0ED1               	movlw	low STR_14
  1854  00042C  6F81               	movwf	printf@fmt& (0+255),b
  1855  00042E  0EFE               	movlw	high STR_14
  1856  000430  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1857  000432  ECDF  F00A         	call	_printf	;wreg free
  1858                           
  1859                           ;main.c: 122:                     printf("?: Help menu\r\n");
  1860  000436  0EBF               	movlw	low STR_15
  1861  000438  0100               	movlb	0	; () banked
  1862  00043A  6F81               	movwf	printf@fmt& (0+255),b
  1863  00043C  0EFF               	movlw	high STR_15
  1864  00043E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1865  000440  ECDF  F00A         	call	_printf	;wreg free
  1866                           
  1867                           ;main.c: 123:                     printf("o: k\r\n");
  1868  000444  0EEB               	movlw	low STR_16
  1869  000446  0100               	movlb	0	; () banked
  1870  000448  6F81               	movwf	printf@fmt& (0+255),b
  1871  00044A  0EFF               	movlw	high STR_16
  1872  00044C  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1873  00044E  ECDF  F00A         	call	_printf	;wreg free
  1874                           
  1875                           ;main.c: 124:                     printf("Z: Reset processor\r\n");
  1876  000452  0E8A               	movlw	low STR_17
  1877  000454  0100               	movlb	0	; () banked
  1878  000456  6F81               	movwf	printf@fmt& (0+255),b
  1879  000458  0EFF               	movlw	high STR_17
  1880  00045A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1881  00045C  ECDF  F00A         	call	_printf	;wreg free
  1882                           
  1883                           ;main.c: 125:                     printf("z: Clear the terminal\r\n");
  1884  000460  0E5B               	movlw	low STR_18
  1885  000462  0100               	movlb	0	; () banked
  1886  000464  6F81               	movwf	printf@fmt& (0+255),b
  1887  000466  0EFF               	movlw	high STR_18
  1888  000468  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1889  00046A  ECDF  F00A         	call	_printf	;wreg free
  1890                           
  1891                           ;main.c: 126:                     printf("T/t: Increase/decrease threshold 138-118\r\n")
      +                          ;
  1892  00046E  0E83               	movlw	low STR_19
  1893  000470  0100               	movlb	0	; () banked
  1894  000472  6F81               	movwf	printf@fmt& (0+255),b
  1895  000474  0EFE               	movlw	high STR_19
  1896  000476  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1897  000478  ECDF  F00A         	call	_printf	;wreg free
  1898                           
  1899                           ;main.c: 127:                     printf("f: gather %d samples from the microphone and c
      +                          alculate the frequency\r\n", 256);
  1900  00047C  0ED3               	movlw	low STR_20
  1901  00047E  0100               	movlb	0	; () banked
  1902  000480  6F81               	movwf	printf@fmt& (0+255),b
  1903  000482  0EFD               	movlw	high STR_20
  1904  000484  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1905  000486  0E01               	movlw	1
  1906  000488  6F84               	movwf	(?_printf+3)& (0+255),b
  1907  00048A  0E00               	movlw	0
  1908  00048C  6F83               	movwf	(?_printf+2)& (0+255),b
  1909  00048E  ECDF  F00A         	call	_printf	;wreg free
  1910                           
  1911                           ;main.c: 129:                     printf("------------------------------\r\n");
  1912  000492  0ED1               	movlw	low STR_14
  1913  000494  0100               	movlb	0	; () banked
  1914  000496  6F81               	movwf	printf@fmt& (0+255),b
  1915  000498  0EFE               	movlw	high STR_14
  1916  00049A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1917  00049C  ECDF  F00A         	call	_printf	;wreg free
  1918                           
  1919                           ;main.c: 130:                     break;
  1920  0004A0  EF65  F000         	goto	l2934
  1921  0004A4                     l3012:
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;main.c: 136:                     printf(" k\r\n>");
  1925  0004A4  0EF2               	movlw	low STR_22
  1926  0004A6  6F81               	movwf	printf@fmt& (0+255),b
  1927  0004A8  0EFF               	movlw	high STR_22
  1928  0004AA  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1929  0004AC  ECDF  F00A         	call	_printf	;wreg free
  1930                           
  1931                           ;main.c: 137:                     break;
  1932  0004B0  EF65  F000         	goto	l2934
  1933  0004B4                     l3014:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;main.c: 143:                     for (i = 0; i < 40; i++) printf("\n");
  1937  0004B4  0E00               	movlw	0
  1938  0004B6  0101               	movlb	1	; () banked
  1939  0004B8  6F8A               	movwf	(main@i+1)& (0+255),b
  1940  0004BA  0E00               	movlw	0
  1941  0004BC  6F89               	movwf	main@i& (0+255),b
  1942  0004BE                     l3016:
  1943                           
  1944                           ; BSR set to: 1
  1945  0004BE  518A               	movf	(main@i+1)& (0+255),w,b
  1946  0004C0  E109               	bnz	u2380
  1947  0004C2  0E28               	movlw	40
  1948  0004C4  5D89               	subwf	main@i& (0+255),w,b
  1949  0004C6  A0D8               	btfss	status,0,c
  1950  0004C8  EF68  F002         	goto	u2381
  1951  0004CC  EF6A  F002         	goto	u2380
  1952  0004D0                     u2381:
  1953  0004D0  EF6C  F002         	goto	l3020
  1954  0004D4                     u2380:
  1955  0004D4  EF78  F002         	goto	l60
  1956  0004D8                     l3020:
  1957                           
  1958                           ; BSR set to: 1
  1959  0004D8  0E81               	movlw	low (STR_5+50)
  1960  0004DA  0100               	movlb	0	; () banked
  1961  0004DC  6F81               	movwf	printf@fmt& (0+255),b
  1962  0004DE  0EFE               	movlw	high (STR_5+50)
  1963  0004E0  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1964  0004E2  ECDF  F00A         	call	_printf	;wreg free
  1965  0004E6  0101               	movlb	1	; () banked
  1966  0004E8  4B89               	infsnz	main@i& (0+255),f,b
  1967  0004EA  2B8A               	incf	(main@i+1)& (0+255),f,b
  1968  0004EC  EF5F  F002         	goto	l3016
  1969  0004F0                     l60:
  1970                           
  1971                           ; BSR set to: 1
  1972  0004F0  00FF               	reset		;# 
  1973                           
  1974                           ;main.c: 145:                     break;
  1975  0004F2  EF65  F000         	goto	l2934
  1976  0004F6                     l3026:
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;main.c: 151:                     for (i = 0; i < 40; i++) printf("\n>");
  1980  0004F6  0E00               	movlw	0
  1981  0004F8  0101               	movlb	1	; () banked
  1982  0004FA  6F8A               	movwf	(main@i+1)& (0+255),b
  1983  0004FC  0E00               	movlw	0
  1984  0004FE  6F89               	movwf	main@i& (0+255),b
  1985  000500                     l3028:
  1986                           
  1987                           ; BSR set to: 1
  1988  000500  518A               	movf	(main@i+1)& (0+255),w,b
  1989  000502  E109               	bnz	u2390
  1990  000504  0E28               	movlw	40
  1991  000506  5D89               	subwf	main@i& (0+255),w,b
  1992  000508  A0D8               	btfss	status,0,c
  1993  00050A  EF89  F002         	goto	u2391
  1994  00050E  EF8B  F002         	goto	u2390
  1995  000512                     u2391:
  1996  000512  EF8D  F002         	goto	l3032
  1997  000516                     u2390:
  1998  000516  EF65  F000         	goto	l2934
  1999  00051A                     l3032:
  2000                           
  2001                           ; BSR set to: 1
  2002  00051A  0EF5               	movlw	low (STR_22+3)
  2003  00051C  0100               	movlb	0	; () banked
  2004  00051E  6F81               	movwf	printf@fmt& (0+255),b
  2005  000520  0EFF               	movlw	high (STR_22+3)
  2006  000522  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2007  000524  ECDF  F00A         	call	_printf	;wreg free
  2008  000528  0101               	movlb	1	; () banked
  2009  00052A  4B89               	infsnz	main@i& (0+255),f,b
  2010  00052C  2B8A               	incf	(main@i+1)& (0+255),f,b
  2011  00052E  EF80  F002         	goto	l3028
  2012  000532                     l3038:
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;main.c: 155:                     thresholdRange += 5;
  2016  000532  0E05               	movlw	5
  2017  000534  0101               	movlb	1	; () banked
  2018  000536  2793               	addwf	_thresholdRange& (0+255),f,b
  2019  000538  0E00               	movlw	0
  2020  00053A  2394               	addwfc	(_thresholdRange+1)& (0+255),f,b
  2021  00053C                     
  2022                           ; BSR set to: 1
  2023                           ;main.c: 156:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRan
      +                          ge, 128 + thresholdRange);
  2024  00053C  0E43               	movlw	low STR_25
  2025  00053E  0100               	movlb	0	; () banked
  2026  000540  6F81               	movwf	printf@fmt& (0+255),b
  2027  000542  0EFF               	movlw	high STR_25
  2028  000544  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2029  000546  0101               	movlb	1	; () banked
  2030  000548  5193               	movf	_thresholdRange& (0+255),w,b
  2031  00054A  0880               	sublw	128
  2032  00054C  0100               	movlb	0	; () banked
  2033  00054E  6F83               	movwf	(?_printf+2)& (0+255),b
  2034  000550  0101               	movlb	1	; () banked
  2035  000552  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  2036  000554  A0D8               	btfss	status,0,c
  2037  000556  2AE8               	incf	wreg,f,c
  2038  000558  0800               	sublw	0
  2039  00055A  0100               	movlb	0	; () banked
  2040  00055C  6F84               	movwf	(?_printf+3)& (0+255),b
  2041  00055E  0E80               	movlw	128
  2042  000560  0101               	movlb	1	; () banked
  2043  000562  2593               	addwf	_thresholdRange& (0+255),w,b
  2044  000564  0100               	movlb	0	; () banked
  2045  000566  6F85               	movwf	(?_printf+4)& (0+255),b
  2046  000568  0E00               	movlw	0
  2047  00056A  0101               	movlb	1	; () banked
  2048  00056C  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2049  00056E  0100               	movlb	0	; () banked
  2050  000570  6F86               	movwf	(?_printf+5)& (0+255),b
  2051  000572  ECDF  F00A         	call	_printf	;wreg free
  2052                           
  2053                           ;main.c: 157:                     break;
  2054  000576  EF65  F000         	goto	l2934
  2055  00057A                     l3042:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;main.c: 159:                     if(thresholdRange > 0){
  2059  00057A  0101               	movlb	1	; () banked
  2060  00057C  5193               	movf	_thresholdRange& (0+255),w,b
  2061  00057E  1194               	iorwf	(_thresholdRange+1)& (0+255),w,b
  2062  000580  B4D8               	btfsc	status,2,c
  2063  000582  EFC5  F002         	goto	u2401
  2064  000586  EFC7  F002         	goto	u2400
  2065  00058A                     u2401:
  2066  00058A  EFEA  F002         	goto	l3048
  2067  00058E                     u2400:
  2068  00058E                     
  2069                           ; BSR set to: 1
  2070                           ;main.c: 160:                         thresholdRange -= 5;
  2071  00058E  0E05               	movlw	5
  2072  000590  5F93               	subwf	_thresholdRange& (0+255),f,b
  2073  000592  0E00               	movlw	0
  2074  000594  5B94               	subwfb	(_thresholdRange+1)& (0+255),f,b
  2075  000596                     
  2076                           ; BSR set to: 1
  2077                           ;main.c: 161:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRan
      +                          ge, 128 + thresholdRange);
  2078  000596  0E43               	movlw	low STR_25
  2079  000598  0100               	movlb	0	; () banked
  2080  00059A  6F81               	movwf	printf@fmt& (0+255),b
  2081  00059C  0EFF               	movlw	high STR_25
  2082  00059E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2083  0005A0  0101               	movlb	1	; () banked
  2084  0005A2  5193               	movf	_thresholdRange& (0+255),w,b
  2085  0005A4  0880               	sublw	128
  2086  0005A6  0100               	movlb	0	; () banked
  2087  0005A8  6F83               	movwf	(?_printf+2)& (0+255),b
  2088  0005AA  0101               	movlb	1	; () banked
  2089  0005AC  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  2090  0005AE  A0D8               	btfss	status,0,c
  2091  0005B0  2AE8               	incf	wreg,f,c
  2092  0005B2  0800               	sublw	0
  2093  0005B4  0100               	movlb	0	; () banked
  2094  0005B6  6F84               	movwf	(?_printf+3)& (0+255),b
  2095  0005B8  0E80               	movlw	128
  2096  0005BA  0101               	movlb	1	; () banked
  2097  0005BC  2593               	addwf	_thresholdRange& (0+255),w,b
  2098  0005BE  0100               	movlb	0	; () banked
  2099  0005C0  6F85               	movwf	(?_printf+4)& (0+255),b
  2100  0005C2  0E00               	movlw	0
  2101  0005C4  0101               	movlb	1	; () banked
  2102  0005C6  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2103  0005C8  0100               	movlb	0	; () banked
  2104  0005CA  6F86               	movwf	(?_printf+5)& (0+255),b
  2105  0005CC  ECDF  F00A         	call	_printf	;wreg free
  2106                           
  2107                           ;main.c: 162:                     }
  2108  0005D0  EF65  F000         	goto	l2934
  2109  0005D4                     l3048:
  2110                           
  2111                           ; BSR set to: 1
  2112                           ;main.c: 164:                         printf("Volume range: %d - %d\r\n", 128 - threshol
      +                          dRange, 128 + thresholdRange);
  2113  0005D4  0E43               	movlw	low STR_25
  2114  0005D6  0100               	movlb	0	; () banked
  2115  0005D8  6F81               	movwf	printf@fmt& (0+255),b
  2116  0005DA  0EFF               	movlw	high STR_25
  2117  0005DC  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2118  0005DE  0101               	movlb	1	; () banked
  2119  0005E0  5193               	movf	_thresholdRange& (0+255),w,b
  2120  0005E2  0880               	sublw	128
  2121  0005E4  0100               	movlb	0	; () banked
  2122  0005E6  6F83               	movwf	(?_printf+2)& (0+255),b
  2123  0005E8  0101               	movlb	1	; () banked
  2124  0005EA  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  2125  0005EC  A0D8               	btfss	status,0,c
  2126  0005EE  2AE8               	incf	wreg,f,c
  2127  0005F0  0800               	sublw	0
  2128  0005F2  0100               	movlb	0	; () banked
  2129  0005F4  6F84               	movwf	(?_printf+3)& (0+255),b
  2130  0005F6  0E80               	movlw	128
  2131  0005F8  0101               	movlb	1	; () banked
  2132  0005FA  2593               	addwf	_thresholdRange& (0+255),w,b
  2133  0005FC  0100               	movlb	0	; () banked
  2134  0005FE  6F85               	movwf	(?_printf+4)& (0+255),b
  2135  000600  0E00               	movlw	0
  2136  000602  0101               	movlb	1	; () banked
  2137  000604  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  2138  000606  0100               	movlb	0	; () banked
  2139  000608  6F86               	movwf	(?_printf+5)& (0+255),b
  2140  00060A  ECDF  F00A         	call	_printf	;wreg free
  2141                           
  2142                           ;main.c: 165:                         printf("Threshold at minimum\r\n");
  2143  00060E  0E73               	movlw	low STR_28
  2144  000610  0100               	movlb	0	; () banked
  2145  000612  6F81               	movwf	printf@fmt& (0+255),b
  2146  000614  0EFF               	movlw	high STR_28
  2147  000616  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2148  000618  ECDF  F00A         	call	_printf	;wreg free
  2149  00061C  EF65  F000         	goto	l2934
  2150  000620                     l3050:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;main.c: 171:                     fillBuffer = 1;
  2154  000620  0E01               	movlw	1
  2155  000622  6E50               	movwf	_fillBuffer^0,c
  2156                           
  2157                           ;main.c: 172:                     break;
  2158  000624  EF65  F000         	goto	l2934
  2159  000628                     l3052:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;main.c: 210:                     printf("Unknown key %c\r\n", cmd);
  2163  000628  0E9F               	movlw	low STR_29
  2164  00062A  6F81               	movwf	printf@fmt& (0+255),b
  2165  00062C  0EFF               	movlw	high STR_29
  2166  00062E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  2167  000630  C186  F083         	movff	main@cmd,?_printf+2
  2168  000634  6B84               	clrf	(?_printf+3)& (0+255),b
  2169  000636  ECDF  F00A         	call	_printf	;wreg free
  2170                           
  2171                           ;main.c: 211:                     break;
  2172  00063A  EF65  F000         	goto	l2934
  2173  00063E                     l3056:
  2174                           
  2175                           ; BSR set to: 1
  2176  00063E  5186               	movf	main@cmd& (0+255),w,b
  2177  000640  0100               	movlb	0	; () banked
  2178  000642  6F8D               	movwf	??_main& (0+255),b
  2179  000644  6B8E               	clrf	(??_main+1)& (0+255),b
  2180                           
  2181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2182                           ; Switch size 1, requested type "simple"
  2183                           ; Number of cases is 1, Range of values is 0 to 0
  2184                           ; switch strategies available:
  2185                           ; Name         Instructions Cycles
  2186                           ; simple_byte            4     3 (average)
  2187                           ;	Chosen strategy is simple_byte
  2188  000646  518E               	movf	(??_main+1)& (0+255),w,b
  2189  000648  0A00               	xorlw	0	; case 0
  2190  00064A  B4D8               	btfsc	status,2,c
  2191  00064C  EF2A  F003         	goto	l3114
  2192  000650  EF14  F003         	goto	l3052
  2193  000654                     l3114:
  2194                           
  2195                           ; BSR set to: 0
  2196                           ; Switch size 1, requested type "simple"
  2197                           ; Number of cases is 7, Range of values is 63 to 122
  2198                           ; switch strategies available:
  2199                           ; Name         Instructions Cycles
  2200                           ; simple_byte           22    12 (average)
  2201                           ;	Chosen strategy is simple_byte
  2202  000654  518D               	movf	??_main& (0+255),w,b
  2203  000656  0A3F               	xorlw	63	; case 63
  2204  000658  B4D8               	btfsc	status,2,c
  2205  00065A  EF15  F002         	goto	l3010
  2206  00065E  0A6B               	xorlw	107	; case 84
  2207  000660  B4D8               	btfsc	status,2,c
  2208  000662  EF99  F002         	goto	l3038
  2209  000666  0A0E               	xorlw	14	; case 90
  2210  000668  B4D8               	btfsc	status,2,c
  2211  00066A  EF5A  F002         	goto	l3014
  2212  00066E  0A3C               	xorlw	60	; case 102
  2213  000670  B4D8               	btfsc	status,2,c
  2214  000672  EF10  F003         	goto	l3050
  2215  000676  0A09               	xorlw	9	; case 111
  2216  000678  B4D8               	btfsc	status,2,c
  2217  00067A  EF52  F002         	goto	l3012
  2218  00067E  0A1B               	xorlw	27	; case 116
  2219  000680  B4D8               	btfsc	status,2,c
  2220  000682  EFBD  F002         	goto	l3042
  2221  000686  0A0E               	xorlw	14	; case 122
  2222  000688  B4D8               	btfsc	status,2,c
  2223  00068A  EF7B  F002         	goto	l3026
  2224  00068E  EF14  F003         	goto	l3052
  2225  000692  EF27  F000         	goto	start
  2226  000696                     __end_of_main:
  2227                           	callstack 0
  2228                           
  2229 ;; *************** function _printf *****************
  2230 ;; Defined at:
  2231 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  2234 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2235 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2236 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2237 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2238 ;;		 -> STR_13(29), STR_12(27), STR_11(15), STR_10(35), 
  2239 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2240 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2241 ;;		 -> STR_1(11), 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  ap              2   43[BANK0 ] PTR void [1]
  2244 ;;		 -> ?_printf(2), 
  2245 ;;  ret             2    0        int 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  2   33[BANK0 ] int 
  2248 ;; Registers used:
  2249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2255 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;Total ram usage:       12 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; Hardware stack levels required when called:   12
  2262 ;; This function calls:
  2263 ;;		_vfprintf
  2264 ;; This function is called by:
  2265 ;;		_main
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text1
  2270  0015BE                     __ptext1:
  2271                           	callstack 0
  2272  0015BE                     _printf:
  2273                           	callstack 18
  2274  0015BE  0E83               	movlw	low (?_printf+2)
  2275  0015C0  0100               	movlb	0	; () banked
  2276  0015C2  6F8B               	movwf	printf@ap& (0+255),b
  2277  0015C4  0E00               	movlw	high (?_printf+2)
  2278  0015C6  6F8C               	movwf	(printf@ap+1)& (0+255),b
  2279  0015C8                     
  2280                           ; BSR set to: 0
  2281  0015C8  0E00               	movlw	0
  2282  0015CA  6F7B               	movwf	vfprintf@fp& (0+255),b
  2283  0015CC  0E00               	movlw	0
  2284  0015CE  6F7C               	movwf	(vfprintf@fp+1)& (0+255),b
  2285  0015D0  C081  F07D         	movff	printf@fmt,vfprintf@fmt
  2286  0015D4  C082  F07E         	movff	printf@fmt+1,vfprintf@fmt+1
  2287  0015D8  0E8B               	movlw	low printf@ap
  2288  0015DA  6F7F               	movwf	vfprintf@ap& (0+255),b
  2289  0015DC  0E00               	movlw	high printf@ap
  2290  0015DE  6F80               	movwf	(vfprintf@ap+1)& (0+255),b
  2291  0015E0  ECA5  F009         	call	_vfprintf	;wreg free
  2292  0015E4  0012               	return		;funcret
  2293  0015E6                     __end_of_printf:
  2294                           	callstack 0
  2295                           
  2296 ;; *************** function _vfprintf *****************
  2297 ;; Defined at:
  2298 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2301 ;;		 -> NULL(0), 
  2302 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  2303 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2304 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2305 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2306 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2307 ;;		 -> STR_13(29), STR_12(27), STR_11(15), STR_10(35), 
  2308 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2309 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2310 ;;		 -> STR_1(11), 
  2311 ;;  ap              2   31[BANK0 ] PTR PTR void 
  2312 ;;		 -> printf@ap(2), 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  cfmt            2   66[COMRAM] PTR unsigned char 
  2315 ;;		 -> STR_29(17), STR_28(23), STR_27(24), STR_26(24), 
  2316 ;;		 -> STR_25(24), STR_24(3), STR_23(2), STR_22(6), 
  2317 ;;		 -> STR_21(33), STR_20(71), STR_19(43), STR_18(24), 
  2318 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(33), 
  2319 ;;		 -> STR_13(29), STR_12(27), STR_11(15), STR_10(35), 
  2320 ;;		 -> STR_9(4), STR_8(53), STR_7(4), STR_6(9), 
  2321 ;;		 -> STR_5(52), STR_4(3), STR_3(9), STR_2(25), 
  2322 ;;		 -> STR_1(11), 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  2   27[BANK0 ] int 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2332 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;Total ram usage:        8 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:   11
  2339 ;; This function calls:
  2340 ;;		_vfpfcnvrt
  2341 ;; This function is called by:
  2342 ;;		_printf
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text2
  2347  00134A                     __ptext2:
  2348                           	callstack 0
  2349  00134A                     _vfprintf:
  2350                           	callstack 18
  2351  00134A                     
  2352                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2353  00134A  C07D  F043         	movff	vfprintf@fmt,vfprintf@cfmt
  2354  00134E  C07E  F044         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2355  001352                     
  2356                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2357  001352  0E00               	movlw	0
  2358  001354  0100               	movlb	0	; () banked
  2359  001356  6F9A               	movwf	(_nout+1)& (0+255),b
  2360  001358  0E00               	movlw	0
  2361  00135A  6F99               	movwf	_nout& (0+255),b
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2364  00135C  EFC3  F009         	goto	l2904
  2365  001360                     l2902:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2369  001360  C07B  F03B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2370  001364  C07C  F03C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2371  001368  0E43               	movlw	low vfprintf@cfmt
  2372  00136A  6E3D               	movwf	vfpfcnvrt@fmt^0,c
  2373  00136C  0E00               	movlw	high vfprintf@cfmt
  2374  00136E  6E3E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2375  001370  C07F  F03F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2376  001374  C080  F040         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2377  001378  ECBC  F004         	call	_vfpfcnvrt	;wreg free
  2378  00137C  503B               	movf	?_vfpfcnvrt^0,w,c
  2379  00137E  0100               	movlb	0	; () banked
  2380  001380  2799               	addwf	_nout& (0+255),f,b
  2381  001382  503C               	movf	(?_vfpfcnvrt+1)^0,w,c
  2382  001384  239A               	addwfc	(_nout+1)& (0+255),f,b
  2383  001386                     l2904:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2387  001386  C043  FFF6         	movff	vfprintf@cfmt,tblptrl
  2388  00138A  C044  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2389  00138E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2390  00138E  6AF8               	clrf	tblptru,c
  2391  001390                     	endif
  2392  001390                     	if	0	;tblptru may be non-zero
  2393  001390                     	endif
  2394  001390  0008               	tblrd		*
  2395  001392  50F5               	movf	tablat,w,c
  2396  001394  0900               	iorlw	0
  2397  001396  A4D8               	btfss	status,2,c
  2398  001398  EFD0  F009         	goto	u2261
  2399  00139C  EFD2  F009         	goto	u2260
  2400  0013A0                     u2261:
  2401  0013A0  EFB0  F009         	goto	l2902
  2402  0013A4                     u2260:
  2403  0013A4                     
  2404                           ; BSR set to: 0
  2405                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2406  0013A4  C099  F07B         	movff	_nout,?_vfprintf
  2407  0013A8  C09A  F07C         	movff	_nout+1,?_vfprintf+1
  2408  0013AC                     
  2409                           ; BSR set to: 0
  2410  0013AC  0012               	return		;funcret
  2411  0013AE                     __end_of_vfprintf:
  2412                           	callstack 0
  2413                           
  2414 ;; *************** function _vfpfcnvrt *****************
  2415 ;; Defined at:
  2416 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  fp              2   58[COMRAM] PTR struct _IO_FILE
  2419 ;;		 -> NULL(0), 
  2420 ;;  fmt             2   60[COMRAM] PTR PTR unsigned char 
  2421 ;;		 -> vfprintf@cfmt(2), 
  2422 ;;  ap              2   62[COMRAM] PTR PTR void 
  2423 ;;		 -> printf@ap(2), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  ll              8   18[BANK0 ] long long 
  2426 ;;  llu             8    0        unsigned long long 
  2427 ;;  f               4    0        unsigned long long 
  2428 ;;  vp              3    0        PTR void 
  2429 ;;  ct              3    0        unsigned char [3]
  2430 ;;  cp              3    0        PTR unsigned char 
  2431 ;;  i               2    0        int 
  2432 ;;  done            2    0        int 
  2433 ;;  c               1   26[BANK0 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2   58[COMRAM] int 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2443 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;Total ram usage:       17 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:   10
  2450 ;; This function calls:
  2451 ;;		_ctoa
  2452 ;;		_dtoa
  2453 ;;		_fputc
  2454 ;; This function is called by:
  2455 ;;		_vfprintf
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text3
  2460  000978                     __ptext3:
  2461                           	callstack 0
  2462  000978                     _vfpfcnvrt:
  2463                           	callstack 18
  2464  000978                     
  2465                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2466  000978  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2467  00097C  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2468  000980  CFDE FFF6          	movff	postinc2,tblptrl
  2469  000984  CFDD FFF7          	movff	postdec2,tblptrh
  2470  000988                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2471  000988  6AF8               	clrf	tblptru,c
  2472  00098A                     	endif
  2473  00098A                     	if	0	;tblptru may be non-zero
  2474  00098A                     	endif
  2475  00098A  0008               	tblrd		*
  2476  00098C  50F5               	movf	tablat,w,c
  2477  00098E  0A25               	xorlw	37
  2478  000990  A4D8               	btfss	status,2,c
  2479  000992  EFCD  F004         	goto	u2211
  2480  000996  EFCF  F004         	goto	u2210
  2481  00099A                     u2211:
  2482  00099A  EFB9  F005         	goto	l2890
  2483  00099E                     u2210:
  2484  00099E                     
  2485                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2486  00099E  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2487  0009A2  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2488  0009A6  2ADE               	incf	postinc2,f,c
  2489  0009A8  0E00               	movlw	0
  2490  0009AA  22DD               	addwfc	postdec2,f,c
  2491  0009AC                     
  2492                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2493  0009AC  0E00               	movlw	0
  2494  0009AE  6E46               	movwf	(_width+1)^0,c
  2495  0009B0  0E00               	movlw	0
  2496  0009B2  6E45               	movwf	_width^0,c
  2497  0009B4  C045  F049         	movff	_width,_flags
  2498  0009B8  C046  F04A         	movff	_width+1,_flags+1
  2499  0009BC                     
  2500                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2501  0009BC  6847               	setf	_prec^0,c
  2502  0009BE  6848               	setf	(_prec+1)^0,c
  2503  0009C0                     
  2504                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2505  0009C0  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2506  0009C4  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2507  0009C8  CFDE FFF6          	movff	postinc2,tblptrl
  2508  0009CC  CFDD FFF7          	movff	postdec2,tblptrh
  2509  0009D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2510  0009D0  6AF8               	clrf	tblptru,c
  2511  0009D2                     	endif
  2512  0009D2                     	if	0	;tblptru may be non-zero
  2513  0009D2                     	endif
  2514  0009D2  0008               	tblrd		*
  2515  0009D4  50F5               	movf	tablat,w,c
  2516  0009D6  0A63               	xorlw	99
  2517  0009D8  A4D8               	btfss	status,2,c
  2518  0009DA  EFF1  F004         	goto	u2221
  2519  0009DE  EFF3  F004         	goto	u2220
  2520  0009E2                     u2221:
  2521  0009E2  EF1B  F005         	goto	l2864
  2522  0009E6                     u2220:
  2523  0009E6                     
  2524                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2525  0009E6  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2526  0009EA  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2527  0009EE  2ADE               	incf	postinc2,f,c
  2528  0009F0  0E00               	movlw	0
  2529  0009F2  22DD               	addwfc	postdec2,f,c
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2532  0009F4  C03F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2533  0009F8  C040  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2534  0009FC  CFDF F041          	movff	indf2,??_vfpfcnvrt
  2535  000A00  0E02               	movlw	2
  2536  000A02  26DE               	addwf	postinc2,f,c
  2537  000A04  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  2538  000A08  0E00               	movlw	0
  2539  000A0A  22DD               	addwfc	postdec2,f,c
  2540  000A0C  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2541  000A10  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2542  000A14  50DF               	movf	indf2,w,c
  2543  000A16  0100               	movlb	0	; () banked
  2544  000A18  6F7A               	movwf	vfpfcnvrt@c& (0+255),b
  2545  000A1A                     
  2546                           ; BSR set to: 0
  2547                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2548  000A1A  C03B  F017         	movff	vfpfcnvrt@fp,ctoa@fp
  2549  000A1E  C03C  F018         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2550  000A22  C07A  F019         	movff	vfpfcnvrt@c,ctoa@c
  2551  000A26  EC55  F008         	call	_ctoa	;wreg free
  2552  000A2A  C017  F03B         	movff	?_ctoa,?_vfpfcnvrt
  2553  000A2E  C018  F03C         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2554  000A32  EFD5  F005         	goto	l1101
  2555  000A36                     l2864:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2558  000A36  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2559  000A3A  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2560  000A3E  CFDE FFF6          	movff	postinc2,tblptrl
  2561  000A42  CFDD FFF7          	movff	postdec2,tblptrh
  2562  000A46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2563  000A46  6AF8               	clrf	tblptru,c
  2564  000A48                     	endif
  2565  000A48                     	if	0	;tblptru may be non-zero
  2566  000A48                     	endif
  2567  000A48  0008               	tblrd		*
  2568  000A4A  50F5               	movf	tablat,w,c
  2569  000A4C  0A64               	xorlw	100
  2570  000A4E  B4D8               	btfsc	status,2,c
  2571  000A50  EF2C  F005         	goto	u2231
  2572  000A54  EF2E  F005         	goto	u2230
  2573  000A58                     u2231:
  2574  000A58  EF41  F005         	goto	l2868
  2575  000A5C                     u2230:
  2576  000A5C  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2577  000A60  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2578  000A64  CFDE FFF6          	movff	postinc2,tblptrl
  2579  000A68  CFDD FFF7          	movff	postdec2,tblptrh
  2580  000A6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2581  000A6C  6AF8               	clrf	tblptru,c
  2582  000A6E                     	endif
  2583  000A6E                     	if	0	;tblptru may be non-zero
  2584  000A6E                     	endif
  2585  000A6E  0008               	tblrd		*
  2586  000A70  50F5               	movf	tablat,w,c
  2587  000A72  0A69               	xorlw	105
  2588  000A74  A4D8               	btfss	status,2,c
  2589  000A76  EF3F  F005         	goto	u2241
  2590  000A7A  EF41  F005         	goto	u2240
  2591  000A7E                     u2241:
  2592  000A7E  EF82  F005         	goto	l2874
  2593  000A82                     u2240:
  2594  000A82                     l2868:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2597  000A82  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2598  000A86  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2599  000A8A  2ADE               	incf	postinc2,f,c
  2600  000A8C  0E00               	movlw	0
  2601  000A8E  22DD               	addwfc	postdec2,f,c
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2604  000A90  C03F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2605  000A94  C040  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2606  000A98  CFDF F041          	movff	indf2,??_vfpfcnvrt
  2607  000A9C  0E02               	movlw	2
  2608  000A9E  26DE               	addwf	postinc2,f,c
  2609  000AA0  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  2610  000AA4  0E00               	movlw	0
  2611  000AA6  22DD               	addwfc	postdec2,f,c
  2612  000AA8  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2613  000AAC  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2614  000AB0  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
  2615  000AB4  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
  2616  000AB8  0100               	movlb	0	; () banked
  2617  000ABA  0E00               	movlw	0
  2618  000ABC  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2619  000ABE  0EFF               	movlw	-1
  2620  000AC0  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2621  000AC2  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2622  000AC4  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2623  000AC6  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2624  000AC8  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2625  000ACA  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2626  000ACC                     
  2627                           ; BSR set to: 0
  2628                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2629  000ACC  C03B  F029         	movff	vfpfcnvrt@fp,dtoa@fp
  2630  000AD0  C03C  F02A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2631  000AD4  C072  F02B         	movff	vfpfcnvrt@ll,dtoa@d
  2632  000AD8  C073  F02C         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2633  000ADC  C074  F02D         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2634  000AE0  C075  F02E         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2635  000AE4  C076  F02F         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2636  000AE8  C077  F030         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2637  000AEC  C078  F031         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2638  000AF0  C079  F032         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2639  000AF4  EC4B  F003         	call	_dtoa	;wreg free
  2640  000AF8  C029  F03B         	movff	?_dtoa,?_vfpfcnvrt
  2641  000AFC  C02A  F03C         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2642  000B00  EFD5  F005         	goto	l1101
  2643  000B04                     l2874:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2646  000B04  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2647  000B08  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2648  000B0C  CFDE FFF6          	movff	postinc2,tblptrl
  2649  000B10  CFDD FFF7          	movff	postdec2,tblptrh
  2650  000B14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2651  000B14  6AF8               	clrf	tblptru,c
  2652  000B16                     	endif
  2653  000B16                     	if	0	;tblptru may be non-zero
  2654  000B16                     	endif
  2655  000B16  0008               	tblrd		*
  2656  000B18  50F5               	movf	tablat,w,c
  2657  000B1A  0A25               	xorlw	37
  2658  000B1C  A4D8               	btfss	status,2,c
  2659  000B1E  EF93  F005         	goto	u2251
  2660  000B22  EF95  F005         	goto	u2250
  2661  000B26                     u2251:
  2662  000B26  EFAC  F005         	goto	l2884
  2663  000B2A                     u2250:
  2664  000B2A                     
  2665                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2666  000B2A  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2667  000B2E  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2668  000B32  2ADE               	incf	postinc2,f,c
  2669  000B34  0E00               	movlw	0
  2670  000B36  22DD               	addwfc	postdec2,f,c
  2671  000B38                     
  2672                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2673  000B38  0E00               	movlw	0
  2674  000B3A  6E0F               	movwf	(fputc@c+1)^0,c
  2675  000B3C  0E25               	movlw	37
  2676  000B3E  6E0E               	movwf	fputc@c^0,c
  2677  000B40  C03B  F010         	movff	vfpfcnvrt@fp,fputc@fp
  2678  000B44  C03C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2679  000B48  EC20  F009         	call	_fputc	;wreg free
  2680  000B4C                     l2880:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2683  000B4C  0E00               	movlw	0
  2684  000B4E  6E3C               	movwf	(?_vfpfcnvrt+1)^0,c
  2685  000B50  0E01               	movlw	1
  2686  000B52  6E3B               	movwf	?_vfpfcnvrt^0,c
  2687  000B54  EFD5  F005         	goto	l1101
  2688  000B58                     l2884:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2691  000B58  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2692  000B5C  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2693  000B60  2ADE               	incf	postinc2,f,c
  2694  000B62  0E00               	movlw	0
  2695  000B64  22DD               	addwfc	postdec2,f,c
  2696  000B66                     
  2697                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2698  000B66  0E00               	movlw	0
  2699  000B68  6E3C               	movwf	(?_vfpfcnvrt+1)^0,c
  2700  000B6A  0E00               	movlw	0
  2701  000B6C  6E3B               	movwf	?_vfpfcnvrt^0,c
  2702  000B6E  EFD5  F005         	goto	l1101
  2703  000B72                     l2890:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2706  000B72  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2707  000B76  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2708  000B7A  CFDE FFF6          	movff	postinc2,tblptrl
  2709  000B7E  CFDD FFF7          	movff	postdec2,tblptrh
  2710  000B82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2711  000B82  6AF8               	clrf	tblptru,c
  2712  000B84                     	endif
  2713  000B84                     	if	0	;tblptru may be non-zero
  2714  000B84                     	endif
  2715  000B84  0008               	tblrd		*
  2716  000B86  50F5               	movf	tablat,w,c
  2717  000B88  6E0E               	movwf	fputc@c^0,c
  2718  000B8A  6A0F               	clrf	(fputc@c+1)^0,c
  2719  000B8C  C03B  F010         	movff	vfpfcnvrt@fp,fputc@fp
  2720  000B90  C03C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2721  000B94  EC20  F009         	call	_fputc	;wreg free
  2722  000B98                     
  2723                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2724  000B98  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2725  000B9C  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2726  000BA0  2ADE               	incf	postinc2,f,c
  2727  000BA2  0E00               	movlw	0
  2728  000BA4  22DD               	addwfc	postdec2,f,c
  2729  000BA6  EFA6  F005         	goto	l2880
  2730  000BAA                     l1101:
  2731  000BAA  0012               	return		;funcret
  2732  000BAC                     __end_of_vfpfcnvrt:
  2733                           	callstack 0
  2734                           
  2735 ;; *************** function _dtoa *****************
  2736 ;; Defined at:
  2737 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  2740 ;;		 -> NULL(0), 
  2741 ;;  d               8   42[COMRAM] long long 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  n               8    8[BANK0 ] long long 
  2744 ;;  i               2   16[BANK0 ] int 
  2745 ;;  s               2    6[BANK0 ] int 
  2746 ;;  w               2    4[BANK0 ] int 
  2747 ;;  p               2    2[BANK0 ] int 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  2   40[COMRAM] int 
  2750 ;; Registers used:
  2751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2757 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Totals:        18      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;Total ram usage:       36 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    9
  2764 ;; This function calls:
  2765 ;;		___aodiv
  2766 ;;		___aomod
  2767 ;;		_abs
  2768 ;;		_pad
  2769 ;; This function is called by:
  2770 ;;		_vfpfcnvrt
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text4
  2775  000696                     __ptext4:
  2776                           	callstack 0
  2777  000696                     _dtoa:
  2778                           	callstack 18
  2779  000696                     
  2780                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2781  000696  C02B  F068         	movff	dtoa@d,dtoa@n
  2782  00069A  C02C  F069         	movff	dtoa@d+1,dtoa@n+1
  2783  00069E  C02D  F06A         	movff	dtoa@d+2,dtoa@n+2
  2784  0006A2  C02E  F06B         	movff	dtoa@d+3,dtoa@n+3
  2785  0006A6  C02F  F06C         	movff	dtoa@d+4,dtoa@n+4
  2786  0006AA  C030  F06D         	movff	dtoa@d+5,dtoa@n+5
  2787  0006AE  C031  F06E         	movff	dtoa@d+6,dtoa@n+6
  2788  0006B2  C032  F06F         	movff	dtoa@d+7,dtoa@n+7
  2789  0006B6                     
  2790                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2791  0006B6  0100               	movlb	0	; () banked
  2792  0006B8  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
  2793  0006BA  EF61  F003         	goto	u2061
  2794  0006BE  EF64  F003         	goto	u2060
  2795  0006C2                     u2061:
  2796  0006C2  0E01               	movlw	1
  2797  0006C4  EF65  F003         	goto	u2070
  2798  0006C8                     u2060:
  2799  0006C8  0E00               	movlw	0
  2800  0006CA                     u2070:
  2801  0006CA  6F66               	movwf	dtoa@s& (0+255),b
  2802  0006CC  6B67               	clrf	(dtoa@s+1)& (0+255),b
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2805  0006CE  5166               	movf	dtoa@s& (0+255),w,b
  2806  0006D0  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  2807  0006D2  B4D8               	btfsc	status,2,c
  2808  0006D4  EF6E  F003         	goto	u2081
  2809  0006D8  EF70  F003         	goto	u2080
  2810  0006DC                     u2081:
  2811  0006DC  EF80  F003         	goto	l2792
  2812  0006E0                     u2080:
  2813  0006E0                     
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2816  0006E0  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
  2817  0006E2  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
  2818  0006E4  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
  2819  0006E6  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
  2820  0006E8  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
  2821  0006EA  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
  2822  0006EC  1F69               	comf	(dtoa@n+1)& (0+255),f,b
  2823  0006EE  6D68               	negf	dtoa@n& (0+255),b
  2824  0006F0  0E00               	movlw	0
  2825  0006F2  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
  2826  0006F4  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
  2827  0006F6  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
  2828  0006F8  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
  2829  0006FA  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
  2830  0006FC  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
  2831  0006FE  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
  2832  000700                     l2792:
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2836  000700  BE48               	btfsc	(_prec+1)^0,7,c
  2837  000702  EF85  F003         	goto	u2091
  2838  000706  EF87  F003         	goto	u2090
  2839  00070A                     u2091:
  2840  00070A  EF88  F003         	goto	l2796
  2841  00070E                     u2090:
  2842  00070E                     
  2843                           ; BSR set to: 0
  2844                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2845  00070E  9249               	bcf	_flags^0,1,c
  2846  000710                     l2796:
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2850  000710  BE48               	btfsc	(_prec+1)^0,7,c
  2851  000712  EF95  F003         	goto	u2100
  2852  000716  5048               	movf	(_prec+1)^0,w,c
  2853  000718  E106               	bnz	u2101
  2854  00071A  0447               	decf	_prec^0,w,c
  2855  00071C  B0D8               	btfsc	status,0,c
  2856  00071E  EF93  F003         	goto	u2101
  2857  000722  EF95  F003         	goto	u2100
  2858  000726                     u2101:
  2859  000726  EF9B  F003         	goto	l1076
  2860  00072A                     u2100:
  2861  00072A                     
  2862                           ; BSR set to: 0
  2863  00072A  0E00               	movlw	0
  2864  00072C  6F63               	movwf	(dtoa@p+1)& (0+255),b
  2865  00072E  0E01               	movlw	1
  2866  000730  6F62               	movwf	dtoa@p& (0+255),b
  2867  000732  EF9F  F003         	goto	l1078
  2868  000736                     l1076:
  2869                           
  2870                           ; BSR set to: 0
  2871  000736  C047  F062         	movff	_prec,dtoa@p
  2872  00073A  C048  F063         	movff	_prec+1,dtoa@p+1
  2873  00073E                     l1078:
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2877  00073E  C045  F064         	movff	_width,dtoa@w
  2878  000742  C046  F065         	movff	_width+1,dtoa@w+1
  2879  000746                     
  2880                           ; BSR set to: 0
  2881                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2882  000746  5166               	movf	dtoa@s& (0+255),w,b
  2883  000748  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  2884  00074A  A4D8               	btfss	status,2,c
  2885  00074C  EFAA  F003         	goto	u2111
  2886  000750  EFAC  F003         	goto	u2110
  2887  000754                     u2111:
  2888  000754  EFB3  F003         	goto	l2804
  2889  000758                     u2110:
  2890  000758                     
  2891                           ; BSR set to: 0
  2892  000758  A449               	btfss	_flags^0,2,c
  2893  00075A  EFB1  F003         	goto	u2121
  2894  00075E  EFB3  F003         	goto	u2120
  2895  000762                     u2121:
  2896  000762  EFB6  F003         	goto	l2806
  2897  000766                     u2120:
  2898  000766                     l2804:
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  2902  000766  0764               	decf	dtoa@w& (0+255),f,b
  2903  000768  A0D8               	btfss	status,0,c
  2904  00076A  0765               	decf	(dtoa@w+1)& (0+255),f,b
  2905  00076C                     l2806:
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2909  00076C  0E00               	movlw	0
  2910  00076E  6F71               	movwf	(dtoa@i+1)& (0+255),b
  2911  000770  0E1F               	movlw	31
  2912  000772  6F70               	movwf	dtoa@i& (0+255),b
  2913  000774                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2916  000774  0E00               	movlw	0
  2917  000776  6FC5               	movwf	(_dbuf+31)& (0+255),b
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2920  000778  EF3B  F004         	goto	l2820
  2921  00077C                     l2810:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  2925  00077C  0770               	decf	dtoa@i& (0+255),f,b
  2926  00077E  A0D8               	btfss	status,0,c
  2927  000780  0771               	decf	(dtoa@i+1)& (0+255),f,b
  2928  000782                     
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2931  000782  0EA6               	movlw	low _dbuf
  2932  000784  2570               	addwf	dtoa@i& (0+255),w,b
  2933  000786  6ED9               	movwf	fsr2l,c
  2934  000788  0E00               	movlw	high _dbuf
  2935  00078A  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  2936  00078C  6EDA               	movwf	fsr2h,c
  2937  00078E  C068  F00C         	movff	dtoa@n,___aomod@dividend
  2938  000792  C069  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  2939  000796  C06A  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  2940  00079A  C06B  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  2941  00079E  C06C  F010         	movff	dtoa@n+4,___aomod@dividend+4
  2942  0007A2  C06D  F011         	movff	dtoa@n+5,___aomod@dividend+5
  2943  0007A6  C06E  F012         	movff	dtoa@n+6,___aomod@dividend+6
  2944  0007AA  C06F  F013         	movff	dtoa@n+7,___aomod@dividend+7
  2945  0007AE  0E0A               	movlw	10
  2946  0007B0  6E14               	movwf	___aomod@divisor^0,c
  2947  0007B2  0E00               	movlw	0
  2948  0007B4  6E15               	movwf	(___aomod@divisor+1)^0,c
  2949  0007B6  0E00               	movlw	0
  2950  0007B8  6E16               	movwf	(___aomod@divisor+2)^0,c
  2951  0007BA  0E00               	movlw	0
  2952  0007BC  6E17               	movwf	(___aomod@divisor+3)^0,c
  2953  0007BE  0E00               	movlw	0
  2954  0007C0  6E18               	movwf	(___aomod@divisor+4)^0,c
  2955  0007C2  0E00               	movlw	0
  2956  0007C4  6E19               	movwf	(___aomod@divisor+5)^0,c
  2957  0007C6  0E00               	movlw	0
  2958  0007C8  6E1A               	movwf	(___aomod@divisor+6)^0,c
  2959  0007CA  0E00               	movlw	0
  2960  0007CC  6E1B               	movwf	(___aomod@divisor+7)^0,c
  2961  0007CE  EC9A  F006         	call	___aomod	;wreg free
  2962  0007D2  C00C  F033         	movff	?___aomod,??_dtoa
  2963  0007D6  C00D  F034         	movff	?___aomod+1,??_dtoa+1
  2964  0007DA  C00E  F035         	movff	?___aomod+2,??_dtoa+2
  2965  0007DE  C00F  F036         	movff	?___aomod+3,??_dtoa+3
  2966  0007E2  C010  F037         	movff	?___aomod+4,??_dtoa+4
  2967  0007E6  C011  F038         	movff	?___aomod+5,??_dtoa+5
  2968  0007EA  C012  F039         	movff	?___aomod+6,??_dtoa+6
  2969  0007EE  C013  F03A         	movff	?___aomod+7,??_dtoa+7
  2970  0007F2  C033  F01E         	movff	??_dtoa,abs@a
  2971  0007F6  C035  F01F         	movff	??_dtoa+2,abs@a+1
  2972  0007FA  EC22  F00A         	call	_abs	;wreg free
  2973  0007FE  501E               	movf	?_abs^0,w,c
  2974  000800  0F30               	addlw	48
  2975  000802  6EDF               	movwf	indf2,c
  2976  000804                     
  2977                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2978  000804  0100               	movlb	0	; () banked
  2979  000806  0762               	decf	dtoa@p& (0+255),f,b
  2980  000808  A0D8               	btfss	status,0,c
  2981  00080A  0763               	decf	(dtoa@p+1)& (0+255),f,b
  2982  00080C                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2985  00080C  0764               	decf	dtoa@w& (0+255),f,b
  2986  00080E  A0D8               	btfss	status,0,c
  2987  000810  0765               	decf	(dtoa@w+1)& (0+255),f,b
  2988  000812                     
  2989                           ; BSR set to: 0
  2990                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2991  000812  C068  F00C         	movff	dtoa@n,___aodiv@dividend
  2992  000816  C069  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  2993  00081A  C06A  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  2994  00081E  C06B  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  2995  000822  C06C  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  2996  000826  C06D  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  2997  00082A  C06E  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  2998  00082E  C06F  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  2999  000832  0E0A               	movlw	10
  3000  000834  6E14               	movwf	___aodiv@divisor^0,c
  3001  000836  0E00               	movlw	0
  3002  000838  6E15               	movwf	(___aodiv@divisor+1)^0,c
  3003  00083A  0E00               	movlw	0
  3004  00083C  6E16               	movwf	(___aodiv@divisor+2)^0,c
  3005  00083E  0E00               	movlw	0
  3006  000840  6E17               	movwf	(___aodiv@divisor+3)^0,c
  3007  000842  0E00               	movlw	0
  3008  000844  6E18               	movwf	(___aodiv@divisor+4)^0,c
  3009  000846  0E00               	movlw	0
  3010  000848  6E19               	movwf	(___aodiv@divisor+5)^0,c
  3011  00084A  0E00               	movlw	0
  3012  00084C  6E1A               	movwf	(___aodiv@divisor+6)^0,c
  3013  00084E  0E00               	movlw	0
  3014  000850  6E1B               	movwf	(___aodiv@divisor+7)^0,c
  3015  000852  ECD6  F005         	call	___aodiv	;wreg free
  3016  000856  C00C  F068         	movff	?___aodiv,dtoa@n
  3017  00085A  C00D  F069         	movff	?___aodiv+1,dtoa@n+1
  3018  00085E  C00E  F06A         	movff	?___aodiv+2,dtoa@n+2
  3019  000862  C00F  F06B         	movff	?___aodiv+3,dtoa@n+3
  3020  000866  C010  F06C         	movff	?___aodiv+4,dtoa@n+4
  3021  00086A  C011  F06D         	movff	?___aodiv+5,dtoa@n+5
  3022  00086E  C012  F06E         	movff	?___aodiv+6,dtoa@n+6
  3023  000872  C013  F06F         	movff	?___aodiv+7,dtoa@n+7
  3024  000876                     l2820:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3027  000876  0100               	movlb	0	; () banked
  3028  000878  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
  3029  00087A  EF47  F004         	goto	u2131
  3030  00087E  5171               	movf	(dtoa@i+1)& (0+255),w,b
  3031  000880  E108               	bnz	u2130
  3032  000882  0570               	decf	dtoa@i& (0+255),w,b
  3033  000884  A0D8               	btfss	status,0,c
  3034  000886  EF47  F004         	goto	u2131
  3035  00088A  EF49  F004         	goto	u2130
  3036  00088E                     u2131:
  3037  00088E  EF79  F004         	goto	l2830
  3038  000892                     u2130:
  3039  000892                     
  3040                           ; BSR set to: 0
  3041  000892  5168               	movf	dtoa@n& (0+255),w,b
  3042  000894  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
  3043  000896  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
  3044  000898  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
  3045  00089A  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
  3046  00089C  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
  3047  00089E  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
  3048  0008A0  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
  3049  0008A2  A4D8               	btfss	status,2,c
  3050  0008A4  EF56  F004         	goto	u2141
  3051  0008A8  EF58  F004         	goto	u2140
  3052  0008AC                     u2141:
  3053  0008AC  EFBE  F003         	goto	l2810
  3054  0008B0                     u2140:
  3055  0008B0                     
  3056                           ; BSR set to: 0
  3057  0008B0  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  3058  0008B2  EF65  F004         	goto	u2150
  3059  0008B6  5163               	movf	(dtoa@p+1)& (0+255),w,b
  3060  0008B8  E106               	bnz	u2151
  3061  0008BA  0562               	decf	dtoa@p& (0+255),w,b
  3062  0008BC  B0D8               	btfsc	status,0,c
  3063  0008BE  EF63  F004         	goto	u2151
  3064  0008C2  EF65  F004         	goto	u2150
  3065  0008C6                     u2151:
  3066  0008C6  EFBE  F003         	goto	l2810
  3067  0008CA                     u2150:
  3068  0008CA                     
  3069                           ; BSR set to: 0
  3070  0008CA  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  3071  0008CC  EF70  F004         	goto	u2161
  3072  0008D0  5165               	movf	(dtoa@w+1)& (0+255),w,b
  3073  0008D2  E108               	bnz	u2160
  3074  0008D4  0564               	decf	dtoa@w& (0+255),w,b
  3075  0008D6  A0D8               	btfss	status,0,c
  3076  0008D8  EF70  F004         	goto	u2161
  3077  0008DC  EF72  F004         	goto	u2160
  3078  0008E0                     u2161:
  3079  0008E0  EF79  F004         	goto	l2830
  3080  0008E4                     u2160:
  3081  0008E4                     
  3082                           ; BSR set to: 0
  3083  0008E4  B249               	btfsc	_flags^0,1,c
  3084  0008E6  EF77  F004         	goto	u2171
  3085  0008EA  EF79  F004         	goto	u2170
  3086  0008EE                     u2171:
  3087  0008EE  EFBE  F003         	goto	l2810
  3088  0008F2                     u2170:
  3089  0008F2                     l2830:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3093  0008F2  5166               	movf	dtoa@s& (0+255),w,b
  3094  0008F4  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  3095  0008F6  A4D8               	btfss	status,2,c
  3096  0008F8  EF80  F004         	goto	u2181
  3097  0008FC  EF82  F004         	goto	u2180
  3098  000900                     u2181:
  3099  000900  EF89  F004         	goto	l2834
  3100  000904                     u2180:
  3101  000904                     
  3102                           ; BSR set to: 0
  3103  000904  A449               	btfss	_flags^0,2,c
  3104  000906  EF87  F004         	goto	u2191
  3105  00090A  EF89  F004         	goto	u2190
  3106  00090E                     u2191:
  3107  00090E  EFA7  F004         	goto	l2844
  3108  000912                     u2190:
  3109  000912                     l2834:
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  3113  000912  0770               	decf	dtoa@i& (0+255),f,b
  3114  000914  A0D8               	btfss	status,0,c
  3115  000916  0771               	decf	(dtoa@i+1)& (0+255),f,b
  3116  000918                     
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3119  000918  5166               	movf	dtoa@s& (0+255),w,b
  3120  00091A  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  3121  00091C  A4D8               	btfss	status,2,c
  3122  00091E  EF93  F004         	goto	u2201
  3123  000922  EF95  F004         	goto	u2200
  3124  000926                     u2201:
  3125  000926  EF9B  F004         	goto	l2840
  3126  00092A                     u2200:
  3127  00092A                     
  3128                           ; BSR set to: 0
  3129  00092A  0E00               	movlw	0
  3130  00092C  6F61               	movwf	(_dtoa$1401+1)& (0+255),b
  3131  00092E  0E2B               	movlw	43
  3132  000930  6F60               	movwf	_dtoa$1401& (0+255),b
  3133  000932  EF9F  F004         	goto	l2842
  3134  000936                     l2840:
  3135                           
  3136                           ; BSR set to: 0
  3137  000936  0E00               	movlw	0
  3138  000938  6F61               	movwf	(_dtoa$1401+1)& (0+255),b
  3139  00093A  0E2D               	movlw	45
  3140  00093C  6F60               	movwf	_dtoa$1401& (0+255),b
  3141  00093E                     l2842:
  3142                           
  3143                           ; BSR set to: 0
  3144  00093E  0EA6               	movlw	low _dbuf
  3145  000940  2570               	addwf	dtoa@i& (0+255),w,b
  3146  000942  6ED9               	movwf	fsr2l,c
  3147  000944  0E00               	movlw	high _dbuf
  3148  000946  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  3149  000948  6EDA               	movwf	fsr2h,c
  3150  00094A  C060  FFDF         	movff	_dtoa$1401,indf2
  3151  00094E                     l2844:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3155  00094E  C029  F01E         	movff	dtoa@fp,pad@fp
  3156  000952  C02A  F01F         	movff	dtoa@fp+1,pad@fp+1
  3157  000956  0EA6               	movlw	low _dbuf
  3158  000958  2570               	addwf	dtoa@i& (0+255),w,b
  3159  00095A  6E20               	movwf	pad@buf^0,c
  3160  00095C  0E00               	movlw	high _dbuf
  3161  00095E  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  3162  000960  6E21               	movwf	(pad@buf+1)^0,c
  3163  000962  C064  F022         	movff	dtoa@w,pad@p
  3164  000966  C065  F023         	movff	dtoa@w+1,pad@p+1
  3165  00096A  ECBF  F008         	call	_pad	;wreg free
  3166  00096E  C01E  F029         	movff	?_pad,?_dtoa
  3167  000972  C01F  F02A         	movff	?_pad+1,?_dtoa+1
  3168  000976  0012               	return		;funcret
  3169  000978                     __end_of_dtoa:
  3170                           	callstack 0
  3171                           
  3172 ;; *************** function _pad *****************
  3173 ;; Defined at:
  3174 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3177 ;;		 -> NULL(0), 
  3178 ;;  buf             2   31[COMRAM] PTR unsigned char 
  3179 ;;		 -> dbuf(32), 
  3180 ;;  p               2   33[COMRAM] int 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  w               2   38[COMRAM] int 
  3183 ;;  i               2   36[COMRAM] int 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  2   29[COMRAM] int 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3193 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;Total ram usage:       11 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    8
  3200 ;; This function calls:
  3201 ;;		_fputc
  3202 ;;		_fputs
  3203 ;;		_strlen
  3204 ;; This function is called by:
  3205 ;;		_dtoa
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text5
  3210  00117E                     __ptext5:
  3211                           	callstack 0
  3212  00117E                     _pad:
  3213                           	callstack 18
  3214  00117E                     
  3215                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3216  00117E  A049               	btfss	_flags^0,0,c
  3217  001180  EFC4  F008         	goto	u1961
  3218  001184  EFC6  F008         	goto	u1960
  3219  001188                     u1961:
  3220  001188  EFD0  F008         	goto	l2736
  3221  00118C                     u1960:
  3222  00118C                     
  3223                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3224  00118C  C020  F017         	movff	pad@buf,fputs@s
  3225  001190  C021  F018         	movff	pad@buf+1,fputs@s+1
  3226  001194  C01E  F019         	movff	pad@fp,fputs@fp
  3227  001198  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  3228  00119C  EC00  F00A         	call	_fputs	;wreg free
  3229  0011A0                     l2736:
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3232  0011A0  BE23               	btfsc	(pad@p+1)^0,7,c
  3233  0011A2  EFD5  F008         	goto	u1971
  3234  0011A6  EFD7  F008         	goto	u1970
  3235  0011AA                     u1971:
  3236  0011AA  EFDD  F008         	goto	l2740
  3237  0011AE                     u1970:
  3238  0011AE  C022  F027         	movff	pad@p,pad@w
  3239  0011B2  C023  F028         	movff	pad@p+1,pad@w+1
  3240  0011B6  EFE1  F008         	goto	l1049
  3241  0011BA                     l2740:
  3242  0011BA  0E00               	movlw	0
  3243  0011BC  6E28               	movwf	(pad@w+1)^0,c
  3244  0011BE  0E00               	movlw	0
  3245  0011C0  6E27               	movwf	pad@w^0,c
  3246  0011C2                     l1049:
  3247                           
  3248                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3249  0011C2  0E00               	movlw	0
  3250  0011C4  6E26               	movwf	(pad@i+1)^0,c
  3251  0011C6  0E00               	movlw	0
  3252  0011C8  6E25               	movwf	pad@i^0,c
  3253                           
  3254                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3255  0011CA  EFF3  F008         	goto	l2746
  3256  0011CE                     l2742:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3259  0011CE  0E00               	movlw	0
  3260  0011D0  6E0F               	movwf	(fputc@c+1)^0,c
  3261  0011D2  0E20               	movlw	32
  3262  0011D4  6E0E               	movwf	fputc@c^0,c
  3263  0011D6  C01E  F010         	movff	pad@fp,fputc@fp
  3264  0011DA  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  3265  0011DE  EC20  F009         	call	_fputc	;wreg free
  3266  0011E2                     
  3267                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3268  0011E2  4A25               	infsnz	pad@i^0,f,c
  3269  0011E4  2A26               	incf	(pad@i+1)^0,f,c
  3270  0011E6                     l2746:
  3271                           
  3272                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3273  0011E6  5027               	movf	pad@w^0,w,c
  3274  0011E8  5C25               	subwf	pad@i^0,w,c
  3275  0011EA  5026               	movf	(pad@i+1)^0,w,c
  3276  0011EC  0A80               	xorlw	128
  3277  0011EE  6E24               	movwf	??_pad^0,c
  3278  0011F0  5028               	movf	(pad@w+1)^0,w,c
  3279  0011F2  0A80               	xorlw	128
  3280  0011F4  5824               	subwfb	??_pad^0,w,c
  3281  0011F6  A0D8               	btfss	status,0,c
  3282  0011F8  EF00  F009         	goto	u1981
  3283  0011FC  EF02  F009         	goto	u1980
  3284  001200                     u1981:
  3285  001200  EFE7  F008         	goto	l2742
  3286  001204                     u1980:
  3287  001204                     
  3288                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3289  001204  B049               	btfsc	_flags^0,0,c
  3290  001206  EF07  F009         	goto	u1991
  3291  00120A  EF09  F009         	goto	u1990
  3292  00120E                     u1991:
  3293  00120E  EF13  F009         	goto	l2750
  3294  001212                     u1990:
  3295  001212                     
  3296                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3297  001212  C020  F017         	movff	pad@buf,fputs@s
  3298  001216  C021  F018         	movff	pad@buf+1,fputs@s+1
  3299  00121A  C01E  F019         	movff	pad@fp,fputs@fp
  3300  00121E  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  3301  001222  EC00  F00A         	call	_fputs	;wreg free
  3302  001226                     l2750:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3305  001226  C020  F00C         	movff	pad@buf,strlen@s
  3306  00122A  C021  F00D         	movff	pad@buf+1,strlen@s+1
  3307  00122E  EC7E  F00A         	call	_strlen	;wreg free
  3308  001232  5027               	movf	pad@w^0,w,c
  3309  001234  240C               	addwf	?_strlen^0,w,c
  3310  001236  6E1E               	movwf	?_pad^0,c
  3311  001238  5028               	movf	(pad@w+1)^0,w,c
  3312  00123A  200D               	addwfc	(?_strlen+1)^0,w,c
  3313  00123C  6E1F               	movwf	(?_pad+1)^0,c
  3314  00123E  0012               	return		;funcret
  3315  001240                     __end_of_pad:
  3316                           	callstack 0
  3317                           
  3318 ;; *************** function _strlen *****************
  3319 ;; Defined at:
  3320 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3323 ;;		 -> dbuf(32), 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  a               2   13[COMRAM] PTR const unsigned char 
  3326 ;;		 -> dbuf(32), 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  2   11[COMRAM] unsigned int 
  3329 ;; Registers used:
  3330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;Total ram usage:        4 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    4
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_pad
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text6
  3351  0014FC                     __ptext6:
  3352                           	callstack 0
  3353  0014FC                     _strlen:
  3354                           	callstack 21
  3355  0014FC  C00C  F00E         	movff	strlen@s,strlen@a
  3356  001500  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  3357  001504  EF86  F00A         	goto	l2646
  3358  001508                     l2644:
  3359  001508  4A0C               	infsnz	strlen@s^0,f,c
  3360  00150A  2A0D               	incf	(strlen@s+1)^0,f,c
  3361  00150C                     l2646:
  3362  00150C  C00C  FFD9         	movff	strlen@s,fsr2l
  3363  001510  C00D  FFDA         	movff	strlen@s+1,fsr2h
  3364  001514  50DF               	movf	indf2,w,c
  3365  001516  A4D8               	btfss	status,2,c
  3366  001518  EF90  F00A         	goto	u1821
  3367  00151C  EF92  F00A         	goto	u1820
  3368  001520                     u1821:
  3369  001520  EF84  F00A         	goto	l2644
  3370  001524                     u1820:
  3371  001524  500E               	movf	strlen@a^0,w,c
  3372  001526  5C0C               	subwf	strlen@s^0,w,c
  3373  001528  6E0C               	movwf	?_strlen^0,c
  3374  00152A  500F               	movf	(strlen@a+1)^0,w,c
  3375  00152C  580D               	subwfb	(strlen@s+1)^0,w,c
  3376  00152E  6E0D               	movwf	(?_strlen+1)^0,c
  3377  001530  0012               	return		;funcret
  3378  001532                     __end_of_strlen:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function _fputs *****************
  3382 ;; Defined at:
  3383 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  s               2   22[COMRAM] PTR const unsigned char 
  3386 ;;		 -> dbuf(32), 
  3387 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  3388 ;;		 -> NULL(0), 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  i               2   27[COMRAM] int 
  3391 ;;  c               1   26[COMRAM] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  2   22[COMRAM] int 
  3394 ;; Registers used:
  3395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;Total ram usage:        7 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    7
  3408 ;; This function calls:
  3409 ;;		_fputc
  3410 ;; This function is called by:
  3411 ;;		_pad
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text7
  3416  001400                     __ptext7:
  3417                           	callstack 0
  3418  001400                     _fputs:
  3419                           	callstack 18
  3420  001400  0E00               	movlw	0
  3421  001402  6E1D               	movwf	(fputs@i+1)^0,c
  3422  001404  0E00               	movlw	0
  3423  001406  6E1C               	movwf	fputs@i^0,c
  3424  001408  EF11  F00A         	goto	l2640
  3425  00140C                     l2636:
  3426  00140C  C01B  F00E         	movff	fputs@c,fputc@c
  3427  001410  6A0F               	clrf	(fputc@c+1)^0,c
  3428  001412  C019  F010         	movff	fputs@fp,fputc@fp
  3429  001416  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  3430  00141A  EC20  F009         	call	_fputc	;wreg free
  3431  00141E  4A1C               	infsnz	fputs@i^0,f,c
  3432  001420  2A1D               	incf	(fputs@i+1)^0,f,c
  3433  001422                     l2640:
  3434  001422  501C               	movf	fputs@i^0,w,c
  3435  001424  2417               	addwf	fputs@s^0,w,c
  3436  001426  6ED9               	movwf	fsr2l,c
  3437  001428  501D               	movf	(fputs@i+1)^0,w,c
  3438  00142A  2018               	addwfc	(fputs@s+1)^0,w,c
  3439  00142C  6EDA               	movwf	fsr2h,c
  3440  00142E  50DF               	movf	indf2,w,c
  3441  001430  6E1B               	movwf	fputs@c^0,c
  3442  001432  501B               	movf	fputs@c^0,w,c
  3443  001434  A4D8               	btfss	status,2,c
  3444  001436  EF1F  F00A         	goto	u1811
  3445  00143A  EF21  F00A         	goto	u1810
  3446  00143E                     u1811:
  3447  00143E  EF06  F00A         	goto	l2636
  3448  001442                     u1810:
  3449  001442  0012               	return		;funcret
  3450  001444                     __end_of_fputs:
  3451                           	callstack 0
  3452                           
  3453 ;; *************** function _abs *****************
  3454 ;; Defined at:
  3455 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  a               2   29[COMRAM] int 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  2   29[COMRAM] int 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;Total ram usage:        4 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    4
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_dtoa
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text8
  3484  001444                     __ptext8:
  3485                           	callstack 0
  3486  001444                     _abs:
  3487                           	callstack 22
  3488  001444  BE1F               	btfsc	(abs@a+1)^0,7,c
  3489  001446  EF2F  F00A         	goto	u2000
  3490  00144A  501F               	movf	(abs@a+1)^0,w,c
  3491  00144C  E106               	bnz	u2001
  3492  00144E  041E               	decf	abs@a^0,w,c
  3493  001450  B0D8               	btfsc	status,0,c
  3494  001452  EF2D  F00A         	goto	u2001
  3495  001456  EF2F  F00A         	goto	u2000
  3496  00145A                     u2001:
  3497  00145A  EF3D  F00A         	goto	l1115
  3498  00145E                     u2000:
  3499  00145E  C01E  F020         	movff	abs@a,??_abs
  3500  001462  C01F  F021         	movff	abs@a+1,??_abs+1
  3501  001466  1E20               	comf	??_abs^0,f,c
  3502  001468  1E21               	comf	(??_abs+1)^0,f,c
  3503  00146A  4A20               	infsnz	??_abs^0,f,c
  3504  00146C  2A21               	incf	(??_abs+1)^0,f,c
  3505  00146E  C020  F01E         	movff	??_abs,?_abs
  3506  001472  C021  F01F         	movff	??_abs+1,?_abs+1
  3507  001476  EF41  F00A         	goto	l1118
  3508  00147A                     l1115:
  3509  00147A  C01E  F01E         	movff	abs@a,?_abs
  3510  00147E  C01F  F01F         	movff	abs@a+1,?_abs+1
  3511  001482                     l1118:
  3512  001482  0012               	return		;funcret
  3513  001484                     __end_of_abs:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function ___aomod *****************
  3517 ;; Defined at:
  3518 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  dividend        8   11[COMRAM] long long 
  3521 ;;  divisor         8   19[COMRAM] long long 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  sign            1   28[COMRAM] unsigned char 
  3524 ;;  counter         1   27[COMRAM] unsigned char 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  8   11[COMRAM] long long 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3534 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;Total ram usage:       18 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    4
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_dtoa
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text9
  3549  000D34                     __ptext9:
  3550                           	callstack 0
  3551  000D34                     ___aomod:
  3552                           	callstack 22
  3553  000D34  0E00               	movlw	0
  3554  000D36  6E1D               	movwf	___aomod@sign^0,c
  3555  000D38  BE13               	btfsc	(___aomod@dividend+7)^0,7,c
  3556  000D3A  EFA3  F006         	goto	u1900
  3557  000D3E  EFA1  F006         	goto	u1901
  3558  000D42                     u1901:
  3559  000D42  EFB5  F006         	goto	l2704
  3560  000D46                     u1900:
  3561  000D46  1E13               	comf	(___aomod@dividend+7)^0,f,c
  3562  000D48  1E12               	comf	(___aomod@dividend+6)^0,f,c
  3563  000D4A  1E11               	comf	(___aomod@dividend+5)^0,f,c
  3564  000D4C  1E10               	comf	(___aomod@dividend+4)^0,f,c
  3565  000D4E  1E0F               	comf	(___aomod@dividend+3)^0,f,c
  3566  000D50  1E0E               	comf	(___aomod@dividend+2)^0,f,c
  3567  000D52  1E0D               	comf	(___aomod@dividend+1)^0,f,c
  3568  000D54  6C0C               	negf	___aomod@dividend^0,c
  3569  000D56  0E00               	movlw	0
  3570  000D58  220D               	addwfc	(___aomod@dividend+1)^0,f,c
  3571  000D5A  220E               	addwfc	(___aomod@dividend+2)^0,f,c
  3572  000D5C  220F               	addwfc	(___aomod@dividend+3)^0,f,c
  3573  000D5E  2210               	addwfc	(___aomod@dividend+4)^0,f,c
  3574  000D60  2211               	addwfc	(___aomod@dividend+5)^0,f,c
  3575  000D62  2212               	addwfc	(___aomod@dividend+6)^0,f,c
  3576  000D64  2213               	addwfc	(___aomod@dividend+7)^0,f,c
  3577  000D66  0E01               	movlw	1
  3578  000D68  6E1D               	movwf	___aomod@sign^0,c
  3579  000D6A                     l2704:
  3580  000D6A  BE1B               	btfsc	(___aomod@divisor+7)^0,7,c
  3581  000D6C  EFBC  F006         	goto	u1910
  3582  000D70  EFBA  F006         	goto	u1911
  3583  000D74                     u1911:
  3584  000D74  EFCC  F006         	goto	l2708
  3585  000D78                     u1910:
  3586  000D78  1E1B               	comf	(___aomod@divisor+7)^0,f,c
  3587  000D7A  1E1A               	comf	(___aomod@divisor+6)^0,f,c
  3588  000D7C  1E19               	comf	(___aomod@divisor+5)^0,f,c
  3589  000D7E  1E18               	comf	(___aomod@divisor+4)^0,f,c
  3590  000D80  1E17               	comf	(___aomod@divisor+3)^0,f,c
  3591  000D82  1E16               	comf	(___aomod@divisor+2)^0,f,c
  3592  000D84  1E15               	comf	(___aomod@divisor+1)^0,f,c
  3593  000D86  6C14               	negf	___aomod@divisor^0,c
  3594  000D88  0E00               	movlw	0
  3595  000D8A  2215               	addwfc	(___aomod@divisor+1)^0,f,c
  3596  000D8C  2216               	addwfc	(___aomod@divisor+2)^0,f,c
  3597  000D8E  2217               	addwfc	(___aomod@divisor+3)^0,f,c
  3598  000D90  2218               	addwfc	(___aomod@divisor+4)^0,f,c
  3599  000D92  2219               	addwfc	(___aomod@divisor+5)^0,f,c
  3600  000D94  221A               	addwfc	(___aomod@divisor+6)^0,f,c
  3601  000D96  221B               	addwfc	(___aomod@divisor+7)^0,f,c
  3602  000D98                     l2708:
  3603  000D98  5014               	movf	___aomod@divisor^0,w,c
  3604  000D9A  1015               	iorwf	(___aomod@divisor+1)^0,w,c
  3605  000D9C  1016               	iorwf	(___aomod@divisor+2)^0,w,c
  3606  000D9E  1017               	iorwf	(___aomod@divisor+3)^0,w,c
  3607  000DA0  1018               	iorwf	(___aomod@divisor+4)^0,w,c
  3608  000DA2  1019               	iorwf	(___aomod@divisor+5)^0,w,c
  3609  000DA4  101A               	iorwf	(___aomod@divisor+6)^0,w,c
  3610  000DA6  101B               	iorwf	(___aomod@divisor+7)^0,w,c
  3611  000DA8  B4D8               	btfsc	status,2,c
  3612  000DAA  EFD9  F006         	goto	u1921
  3613  000DAE  EFDB  F006         	goto	u1920
  3614  000DB2                     u1921:
  3615  000DB2  EF23  F007         	goto	l2724
  3616  000DB6                     u1920:
  3617  000DB6  0E01               	movlw	1
  3618  000DB8  6E1C               	movwf	___aomod@counter^0,c
  3619  000DBA  EFE9  F006         	goto	l2714
  3620  000DBE                     l2712:
  3621  000DBE  90D8               	bcf	status,0,c
  3622  000DC0  3614               	rlcf	___aomod@divisor^0,f,c
  3623  000DC2  3615               	rlcf	(___aomod@divisor+1)^0,f,c
  3624  000DC4  3616               	rlcf	(___aomod@divisor+2)^0,f,c
  3625  000DC6  3617               	rlcf	(___aomod@divisor+3)^0,f,c
  3626  000DC8  3618               	rlcf	(___aomod@divisor+4)^0,f,c
  3627  000DCA  3619               	rlcf	(___aomod@divisor+5)^0,f,c
  3628  000DCC  361A               	rlcf	(___aomod@divisor+6)^0,f,c
  3629  000DCE  361B               	rlcf	(___aomod@divisor+7)^0,f,c
  3630  000DD0  2A1C               	incf	___aomod@counter^0,f,c
  3631  000DD2                     l2714:
  3632  000DD2  AE1B               	btfss	(___aomod@divisor+7)^0,7,c
  3633  000DD4  EFEE  F006         	goto	u1931
  3634  000DD8  EFF0  F006         	goto	u1930
  3635  000DDC                     u1931:
  3636  000DDC  EFDF  F006         	goto	l2712
  3637  000DE0                     u1930:
  3638  000DE0                     l2716:
  3639  000DE0  5014               	movf	___aomod@divisor^0,w,c
  3640  000DE2  5C0C               	subwf	___aomod@dividend^0,w,c
  3641  000DE4  5015               	movf	(___aomod@divisor+1)^0,w,c
  3642  000DE6  580D               	subwfb	(___aomod@dividend+1)^0,w,c
  3643  000DE8  5016               	movf	(___aomod@divisor+2)^0,w,c
  3644  000DEA  580E               	subwfb	(___aomod@dividend+2)^0,w,c
  3645  000DEC  5017               	movf	(___aomod@divisor+3)^0,w,c
  3646  000DEE  580F               	subwfb	(___aomod@dividend+3)^0,w,c
  3647  000DF0  5018               	movf	(___aomod@divisor+4)^0,w,c
  3648  000DF2  5810               	subwfb	(___aomod@dividend+4)^0,w,c
  3649  000DF4  5019               	movf	(___aomod@divisor+5)^0,w,c
  3650  000DF6  5811               	subwfb	(___aomod@dividend+5)^0,w,c
  3651  000DF8  501A               	movf	(___aomod@divisor+6)^0,w,c
  3652  000DFA  5812               	subwfb	(___aomod@dividend+6)^0,w,c
  3653  000DFC  501B               	movf	(___aomod@divisor+7)^0,w,c
  3654  000DFE  5813               	subwfb	(___aomod@dividend+7)^0,w,c
  3655  000E00  A0D8               	btfss	status,0,c
  3656  000E02  EF05  F007         	goto	u1941
  3657  000E06  EF07  F007         	goto	u1940
  3658  000E0A                     u1941:
  3659  000E0A  EF17  F007         	goto	l2720
  3660  000E0E                     u1940:
  3661  000E0E  5014               	movf	___aomod@divisor^0,w,c
  3662  000E10  5E0C               	subwf	___aomod@dividend^0,f,c
  3663  000E12  5015               	movf	(___aomod@divisor+1)^0,w,c
  3664  000E14  5A0D               	subwfb	(___aomod@dividend+1)^0,f,c
  3665  000E16  5016               	movf	(___aomod@divisor+2)^0,w,c
  3666  000E18  5A0E               	subwfb	(___aomod@dividend+2)^0,f,c
  3667  000E1A  5017               	movf	(___aomod@divisor+3)^0,w,c
  3668  000E1C  5A0F               	subwfb	(___aomod@dividend+3)^0,f,c
  3669  000E1E  5018               	movf	(___aomod@divisor+4)^0,w,c
  3670  000E20  5A10               	subwfb	(___aomod@dividend+4)^0,f,c
  3671  000E22  5019               	movf	(___aomod@divisor+5)^0,w,c
  3672  000E24  5A11               	subwfb	(___aomod@dividend+5)^0,f,c
  3673  000E26  501A               	movf	(___aomod@divisor+6)^0,w,c
  3674  000E28  5A12               	subwfb	(___aomod@dividend+6)^0,f,c
  3675  000E2A  501B               	movf	(___aomod@divisor+7)^0,w,c
  3676  000E2C  5A13               	subwfb	(___aomod@dividend+7)^0,f,c
  3677  000E2E                     l2720:
  3678  000E2E  90D8               	bcf	status,0,c
  3679  000E30  321B               	rrcf	(___aomod@divisor+7)^0,f,c
  3680  000E32  321A               	rrcf	(___aomod@divisor+6)^0,f,c
  3681  000E34  3219               	rrcf	(___aomod@divisor+5)^0,f,c
  3682  000E36  3218               	rrcf	(___aomod@divisor+4)^0,f,c
  3683  000E38  3217               	rrcf	(___aomod@divisor+3)^0,f,c
  3684  000E3A  3216               	rrcf	(___aomod@divisor+2)^0,f,c
  3685  000E3C  3215               	rrcf	(___aomod@divisor+1)^0,f,c
  3686  000E3E  3214               	rrcf	___aomod@divisor^0,f,c
  3687  000E40  2E1C               	decfsz	___aomod@counter^0,f,c
  3688  000E42  EFF0  F006         	goto	l2716
  3689  000E46                     l2724:
  3690  000E46  501D               	movf	___aomod@sign^0,w,c
  3691  000E48  B4D8               	btfsc	status,2,c
  3692  000E4A  EF29  F007         	goto	u1951
  3693  000E4E  EF2B  F007         	goto	u1950
  3694  000E52                     u1951:
  3695  000E52  EF3B  F007         	goto	l2728
  3696  000E56                     u1950:
  3697  000E56  1E13               	comf	(___aomod@dividend+7)^0,f,c
  3698  000E58  1E12               	comf	(___aomod@dividend+6)^0,f,c
  3699  000E5A  1E11               	comf	(___aomod@dividend+5)^0,f,c
  3700  000E5C  1E10               	comf	(___aomod@dividend+4)^0,f,c
  3701  000E5E  1E0F               	comf	(___aomod@dividend+3)^0,f,c
  3702  000E60  1E0E               	comf	(___aomod@dividend+2)^0,f,c
  3703  000E62  1E0D               	comf	(___aomod@dividend+1)^0,f,c
  3704  000E64  6C0C               	negf	___aomod@dividend^0,c
  3705  000E66  0E00               	movlw	0
  3706  000E68  220D               	addwfc	(___aomod@dividend+1)^0,f,c
  3707  000E6A  220E               	addwfc	(___aomod@dividend+2)^0,f,c
  3708  000E6C  220F               	addwfc	(___aomod@dividend+3)^0,f,c
  3709  000E6E  2210               	addwfc	(___aomod@dividend+4)^0,f,c
  3710  000E70  2211               	addwfc	(___aomod@dividend+5)^0,f,c
  3711  000E72  2212               	addwfc	(___aomod@dividend+6)^0,f,c
  3712  000E74  2213               	addwfc	(___aomod@dividend+7)^0,f,c
  3713  000E76                     l2728:
  3714  000E76  C00C  F00C         	movff	___aomod@dividend,?___aomod
  3715  000E7A  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  3716  000E7E  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  3717  000E82  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  3718  000E86  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  3719  000E8A  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  3720  000E8E  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  3721  000E92  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  3722  000E96  0012               	return		;funcret
  3723  000E98                     __end_of___aomod:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function ___aodiv *****************
  3727 ;; Defined at:
  3728 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  dividend        8   11[COMRAM] long long 
  3731 ;;  divisor         8   19[COMRAM] long long 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  quotient        8   29[COMRAM] long long 
  3734 ;;  sign            1   28[COMRAM] unsigned char 
  3735 ;;  counter         1   27[COMRAM] unsigned char 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  8   11[COMRAM] long long 
  3738 ;; Registers used:
  3739 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3745 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;Total ram usage:       26 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    4
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_dtoa
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text10
  3760  000BAC                     __ptext10:
  3761                           	callstack 0
  3762  000BAC                     ___aodiv:
  3763                           	callstack 22
  3764  000BAC  0E00               	movlw	0
  3765  000BAE  6E1D               	movwf	___aodiv@sign^0,c
  3766  000BB0  BE1B               	btfsc	(___aodiv@divisor+7)^0,7,c
  3767  000BB2  EFDF  F005         	goto	u1830
  3768  000BB6  EFDD  F005         	goto	u1831
  3769  000BBA                     u1831:
  3770  000BBA  EFF1  F005         	goto	l2660
  3771  000BBE                     u1830:
  3772  000BBE  1E1B               	comf	(___aodiv@divisor+7)^0,f,c
  3773  000BC0  1E1A               	comf	(___aodiv@divisor+6)^0,f,c
  3774  000BC2  1E19               	comf	(___aodiv@divisor+5)^0,f,c
  3775  000BC4  1E18               	comf	(___aodiv@divisor+4)^0,f,c
  3776  000BC6  1E17               	comf	(___aodiv@divisor+3)^0,f,c
  3777  000BC8  1E16               	comf	(___aodiv@divisor+2)^0,f,c
  3778  000BCA  1E15               	comf	(___aodiv@divisor+1)^0,f,c
  3779  000BCC  6C14               	negf	___aodiv@divisor^0,c
  3780  000BCE  0E00               	movlw	0
  3781  000BD0  2215               	addwfc	(___aodiv@divisor+1)^0,f,c
  3782  000BD2  2216               	addwfc	(___aodiv@divisor+2)^0,f,c
  3783  000BD4  2217               	addwfc	(___aodiv@divisor+3)^0,f,c
  3784  000BD6  2218               	addwfc	(___aodiv@divisor+4)^0,f,c
  3785  000BD8  2219               	addwfc	(___aodiv@divisor+5)^0,f,c
  3786  000BDA  221A               	addwfc	(___aodiv@divisor+6)^0,f,c
  3787  000BDC  221B               	addwfc	(___aodiv@divisor+7)^0,f,c
  3788  000BDE  0E01               	movlw	1
  3789  000BE0  6E1D               	movwf	___aodiv@sign^0,c
  3790  000BE2                     l2660:
  3791  000BE2  BE13               	btfsc	(___aodiv@dividend+7)^0,7,c
  3792  000BE4  EFF8  F005         	goto	u1840
  3793  000BE8  EFF6  F005         	goto	u1841
  3794  000BEC                     u1841:
  3795  000BEC  EF0A  F006         	goto	l2666
  3796  000BF0                     u1840:
  3797  000BF0  1E13               	comf	(___aodiv@dividend+7)^0,f,c
  3798  000BF2  1E12               	comf	(___aodiv@dividend+6)^0,f,c
  3799  000BF4  1E11               	comf	(___aodiv@dividend+5)^0,f,c
  3800  000BF6  1E10               	comf	(___aodiv@dividend+4)^0,f,c
  3801  000BF8  1E0F               	comf	(___aodiv@dividend+3)^0,f,c
  3802  000BFA  1E0E               	comf	(___aodiv@dividend+2)^0,f,c
  3803  000BFC  1E0D               	comf	(___aodiv@dividend+1)^0,f,c
  3804  000BFE  6C0C               	negf	___aodiv@dividend^0,c
  3805  000C00  0E00               	movlw	0
  3806  000C02  220D               	addwfc	(___aodiv@dividend+1)^0,f,c
  3807  000C04  220E               	addwfc	(___aodiv@dividend+2)^0,f,c
  3808  000C06  220F               	addwfc	(___aodiv@dividend+3)^0,f,c
  3809  000C08  2210               	addwfc	(___aodiv@dividend+4)^0,f,c
  3810  000C0A  2211               	addwfc	(___aodiv@dividend+5)^0,f,c
  3811  000C0C  2212               	addwfc	(___aodiv@dividend+6)^0,f,c
  3812  000C0E  2213               	addwfc	(___aodiv@dividend+7)^0,f,c
  3813  000C10  0E01               	movlw	1
  3814  000C12  1A1D               	xorwf	___aodiv@sign^0,f,c
  3815  000C14                     l2666:
  3816  000C14  EE20  F01E         	lfsr	2,___aodiv@quotient
  3817  000C18  0E07               	movlw	7
  3818  000C1A                     u1851:
  3819  000C1A  6ADE               	clrf	postinc2,c
  3820  000C1C  06E8               	decf	wreg,f,c
  3821  000C1E  E2FD               	bc	u1851
  3822  000C20  5014               	movf	___aodiv@divisor^0,w,c
  3823  000C22  1015               	iorwf	(___aodiv@divisor+1)^0,w,c
  3824  000C24  1016               	iorwf	(___aodiv@divisor+2)^0,w,c
  3825  000C26  1017               	iorwf	(___aodiv@divisor+3)^0,w,c
  3826  000C28  1018               	iorwf	(___aodiv@divisor+4)^0,w,c
  3827  000C2A  1019               	iorwf	(___aodiv@divisor+5)^0,w,c
  3828  000C2C  101A               	iorwf	(___aodiv@divisor+6)^0,w,c
  3829  000C2E  101B               	iorwf	(___aodiv@divisor+7)^0,w,c
  3830  000C30  B4D8               	btfsc	status,2,c
  3831  000C32  EF1D  F006         	goto	u1861
  3832  000C36  EF1F  F006         	goto	u1860
  3833  000C3A                     u1861:
  3834  000C3A  EF71  F006         	goto	l2688
  3835  000C3E                     u1860:
  3836  000C3E  0E01               	movlw	1
  3837  000C40  6E1C               	movwf	___aodiv@counter^0,c
  3838  000C42  EF2D  F006         	goto	l2674
  3839  000C46                     l2672:
  3840  000C46  90D8               	bcf	status,0,c
  3841  000C48  3614               	rlcf	___aodiv@divisor^0,f,c
  3842  000C4A  3615               	rlcf	(___aodiv@divisor+1)^0,f,c
  3843  000C4C  3616               	rlcf	(___aodiv@divisor+2)^0,f,c
  3844  000C4E  3617               	rlcf	(___aodiv@divisor+3)^0,f,c
  3845  000C50  3618               	rlcf	(___aodiv@divisor+4)^0,f,c
  3846  000C52  3619               	rlcf	(___aodiv@divisor+5)^0,f,c
  3847  000C54  361A               	rlcf	(___aodiv@divisor+6)^0,f,c
  3848  000C56  361B               	rlcf	(___aodiv@divisor+7)^0,f,c
  3849  000C58  2A1C               	incf	___aodiv@counter^0,f,c
  3850  000C5A                     l2674:
  3851  000C5A  AE1B               	btfss	(___aodiv@divisor+7)^0,7,c
  3852  000C5C  EF32  F006         	goto	u1871
  3853  000C60  EF34  F006         	goto	u1870
  3854  000C64                     u1871:
  3855  000C64  EF23  F006         	goto	l2672
  3856  000C68                     u1870:
  3857  000C68                     l2676:
  3858  000C68  90D8               	bcf	status,0,c
  3859  000C6A  361E               	rlcf	___aodiv@quotient^0,f,c
  3860  000C6C  361F               	rlcf	(___aodiv@quotient+1)^0,f,c
  3861  000C6E  3620               	rlcf	(___aodiv@quotient+2)^0,f,c
  3862  000C70  3621               	rlcf	(___aodiv@quotient+3)^0,f,c
  3863  000C72  3622               	rlcf	(___aodiv@quotient+4)^0,f,c
  3864  000C74  3623               	rlcf	(___aodiv@quotient+5)^0,f,c
  3865  000C76  3624               	rlcf	(___aodiv@quotient+6)^0,f,c
  3866  000C78  3625               	rlcf	(___aodiv@quotient+7)^0,f,c
  3867  000C7A  5014               	movf	___aodiv@divisor^0,w,c
  3868  000C7C  5C0C               	subwf	___aodiv@dividend^0,w,c
  3869  000C7E  5015               	movf	(___aodiv@divisor+1)^0,w,c
  3870  000C80  580D               	subwfb	(___aodiv@dividend+1)^0,w,c
  3871  000C82  5016               	movf	(___aodiv@divisor+2)^0,w,c
  3872  000C84  580E               	subwfb	(___aodiv@dividend+2)^0,w,c
  3873  000C86  5017               	movf	(___aodiv@divisor+3)^0,w,c
  3874  000C88  580F               	subwfb	(___aodiv@dividend+3)^0,w,c
  3875  000C8A  5018               	movf	(___aodiv@divisor+4)^0,w,c
  3876  000C8C  5810               	subwfb	(___aodiv@dividend+4)^0,w,c
  3877  000C8E  5019               	movf	(___aodiv@divisor+5)^0,w,c
  3878  000C90  5811               	subwfb	(___aodiv@dividend+5)^0,w,c
  3879  000C92  501A               	movf	(___aodiv@divisor+6)^0,w,c
  3880  000C94  5812               	subwfb	(___aodiv@dividend+6)^0,w,c
  3881  000C96  501B               	movf	(___aodiv@divisor+7)^0,w,c
  3882  000C98  5813               	subwfb	(___aodiv@dividend+7)^0,w,c
  3883  000C9A  A0D8               	btfss	status,0,c
  3884  000C9C  EF52  F006         	goto	u1881
  3885  000CA0  EF54  F006         	goto	u1880
  3886  000CA4                     u1881:
  3887  000CA4  EF65  F006         	goto	l2684
  3888  000CA8                     u1880:
  3889  000CA8  5014               	movf	___aodiv@divisor^0,w,c
  3890  000CAA  5E0C               	subwf	___aodiv@dividend^0,f,c
  3891  000CAC  5015               	movf	(___aodiv@divisor+1)^0,w,c
  3892  000CAE  5A0D               	subwfb	(___aodiv@dividend+1)^0,f,c
  3893  000CB0  5016               	movf	(___aodiv@divisor+2)^0,w,c
  3894  000CB2  5A0E               	subwfb	(___aodiv@dividend+2)^0,f,c
  3895  000CB4  5017               	movf	(___aodiv@divisor+3)^0,w,c
  3896  000CB6  5A0F               	subwfb	(___aodiv@dividend+3)^0,f,c
  3897  000CB8  5018               	movf	(___aodiv@divisor+4)^0,w,c
  3898  000CBA  5A10               	subwfb	(___aodiv@dividend+4)^0,f,c
  3899  000CBC  5019               	movf	(___aodiv@divisor+5)^0,w,c
  3900  000CBE  5A11               	subwfb	(___aodiv@dividend+5)^0,f,c
  3901  000CC0  501A               	movf	(___aodiv@divisor+6)^0,w,c
  3902  000CC2  5A12               	subwfb	(___aodiv@dividend+6)^0,f,c
  3903  000CC4  501B               	movf	(___aodiv@divisor+7)^0,w,c
  3904  000CC6  5A13               	subwfb	(___aodiv@dividend+7)^0,f,c
  3905  000CC8  801E               	bsf	___aodiv@quotient^0,0,c
  3906  000CCA                     l2684:
  3907  000CCA  90D8               	bcf	status,0,c
  3908  000CCC  321B               	rrcf	(___aodiv@divisor+7)^0,f,c
  3909  000CCE  321A               	rrcf	(___aodiv@divisor+6)^0,f,c
  3910  000CD0  3219               	rrcf	(___aodiv@divisor+5)^0,f,c
  3911  000CD2  3218               	rrcf	(___aodiv@divisor+4)^0,f,c
  3912  000CD4  3217               	rrcf	(___aodiv@divisor+3)^0,f,c
  3913  000CD6  3216               	rrcf	(___aodiv@divisor+2)^0,f,c
  3914  000CD8  3215               	rrcf	(___aodiv@divisor+1)^0,f,c
  3915  000CDA  3214               	rrcf	___aodiv@divisor^0,f,c
  3916  000CDC  2E1C               	decfsz	___aodiv@counter^0,f,c
  3917  000CDE  EF34  F006         	goto	l2676
  3918  000CE2                     l2688:
  3919  000CE2  501D               	movf	___aodiv@sign^0,w,c
  3920  000CE4  B4D8               	btfsc	status,2,c
  3921  000CE6  EF77  F006         	goto	u1891
  3922  000CEA  EF79  F006         	goto	u1890
  3923  000CEE                     u1891:
  3924  000CEE  EF89  F006         	goto	l2692
  3925  000CF2                     u1890:
  3926  000CF2  1E25               	comf	(___aodiv@quotient+7)^0,f,c
  3927  000CF4  1E24               	comf	(___aodiv@quotient+6)^0,f,c
  3928  000CF6  1E23               	comf	(___aodiv@quotient+5)^0,f,c
  3929  000CF8  1E22               	comf	(___aodiv@quotient+4)^0,f,c
  3930  000CFA  1E21               	comf	(___aodiv@quotient+3)^0,f,c
  3931  000CFC  1E20               	comf	(___aodiv@quotient+2)^0,f,c
  3932  000CFE  1E1F               	comf	(___aodiv@quotient+1)^0,f,c
  3933  000D00  6C1E               	negf	___aodiv@quotient^0,c
  3934  000D02  0E00               	movlw	0
  3935  000D04  221F               	addwfc	(___aodiv@quotient+1)^0,f,c
  3936  000D06  2220               	addwfc	(___aodiv@quotient+2)^0,f,c
  3937  000D08  2221               	addwfc	(___aodiv@quotient+3)^0,f,c
  3938  000D0A  2222               	addwfc	(___aodiv@quotient+4)^0,f,c
  3939  000D0C  2223               	addwfc	(___aodiv@quotient+5)^0,f,c
  3940  000D0E  2224               	addwfc	(___aodiv@quotient+6)^0,f,c
  3941  000D10  2225               	addwfc	(___aodiv@quotient+7)^0,f,c
  3942  000D12                     l2692:
  3943  000D12  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  3944  000D16  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  3945  000D1A  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  3946  000D1E  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  3947  000D22  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  3948  000D26  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  3949  000D2A  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  3950  000D2E  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  3951  000D32  0012               	return		;funcret
  3952  000D34                     __end_of___aodiv:
  3953                           	callstack 0
  3954                           
  3955 ;; *************** function _ctoa *****************
  3956 ;; Defined at:
  3957 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3960 ;;		 -> NULL(0), 
  3961 ;;  c               1   24[COMRAM] unsigned char 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  w               2   28[COMRAM] int 
  3964 ;;  l               2   26[COMRAM] int 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  2   22[COMRAM] int 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3974 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;Total ram usage:        8 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    7
  3981 ;; This function calls:
  3982 ;;		_fputc
  3983 ;; This function is called by:
  3984 ;;		_vfpfcnvrt
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text11
  3989  0010AA                     __ptext11:
  3990                           	callstack 0
  3991  0010AA                     _ctoa:
  3992                           	callstack 20
  3993  0010AA                     
  3994                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3995  0010AA  5045               	movf	_width^0,w,c
  3996  0010AC  1046               	iorwf	(_width+1)^0,w,c
  3997  0010AE  A4D8               	btfss	status,2,c
  3998  0010B0  EF5C  F008         	goto	u2011
  3999  0010B4  EF5E  F008         	goto	u2010
  4000  0010B8                     u2011:
  4001  0010B8  EF64  F008         	goto	l2762
  4002  0010BC                     u2010:
  4003  0010BC  C045  F01D         	movff	_width,ctoa@w
  4004  0010C0  C046  F01E         	movff	_width+1,ctoa@w+1
  4005  0010C4  EF6A  F008         	goto	l2764
  4006  0010C8                     l2762:
  4007  0010C8  0EFF               	movlw	255
  4008  0010CA  2445               	addwf	_width^0,w,c
  4009  0010CC  6E1D               	movwf	ctoa@w^0,c
  4010  0010CE  0EFF               	movlw	255
  4011  0010D0  2046               	addwfc	(_width+1)^0,w,c
  4012  0010D2  6E1E               	movwf	(ctoa@w+1)^0,c
  4013  0010D4                     l2764:
  4014                           
  4015                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  4016  0010D4  A049               	btfss	_flags^0,0,c
  4017  0010D6  EF6F  F008         	goto	u2021
  4018  0010DA  EF71  F008         	goto	u2020
  4019  0010DE                     u2021:
  4020  0010DE  EF7A  F008         	goto	l2768
  4021  0010E2                     u2020:
  4022  0010E2                     
  4023                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  4024  0010E2  C019  F00E         	movff	ctoa@c,fputc@c
  4025  0010E6  6A0F               	clrf	(fputc@c+1)^0,c
  4026  0010E8  C017  F010         	movff	ctoa@fp,fputc@fp
  4027  0010EC  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  4028  0010F0  EC20  F009         	call	_fputc	;wreg free
  4029  0010F4                     l2768:
  4030                           
  4031                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  4032  0010F4  BE1E               	btfsc	(ctoa@w+1)^0,7,c
  4033  0010F6  EF7F  F008         	goto	u2031
  4034  0010FA  EF81  F008         	goto	u2030
  4035  0010FE                     u2031:
  4036  0010FE  EF83  F008         	goto	l2772
  4037  001102                     u2030:
  4038  001102  EF87  F008         	goto	l1065
  4039  001106                     l2772:
  4040  001106  0E00               	movlw	0
  4041  001108  6E1E               	movwf	(ctoa@w+1)^0,c
  4042  00110A  0E00               	movlw	0
  4043  00110C  6E1D               	movwf	ctoa@w^0,c
  4044  00110E                     l1065:
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  4047  00110E  0E00               	movlw	0
  4048  001110  6E1C               	movwf	(ctoa@l+1)^0,c
  4049  001112  0E00               	movlw	0
  4050  001114  6E1B               	movwf	ctoa@l^0,c
  4051                           
  4052                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4053  001116  EF99  F008         	goto	l2778
  4054  00111A                     l2774:
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  4057  00111A  0E00               	movlw	0
  4058  00111C  6E0F               	movwf	(fputc@c+1)^0,c
  4059  00111E  0E20               	movlw	32
  4060  001120  6E0E               	movwf	fputc@c^0,c
  4061  001122  C017  F010         	movff	ctoa@fp,fputc@fp
  4062  001126  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  4063  00112A  EC20  F009         	call	_fputc	;wreg free
  4064  00112E                     
  4065                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  4066  00112E  4A1B               	infsnz	ctoa@l^0,f,c
  4067  001130  2A1C               	incf	(ctoa@l+1)^0,f,c
  4068  001132                     l2778:
  4069                           
  4070                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4071  001132  501D               	movf	ctoa@w^0,w,c
  4072  001134  5C1B               	subwf	ctoa@l^0,w,c
  4073  001136  501C               	movf	(ctoa@l+1)^0,w,c
  4074  001138  0A80               	xorlw	128
  4075  00113A  6E1A               	movwf	??_ctoa^0,c
  4076  00113C  501E               	movf	(ctoa@w+1)^0,w,c
  4077  00113E  0A80               	xorlw	128
  4078  001140  581A               	subwfb	??_ctoa^0,w,c
  4079  001142  A0D8               	btfss	status,0,c
  4080  001144  EFA6  F008         	goto	u2041
  4081  001148  EFA8  F008         	goto	u2040
  4082  00114C                     u2041:
  4083  00114C  EF8D  F008         	goto	l2774
  4084  001150                     u2040:
  4085  001150                     
  4086                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  4087  001150  B049               	btfsc	_flags^0,0,c
  4088  001152  EFAD  F008         	goto	u2051
  4089  001156  EFAF  F008         	goto	u2050
  4090  00115A                     u2051:
  4091  00115A  EFB8  F008         	goto	l2782
  4092  00115E                     u2050:
  4093  00115E                     
  4094                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  4095  00115E  C019  F00E         	movff	ctoa@c,fputc@c
  4096  001162  6A0F               	clrf	(fputc@c+1)^0,c
  4097  001164  C017  F010         	movff	ctoa@fp,fputc@fp
  4098  001168  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  4099  00116C  EC20  F009         	call	_fputc	;wreg free
  4100  001170                     l2782:
  4101                           
  4102                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  4103  001170  0E01               	movlw	1
  4104  001172  241B               	addwf	ctoa@l^0,w,c
  4105  001174  6E17               	movwf	?_ctoa^0,c
  4106  001176  0E00               	movlw	0
  4107  001178  201C               	addwfc	(ctoa@l+1)^0,w,c
  4108  00117A  6E18               	movwf	(?_ctoa+1)^0,c
  4109  00117C  0012               	return		;funcret
  4110  00117E                     __end_of_ctoa:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function _fputc *****************
  4114 ;; Defined at:
  4115 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  c               2   13[COMRAM] int 
  4118 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4119 ;;		 -> NULL(0), 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  2   13[COMRAM] int 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;Total ram usage:        9 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    6
  4138 ;; This function calls:
  4139 ;;		_putch
  4140 ;; This function is called by:
  4141 ;;		_pad
  4142 ;;		_ctoa
  4143 ;;		_vfpfcnvrt
  4144 ;;		_fputs
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           	psect	text12
  4149  001240                     __ptext12:
  4150                           	callstack 0
  4151  001240                     _fputc:
  4152                           	callstack 21
  4153  001240  5010               	movf	fputc@fp^0,w,c
  4154  001242  1011               	iorwf	(fputc@fp+1)^0,w,c
  4155  001244  B4D8               	btfsc	status,2,c
  4156  001246  EF27  F009         	goto	u1771
  4157  00124A  EF29  F009         	goto	u1770
  4158  00124E                     u1771:
  4159  00124E  EF32  F009         	goto	l2624
  4160  001252                     u1770:
  4161  001252  5010               	movf	fputc@fp^0,w,c
  4162  001254  1011               	iorwf	(fputc@fp+1)^0,w,c
  4163  001256  A4D8               	btfss	status,2,c
  4164  001258  EF30  F009         	goto	u1781
  4165  00125C  EF32  F009         	goto	u1780
  4166  001260                     u1781:
  4167  001260  EF37  F009         	goto	l2626
  4168  001264                     u1780:
  4169  001264                     l2624:
  4170  001264  500E               	movf	fputc@c^0,w,c
  4171  001266  EC41  F00B         	call	_putch
  4172  00126A  EF6A  F009         	goto	l1130
  4173  00126E                     l2626:
  4174  00126E  EE20 F004          	lfsr	2,4
  4175  001272  5010               	movf	fputc@fp^0,w,c
  4176  001274  26D9               	addwf	fsr2l,f,c
  4177  001276  5011               	movf	(fputc@fp+1)^0,w,c
  4178  001278  22DA               	addwfc	fsr2h,f,c
  4179  00127A  50DE               	movf	postinc2,w,c
  4180  00127C  10DE               	iorwf	postinc2,w,c
  4181  00127E  B4D8               	btfsc	status,2,c
  4182  001280  EF44  F009         	goto	u1791
  4183  001284  EF46  F009         	goto	u1790
  4184  001288                     u1791:
  4185  001288  EF61  F009         	goto	l2630
  4186  00128C                     u1790:
  4187  00128C  EE20 F004          	lfsr	2,4
  4188  001290  5010               	movf	fputc@fp^0,w,c
  4189  001292  26D9               	addwf	fsr2l,f,c
  4190  001294  5011               	movf	(fputc@fp+1)^0,w,c
  4191  001296  22DA               	addwfc	fsr2h,f,c
  4192  001298  EE10 F002          	lfsr	1,2
  4193  00129C  5010               	movf	fputc@fp^0,w,c
  4194  00129E  26E1               	addwf	fsr1l,f,c
  4195  0012A0  5011               	movf	(fputc@fp+1)^0,w,c
  4196  0012A2  22E2               	addwfc	fsr1h,f,c
  4197  0012A4  50DE               	movf	postinc2,w,c
  4198  0012A6  5CE6               	subwf	postinc1,w,c
  4199  0012A8  50E6               	movf	postinc1,w,c
  4200  0012AA  0A80               	xorlw	128
  4201  0012AC  6E16               	movwf	(??_fputc+4)^0,c
  4202  0012AE  50DE               	movf	postinc2,w,c
  4203  0012B0  0A80               	xorlw	128
  4204  0012B2  5816               	subwfb	(??_fputc+4)^0,w,c
  4205  0012B4  B0D8               	btfsc	status,0,c
  4206  0012B6  EF5F  F009         	goto	u1801
  4207  0012BA  EF61  F009         	goto	u1800
  4208  0012BE                     u1801:
  4209  0012BE  EF6A  F009         	goto	l1130
  4210  0012C2                     u1800:
  4211  0012C2                     l2630:
  4212  0012C2  EE20 F002          	lfsr	2,2
  4213  0012C6  5010               	movf	fputc@fp^0,w,c
  4214  0012C8  26D9               	addwf	fsr2l,f,c
  4215  0012CA  5011               	movf	(fputc@fp+1)^0,w,c
  4216  0012CC  22DA               	addwfc	fsr2h,f,c
  4217  0012CE  2ADE               	incf	postinc2,f,c
  4218  0012D0  0E00               	movlw	0
  4219  0012D2  22DD               	addwfc	postdec2,f,c
  4220  0012D4                     l1130:
  4221  0012D4  0012               	return		;funcret
  4222  0012D6                     __end_of_fputc:
  4223                           	callstack 0
  4224                           
  4225 ;; *************** function _putch *****************
  4226 ;; Defined at:
  4227 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  txData          1    wreg     unsigned char 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  txData          1   12[COMRAM] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, status,2, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;Total ram usage:        1 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    5
  4248 ;; This function calls:
  4249 ;;		_EUSART1_Write
  4250 ;; This function is called by:
  4251 ;;		_fputc
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text13
  4256  001682                     __ptext13:
  4257                           	callstack 0
  4258  001682                     _putch:
  4259                           	callstack 21
  4260                           
  4261                           ;incstack = 0
  4262                           ;putch@txData stored from wreg
  4263  001682  6E0D               	movwf	putch@txData^0,c
  4264  001684                     
  4265                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4266  001684  500D               	movf	putch@txData^0,w,c
  4267  001686  EC21  F00B         	call	_EUSART1_Write
  4268  00168A  0012               	return		;funcret
  4269  00168C                     __end_of_putch:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function _EUSART1_Write *****************
  4273 ;; Defined at:
  4274 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  txData          1    wreg     unsigned char 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  txData          1   11[COMRAM] unsigned char 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;Total ram usage:        1 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    4
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_putch
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text14
  4303  001642                     __ptext14:
  4304                           	callstack 0
  4305  001642                     _EUSART1_Write:
  4306                           	callstack 21
  4307                           
  4308                           ;incstack = 0
  4309                           ;EUSART1_Write@txData stored from wreg
  4310  001642  6E0C               	movwf	EUSART1_Write@txData^0,c
  4311  001644                     l298:
  4312                           
  4313                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4314  001644  A89E               	btfss	158,4,c	;volatile
  4315  001646  EF27  F00B         	goto	u1761
  4316  00164A  EF29  F00B         	goto	u1760
  4317  00164E                     u1761:
  4318  00164E  EF22  F00B         	goto	l298
  4319  001652                     u1760:
  4320  001652                     
  4321                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4322  001652  C00C  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4323  001656  0012               	return		;funcret
  4324  001658                     __end_of_EUSART1_Write:
  4325                           	callstack 0
  4326                           
  4327 ;; *************** function ___wmul *****************
  4328 ;; Defined at:
  4329 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  multiplier      2   11[COMRAM] unsigned int 
  4332 ;;  multiplicand    2   13[COMRAM] unsigned int 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  product         2   15[COMRAM] unsigned int 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  2   11[COMRAM] unsigned int 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0, prodl, prodh
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;Total ram usage:        6 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    4
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_main
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text15
  4359  0015E6                     __ptext15:
  4360                           	callstack 0
  4361  0015E6                     ___wmul:
  4362                           	callstack 26
  4363  0015E6  500C               	movf	___wmul@multiplier^0,w,c
  4364  0015E8  020E               	mulwf	___wmul@multiplicand^0,c
  4365  0015EA  CFF3 F010          	movff	prodl,___wmul@product
  4366  0015EE  CFF4 F011          	movff	prodh,___wmul@product+1
  4367  0015F2  500C               	movf	___wmul@multiplier^0,w,c
  4368  0015F4  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  4369  0015F6  50F3               	movf	243,w,c
  4370  0015F8  2611               	addwf	(___wmul@product+1)^0,f,c
  4371  0015FA  500D               	movf	(___wmul@multiplier+1)^0,w,c
  4372  0015FC  020E               	mulwf	___wmul@multiplicand^0,c
  4373  0015FE  50F3               	movf	243,w,c
  4374  001600  2611               	addwf	(___wmul@product+1)^0,f,c
  4375  001602  C010  F00C         	movff	___wmul@product,?___wmul
  4376  001606  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  4377  00160A  0012               	return		;funcret
  4378  00160C                     __end_of___wmul:
  4379                           	callstack 0
  4380                           
  4381 ;; *************** function ___lwdiv *****************
  4382 ;; Defined at:
  4383 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  dividend        2   11[COMRAM] unsigned int 
  4386 ;;  divisor         2   13[COMRAM] unsigned int 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  quotient        2   15[COMRAM] unsigned int 
  4389 ;;  counter         1   17[COMRAM] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  2   11[COMRAM] unsigned int 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;Total ram usage:        7 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    4
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_main
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text16
  4414  0012D6                     __ptext16:
  4415                           	callstack 0
  4416  0012D6                     ___lwdiv:
  4417                           	callstack 26
  4418  0012D6  0E00               	movlw	0
  4419  0012D8  6E11               	movwf	(___lwdiv@quotient+1)^0,c
  4420  0012DA  0E00               	movlw	0
  4421  0012DC  6E10               	movwf	___lwdiv@quotient^0,c
  4422  0012DE  500E               	movf	___lwdiv@divisor^0,w,c
  4423  0012E0  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4424  0012E2  B4D8               	btfsc	status,2,c
  4425  0012E4  EF76  F009         	goto	u1571
  4426  0012E8  EF78  F009         	goto	u1570
  4427  0012EC                     u1571:
  4428  0012EC  EFA0  F009         	goto	l835
  4429  0012F0                     u1570:
  4430  0012F0  0E01               	movlw	1
  4431  0012F2  6E12               	movwf	___lwdiv@counter^0,c
  4432  0012F4  EF80  F009         	goto	l2388
  4433  0012F8                     l2386:
  4434  0012F8  90D8               	bcf	status,0,c
  4435  0012FA  360E               	rlcf	___lwdiv@divisor^0,f,c
  4436  0012FC  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4437  0012FE  2A12               	incf	___lwdiv@counter^0,f,c
  4438  001300                     l2388:
  4439  001300  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  4440  001302  EF85  F009         	goto	u1581
  4441  001306  EF87  F009         	goto	u1580
  4442  00130A                     u1581:
  4443  00130A  EF7C  F009         	goto	l2386
  4444  00130E                     u1580:
  4445  00130E                     l2390:
  4446  00130E  90D8               	bcf	status,0,c
  4447  001310  3610               	rlcf	___lwdiv@quotient^0,f,c
  4448  001312  3611               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4449  001314  500E               	movf	___lwdiv@divisor^0,w,c
  4450  001316  5C0C               	subwf	___lwdiv@dividend^0,w,c
  4451  001318  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  4452  00131A  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4453  00131C  A0D8               	btfss	status,0,c
  4454  00131E  EF93  F009         	goto	u1591
  4455  001322  EF95  F009         	goto	u1590
  4456  001326                     u1591:
  4457  001326  EF9A  F009         	goto	l2398
  4458  00132A                     u1590:
  4459  00132A  500E               	movf	___lwdiv@divisor^0,w,c
  4460  00132C  5E0C               	subwf	___lwdiv@dividend^0,f,c
  4461  00132E  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  4462  001330  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4463  001332  8010               	bsf	___lwdiv@quotient^0,0,c
  4464  001334                     l2398:
  4465  001334  90D8               	bcf	status,0,c
  4466  001336  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4467  001338  320E               	rrcf	___lwdiv@divisor^0,f,c
  4468  00133A  2E12               	decfsz	___lwdiv@counter^0,f,c
  4469  00133C  EF87  F009         	goto	l2390
  4470  001340                     l835:
  4471  001340  C010  F00C         	movff	___lwdiv@quotient,?___lwdiv
  4472  001344  C011  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4473  001348  0012               	return		;funcret
  4474  00134A                     __end_of___lwdiv:
  4475                           	callstack 0
  4476                           
  4477 ;; *************** function ___aldiv *****************
  4478 ;; Defined at:
  4479 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aldiv.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  dividend        4   11[COMRAM] long 
  4482 ;;  divisor         4   15[COMRAM] long 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  quotient        4   21[COMRAM] long 
  4485 ;;  sign            1   20[COMRAM] unsigned char 
  4486 ;;  counter         1   19[COMRAM] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  4   11[COMRAM] long 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4496 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;Total ram usage:       14 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    4
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_main
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text17
  4511  000E98                     __ptext17:
  4512                           	callstack 0
  4513  000E98                     ___aldiv:
  4514                           	callstack 26
  4515  000E98  0E00               	movlw	0
  4516  000E9A  6E15               	movwf	___aldiv@sign^0,c
  4517  000E9C  BE13               	btfsc	(___aldiv@divisor+3)^0,7,c
  4518  000E9E  EF55  F007         	goto	u1510
  4519  000EA2  EF53  F007         	goto	u1511
  4520  000EA6                     u1511:
  4521  000EA6  EF5F  F007         	goto	l2344
  4522  000EAA                     u1510:
  4523  000EAA  1E13               	comf	(___aldiv@divisor+3)^0,f,c
  4524  000EAC  1E12               	comf	(___aldiv@divisor+2)^0,f,c
  4525  000EAE  1E11               	comf	(___aldiv@divisor+1)^0,f,c
  4526  000EB0  6C10               	negf	___aldiv@divisor^0,c
  4527  000EB2  0E00               	movlw	0
  4528  000EB4  2211               	addwfc	(___aldiv@divisor+1)^0,f,c
  4529  000EB6  2212               	addwfc	(___aldiv@divisor+2)^0,f,c
  4530  000EB8  2213               	addwfc	(___aldiv@divisor+3)^0,f,c
  4531  000EBA  0E01               	movlw	1
  4532  000EBC  6E15               	movwf	___aldiv@sign^0,c
  4533  000EBE                     l2344:
  4534  000EBE  BE0F               	btfsc	(___aldiv@dividend+3)^0,7,c
  4535  000EC0  EF66  F007         	goto	u1520
  4536  000EC4  EF64  F007         	goto	u1521
  4537  000EC8                     u1521:
  4538  000EC8  EF70  F007         	goto	l2350
  4539  000ECC                     u1520:
  4540  000ECC  1E0F               	comf	(___aldiv@dividend+3)^0,f,c
  4541  000ECE  1E0E               	comf	(___aldiv@dividend+2)^0,f,c
  4542  000ED0  1E0D               	comf	(___aldiv@dividend+1)^0,f,c
  4543  000ED2  6C0C               	negf	___aldiv@dividend^0,c
  4544  000ED4  0E00               	movlw	0
  4545  000ED6  220D               	addwfc	(___aldiv@dividend+1)^0,f,c
  4546  000ED8  220E               	addwfc	(___aldiv@dividend+2)^0,f,c
  4547  000EDA  220F               	addwfc	(___aldiv@dividend+3)^0,f,c
  4548  000EDC  0E01               	movlw	1
  4549  000EDE  1A15               	xorwf	___aldiv@sign^0,f,c
  4550  000EE0                     l2350:
  4551  000EE0  0E00               	movlw	0
  4552  000EE2  6E16               	movwf	___aldiv@quotient^0,c
  4553  000EE4  0E00               	movlw	0
  4554  000EE6  6E17               	movwf	(___aldiv@quotient+1)^0,c
  4555  000EE8  0E00               	movlw	0
  4556  000EEA  6E18               	movwf	(___aldiv@quotient+2)^0,c
  4557  000EEC  0E00               	movlw	0
  4558  000EEE  6E19               	movwf	(___aldiv@quotient+3)^0,c
  4559  000EF0  5010               	movf	___aldiv@divisor^0,w,c
  4560  000EF2  1011               	iorwf	(___aldiv@divisor+1)^0,w,c
  4561  000EF4  1012               	iorwf	(___aldiv@divisor+2)^0,w,c
  4562  000EF6  1013               	iorwf	(___aldiv@divisor+3)^0,w,c
  4563  000EF8  B4D8               	btfsc	status,2,c
  4564  000EFA  EF81  F007         	goto	u1531
  4565  000EFE  EF83  F007         	goto	u1530
  4566  000F02                     u1531:
  4567  000F02  EFB9  F007         	goto	l2372
  4568  000F06                     u1530:
  4569  000F06  0E01               	movlw	1
  4570  000F08  6E14               	movwf	___aldiv@counter^0,c
  4571  000F0A  EF8D  F007         	goto	l2358
  4572  000F0E                     l2356:
  4573  000F0E  90D8               	bcf	status,0,c
  4574  000F10  3610               	rlcf	___aldiv@divisor^0,f,c
  4575  000F12  3611               	rlcf	(___aldiv@divisor+1)^0,f,c
  4576  000F14  3612               	rlcf	(___aldiv@divisor+2)^0,f,c
  4577  000F16  3613               	rlcf	(___aldiv@divisor+3)^0,f,c
  4578  000F18  2A14               	incf	___aldiv@counter^0,f,c
  4579  000F1A                     l2358:
  4580  000F1A  AE13               	btfss	(___aldiv@divisor+3)^0,7,c
  4581  000F1C  EF92  F007         	goto	u1541
  4582  000F20  EF94  F007         	goto	u1540
  4583  000F24                     u1541:
  4584  000F24  EF87  F007         	goto	l2356
  4585  000F28                     u1540:
  4586  000F28                     l2360:
  4587  000F28  90D8               	bcf	status,0,c
  4588  000F2A  3616               	rlcf	___aldiv@quotient^0,f,c
  4589  000F2C  3617               	rlcf	(___aldiv@quotient+1)^0,f,c
  4590  000F2E  3618               	rlcf	(___aldiv@quotient+2)^0,f,c
  4591  000F30  3619               	rlcf	(___aldiv@quotient+3)^0,f,c
  4592  000F32  5010               	movf	___aldiv@divisor^0,w,c
  4593  000F34  5C0C               	subwf	___aldiv@dividend^0,w,c
  4594  000F36  5011               	movf	(___aldiv@divisor+1)^0,w,c
  4595  000F38  580D               	subwfb	(___aldiv@dividend+1)^0,w,c
  4596  000F3A  5012               	movf	(___aldiv@divisor+2)^0,w,c
  4597  000F3C  580E               	subwfb	(___aldiv@dividend+2)^0,w,c
  4598  000F3E  5013               	movf	(___aldiv@divisor+3)^0,w,c
  4599  000F40  580F               	subwfb	(___aldiv@dividend+3)^0,w,c
  4600  000F42  A0D8               	btfss	status,0,c
  4601  000F44  EFA6  F007         	goto	u1551
  4602  000F48  EFA8  F007         	goto	u1550
  4603  000F4C                     u1551:
  4604  000F4C  EFB1  F007         	goto	l2368
  4605  000F50                     u1550:
  4606  000F50  5010               	movf	___aldiv@divisor^0,w,c
  4607  000F52  5E0C               	subwf	___aldiv@dividend^0,f,c
  4608  000F54  5011               	movf	(___aldiv@divisor+1)^0,w,c
  4609  000F56  5A0D               	subwfb	(___aldiv@dividend+1)^0,f,c
  4610  000F58  5012               	movf	(___aldiv@divisor+2)^0,w,c
  4611  000F5A  5A0E               	subwfb	(___aldiv@dividend+2)^0,f,c
  4612  000F5C  5013               	movf	(___aldiv@divisor+3)^0,w,c
  4613  000F5E  5A0F               	subwfb	(___aldiv@dividend+3)^0,f,c
  4614  000F60  8016               	bsf	___aldiv@quotient^0,0,c
  4615  000F62                     l2368:
  4616  000F62  90D8               	bcf	status,0,c
  4617  000F64  3213               	rrcf	(___aldiv@divisor+3)^0,f,c
  4618  000F66  3212               	rrcf	(___aldiv@divisor+2)^0,f,c
  4619  000F68  3211               	rrcf	(___aldiv@divisor+1)^0,f,c
  4620  000F6A  3210               	rrcf	___aldiv@divisor^0,f,c
  4621  000F6C  2E14               	decfsz	___aldiv@counter^0,f,c
  4622  000F6E  EF94  F007         	goto	l2360
  4623  000F72                     l2372:
  4624  000F72  5015               	movf	___aldiv@sign^0,w,c
  4625  000F74  B4D8               	btfsc	status,2,c
  4626  000F76  EFBF  F007         	goto	u1561
  4627  000F7A  EFC1  F007         	goto	u1560
  4628  000F7E                     u1561:
  4629  000F7E  EFC9  F007         	goto	l2376
  4630  000F82                     u1560:
  4631  000F82  1E19               	comf	(___aldiv@quotient+3)^0,f,c
  4632  000F84  1E18               	comf	(___aldiv@quotient+2)^0,f,c
  4633  000F86  1E17               	comf	(___aldiv@quotient+1)^0,f,c
  4634  000F88  6C16               	negf	___aldiv@quotient^0,c
  4635  000F8A  0E00               	movlw	0
  4636  000F8C  2217               	addwfc	(___aldiv@quotient+1)^0,f,c
  4637  000F8E  2218               	addwfc	(___aldiv@quotient+2)^0,f,c
  4638  000F90  2219               	addwfc	(___aldiv@quotient+3)^0,f,c
  4639  000F92                     l2376:
  4640  000F92  C016  F00C         	movff	___aldiv@quotient,?___aldiv
  4641  000F96  C017  F00D         	movff	___aldiv@quotient+1,?___aldiv+1
  4642  000F9A  C018  F00E         	movff	___aldiv@quotient+2,?___aldiv+2
  4643  000F9E  C019  F00F         	movff	___aldiv@quotient+3,?___aldiv+3
  4644  000FA2  0012               	return		;funcret
  4645  000FA4                     __end_of___aldiv:
  4646                           	callstack 0
  4647                           
  4648 ;; *************** function _TMR0_WriteTimer *****************
  4649 ;; Defined at:
  4650 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  timerVal        2   11[COMRAM] unsigned short 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;Total ram usage:        2 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    4
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_main
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text18
  4679  00168C                     __ptext18:
  4680                           	callstack 0
  4681  00168C                     _TMR0_WriteTimer:
  4682                           	callstack 26
  4683  00168C                     
  4684                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4685  00168C  500D               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4686  00168E  6ED7               	movwf	215,c	;volatile
  4687  001690                     
  4688                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4689  001690  C00C  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4690  001694  0012               	return		;funcret
  4691  001696                     __end_of_TMR0_WriteTimer:
  4692                           	callstack 0
  4693                           
  4694 ;; *************** function _SYSTEM_Initialize *****************
  4695 ;; Defined at:
  4696 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;		None
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;		None
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		wreg, status,2, status,0, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;Total ram usage:        0 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    6
  4717 ;; This function calls:
  4718 ;;		_ADC_Initialize
  4719 ;;		_EUSART1_Initialize
  4720 ;;		_INTERRUPT_Initialize
  4721 ;;		_OSCILLATOR_Initialize
  4722 ;;		_PIN_MANAGER_Initialize
  4723 ;;		_TMR0_Initialize
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text19
  4730  001628                     __ptext19:
  4731                           	callstack 0
  4732  001628                     _SYSTEM_Initialize:
  4733                           	callstack 24
  4734  001628                     
  4735                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4736  001628  EC64  F00B         	call	_INTERRUPT_Initialize	;wreg free
  4737  00162C                     
  4738                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4739  00162C  ECB4  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  4740  001630                     
  4741                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4742  001630  EC06  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  4743  001634                     
  4744                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  4745  001634  EC2C  F00B         	call	_ADC_Initialize	;wreg free
  4746  001638                     
  4747                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4748  001638  EC99  F00A         	call	_TMR0_Initialize	;wreg free
  4749  00163C                     
  4750                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  4751  00163C  EC42  F00A         	call	_EUSART1_Initialize	;wreg free
  4752  001640  0012               	return		;funcret
  4753  001642                     __end_of_SYSTEM_Initialize:
  4754                           	callstack 0
  4755                           
  4756 ;; *************** function _TMR0_Initialize *****************
  4757 ;; Defined at:
  4758 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      void 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;Total ram usage:        2 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    5
  4779 ;; This function calls:
  4780 ;;		_TMR0_SetInterruptHandler
  4781 ;; This function is called by:
  4782 ;;		_SYSTEM_Initialize
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text20
  4787  001532                     __ptext20:
  4788                           	callstack 0
  4789  001532                     _TMR0_Initialize:
  4790                           	callstack 24
  4791  001532                     
  4792                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4793  001532  9CD5               	bcf	213,6,c	;volatile
  4794  001534                     
  4795                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  4796  001534  0E00               	movlw	0
  4797  001536  6ED7               	movwf	215,c	;volatile
  4798                           
  4799                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  4800  001538  0E00               	movlw	0
  4801  00153A  6ED6               	movwf	214,c	;volatile
  4802  00153C                     
  4803                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4804  00153C  50D6               	movf	214,w,c	;volatile
  4805  00153E  CFD7 F00E          	movff	4055,??_TMR0_Initialize	;volatile
  4806  001542  6A0F               	clrf	(??_TMR0_Initialize+1)^0,c
  4807  001544  C00E  F00F         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4808  001548  6A0E               	clrf	??_TMR0_Initialize^0,c
  4809  00154A  100E               	iorwf	??_TMR0_Initialize^0,w,c
  4810  00154C  6E4B               	movwf	_timer0ReloadVal^0,c	;volatile
  4811  00154E  500F               	movf	(??_TMR0_Initialize+1)^0,w,c
  4812  001550  6E4C               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4813  001552                     
  4814                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4815  001552  94F2               	bcf	242,2,c	;volatile
  4816  001554                     
  4817                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4818  001554  8AF2               	bsf	242,5,c	;volatile
  4819  001556                     
  4820                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4821  001556  0ECE               	movlw	low _TMR0_DefaultInterruptHandler
  4822  001558  6E0C               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4823  00155A  0E16               	movlw	high _TMR0_DefaultInterruptHandler
  4824  00155C  6E0D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4825  00155E  EC4B  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  4826  001562                     
  4827                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  4828  001562  0E9F               	movlw	159
  4829  001564  6ED5               	movwf	213,c	;volatile
  4830  001566  0012               	return		;funcret
  4831  001568                     __end_of_TMR0_Initialize:
  4832                           	callstack 0
  4833                           
  4834 ;; *************** function _TMR0_SetInterruptHandler *****************
  4835 ;; Defined at:
  4836 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  InterruptHan    2   11[COMRAM] PTR FTN()void 
  4839 ;;		 -> TMR0_DefaultInterruptHandler(1), myTMR0ISR(1), 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		wreg, status,2, status,0
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;Total ram usage:        2 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    4
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_main
  4862 ;;		_TMR0_Initialize
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text21
  4867  001696                     __ptext21:
  4868                           	callstack 0
  4869  001696                     _TMR0_SetInterruptHandler:
  4870                           	callstack 26
  4871  001696                     
  4872                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4873  001696  C00C  F0A3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4874  00169A  C00D  F0A4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4875  00169E  0012               	return		;funcret
  4876  0016A0                     __end_of_TMR0_SetInterruptHandler:
  4877                           	callstack 0
  4878                           
  4879 ;; *************** function _PIN_MANAGER_Initialize *****************
  4880 ;; Defined at:
  4881 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      void 
  4888 ;; Registers used:
  4889 ;;		wreg, status,2
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;Total ram usage:        0 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    4
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_SYSTEM_Initialize
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text22
  4910  001568                     __ptext22:
  4911                           	callstack 0
  4912  001568                     _PIN_MANAGER_Initialize:
  4913                           	callstack 25
  4914  001568                     
  4915                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4916  001568  0E00               	movlw	0
  4917  00156A  6E89               	movwf	137,c	;volatile
  4918                           
  4919                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4920  00156C  0E00               	movlw	0
  4921  00156E  6E8A               	movwf	138,c	;volatile
  4922                           
  4923                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4924  001570  0E00               	movlw	0
  4925  001572  6E8B               	movwf	139,c	;volatile
  4926                           
  4927                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  4928  001574  0EBF               	movlw	191
  4929  001576  6E92               	movwf	146,c	;volatile
  4930  001578                     
  4931                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  4932  001578  6893               	setf	147,c	;volatile
  4933                           
  4934                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  4935  00157A  0EBF               	movlw	191
  4936  00157C  6E94               	movwf	148,c	;volatile
  4937                           
  4938                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4939  00157E  0E3C               	movlw	60
  4940  001580  010F               	movlb	15	; () banked
  4941  001582  6F3A               	movwf	58,b	;volatile
  4942                           
  4943                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  4944  001584  0E3F               	movlw	63
  4945  001586  6F39               	movwf	57,b	;volatile
  4946                           
  4947                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4948  001588  0E2F               	movlw	47
  4949  00158A  6F38               	movwf	56,b	;volatile
  4950                           
  4951                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4952  00158C  0E00               	movlw	0
  4953  00158E  6E61               	movwf	97,c	;volatile
  4954  001590                     
  4955                           ; BSR set to: 15
  4956                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4957  001590  8EF1               	bsf	241,7,c	;volatile
  4958  001592                     
  4959                           ; BSR set to: 15
  4960  001592  0012               	return		;funcret
  4961  001594                     __end_of_PIN_MANAGER_Initialize:
  4962                           	callstack 0
  4963                           
  4964 ;; *************** function _OSCILLATOR_Initialize *****************
  4965 ;; Defined at:
  4966 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;		None
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;		None
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      void 
  4973 ;; Registers used:
  4974 ;;		wreg, status,2
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;Total ram usage:        0 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    4
  4987 ;; This function calls:
  4988 ;;		Nothing
  4989 ;; This function is called by:
  4990 ;;		_SYSTEM_Initialize
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text23
  4995  00160C                     __ptext23:
  4996                           	callstack 0
  4997  00160C                     _OSCILLATOR_Initialize:
  4998                           	callstack 25
  4999  00160C                     
  5000                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  5001  00160C  0E70               	movlw	112
  5002  00160E  6ED3               	movwf	211,c	;volatile
  5003                           
  5004                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  5005  001610  0E04               	movlw	4
  5006  001612  6ED2               	movwf	210,c	;volatile
  5007                           
  5008                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  5009  001614  0E40               	movlw	64
  5010  001616  6E9B               	movwf	155,c	;volatile
  5011  001618                     l188:
  5012                           
  5013                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  5014  001618  AED2               	btfss	4050,7,c	;volatile
  5015  00161A  EF11  F00B         	goto	u1441
  5016  00161E  EF13  F00B         	goto	u1440
  5017  001622                     u1441:
  5018  001622  EF0C  F00B         	goto	l188
  5019  001626                     u1440:
  5020  001626  0012               	return		;funcret
  5021  001628                     __end_of_OSCILLATOR_Initialize:
  5022                           	callstack 0
  5023                           
  5024 ;; *************** function _INTERRUPT_Initialize *****************
  5025 ;; Defined at:
  5026 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;		None
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		None
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;Total ram usage:        0 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:    4
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_SYSTEM_Initialize
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text24
  5055  0016C8                     __ptext24:
  5056                           	callstack 0
  5057  0016C8                     _INTERRUPT_Initialize:
  5058                           	callstack 25
  5059  0016C8                     
  5060                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5061  0016C8  9ED0               	bcf	208,7,c	;volatile
  5062  0016CA  0012               	return		;funcret
  5063  0016CC                     __end_of_INTERRUPT_Initialize:
  5064                           	callstack 0
  5065                           
  5066 ;; *************** function _EUSART1_Initialize *****************
  5067 ;; Defined at:
  5068 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;		None
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;Total ram usage:        0 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    5
  5089 ;; This function calls:
  5090 ;;		_EUSART1_SetErrorHandler
  5091 ;;		_EUSART1_SetFramingErrorHandler
  5092 ;;		_EUSART1_SetOverrunErrorHandler
  5093 ;; This function is called by:
  5094 ;;		_SYSTEM_Initialize
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text25
  5099  001484                     __ptext25:
  5100                           	callstack 0
  5101  001484                     _EUSART1_Initialize:
  5102                           	callstack 24
  5103  001484                     
  5104                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5105  001484  0E08               	movlw	8
  5106  001486  6EB8               	movwf	184,c	;volatile
  5107                           
  5108                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5109  001488  0E90               	movlw	144
  5110  00148A  6EAB               	movwf	171,c	;volatile
  5111                           
  5112                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5113  00148C  0E24               	movlw	36
  5114  00148E  6EAC               	movwf	172,c	;volatile
  5115                           
  5116                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5117  001490  0E82               	movlw	130
  5118  001492  6EAF               	movwf	175,c	;volatile
  5119                           
  5120                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5121  001494  0E06               	movlw	6
  5122  001496  6EB0               	movwf	176,c	;volatile
  5123  001498                     
  5124                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5125  001498  0E00               	movlw	0
  5126  00149A  6E0C               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5127  00149C  0E00               	movlw	0
  5128  00149E  6E0D               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5129  0014A0  EC55  F00B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5130  0014A4                     
  5131                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5132  0014A4  0E00               	movlw	0
  5133  0014A6  6E0C               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5134  0014A8  0E00               	movlw	0
  5135  0014AA  6E0D               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5136  0014AC  EC50  F00B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5137  0014B0                     
  5138                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5139  0014B0  0E00               	movlw	0
  5140  0014B2  6E0C               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5141  0014B4  0E00               	movlw	0
  5142  0014B6  6E0D               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5143  0014B8  EC5A  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  5144  0014BC                     
  5145                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5146  0014BC  0E00               	movlw	0
  5147  0014BE  0100               	movlb	0	; () banked
  5148  0014C0  6FA5               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5149  0014C2                     
  5150                           ; BSR set to: 0
  5151  0014C2  0012               	return		;funcret
  5152  0014C4                     __end_of_EUSART1_Initialize:
  5153                           	callstack 0
  5154                           
  5155 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5156 ;; Defined at:
  5157 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  5160 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2, status,0
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;Total ram usage:        2 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    4
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_EUSART1_Initialize
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text26
  5187  0016A0                     __ptext26:
  5188                           	callstack 0
  5189  0016A0                     _EUSART1_SetOverrunErrorHandler:
  5190                           	callstack 24
  5191  0016A0                     
  5192                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5193  0016A0  C00C  F09D         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5194  0016A4  C00D  F09E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5195  0016A8  0012               	return		;funcret
  5196  0016AA                     __end_of_EUSART1_SetOverrunErrorHandler:
  5197                           	callstack 0
  5198                           
  5199 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5200 ;; Defined at:
  5201 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  5204 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;		None
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1    wreg      void 
  5209 ;; Registers used:
  5210 ;;		wreg, status,2, status,0
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;Total ram usage:        2 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:    4
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_EUSART1_Initialize
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text27
  5231  0016AA                     __ptext27:
  5232                           	callstack 0
  5233  0016AA                     _EUSART1_SetFramingErrorHandler:
  5234                           	callstack 24
  5235  0016AA                     
  5236                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5237  0016AA  C00C  F09F         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5238  0016AE  C00D  F0A0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5239  0016B2  0012               	return		;funcret
  5240  0016B4                     __end_of_EUSART1_SetFramingErrorHandler:
  5241                           	callstack 0
  5242                           
  5243 ;; *************** function _EUSART1_SetErrorHandler *****************
  5244 ;; Defined at:
  5245 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  5248 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;		None
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;Total ram usage:        2 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    4
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_EUSART1_Initialize
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text28
  5275  0016B4                     __ptext28:
  5276                           	callstack 0
  5277  0016B4                     _EUSART1_SetErrorHandler:
  5278                           	callstack 24
  5279  0016B4                     
  5280                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5281  0016B4  C00C  F09B         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5282  0016B8  C00D  F09C         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5283  0016BC  0012               	return		;funcret
  5284  0016BE                     __end_of_EUSART1_SetErrorHandler:
  5285                           	callstack 0
  5286                           
  5287 ;; *************** function _ADC_Initialize *****************
  5288 ;; Defined at:
  5289 ;;		line 62 in file "mcc_generated_files/adc.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;		None
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;		None
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  1    wreg      void 
  5296 ;; Registers used:
  5297 ;;		wreg, status,2
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;Total ram usage:        0 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; Hardware stack levels required when called:    4
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		_SYSTEM_Initialize
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text29
  5318  001658                     __ptext29:
  5319                           	callstack 0
  5320  001658                     _ADC_Initialize:
  5321                           	callstack 25
  5322  001658                     
  5323                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  5324  001658  0E00               	movlw	0
  5325  00165A  6EC1               	movwf	193,c	;volatile
  5326                           
  5327                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  5328  00165C  0E26               	movlw	38
  5329  00165E  6EC0               	movwf	192,c	;volatile
  5330                           
  5331                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  5332  001660  0E00               	movlw	0
  5333  001662  6EC3               	movwf	195,c	;volatile
  5334                           
  5335                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  5336  001664  0E00               	movlw	0
  5337  001666  6EC4               	movwf	196,c	;volatile
  5338                           
  5339                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  5340  001668  0E11               	movlw	17
  5341  00166A  6EC2               	movwf	194,c	;volatile
  5342  00166C  0012               	return		;funcret
  5343  00166E                     __end_of_ADC_Initialize:
  5344                           	callstack 0
  5345                           
  5346 ;; *************** function _EUSART1_is_rx_ready *****************
  5347 ;; Defined at:
  5348 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      _Bool 
  5355 ;; Registers used:
  5356 ;;		wreg
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;Total ram usage:        0 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    4
  5369 ;; This function calls:
  5370 ;;		Nothing
  5371 ;; This function is called by:
  5372 ;;		_main
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text30
  5377  00166E                     __ptext30:
  5378                           	callstack 0
  5379  00166E                     _EUSART1_is_rx_ready:
  5380                           	callstack 26
  5381  00166E                     
  5382                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5383  00166E  BA9E               	btfsc	158,5,c	;volatile
  5384  001670  EF3C  F00B         	goto	u1461
  5385  001674  EF3F  F00B         	goto	u1460
  5386  001678                     u1461:
  5387  001678  0E01               	movlw	1
  5388  00167A  EF40  F00B         	goto	u1466
  5389  00167E                     u1460:
  5390  00167E  0E00               	movlw	0
  5391  001680                     u1466:
  5392  001680  0012               	return		;funcret
  5393  001682                     __end_of_EUSART1_is_rx_ready:
  5394                           	callstack 0
  5395                           
  5396 ;; *************** function _EUSART1_Read *****************
  5397 ;; Defined at:
  5398 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;		None
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;		None
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      unsigned char 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;Total ram usage:        0 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    4
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_main
  5423 ;;		_getch
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text31
  5428  001594                     __ptext31:
  5429                           	callstack 0
  5430  001594                     _EUSART1_Read:
  5431                           	callstack 26
  5432  001594                     l291:
  5433                           
  5434                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5435  001594  AA9E               	btfss	158,5,c	;volatile
  5436  001596  EFCF  F00A         	goto	u1471
  5437  00159A  EFD1  F00A         	goto	u1470
  5438  00159E                     u1471:
  5439  00159E  EFCA  F00A         	goto	l291
  5440  0015A2                     u1470:
  5441  0015A2                     
  5442                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5443  0015A2  0E00               	movlw	0
  5444  0015A4  0100               	movlb	0	; () banked
  5445  0015A6  6FA5               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5446  0015A8                     
  5447                           ; BSR set to: 0
  5448                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5449  0015A8  A2AB               	btfss	171,1,c	;volatile
  5450  0015AA  EFD9  F00A         	goto	u1481
  5451  0015AE  EFDB  F00A         	goto	u1480
  5452  0015B2                     u1481:
  5453  0015B2  EFDD  F00A         	goto	l2316
  5454  0015B6                     u1480:
  5455  0015B6                     
  5456                           ; BSR set to: 0
  5457                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5458  0015B6  98AB               	bcf	171,4,c	;volatile
  5459                           
  5460                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5461  0015B8  88AB               	bsf	171,4,c	;volatile
  5462  0015BA                     l2316:
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5466  0015BA  50AE               	movf	174,w,c	;volatile
  5467  0015BC                     
  5468                           ; BSR set to: 0
  5469  0015BC  0012               	return		;funcret
  5470  0015BE                     __end_of_EUSART1_Read:
  5471                           	callstack 0
  5472                           
  5473 ;; *************** function _INTERRUPT_InterruptManager *****************
  5474 ;; Defined at:
  5475 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;Total ram usage:        4 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    3
  5496 ;; This function calls:
  5497 ;;		_TMR0_ISR
  5498 ;; This function is called by:
  5499 ;;		Interrupt level 2
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	intcode
  5504  000008                     __pintcode:
  5505                           	callstack 0
  5506  000008                     _INTERRUPT_InterruptManager:
  5507                           	callstack 18
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;incstack = 0
  5511  000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5512  00000A  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManager
  5513  00000E  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5514  000012  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5515  000016  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5516  00001A                     
  5517                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5518  00001A  AAF2               	btfss	242,5,c	;volatile
  5519  00001C  EF12  F000         	goto	i2u174_41
  5520  000020  EF14  F000         	goto	i2u174_40
  5521  000024                     i2u174_41:
  5522  000024  EF1D  F000         	goto	i2l341
  5523  000028                     i2u174_40:
  5524  000028  A4F2               	btfss	242,2,c	;volatile
  5525  00002A  EF19  F000         	goto	i2u175_41
  5526  00002E  EF1B  F000         	goto	i2u175_40
  5527  000032                     i2u175_41:
  5528  000032  EF1D  F000         	goto	i2l341
  5529  000036                     i2u175_40:
  5530  000036                     
  5531                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5532  000036  EC62  F00A         	call	_TMR0_ISR	;wreg free
  5533  00003A                     i2l341:
  5534  00003A  C00B  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5535  00003E  C00A  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5536  000042  C009  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5537  000046  C008  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5538  00004A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5539  00004C  0011               	retfie		f
  5540  00004E                     __end_of_INTERRUPT_InterruptManager:
  5541                           	callstack 0
  5542                           
  5543 ;; *************** function _TMR0_ISR *****************
  5544 ;; Defined at:
  5545 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;		None
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;		None
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      void 
  5552 ;; Registers used:
  5553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;Total ram usage:        0 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    2
  5566 ;; This function calls:
  5567 ;;		Absolute function
  5568 ;;		_TMR0_DefaultInterruptHandler
  5569 ;;		_myTMR0ISR
  5570 ;; This function is called by:
  5571 ;;		_INTERRUPT_InterruptManager
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text33
  5576  0014C4                     __ptext33:
  5577                           	callstack 0
  5578  0014C4                     _TMR0_ISR:
  5579                           	callstack 18
  5580  0014C4                     
  5581                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5582  0014C4  94F2               	bcf	242,2,c	;volatile
  5583  0014C6                     
  5584                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5585  0014C6  504C               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5586  0014C8  6ED7               	movwf	215,c	;volatile
  5587  0014CA                     
  5588                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5589  0014CA  C04B  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5590  0014CE                     
  5591                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5592  0014CE  0100               	movlb	0	; () banked
  5593  0014D0  51A3               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5594  0014D2  11A4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5595  0014D4  B4D8               	btfsc	status,2,c
  5596  0014D6  EF6F  F00A         	goto	i2u149_41
  5597  0014DA  EF71  F00A         	goto	i2u149_40
  5598  0014DE                     i2u149_41:
  5599  0014DE  EF7D  F00A         	goto	i2l156
  5600  0014E2                     i2u149_40:
  5601  0014E2                     
  5602                           ; BSR set to: 0
  5603                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  5604  0014E2  D802               	call	i2u150_48
  5605  0014E4  EF7D  F00A         	goto	i2u150_49
  5606  0014E8                     i2u150_48:
  5607  0014E8  0005               	push	
  5608  0014EA  6EFA               	movwf	pclath,c
  5609  0014EC  51A3               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5610  0014EE  6EFD               	movwf	tosl,c
  5611  0014F0  51A4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5612  0014F2  6EFE               	movwf	tosh,c
  5613  0014F4  6AFF               	clrf	tosu,c
  5614  0014F6  50FA               	movf	pclath,w,c
  5615  0014F8  0012               	return		;indir
  5616  0014FA                     i2u150_49:
  5617  0014FA                     i2l156:
  5618  0014FA  0012               	return		;funcret
  5619  0014FC                     __end_of_TMR0_ISR:
  5620                           	callstack 0
  5621                           
  5622 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5623 ;; Defined at:
  5624 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		None
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;Total ram usage:        0 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		_TMR0_Initialize
  5648 ;;		_TMR0_ISR
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text34
  5653  0016CE                     __ptext34:
  5654                           	callstack 0
  5655  0016CE                     _TMR0_DefaultInterruptHandler:
  5656                           	callstack 19
  5657  0016CE  0012               	return		;funcret
  5658  0016D0                     __end_of_TMR0_DefaultInterruptHandler:
  5659                           	callstack 0
  5660                           
  5661 ;; *************** function _myTMR0ISR *****************
  5662 ;; Defined at:
  5663 ;;		line 226 in file "main.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  micReading      1    6[COMRAM] unsigned char 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      void 
  5670 ;; Registers used:
  5671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;Total ram usage:        5 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    1
  5684 ;; This function calls:
  5685 ;;		i2_TMR0_WriteTimer
  5686 ;; This function is called by:
  5687 ;;		_main
  5688 ;;		_TMR0_ISR
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text35
  5693  000FA4                     __ptext35:
  5694                           	callstack 0
  5695  000FA4                     _myTMR0ISR:
  5696                           	callstack 18
  5697  000FA4                     
  5698                           ;main.c: 229:     uint8_t micReading = ADRESH;
  5699  000FA4  CFC4 F007          	movff	4036,myTMR0ISR@micReading	;volatile
  5700                           
  5701                           ;main.c: 234:     ADCON0bits.GO_NOT_DONE = 1;
  5702  000FA8  82C2               	bsf	194,1,c	;volatile
  5703                           
  5704                           ;main.c: 238:     switch(timerState){
  5705  000FAA  EF3B  F008         	goto	i2l2232
  5706  000FAE                     i2l2206:
  5707                           
  5708                           ;main.c: 242:             if(fillBuffer){
  5709  000FAE  5050               	movf	_fillBuffer^0,w,c
  5710  000FB0  B4D8               	btfsc	status,2,c
  5711  000FB2  EFDD  F007         	goto	i2u140_41
  5712  000FB6  EFDF  F007         	goto	i2u140_40
  5713  000FBA                     i2u140_41:
  5714  000FBA  EF54  F008         	goto	i2l86
  5715  000FBE                     i2u140_40:
  5716  000FBE                     
  5717                           ;main.c: 243:                 timerState = MIC_WAIT_FOR_TRIGGER;
  5718  000FBE  0E01               	movlw	1
  5719  000FC0  6E4F               	movwf	_timerState^0,c
  5720                           
  5721                           ;main.c: 244:                 bufferIdx = 0;
  5722  000FC2  0E00               	movlw	0
  5723  000FC4  6E4E               	movwf	(_bufferIdx+1)^0,c
  5724  000FC6  0E00               	movlw	0
  5725  000FC8  6E4D               	movwf	_bufferIdx^0,c
  5726                           
  5727                           ;main.c: 245:                 fillBuffer = 0;
  5728  000FCA  0E00               	movlw	0
  5729  000FCC  6E50               	movwf	_fillBuffer^0,c
  5730  000FCE  EF54  F008         	goto	i2l86
  5731  000FD2                     i2l2210:
  5732                           
  5733                           ;main.c: 251:             if(micReading <= 128 + thresholdRange && micReading >= 128 - t
      +                          hresholdRange){
  5734  000FD2  5007               	movf	myTMR0ISR@micReading^0,w,c
  5735  000FD4  6E03               	movwf	??_myTMR0ISR^0,c
  5736  000FD6  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  5737  000FD8  0E80               	movlw	128
  5738  000FDA  0101               	movlb	1	; () banked
  5739  000FDC  2593               	addwf	_thresholdRange& (0+255),w,b
  5740  000FDE  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  5741  000FE0  0E00               	movlw	0
  5742  000FE2  2194               	addwfc	(_thresholdRange+1)& (0+255),w,b
  5743  000FE4  6E06               	movwf	(??_myTMR0ISR+3)^0,c
  5744  000FE6  5003               	movf	??_myTMR0ISR^0,w,c
  5745  000FE8  5C05               	subwf	(??_myTMR0ISR+2)^0,w,c
  5746  000FEA  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5747  000FEC  5806               	subwfb	(??_myTMR0ISR+3)^0,w,c
  5748  000FEE  A0D8               	btfss	status,0,c
  5749  000FF0  EFFC  F007         	goto	i2u141_41
  5750  000FF4  EFFE  F007         	goto	i2u141_40
  5751  000FF8                     i2u141_41:
  5752  000FF8  EF54  F008         	goto	i2l86
  5753  000FFC                     i2u141_40:
  5754  000FFC                     
  5755                           ; BSR set to: 1
  5756  000FFC  0E80               	movlw	128
  5757  000FFE  6E03               	movwf	??_myTMR0ISR^0,c
  5758  001000  0E00               	movlw	0
  5759  001002  6E04               	movwf	(??_myTMR0ISR+1)^0,c
  5760  001004  5193               	movf	_thresholdRange& (0+255),w,b
  5761  001006  5E03               	subwf	??_myTMR0ISR^0,f,c
  5762  001008  5194               	movf	(_thresholdRange+1)& (0+255),w,b
  5763  00100A  5A04               	subwfb	(??_myTMR0ISR+1)^0,f,c
  5764  00100C  5007               	movf	myTMR0ISR@micReading^0,w,c
  5765  00100E  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  5766  001010  6A06               	clrf	(??_myTMR0ISR+3)^0,c
  5767  001012  5003               	movf	??_myTMR0ISR^0,w,c
  5768  001014  5C05               	subwf	(??_myTMR0ISR+2)^0,w,c
  5769  001016  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5770  001018  5806               	subwfb	(??_myTMR0ISR+3)^0,w,c
  5771  00101A  A0D8               	btfss	status,0,c
  5772  00101C  EF12  F008         	goto	i2u142_41
  5773  001020  EF14  F008         	goto	i2u142_40
  5774  001024                     i2u142_41:
  5775  001024  EF54  F008         	goto	i2l86
  5776  001028                     i2u142_40:
  5777  001028                     
  5778                           ; BSR set to: 1
  5779                           ;main.c: 252:                 adc_reading[bufferIdx] = micReading;
  5780  001028  0E00               	movlw	low _adc_reading
  5781  00102A  244D               	addwf	_bufferIdx^0,w,c
  5782  00102C  6ED9               	movwf	fsr2l,c
  5783  00102E  0E02               	movlw	high _adc_reading
  5784  001030  204E               	addwfc	(_bufferIdx+1)^0,w,c
  5785  001032  6EDA               	movwf	fsr2h,c
  5786  001034  C007  FFDF         	movff	myTMR0ISR@micReading,indf2
  5787  001038                     
  5788                           ; BSR set to: 1
  5789                           ;main.c: 253:                 bufferIdx += 1;
  5790  001038  4A4D               	infsnz	_bufferIdx^0,f,c
  5791  00103A  2A4E               	incf	(_bufferIdx+1)^0,f,c
  5792  00103C                     
  5793                           ; BSR set to: 1
  5794                           ;main.c: 254:                 timerState = MIC_ACQUIRE;
  5795  00103C  0E02               	movlw	2
  5796  00103E  6E4F               	movwf	_timerState^0,c
  5797  001040  EF54  F008         	goto	i2l86
  5798  001044                     i2l2220:
  5799                           
  5800                           ;main.c: 258:             adc_reading[bufferIdx] = micReading;
  5801  001044  0E00               	movlw	low _adc_reading
  5802  001046  244D               	addwf	_bufferIdx^0,w,c
  5803  001048  6ED9               	movwf	fsr2l,c
  5804  00104A  0E02               	movlw	high _adc_reading
  5805  00104C  204E               	addwfc	(_bufferIdx+1)^0,w,c
  5806  00104E  6EDA               	movwf	fsr2h,c
  5807  001050  C007  FFDF         	movff	myTMR0ISR@micReading,indf2
  5808  001054                     
  5809                           ;main.c: 259:             bufferIdx += 1;
  5810  001054  4A4D               	infsnz	_bufferIdx^0,f,c
  5811  001056  2A4E               	incf	(_bufferIdx+1)^0,f,c
  5812  001058                     
  5813                           ;main.c: 260:             if(bufferIdx >= 256){
  5814  001058  044E               	decf	(_bufferIdx+1)^0,w,c
  5815  00105A  A0D8               	btfss	status,0,c
  5816  00105C  EF32  F008         	goto	i2u143_41
  5817  001060  EF34  F008         	goto	i2u143_40
  5818  001064                     i2u143_41:
  5819  001064  EF54  F008         	goto	i2l86
  5820  001068                     i2u143_40:
  5821  001068                     
  5822                           ;main.c: 262:                 samplesCollected = 1;
  5823  001068  0E01               	movlw	1
  5824  00106A  0101               	movlb	1	; () banked
  5825  00106C  6F95               	movwf	_samplesCollected& (0+255),b
  5826                           
  5827                           ;main.c: 263:                 timerState = MIC_IDLE;
  5828  00106E  0E00               	movlw	0
  5829  001070  6E4F               	movwf	_timerState^0,c
  5830  001072  EF54  F008         	goto	i2l86
  5831  001076                     i2l2232:
  5832  001076  504F               	movf	_timerState^0,w,c
  5833  001078  6E03               	movwf	??_myTMR0ISR^0,c
  5834  00107A  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  5835                           
  5836                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5837                           ; Switch size 1, requested type "simple"
  5838                           ; Number of cases is 1, Range of values is 0 to 0
  5839                           ; switch strategies available:
  5840                           ; Name         Instructions Cycles
  5841                           ; simple_byte            4     3 (average)
  5842                           ;	Chosen strategy is simple_byte
  5843  00107C  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5844  00107E  0A00               	xorlw	0	; case 0
  5845  001080  B4D8               	btfsc	status,2,c
  5846  001082  EF45  F008         	goto	i2l3116
  5847  001086  EF54  F008         	goto	i2l86
  5848  00108A                     i2l3116:
  5849                           
  5850                           ; Switch size 1, requested type "simple"
  5851                           ; Number of cases is 3, Range of values is 0 to 2
  5852                           ; switch strategies available:
  5853                           ; Name         Instructions Cycles
  5854                           ; simple_byte           10     6 (average)
  5855                           ;	Chosen strategy is simple_byte
  5856  00108A  5003               	movf	??_myTMR0ISR^0,w,c
  5857  00108C  0A00               	xorlw	0	; case 0
  5858  00108E  B4D8               	btfsc	status,2,c
  5859  001090  EFD7  F007         	goto	i2l2206
  5860  001094  0A01               	xorlw	1	; case 1
  5861  001096  B4D8               	btfsc	status,2,c
  5862  001098  EFE9  F007         	goto	i2l2210
  5863  00109C  0A03               	xorlw	3	; case 2
  5864  00109E  B4D8               	btfsc	status,2,c
  5865  0010A0  EF22  F008         	goto	i2l2220
  5866  0010A4  EF54  F008         	goto	i2l86
  5867  0010A8                     i2l86:
  5868  0010A8  0012               	return		;funcret
  5869  0010AA                     __end_of_myTMR0ISR:
  5870                           	callstack 0
  5871                           
  5872 ;; *************** function i2_TMR0_WriteTimer *****************
  5873 ;; Defined at:
  5874 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  timerVal        2    0[COMRAM] unsigned short 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      void 
  5881 ;; Registers used:
  5882 ;;		wreg, status,2
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;Total ram usage:        2 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		_myTMR0ISR
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           	psect	text36
  5902  0016BE                     __ptext36:
  5903                           	callstack 0
  5904  0016BE                     i2_TMR0_WriteTimer:
  5905                           	callstack 18
  5906  0016BE                     
  5907                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5908  0016BE  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  5909  0016C0  6ED7               	movwf	215,c	;volatile
  5910  0016C2                     
  5911                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5912  0016C2  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  5913  0016C6  0012               	return		;funcret
  5914  0016C8                     __end_ofi2_TMR0_WriteTimer:
  5915                           	callstack 0
  5916                           
  5917                           	psect	text37
  5918  000000                     __ptext37:
  5919                           	callstack 0
  5920  000000                     
  5921                           	psect	rparam
  5922  0000                     
  5923                           	psect	temp
  5924  000051                     btemp:
  5925                           	callstack 0
  5926  000051                     	ds	1
  5927  0000                     int$flags	set	btemp
  5928  0000                     wtemp8	set	btemp+1
  5929  0000                     ttemp5	set	btemp+1
  5930  0000                     ttemp6	set	btemp+4
  5931  0000                     ttemp7	set	btemp+8
  5932                           
  5933                           	psect	idloc
  5934                           
  5935                           ;Config register IDLOC0 @ 0x200000
  5936                           ;	unspecified, using default values
  5937  200000                     	org	2097152
  5938  200000  FF                 	db	255
  5939                           
  5940                           ;Config register IDLOC1 @ 0x200001
  5941                           ;	unspecified, using default values
  5942  200001                     	org	2097153
  5943  200001  FF                 	db	255
  5944                           
  5945                           ;Config register IDLOC2 @ 0x200002
  5946                           ;	unspecified, using default values
  5947  200002                     	org	2097154
  5948  200002  FF                 	db	255
  5949                           
  5950                           ;Config register IDLOC3 @ 0x200003
  5951                           ;	unspecified, using default values
  5952  200003                     	org	2097155
  5953  200003  FF                 	db	255
  5954                           
  5955                           ;Config register IDLOC4 @ 0x200004
  5956                           ;	unspecified, using default values
  5957  200004                     	org	2097156
  5958  200004  FF                 	db	255
  5959                           
  5960                           ;Config register IDLOC5 @ 0x200005
  5961                           ;	unspecified, using default values
  5962  200005                     	org	2097157
  5963  200005  FF                 	db	255
  5964                           
  5965                           ;Config register IDLOC6 @ 0x200006
  5966                           ;	unspecified, using default values
  5967  200006                     	org	2097158
  5968  200006  FF                 	db	255
  5969                           
  5970                           ;Config register IDLOC7 @ 0x200007
  5971                           ;	unspecified, using default values
  5972  200007                     	org	2097159
  5973  200007  FF                 	db	255
  5974                           
  5975                           	psect	config
  5976                           
  5977                           ; Padding undefined space
  5978  300000                     	org	3145728
  5979  300000  FF                 	db	255
  5980                           
  5981                           ;Config register CONFIG1H @ 0x300001
  5982                           ;	Oscillator Selection bits
  5983                           ;	FOSC = INTIO67, Internal oscillator block
  5984                           ;	4X PLL Enable
  5985                           ;	PLLCFG = OFF, Oscillator used directly
  5986                           ;	Primary clock enable bit
  5987                           ;	PRICLKEN = ON, Primary clock enabled
  5988                           ;	Fail-Safe Clock Monitor Enable bit
  5989                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5990                           ;	Internal/External Oscillator Switchover bit
  5991                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5992  300001                     	org	3145729
  5993  300001  28                 	db	40
  5994                           
  5995                           ;Config register CONFIG2L @ 0x300002
  5996                           ;	Power-up Timer Enable bit
  5997                           ;	PWRTEN = OFF, Power up timer disabled
  5998                           ;	Brown-out Reset Enable bits
  5999                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6000                           ;	Brown Out Reset Voltage bits
  6001                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6002  300002                     	org	3145730
  6003  300002  1F                 	db	31
  6004                           
  6005                           ;Config register CONFIG2H @ 0x300003
  6006                           ;	Watchdog Timer Enable bits
  6007                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6008                           ;	Watchdog Timer Postscale Select bits
  6009                           ;	WDTPS = 32768, 1:32768
  6010  300003                     	org	3145731
  6011  300003  3C                 	db	60
  6012                           
  6013                           ; Padding undefined space
  6014  300004                     	org	3145732
  6015  300004  FF                 	db	255
  6016                           
  6017                           ;Config register CONFIG3H @ 0x300005
  6018                           ;	CCP2 MUX bit
  6019                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6020                           ;	PORTB A/D Enable bit
  6021                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6022                           ;	P3A/CCP3 Mux bit
  6023                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6024                           ;	HFINTOSC Fast Start-up
  6025                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6026                           ;	Timer3 Clock input mux bit
  6027                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6028                           ;	ECCP2 B output mux bit
  6029                           ;	P2BMX = PORTB5, P2B is on RB5
  6030                           ;	MCLR Pin Enable bit
  6031                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6032  300005                     	org	3145733
  6033  300005  BF                 	db	191
  6034                           
  6035                           ;Config register CONFIG4L @ 0x300006
  6036                           ;	Stack Full/Underflow Reset Enable bit
  6037                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6038                           ;	Single-Supply ICSP Enable bit
  6039                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6040                           ;	Extended Instruction Set Enable bit
  6041                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6042                           ;	Background Debug
  6043                           ;	DEBUG = OFF, Disabled
  6044  300006                     	org	3145734
  6045  300006  85                 	db	133
  6046                           
  6047                           ; Padding undefined space
  6048  300007                     	org	3145735
  6049  300007  FF                 	db	255
  6050                           
  6051                           ;Config register CONFIG5L @ 0x300008
  6052                           ;	Code Protection Block 0
  6053                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6054                           ;	Code Protection Block 1
  6055                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6056                           ;	Code Protection Block 2
  6057                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6058                           ;	Code Protection Block 3
  6059                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6060  300008                     	org	3145736
  6061  300008  0F                 	db	15
  6062                           
  6063                           ;Config register CONFIG5H @ 0x300009
  6064                           ;	Boot Block Code Protection bit
  6065                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6066                           ;	Data EEPROM Code Protection bit
  6067                           ;	CPD = OFF, Data EEPROM not code-protected
  6068  300009                     	org	3145737
  6069  300009  C0                 	db	192
  6070                           
  6071                           ;Config register CONFIG6L @ 0x30000A
  6072                           ;	Write Protection Block 0
  6073                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6074                           ;	Write Protection Block 1
  6075                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6076                           ;	Write Protection Block 2
  6077                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6078                           ;	Write Protection Block 3
  6079                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6080  30000A                     	org	3145738
  6081  30000A  0F                 	db	15
  6082                           
  6083                           ;Config register CONFIG6H @ 0x30000B
  6084                           ;	Configuration Register Write Protection bit
  6085                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6086                           ;	Boot Block Write Protection bit
  6087                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6088                           ;	Data EEPROM Write Protection bit
  6089                           ;	WRTD = OFF, Data EEPROM not write-protected
  6090  30000B                     	org	3145739
  6091  30000B  E0                 	db	224
  6092                           
  6093                           ;Config register CONFIG7L @ 0x30000C
  6094                           ;	Table Read Protection Block 0
  6095                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6096                           ;	Table Read Protection Block 1
  6097                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6098                           ;	Table Read Protection Block 2
  6099                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6100                           ;	Table Read Protection Block 3
  6101                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6102  30000C                     	org	3145740
  6103  30000C  0F                 	db	15
  6104                           
  6105                           ;Config register CONFIG7H @ 0x30000D
  6106                           ;	Boot Block Table Read Protection bit
  6107                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6108  30000D                     	org	3145741
  6109  30000D  40                 	db	64
  6110                           tosu	equ	0xFFF
  6111                           tosh	equ	0xFFE
  6112                           tosl	equ	0xFFD
  6113                           stkptr	equ	0xFFC
  6114                           pclatu	equ	0xFFB
  6115                           pclath	equ	0xFFA
  6116                           pcl	equ	0xFF9
  6117                           tblptru	equ	0xFF8
  6118                           tblptrh	equ	0xFF7
  6119                           tblptrl	equ	0xFF6
  6120                           tablat	equ	0xFF5
  6121                           prodh	equ	0xFF4
  6122                           prodl	equ	0xFF3
  6123                           indf0	equ	0xFEF
  6124                           postinc0	equ	0xFEE
  6125                           postdec0	equ	0xFED
  6126                           preinc0	equ	0xFEC
  6127                           plusw0	equ	0xFEB
  6128                           fsr0h	equ	0xFEA
  6129                           fsr0l	equ	0xFE9
  6130                           wreg	equ	0xFE8
  6131                           indf1	equ	0xFE7
  6132                           postinc1	equ	0xFE6
  6133                           postdec1	equ	0xFE5
  6134                           preinc1	equ	0xFE4
  6135                           plusw1	equ	0xFE3
  6136                           fsr1h	equ	0xFE2
  6137                           fsr1l	equ	0xFE1
  6138                           bsr	equ	0xFE0
  6139                           indf2	equ	0xFDF
  6140                           postinc2	equ	0xFDE
  6141                           postdec2	equ	0xFDD
  6142                           preinc2	equ	0xFDC
  6143                           plusw2	equ	0xFDB
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8

Data Sizes:
    Strings     556
    Constant    0
    Data        2
    BSS         314
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      80
    BANK0           160     57     102
    BANK1           256    147     150
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1332_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[29]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[29]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_29(CODE[17]), STR_28(CODE[23]), STR_27(CODE[24]), STR_26(CODE[24]), 
		 -> STR_25(CODE[24]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[6]), 
		 -> STR_21(CODE[33]), STR_20(CODE[71]), STR_19(CODE[43]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[33]), 
		 -> STR_13(CODE[29]), STR_12(CODE[27]), STR_11(CODE[15]), STR_10(CODE[35]), 
		 -> STR_9(CODE[4]), STR_8(CODE[53]), STR_7(CODE[4]), STR_6(CODE[9]), 
		 -> STR_5(CODE[52]), STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), myTMR0ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), myTMR0ISR(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               159   159      0   17755
                                             45 BANK0     12    12      0
                                              0 BANK1    147   147      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                            ___aldiv
                            ___lwdiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   14342
                                             33 BANK0     12     4      8
                            ___aldiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11645
                                             66 COMRAM     2     2      0
                                             27 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   11163
                                             58 COMRAM     8     2      6
                                             18 BANK0      9     9      0
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6701
                                             40 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4435
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             22 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1546
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                             12 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     449
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             11 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             11 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             13 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     159
                                              7 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     159
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           5     5      0     159
                                              2 COMRAM     5     5      0
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   ___aldiv
   ___lwdiv
   ___wmul
   _printf
     ___aldiv (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       i2_TMR0_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     93      96       7       58.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     39      66       5       63.7%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      50       1       85.1%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     24C      12        0.0%
DATA                 0      0     24C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 21 08:58:12 2020

                                            l33 0064                                              l43 0138  
                                            l60 04F0                                              l36 00BC  
                           ___wmul@multiplicand 000E                                 _timer0ReloadVal 004B  
                           myTMR0ISR@micReading 0007                                             l113 1592  
                                           l210 166C                                             l301 1656  
                                           l137 1566                                             l322 16A8  
                                           l307 168A                                             l325 16BC  
                                           l149 1694                                             l334 16CA  
                                           l319 16B2                                             l191 1626  
                                           l159 169E                                             l423 0FA2  
                                           l344 160A                                             l185 1640  
                                           l282 1680                                             l274 14C2  
                                           l291 1594                                             l188 1618  
                                           l295 15BC                                             l471 0E96  
                                           l298 1644                                             l458 0D32  
                                           l842 1348                                             l835 1340  
                                           _abs 1444                                             _pad 117E  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1101 0BAA  
                                          l1110 13A4                                            l1022 15E4  
                                          l1111 13AC                                            l1130 12D4  
                                          l1115 147A                                            ?_abs 001E  
                                          l1052 1204                                            l1070 117C  
                                          l1118 1482                                            l1054 123E  
                                          l1144 1530                                            l3000 039A  
                                          l1065 110E                                            l1049 11C2  
                                          l1138 1442                                            l3010 042A  
                                          l3002 03B6                                            l1068 1150  
                                          l1076 0736                                            l3020 04D8  
                                          l3012 04A4                                            l3004 03CC  
                                          l2310 15A2                                            l2142 1696  
                                          l1078 073E                                            l3022 04E6  
                                          l3014 04B4                                            l3006 040A  
                                          l2312 15A8                                            l2304 166E  
                                          l2144 16AA                                            l2240 1578  
                                          l2400 133A                                            l1096 0976  
                                          l3040 053C                                            l3032 051A  
                                          l3016 04BE                                            l3008 041E  
                                          l2314 15B6                                            l2146 16A0  
                                          l2242 1590                                            l2250 1552  
                                          l2330 15E6                                            l3114 0654  
                                          l3050 0620                                            l3042 057A  
                                          l3034 0528                                            l3026 04F6  
                                          l2316 15BA                                            l2308 1594  
                                          l2148 16B4                                            l2260 160C  
                                          l2252 1554                                            l2244 1532  
                                          l2340 0EAA                                            l2332 1602  
                                          l3052 0628                                            l3044 058E  
                                          l3028 0500                                            l2262 1658  
                                          l2270 14B0                                            l2238 1568  
                                          l2254 1556                                            l2246 1534  
                                          l2350 0EE0                                            l2342 0EBA  
                                          l3046 0596                                            l3038 0532  
                                          l2272 14BC                                            l2264 1484  
                                          l2256 1562                                            l2248 153C  
                                          l2360 0F28                                            l2352 0EF0  
                                          l2344 0EBE                                            l2336 0E98  
                                          l3048 05D4                                            l3056 063E  
                                          l2266 1498                                            l2258 16C8  
                                          l2290 1638                                            l2282 1628  
                                          l2370 0F6C                                            l2362 0F32  
                                          l2354 0F06                                            l2346 0ECC  
                                          l2338 0E9C                                            l2268 14A4  
                                          l2292 163C                                            l2284 162C  
                                          l2364 0F50                                            l2356 0F0E  
                                          l2372 0F72                                            l2348 0EDC  
                                          l2380 12D6                                            l2620 1240  
                                          l2700 0D46                                            l2286 1630  
                                          l2294 168C                                            l2374 0F82  
                                          l2366 0F60                                            l2358 0F1A  
                                          l2390 130E                                            l2382 12DE  
                                          l2614 1644                                            l2630 12C2  
                                          l2622 1252                                            l2710 0DB6  
                                          l2702 0D66                                            l2288 1634  
                                          l2296 1690                                            l2376 0F92  
                                          l2368 0F62                                            l2392 1314  
                                          l2384 12F0                                            l2616 1652  
                                          l2624 1264                                            l2720 0E2E  
                                          l2712 0DBE                                            l2704 0D6A  
                                          l2640 1422                                            l2800 0746  
                                          l2394 132A                                            l2386 12F8  
                                          l2618 1684                                            l2626 126E  
                                          l2722 0E40                                            l2714 0DD2  
                                          l2706 0D78                                            l2634 1400  
                                          l2642 14FC                                            l2810 077C  
                                          l2802 0758                                            l2396 1332  
                                          l2388 1300                                            l2628 128C  
                                          l2660 0BE2                                            l2652 0BAC  
                                          l2716 0DE0                                            l2724 0E46  
                                          l2708 0D98                                            l2636 140C  
                                          l2644 1508                                            l2740 11BA  
                                          l2732 117E                                            l2812 0782  
                                          l2820 0876                                            l2804 0766  
                                          l2900 1352                                            l2398 1334  
                                          l2670 0C3E                                            l2662 0BF0  
                                          l2654 0BB0                                            l2726 0E56  
                                          l2718 0E0E                                            l2638 141E  
                                          l2646 150C                                            l2750 1226  
                                          l2742 11CE                                            l2734 118C  
                                          l2822 0892                                            l2830 08F2  
                                          l2814 0804                                            l2806 076C  
                                          l2902 1360                                            l2760 10BC  
                                          l2680 0CA8                                            l2672 0C46  
                                          l2664 0C10                                            l2656 0BBE  
                                          l2728 0E76                                            l2648 1524  
                                          l2744 11E2                                            l2736 11A0  
                                          l2840 0936                                            l2832 0904  
                                          l2824 08B0                                            l2816 080C  
                                          l2808 0774                                            l2904 1386  
                                          l2920 007E                                            l2912 0052  
                                          l2762 10C8                                            l2690 0CF2  
                                          l2682 0CC8                                            l2674 0C5A  
                                          l2666 0C14                                            l2658 0BDE  
                                          l2754 1444                                            l2746 11E6  
                                          l2738 11AE                                            l2842 093E  
                                          l2834 0912                                            l2826 08CA  
                                          l2818 0812                                            l2850 099E  
                                          l2906 15BE                                            l2930 00AC  
                                          l2922 0080                                            l2914 0056  
                                          l2780 115E                                            l2772 1106  
                                          l2764 10D4                                            l2692 0D12  
                                          l2684 0CCA                                            l2676 0C68  
                                          l2668 0C20                                            l2756 145E  
                                          l2748 1212                                            l2836 0918  
                                          l2844 094E                                            l2828 08E4  
                                          l2860 0A1A                                            l2852 09AC  
                                          l2908 15C8                                            l2940 00F6  
                                          l2932 00BA                                            l2924 0082  
                                          l2916 0062                                            l2782 1170  
                                          l2774 111A                                            l2766 10E2  
                                          l2758 10AA                                            l2686 0CDC  
                                          l2678 0C7A                                            l2838 092A  
                                          l2790 06E0                                            l2870 0ACC  
                                          l2854 09BC                                            l2950 0160  
                                          l2934 00CA                                            l2926 0090  
                                          l2918 0072                                            ?_pad 001E  
                                          l2776 112E                                            l2768 10F4  
                                          l2688 0CE2                                            l2696 0D34  
                                          l2792 0700                                            l2880 0B4C  
                                          l2864 0A36                                            l2856 09C0  
                                          l2848 0978                                            l2952 0166  
                                          l2936 00DC                                            l2928 009E  
                                          l2778 1132                                            l2698 0D38  
                                          l2794 070E                                            l2786 0696  
                                          l2874 0B04                                            l2866 0A5C  
                                          l2858 09E6                                            l2890 0B72  
                                          l2970 01DE                                            l2954 0176  
                                          l2946 0100                                            l2938 00E0  
                                          l2796 0710                                            l2788 06B6  
                                          l2892 0B98                                            l2876 0B2A  
                                          l2884 0B58                                            l2868 0A82  
                                          l2980 022A                                            l2972 01E2  
                                          l2964 0196                                            l2956 0184  
                                          l2948 0124                                            l2798 072A  
                                          l2886 0B66                                            l2878 0B38  
                                          l2990 0272                                            l2982 0230  
                                          l2974 01E6                                            l2966 01B2  
                                          l2958 018E                                            l2992 0310  
                                          l2984 0246                                            l2976 01F6  
                                          l2968 01CE                                            l2898 134A  
                                          l2994 0364                                            l2986 025C  
                                          l2978 0202                                            l2996 0368  
                                          l2988 0266                                            l2998 037E  
                                          STR_1 FFCE                                            STR_2 FF2A  
                                          STR_3 FFD9                                            STR_4 FFFC  
                                          STR_5 FE4F                                            STR_6 FFE2  
                                          STR_7 FFF8                                            STR_8 FE1A  
                                          STR_9 FFF8                                            u2000 145E  
                                          u2001 145A                                            u2010 10BC  
                                          u2011 10B8                                            u2020 10E2  
                                          u2100 072A                                            u2021 10DE  
                                          u2101 0726                                            u2030 1102  
                                          u2110 0758                                            u2031 10FE  
                                          u2111 0754                                            u2040 1150  
                                          u2200 092A                                            u2120 0766  
                                          u2041 114C                                            u2201 0926  
                                          u2121 0762                                            u2050 115E  
                                          u2130 0892                                            u2210 099E  
                                          u2051 115A                                            u2131 088E  
                                          u2211 099A                                            u2140 08B0  
                                          u2060 06C8                                            u2220 09E6  
                                          u2300 0124                                            u2141 08AC  
                                          u2061 06C2                                            u2221 09E2  
                                          u2301 0120                                            _LATA 000F89  
                                          u1510 0EAA                                            u2150 08CA  
                                          u2070 06CA                                            u2230 0A5C  
                                          u2310 0176                                            _LATB 000F8A  
                                          u1511 0EA6                                            u2151 08C6  
                                          u2231 0A58                                            u2311 0172  
                                          _LATC 000F8B                                            u1440 1626  
                                          u1520 0ECC                                            u2160 08E4  
                                          u2080 06E0                                            u2240 0A82  
                                          u2400 058E                                            u2320 01B2  
                                          u1441 1622                                            u1521 0EC8  
                                          u2161 08E0                                            u2081 06DC  
                                          u2241 0A7E                                            u2401 058A  
                                          u2321 01AE                                            u1530 0F06  
                                          u2170 08F2                                            u2090 070E  
                                          u2250 0B2A                                            u2330 01CE  
                                          u1531 0F02                                            u2171 08EE  
                                          u2091 070A                                            u2251 0B26  
                                          u2331 01CA                                            u1460 167E  
                                          u1540 0F28                                            u2180 0904  
                                          u2260 13A4                                            u2340 01F6  
                                          u1461 1678                                            u1541 0F24  
                                          u2181 0900                                            u2261 13A0  
                                          u2341 01F2                                            u1470 15A2  
                                          u1550 0F50                                            u2190 0912  
                                          u2350 0246                                            u2270 0072  
                                          u1471 159E                                            u1551 0F4C  
                                          u2191 090E                                            u2351 0242  
                                          u2271 006E                                            u1480 15B6  
                                          u1560 0F82                                            u1800 12C2  
                                          u2360 037E                                            u2280 00CA  
                                          u1481 15B2                                            u1561 0F7E  
                                          u1801 12BE                                            u2361 037A  
                                          u2281 00C6                                            u1466 1680  
                                          u1570 12F0                                            u1810 1442  
                                          u2370 041E                                            u2290 00DC  
                                          u1571 12EC                                            u1811 143E  
                                          u2371 041A                                            u2291 00D8  
                                          u1580 130E                                            u1900 0D46  
                                          u1820 1524                                            u2380 04D4  
                                          u1581 130A                                            u1901 0D42  
                                          u1821 1520                                            u2381 04D0  
                                          u1590 132A                                            u1830 0BBE  
                                          u1910 0D78                                            u2390 0516  
                                          u1591 1326                                            u1831 0BBA  
                                          u1911 0D74                                            u2391 0512  
                                          u1760 1652                                            u1840 0BF0  
                                          u1920 0DB6                                            u1761 164E  
                                          u1841 0BEC                                            u1921 0DB2  
                                          u1770 1252                                            u1930 0DE0  
                                          u1771 124E                                            u1851 0C1A  
                                          u1931 0DDC                                            u1780 1264  
                                          u1860 0C3E                                            u1940 0E0E  
                                          u1781 1260                                            u1861 0C3A  
                                          u1941 0E0A                                            u1790 128C  
                                          u1870 0C68                                            u1950 0E56  
                                          u1791 1288                                            u1871 0C64  
                                          u1951 0E52                                            u1880 0CA8  
                                          u1960 118C                                            u1881 0CA4  
                                          u1961 1188                                            u1890 0CF2  
                                          u1970 11AE                                            u1891 0CEE  
                                          u1971 11AA                                            u1980 1204  
                                          u1981 1200                                            u1990 1212  
                                          u1991 120E                                            i2l86 10A8  
                                          _WPUB 000F61                                   _EUSART1_Write 1642  
                                          abs@a 001E                                            _dbuf 00A6  
                                          _ctoa 10AA                                            _main 0052  
                                          _dtoa 0696                                   ?_EUSART1_Read 0001  
                                          _prec 0047                                            _nout 0099  
                                          pad@i 0025                                            pad@p 0022  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0027                                            fsr2l 000FD9  
                                          btemp 0051                                            prodh 000FF4  
                                          prodl 000FF3                                            start 004E  
                                  ___param_bank 000000                                           ??_abs 0020  
                                         ??_pad 0024                         __end_of_TMR0_Initialize 1568  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 1628                                 __end_of___aldiv 0FA4  
                               __end_of___aodiv 0D34                                           ?_ctoa 0017  
                                         ?_main 0001                                           ?_dtoa 0029  
                               __end_of___aomod 0E98                                           STR_10 FEAE  
                                         STR_11 FFB0                                           STR_12 FF0F  
                                         STR_20 FDD3                                           STR_21 FED1  
                                         STR_13 FEF2                                           STR_22 FFF2  
                                         STR_14 FED1                                           STR_23 FE81  
                                         STR_15 FFBF                                           STR_24 FFF5  
                                         STR_16 FFEB                                           STR_17 FF8A  
                                         STR_25 FF43                                           STR_26 FF43  
                                         STR_18 FF5B                                           STR_27 FF43  
                                         STR_19 FE83                                           STR_28 FF73  
                                         STR_29 FF9F                                           _T0CON 000FD5  
                               __end_of___lwdiv 134A                                           i2l162 16CE  
                                         i2l156 14FA                                           i2l149 16C6  
                                         i2l341 003A                                 _TMR0_WriteTimer 168C  
                                  vfpfcnvrt@fmt 003D                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                       ?_TMR0_SetInterruptHandler 000C  
                              __end_of_TMR0_ISR 14FC                                           _flags 0049  
                                         _fputc 1240                                           _fputs 1400  
                                         pad@fp 001E                                           _width 0045  
                                         ctoa@c 0019                                           _putch 1682  
                                         ctoa@l 001B                                           ctoa@w 001D  
                                         main@i 0189                                           dtoa@d 002B  
                                         dtoa@i 0070                                           dtoa@n 0068  
                                         dtoa@p 0062                                           dtoa@s 0066  
                                         dtoa@w 0064                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 000C                                           ttemp5 0052  
                                         ttemp6 0055                                           ttemp7 0059  
                                         status 000FD8                                           wtemp8 0052  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 13AE  
                                  __end_of_ctoa 117E                      __end_of_EUSART1_Initialize 14C4  
                                  __end_of_main 0696                                    __end_of_dtoa 0978  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 001A  
                                        ??_main 008D                                          ??_dtoa 0033  
                                 main@avgPeriod 0180                                   __activetblptr 000003  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 000E  
                                        ?_fputs 0017                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l2200 16BE                                          i2l2202 16C2  
                                        i2l2210 0FD2                                          i2l2220 1044  
                                        i2l2212 0FFC                                          i2l2204 0FA4  
                                        i2l2222 1054                                          i2l2214 1028  
                                        i2l2206 0FAE                                          i2l2224 1058  
                                        i2l2216 1038                                          i2l2208 0FBE  
                                        i2l2232 1076                                          i2l2320 14C4  
                                        i2l2226 1068                                          i2l2218 103C  
                                        i2l2322 14C6                                          i2l3116 108A  
                                        i2l2324 14CA                                          i2l2326 14CE  
                                        i2l2328 14E2                                          i2l2560 0028  
                                        i2l2562 0036                                          i2l2558 001A  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 main@crossings 0100                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                  vfprintf@cfmt 0043                                       ??___aldiv 0014  
                                     ??___aodiv 001C                                       ??___aomod 001C  
                                        ___wmul 15E6                                   main@periodSum 0182  
                       __end_of_TMR0_WriteTimer 1696                                       ??___lwdiv 0010  
                     i2TMR0_WriteTimer@timerVal 0001                        ?_EUSART1_SetErrorHandler 000C  
                              ?_TMR0_Initialize 0001                                          clear_0 13CE  
                                        clear_1 13E4                                          clear_2 13F0  
                                        _printf 15BE                                          pad@buf 0020  
              ??_EUSART1_SetOverrunErrorHandler 000E                 ?_EUSART1_SetOverrunErrorHandler 000C  
                                        ctoa@fp 0017                                          dtoa@fp 0029  
                                        _strlen 14FC                                          fputc@c 000E  
                                        fputs@c 001B                                          fputs@i 001C  
                                        fputs@s 0017                                    __mediumconst FDD2  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 13AE  
                               ??_EUSART1_Write 000C        TMR0_SetInterruptHandler@InterruptHandler 000C  
                 __size_of_INTERRUPT_Initialize 0004                               _SYSTEM_Initialize 1628  
                                    __accesstop 0060                         __end_of__initialization 13F6  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                                    __pidataBANK1 16CC  
                           ??_SYSTEM_Initialize 0010                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 12D6                                   __end_of_fputs 1444  
                                 __end_of_putch 168C                            __end_of_EUSART1_Read 15BE  
                                       ??_fputc 0012                       __end_of_SYSTEM_Initialize 1642  
                                       ??_fputs 001B                              __size_of_myTMR0ISR 0106  
                                       ??_putch 000D                                      __pbssBANK0 0099  
                                    __pbssBANK1 0195                                      __pbssBANK2 0200  
               __end_of_EUSART1_SetErrorHandler 16BE                __end_of_TMR0_SetInterruptHandler 16A0  
                                       ?___wmul 000C                                      ??_TMR0_ISR 0008  
                              ?_TMR0_WriteTimer 000C                                      _fillBuffer 0050  
                                       ?_printf 0081                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 000C          __end_of_EUSART1_SetFramingErrorHandler 16B4  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 16AA  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0234  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                          _ADC_InterruptHandler 00A1                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aldiv 0E98  
                                       ___aodiv 0BAC                                         ___aomod 0D34  
                               __size_of___wmul 0026                                         ___lwdiv 12D6  
                             __end_of_myTMR0ISR 10AA                                       ?_vfprintf 007B  
                           _EUSART1_is_rx_ready 166E                                         __pcinit 13AE  
                                       __ramtop 1000                                         __ptext0 0052  
                                       __ptext1 15BE                                         __ptext2 134A  
                                       __ptext3 0978                                         __ptext4 0696  
                                       __ptext5 117E                                         __ptext6 14FC  
                                       __ptext7 1400                                         __ptext8 1444  
                                       __ptext9 0D34                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize 160C                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                ___aldiv@dividend 000C  
                            _EUSART1_Initialize 1484                        ??_PIN_MANAGER_Initialize 000C  
                                       main@cmd 0186                      __size_of_SYSTEM_Initialize 001A  
                          end_of_initialization 13F6                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0010  
                   _EUSART1_OverrunErrorHandler 009D                                         fputs@fp 0019  
                             __end_of_vfpfcnvrt 0BAC                                ___aldiv@quotient 0016  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                                    ??_vfprintf 0043                            ??_EUSART1_Initialize 000E  
                                       strlen@a 000E                                         strlen@s 000C  
                                    _timerState 004F                        _TMR0_SetInterruptHandler 1696  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 000C  
                         ??_EUSART1_is_rx_ready 000C                                    _EUSART1_Read 1594  
                  __end_of_INTERRUPT_Initialize 16CC                                     vfpfcnvrt@ap 003F  
                                   vfpfcnvrt@fp 003B                                     vfpfcnvrt@ll 0072  
                                __end_of___wmul 160C                               __size_of_TMR0_ISR 0038  
                                _ADC_Initialize 1658                                     _adc_reading 0200  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 15E6  
                                __end_of_strlen 1532                             start_initialization 13AE  
                      __size_of_TMR0_Initialize 0036                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 1484                                     __end_of_pad 1240  
                                   putch@txData 000D                           __end_of_EUSART1_Write 1658  
                                   vfprintf@fmt 007D                                        ??___wmul 0010  
                        __end_of_ADC_Initialize 166E                                     __pdataBANK1 0193  
                               main@avgPeriodUs 0184                                        ??_printf 0045  
                                      ??_strlen 000E                                     __pbssCOMRAM 0045  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0100  
                              ___aodiv@dividend 000C                ??_EUSART1_SetFramingErrorHandler 000E  
               ?_EUSART1_SetFramingErrorHandler 000C                           _TMR0_InterruptHandler 00A3  
                              ___lwdiv@dividend 000C                          _PIN_MANAGER_Initialize 1568  
                                     _dtoa$1401 0060                                       __pintcode 0008  
                                 __pmediumconst FDD2                                        ?___aldiv 000C  
                                      ?___aodiv 000C                                        ?___aomod 000C  
                              ___aodiv@quotient 001E                                        ?___lwdiv 000C  
                               ?_ADC_Initialize 0001                                       _bufferIdx 004D  
                  ??_INTERRUPT_InterruptManager 0008                               __size_of_vfprintf 0064  
                                     _myTMR0ISR 0FA4                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 009B                         _EUSART1_SetErrorHandler 16B4  
                              ___lwdiv@quotient 0010                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 16C8                                 ___aldiv@divisor 0010  
                             ??_TMR0_Initialize 000E                                 ___aldiv@counter 0014  
                                ___wmul@product 0010         EUSART1_SetErrorHandler@interruptHandler 000C  
                                      i2u140_40 0FBE                                        i2u140_41 0FBA  
                                      i2u141_40 0FFC                                        i2u141_41 0FF8  
                                      i2u142_40 1028                                        i2u142_41 1024  
                                      i2u143_40 1068                                        i2u150_48 14E8  
                                      i2u143_41 1064                                        i2u150_49 14FA  
           __size_of_INTERRUPT_InterruptManager 0046                                        i2u149_40 14E2  
                    ??_TMR0_SetInterruptHandler 000E                                        i2u149_41 14DE  
                                      i2u174_40 0028                                        i2u174_41 0024  
                                      i2u175_40 0036                                        i2u175_41 0032  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                                      _TMR0_ISR 14C4                                       _vfpfcnvrt 0978  
                                    _ADCON0bits 000FC2                                       main@i_220 018F  
                                     main@i_221 0187                                       main@i_214 018B  
                                     main@i_225 0191                               ___wmul@multiplier 000C  
                                    ?_myTMR0ISR 0001                                       main@crIdx 018D  
                             i2_TMR0_WriteTimer 16BE                                      vfpfcnvrt@c 007A  
                            ?i2_TMR0_WriteTimer 0001                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                             ??i2_TMR0_WriteTimer 0003  
                                      __Hrparam 0000                                      vfprintf@ap 007F  
                                      __Lrparam 0000                                      vfprintf@fp 007B  
                       ??_OSCILLATOR_Initialize 000C                                __size_of___aldiv 010C  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                   __size_of_EUSART1_Initialize 0040                                      ?_vfpfcnvrt 003B  
                              __size_of___lwdiv 0074                                 ___aodiv@divisor 0014  
                               ___aodiv@counter 001C                       __end_ofi2_TMR0_WriteTimer 16C8  
                     ??_EUSART1_SetErrorHandler 000E                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 1682                                 ___lwdiv@divisor 000E  
                               ___lwdiv@counter 0012                                        __ptext10 0BAC  
                                      __ptext11 10AA                                        __ptext20 1532  
                                      __ptext12 1240                                        __ptext21 1696  
                                      __ptext13 1682                                        __ptext30 166E  
                                      __ptext22 1568                                        __ptext14 1642  
                                      __ptext31 1594                                        __ptext23 160C  
                                      __ptext15 15E6                                        __ptext24 16C8  
                                      __ptext16 12D6                                        __ptext33 14C4  
                                      __ptext25 1484                                        __ptext17 0E98  
                                      __ptext34 16CE                                        __ptext26 16A0  
                                      __ptext18 168C                                        __ptext35 0FA4  
                                      __ptext27 16AA                                        __ptext19 1628  
                                      __ptext36 16BE                                        __ptext28 16B4  
                                      __ptext37 0000                                        __ptext29 1658  
                       TMR0_WriteTimer@timerVal 000C                               ??_TMR0_WriteTimer 000E  
                                 __size_of_ctoa 00D4                                   __size_of_main 0644  
                                 __size_of_dtoa 02E2            __end_of_TMR0_DefaultInterruptHandler 16D0  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 16CE  
EUSART1_SetOverrunErrorHandler@interruptHandler 000C                                        int$flags 0051  
                                      _vfprintf 134A              __end_of_INTERRUPT_InterruptManager 004E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0081  
                   _EUSART1_FramingErrorHandler 009F                                ___aomod@dividend 000C  
                                   ??_myTMR0ISR 0003                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 000C                                        intlevel2 0000  
                              _samplesCollected 0195                                  _thresholdRange 0193  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 16AA  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 16A0  
                                    _RCSTA1bits 000FAB                                ??_ADC_Initialize 000C  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 008B  EUSART1_SetFramingErrorHandler@interruptHandler 000C  
                               ___aomod@divisor 0014                                     ??_vfpfcnvrt 0041  
                               ___aomod@counter 001C                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 00A5                      __size_ofi2_TMR0_WriteTimer 000A  
                               _TMR0_Initialize 1532                                    ___aldiv@sign 0015  
                                  ___aodiv@sign 001D                  __end_of_PIN_MANAGER_Initialize 1594  
                                  ___aomod@sign 001D                                    fp__myTMR0ISR 0000  
