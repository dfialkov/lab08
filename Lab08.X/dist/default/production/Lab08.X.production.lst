

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Oct 19 14:56:07 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 05/05/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F26K22 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    89  0000                     
    90 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    91  0000                     
    92 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    93  0000                     
    94                           	psect	idataBANK0
    95  000FE2                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for _thresholdRange
    99  000FE2  000A               	dw	10
   100  0000                     _ANSELA	set	3896
   101  0000                     _ANSELB	set	3897
   102  0000                     _ANSELC	set	3898
   103  0000                     _RCONbits	set	4048
   104  0000                     _TXREG1	set	4013
   105  0000                     _RCREG1	set	4014
   106  0000                     _RCSTA1bits	set	4011
   107  0000                     _TXSTA1bits	set	4012
   108  0000                     _PIR1bits	set	3998
   109  0000                     _SPBRGH1	set	4016
   110  0000                     _SPBRG1	set	4015
   111  0000                     _TXSTA1	set	4012
   112  0000                     _RCSTA1	set	4011
   113  0000                     _BAUDCON1	set	4024
   114  0000                     _ADCON0bits	set	4034
   115  0000                     _ADCON0	set	4034
   116  0000                     _ADRESH	set	4036
   117  0000                     _ADRESL	set	4035
   118  0000                     _ADCON2	set	4032
   119  0000                     _ADCON1	set	4033
   120  0000                     _OSCTUNE	set	3995
   121  0000                     _OSCCON2	set	4050
   122  0000                     _OSCCON	set	4051
   123  0000                     _T0CON	set	4053
   124  0000                     _TMR0L	set	4054
   125  0000                     _TMR0H	set	4055
   126  0000                     _T0CONbits	set	4053
   127  0000                     _INTCON2bits	set	4081
   128  0000                     _WPUB	set	3937
   129  0000                     _TRISC	set	3988
   130  0000                     _TRISB	set	3987
   131  0000                     _TRISA	set	3986
   132  0000                     _LATC	set	3979
   133  0000                     _LATB	set	3978
   134  0000                     _LATA	set	3977
   135  0000                     _INTCONbits	set	4082
   136  0000                     _PLLRDY	set	32407
   137                           
   138                           	psect	mediumconst
   139  00FE92                     __pmediumconst:
   140                           	callstack 0
   141  00FE92  00                 	db	0
   142  00FE93                     STR_11:
   143  00FE93  66                 	db	102	;'f'
   144  00FE94  3A                 	db	58	;':'
   145  00FE95  20                 	db	32
   146  00FE96  67                 	db	103	;'g'
   147  00FE97  61                 	db	97	;'a'
   148  00FE98  74                 	db	116	;'t'
   149  00FE99  68                 	db	104	;'h'
   150  00FE9A  65                 	db	101	;'e'
   151  00FE9B  72                 	db	114	;'r'
   152  00FE9C  20                 	db	32
   153  00FE9D  35                 	db	53	;'5'
   154  00FE9E  31                 	db	49	;'1'
   155  00FE9F  32                 	db	50	;'2'
   156  00FEA0  20                 	db	32
   157  00FEA1  73                 	db	115	;'s'
   158  00FEA2  61                 	db	97	;'a'
   159  00FEA3  6D                 	db	109	;'m'
   160  00FEA4  70                 	db	112	;'p'
   161  00FEA5  6C                 	db	108	;'l'
   162  00FEA6  65                 	db	101	;'e'
   163  00FEA7  73                 	db	115	;'s'
   164  00FEA8  20                 	db	32
   165  00FEA9  66                 	db	102	;'f'
   166  00FEAA  72                 	db	114	;'r'
   167  00FEAB  6F                 	db	111	;'o'
   168  00FEAC  6D                 	db	109	;'m'
   169  00FEAD  20                 	db	32
   170  00FEAE  74                 	db	116	;'t'
   171  00FEAF  68                 	db	104	;'h'
   172  00FEB0  65                 	db	101	;'e'
   173  00FEB1  20                 	db	32
   174  00FEB2  6D                 	db	109	;'m'
   175  00FEB3  69                 	db	105	;'i'
   176  00FEB4  63                 	db	99	;'c'
   177  00FEB5  72                 	db	114	;'r'
   178  00FEB6  6F                 	db	111	;'o'
   179  00FEB7  70                 	db	112	;'p'
   180  00FEB8  68                 	db	104	;'h'
   181  00FEB9  6F                 	db	111	;'o'
   182  00FEBA  6E                 	db	110	;'n'
   183  00FEBB  65                 	db	101	;'e'
   184  00FEBC  20                 	db	32
   185  00FEBD  61                 	db	97	;'a'
   186  00FEBE  6E                 	db	110	;'n'
   187  00FEBF  64                 	db	100	;'d'
   188  00FEC0  20                 	db	32
   189  00FEC1  63                 	db	99	;'c'
   190  00FEC2  61                 	db	97	;'a'
   191  00FEC3  6C                 	db	108	;'l'
   192  00FEC4  63                 	db	99	;'c'
   193  00FEC5  75                 	db	117	;'u'
   194  00FEC6  6C                 	db	108	;'l'
   195  00FEC7  61                 	db	97	;'a'
   196  00FEC8  74                 	db	116	;'t'
   197  00FEC9  65                 	db	101	;'e'
   198  00FECA  20                 	db	32
   199  00FECB  74                 	db	116	;'t'
   200  00FECC  68                 	db	104	;'h'
   201  00FECD  65                 	db	101	;'e'
   202  00FECE  20                 	db	32
   203  00FECF  66                 	db	102	;'f'
   204  00FED0  72                 	db	114	;'r'
   205  00FED1  65                 	db	101	;'e'
   206  00FED2  71                 	db	113	;'q'
   207  00FED3  75                 	db	117	;'u'
   208  00FED4  65                 	db	101	;'e'
   209  00FED5  6E                 	db	110	;'n'
   210  00FED6  63                 	db	99	;'c'
   211  00FED7  79                 	db	121	;'y'
   212  00FED8  0D                 	db	13
   213  00FED9  0A                 	db	10
   214  00FEDA  00                 	db	0
   215  00FEDB                     STR_18:
   216  00FEDB  54                 	db	84	;'T'
   217  00FEDC  68                 	db	104	;'h'
   218  00FEDD  65                 	db	101	;'e'
   219  00FEDE  20                 	db	32
   220  00FEDF  6C                 	db	108	;'l'
   221  00FEE0  61                 	db	97	;'a'
   222  00FEE1  73                 	db	115	;'s'
   223  00FEE2  74                 	db	116	;'t'
   224  00FEE3  20                 	db	32
   225  00FEE4  32                 	db	50	;'2'
   226  00FEE5  35                 	db	53	;'5'
   227  00FEE6  36                 	db	54	;'6'
   228  00FEE7  20                 	db	32
   229  00FEE8  41                 	db	65	;'A'
   230  00FEE9  44                 	db	68	;'D'
   231  00FEEA  43                 	db	67	;'C'
   232  00FEEB  20                 	db	32
   233  00FEEC  73                 	db	115	;'s'
   234  00FEED  61                 	db	97	;'a'
   235  00FEEE  6D                 	db	109	;'m'
   236  00FEEF  70                 	db	112	;'p'
   237  00FEF0  6C                 	db	108	;'l'
   238  00FEF1  65                 	db	101	;'e'
   239  00FEF2  73                 	db	115	;'s'
   240  00FEF3  20                 	db	32
   241  00FEF4  66                 	db	102	;'f'
   242  00FEF5  72                 	db	114	;'r'
   243  00FEF6  6F                 	db	111	;'o'
   244  00FEF7  6D                 	db	109	;'m'
   245  00FEF8  20                 	db	32
   246  00FEF9  74                 	db	116	;'t'
   247  00FEFA  68                 	db	104	;'h'
   248  00FEFB  65                 	db	101	;'e'
   249  00FEFC  20                 	db	32
   250  00FEFD  6D                 	db	109	;'m'
   251  00FEFE  69                 	db	105	;'i'
   252  00FEFF  63                 	db	99	;'c'
   253  00FF00  72                 	db	114	;'r'
   254  00FF01  6F                 	db	111	;'o'
   255  00FF02  70                 	db	112	;'p'
   256  00FF03  68                 	db	104	;'h'
   257  00FF04  6F                 	db	111	;'o'
   258  00FF05  6E                 	db	110	;'n'
   259  00FF06  65                 	db	101	;'e'
   260  00FF07  20                 	db	32
   261  00FF08  61                 	db	97	;'a'
   262  00FF09  72                 	db	114	;'r'
   263  00FF0A  65                 	db	101	;'e'
   264  00FF0B  3A                 	db	58	;':'
   265  00FF0C  20                 	db	32
   266  00FF0D  0D                 	db	13
   267  00FF0E  0A                 	db	10
   268  00FF0F  00                 	db	0
   269  00FF10                     STR_10:
   270  00FF10  54                 	db	84	;'T'
   271  00FF11  2F                 	db	47
   272  00FF12  74                 	db	116	;'t'
   273  00FF13  3A                 	db	58	;':'
   274  00FF14  20                 	db	32
   275  00FF15  49                 	db	73	;'I'
   276  00FF16  6E                 	db	110	;'n'
   277  00FF17  63                 	db	99	;'c'
   278  00FF18  72                 	db	114	;'r'
   279  00FF19  65                 	db	101	;'e'
   280  00FF1A  61                 	db	97	;'a'
   281  00FF1B  73                 	db	115	;'s'
   282  00FF1C  65                 	db	101	;'e'
   283  00FF1D  2F                 	db	47
   284  00FF1E  64                 	db	100	;'d'
   285  00FF1F  65                 	db	101	;'e'
   286  00FF20  63                 	db	99	;'c'
   287  00FF21  72                 	db	114	;'r'
   288  00FF22  65                 	db	101	;'e'
   289  00FF23  61                 	db	97	;'a'
   290  00FF24  73                 	db	115	;'s'
   291  00FF25  65                 	db	101	;'e'
   292  00FF26  20                 	db	32
   293  00FF27  74                 	db	116	;'t'
   294  00FF28  68                 	db	104	;'h'
   295  00FF29  72                 	db	114	;'r'
   296  00FF2A  65                 	db	101	;'e'
   297  00FF2B  73                 	db	115	;'s'
   298  00FF2C  68                 	db	104	;'h'
   299  00FF2D  6F                 	db	111	;'o'
   300  00FF2E  6C                 	db	108	;'l'
   301  00FF2F  64                 	db	100	;'d'
   302  00FF30  20                 	db	32
   303  00FF31  31                 	db	49	;'1'
   304  00FF32  33                 	db	51	;'3'
   305  00FF33  38                 	db	56	;'8'
   306  00FF34  2D                 	db	45
   307  00FF35  31                 	db	49	;'1'
   308  00FF36  31                 	db	49	;'1'
   309  00FF37  38                 	db	56	;'8'
   310  00FF38  0D                 	db	13
   311  00FF39  0A                 	db	10
   312  00FF3A  00                 	db	0
   313  00FF3B                     STR_5:
   314  00FF3B  2D                 	db	45
   315  00FF3C  2D                 	db	45
   316  00FF3D  2D                 	db	45
   317  00FF3E  2D                 	db	45
   318  00FF3F  2D                 	db	45
   319  00FF40  2D                 	db	45
   320  00FF41  2D                 	db	45
   321  00FF42  2D                 	db	45
   322  00FF43  2D                 	db	45
   323  00FF44  2D                 	db	45
   324  00FF45  2D                 	db	45
   325  00FF46  2D                 	db	45
   326  00FF47  2D                 	db	45
   327  00FF48  2D                 	db	45
   328  00FF49  2D                 	db	45
   329  00FF4A  2D                 	db	45
   330  00FF4B  2D                 	db	45
   331  00FF4C  2D                 	db	45
   332  00FF4D  2D                 	db	45
   333  00FF4E  2D                 	db	45
   334  00FF4F  2D                 	db	45
   335  00FF50  2D                 	db	45
   336  00FF51  2D                 	db	45
   337  00FF52  2D                 	db	45
   338  00FF53  2D                 	db	45
   339  00FF54  2D                 	db	45
   340  00FF55  2D                 	db	45
   341  00FF56  2D                 	db	45
   342  00FF57  2D                 	db	45
   343  00FF58  2D                 	db	45
   344  00FF59  0D                 	db	13
   345  00FF5A  0A                 	db	10
   346  00FF5B  00                 	db	0
   347  00FF5C                     STR_2:
   348  00FF5C  4D                 	db	77	;'M'
   349  00FF5D  69                 	db	105	;'i'
   350  00FF5E  63                 	db	99	;'c'
   351  00FF5F  72                 	db	114	;'r'
   352  00FF60  6F                 	db	111	;'o'
   353  00FF61  70                 	db	112	;'p'
   354  00FF62  68                 	db	104	;'h'
   355  00FF63  6F                 	db	111	;'o'
   356  00FF64  6E                 	db	110	;'n'
   357  00FF65  65                 	db	101	;'e'
   358  00FF66  20                 	db	32
   359  00FF67  65                 	db	101	;'e'
   360  00FF68  78                 	db	120	;'x'
   361  00FF69  70                 	db	112	;'p'
   362  00FF6A  65                 	db	101	;'e'
   363  00FF6B  72                 	db	114	;'r'
   364  00FF6C  69                 	db	105	;'i'
   365  00FF6D  6D                 	db	109	;'m'
   366  00FF6E  65                 	db	101	;'e'
   367  00FF6F  6E                 	db	110	;'n'
   368  00FF70  74                 	db	116	;'t'
   369  00FF71  73                 	db	115	;'s'
   370  00FF72  0D                 	db	13
   371  00FF73  0A                 	db	10
   372  00FF74  00                 	db	0
   373  00FF75                     STR_16:
   374  00FF75  56                 	db	86	;'V'
   375  00FF76  6F                 	db	111	;'o'
   376  00FF77  6C                 	db	108	;'l'
   377  00FF78  75                 	db	117	;'u'
   378  00FF79  6D                 	db	109	;'m'
   379  00FF7A  65                 	db	101	;'e'
   380  00FF7B  20                 	db	32
   381  00FF7C  72                 	db	114	;'r'
   382  00FF7D  61                 	db	97	;'a'
   383  00FF7E  6E                 	db	110	;'n'
   384  00FF7F  67                 	db	103	;'g'
   385  00FF80  65                 	db	101	;'e'
   386  00FF81  3A                 	db	58	;':'
   387  00FF82  20                 	db	32
   388  00FF83  25                 	db	37
   389  00FF84  64                 	db	100	;'d'
   390  00FF85  20                 	db	32
   391  00FF86  2D                 	db	45
   392  00FF87  20                 	db	32
   393  00FF88  25                 	db	37
   394  00FF89  64                 	db	100	;'d'
   395  00FF8A  0D                 	db	13
   396  00FF8B  0A                 	db	10
   397  00FF8C  00                 	db	0
   398  00FF8D                     STR_9:
   399  00FF8D  7A                 	db	122	;'z'
   400  00FF8E  3A                 	db	58	;':'
   401  00FF8F  20                 	db	32
   402  00FF90  43                 	db	67	;'C'
   403  00FF91  6C                 	db	108	;'l'
   404  00FF92  65                 	db	101	;'e'
   405  00FF93  61                 	db	97	;'a'
   406  00FF94  72                 	db	114	;'r'
   407  00FF95  20                 	db	32
   408  00FF96  74                 	db	116	;'t'
   409  00FF97  68                 	db	104	;'h'
   410  00FF98  65                 	db	101	;'e'
   411  00FF99  20                 	db	32
   412  00FF9A  74                 	db	116	;'t'
   413  00FF9B  65                 	db	101	;'e'
   414  00FF9C  72                 	db	114	;'r'
   415  00FF9D  6D                 	db	109	;'m'
   416  00FF9E  69                 	db	105	;'i'
   417  00FF9F  6E                 	db	110	;'n'
   418  00FFA0  61                 	db	97	;'a'
   419  00FFA1  6C                 	db	108	;'l'
   420  00FFA2  0D                 	db	13
   421  00FFA3  0A                 	db	10
   422  00FFA4  00                 	db	0
   423  00FFA5                     STR_8:
   424  00FFA5  5A                 	db	90	;'Z'
   425  00FFA6  3A                 	db	58	;':'
   426  00FFA7  20                 	db	32
   427  00FFA8  52                 	db	82	;'R'
   428  00FFA9  65                 	db	101	;'e'
   429  00FFAA  73                 	db	115	;'s'
   430  00FFAB  65                 	db	101	;'e'
   431  00FFAC  74                 	db	116	;'t'
   432  00FFAD  20                 	db	32
   433  00FFAE  70                 	db	112	;'p'
   434  00FFAF  72                 	db	114	;'r'
   435  00FFB0  6F                 	db	111	;'o'
   436  00FFB1  63                 	db	99	;'c'
   437  00FFB2  65                 	db	101	;'e'
   438  00FFB3  73                 	db	115	;'s'
   439  00FFB4  73                 	db	115	;'s'
   440  00FFB5  6F                 	db	111	;'o'
   441  00FFB6  72                 	db	114	;'r'
   442  00FFB7  0D                 	db	13
   443  00FFB8  0A                 	db	10
   444  00FFB9  00                 	db	0
   445  00FFBA                     STR_19:
   446  00FFBA  55                 	db	85	;'U'
   447  00FFBB  6E                 	db	110	;'n'
   448  00FFBC  6B                 	db	107	;'k'
   449  00FFBD  6E                 	db	110	;'n'
   450  00FFBE  6F                 	db	111	;'o'
   451  00FFBF  77                 	db	119	;'w'
   452  00FFC0  6E                 	db	110	;'n'
   453  00FFC1  20                 	db	32
   454  00FFC2  6B                 	db	107	;'k'
   455  00FFC3  65                 	db	101	;'e'
   456  00FFC4  79                 	db	121	;'y'
   457  00FFC5  20                 	db	32
   458  00FFC6  25                 	db	37
   459  00FFC7  63                 	db	99	;'c'
   460  00FFC8  0D                 	db	13
   461  00FFC9  0A                 	db	10
   462  00FFCA  00                 	db	0
   463  00FFCB                     STR_6:
   464  00FFCB  3F                 	db	63	;'?'
   465  00FFCC  3A                 	db	58	;':'
   466  00FFCD  20                 	db	32
   467  00FFCE  48                 	db	72	;'H'
   468  00FFCF  65                 	db	101	;'e'
   469  00FFD0  6C                 	db	108	;'l'
   470  00FFD1  70                 	db	112	;'p'
   471  00FFD2  20                 	db	32
   472  00FFD3  6D                 	db	109	;'m'
   473  00FFD4  65                 	db	101	;'e'
   474  00FFD5  6E                 	db	110	;'n'
   475  00FFD6  75                 	db	117	;'u'
   476  00FFD7  0D                 	db	13
   477  00FFD8  0A                 	db	10
   478  00FFD9  00                 	db	0
   479  00FFDA                     STR_1:
   480  00FFDA  69                 	db	105	;'i'
   481  00FFDB  6E                 	db	110	;'n'
   482  00FFDC  4C                 	db	76	;'L'
   483  00FFDD  61                 	db	97	;'a'
   484  00FFDE  62                 	db	98	;'b'
   485  00FFDF  20                 	db	32
   486  00FFE0  30                 	db	48	;'0'
   487  00FFE1  38                 	db	56	;'8'
   488  00FFE2  0D                 	db	13
   489  00FFE3  0A                 	db	10
   490  00FFE4  00                 	db	0
   491  00FFE5                     STR_3:
   492  00FFE5  44                 	db	68	;'D'
   493  00FFE6  65                 	db	101	;'e'
   494  00FFE7  76                 	db	118	;'v'
   495  00FFE8  27                 	db	39
   496  00FFE9  32                 	db	50	;'2'
   497  00FFEA  31                 	db	49	;'1'
   498  00FFEB  0D                 	db	13
   499  00FFEC  0A                 	db	10
   500  00FFED  00                 	db	0
   501  00FFEE                     STR_7:
   502  00FFEE  6F                 	db	111	;'o'
   503  00FFEF  3A                 	db	58	;':'
   504  00FFF0  20                 	db	32
   505  00FFF1  6B                 	db	107	;'k'
   506  00FFF2  0D                 	db	13
   507  00FFF3  0A                 	db	10
   508  00FFF4  00                 	db	0
   509  00FFF5                     STR_13:
   510  00FFF5  20                 	db	32
   511  00FFF6  6B                 	db	107	;'k'
   512  00FFF7  0D                 	db	13
   513  00FFF8  0A                 	db	10
   514  00FFF9  3E                 	db	62	;'>'
   515  00FFFA  00                 	db	0
   516  00FFFB                     STR_4:
   517  00FFFB  3E                 	db	62	;'>'
   518  00FFFC  20                 	db	32
   519  00FFFD  00                 	db	0
   520  00FFFE  00                 	db	0	; dummy byte at the end
   521  0000                     
   522                           ; #config settings
   523                           
   524                           	psect	cinit
   525  000E7C                     __pcinit:
   526                           	callstack 0
   527  000E7C                     start_initialization:
   528                           	callstack 0
   529  000E7C                     __initialization:
   530                           	callstack 0
   531                           
   532                           ; Initialize objects allocated to BANK0 (2 bytes)
   533                           ; load TBLPTR registers with __pidataBANK0
   534  000E7C  0EE2               	movlw	low __pidataBANK0
   535  000E7E  6EF6               	movwf	tblptrl,c
   536  000E80  0E0F               	movlw	high __pidataBANK0
   537  000E82  6EF7               	movwf	tblptrh,c
   538  000E84  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   539  000E86  6EF8               	movwf	tblptru,c
   540  000E88  0009               	tblrd		*+	;fetch initializer
   541  000E8A  CFF5 F0A4          	movff	tablat,__pdataBANK0
   542  000E8E  0009               	tblrd		*+	;fetch initializer
   543  000E90  CFF5 F0A5          	movff	tablat,__pdataBANK0+1
   544                           
   545                           ; Clear objects allocated to BANK0 (52 bytes)
   546  000E94  EE00  F060         	lfsr	0,__pbssBANK0
   547  000E98  0E34               	movlw	52
   548  000E9A                     clear_0:
   549  000E9A  6AEE               	clrf	postinc0,c
   550  000E9C  06E8               	decf	wreg,f,c
   551  000E9E  E1FD               	bnz	clear_0
   552                           
   553                           ; Clear objects allocated to COMRAM (2 bytes)
   554  000EA0  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   555  000EA2  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   556  000EA4                     end_of_initialization:
   557                           	callstack 0
   558  000EA4                     __end_of__initialization:
   559                           	callstack 0
   560  000EA4  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   561  000EA6  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   562  000EA8  0100               	movlb	0
   563  000EAA  EF92  F001         	goto	_main	;jump to C main() function
   564                           
   565                           	psect	bssCOMRAM
   566  00005B                     __pbssCOMRAM:
   567                           	callstack 0
   568  00005B                     _timer0ReloadVal:
   569                           	callstack 0
   570  00005B                     	ds	2
   571                           
   572                           	psect	bssBANK0
   573  000060                     __pbssBANK0:
   574                           	callstack 0
   575  000060                     _nout:
   576                           	callstack 0
   577  000060                     	ds	2
   578  000062                     _width:
   579                           	callstack 0
   580  000062                     	ds	2
   581  000064                     _prec:
   582                           	callstack 0
   583  000064                     	ds	2
   584  000066                     _flags:
   585                           	callstack 0
   586  000066                     	ds	2
   587  000068                     _EUSART1_ErrorHandler:
   588                           	callstack 0
   589  000068                     	ds	2
   590  00006A                     _EUSART1_OverrunErrorHandler:
   591                           	callstack 0
   592  00006A                     	ds	2
   593  00006C                     _EUSART1_FramingErrorHandler:
   594                           	callstack 0
   595  00006C                     	ds	2
   596  00006E                     _ADC_InterruptHandler:
   597                           	callstack 0
   598  00006E                     	ds	2
   599  000070                     _TMR0_InterruptHandler:
   600                           	callstack 0
   601  000070                     	ds	2
   602  000072                     _eusart1RxLastError:
   603                           	callstack 0
   604  000072                     	ds	1
   605  000073                     _samplesCollected:
   606                           	callstack 0
   607  000073                     	ds	1
   608  000074                     _dbuf:
   609                           	callstack 0
   610  000074                     	ds	32
   611                           
   612                           	psect	dataBANK0
   613  0000A4                     __pdataBANK0:
   614                           	callstack 0
   615  0000A4                     _thresholdRange:
   616                           	callstack 0
   617  0000A4                     	ds	2
   618                           
   619                           	psect	cstackBANK0
   620  000094                     __pcstackBANK0:
   621                           	callstack 0
   622  000094                     vfprintf@cfmt:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x0
   626  000094                     	ds	2
   627  000096                     ?_printf:
   628                           	callstack 0
   629  000096                     printf@fmt:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x2
   633  000096                     	ds	8
   634  00009E                     printf@ap:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0xA
   638  00009E                     	ds	2
   639  0000A0                     ??_main:
   640                           
   641                           ; 1 bytes @ 0xC
   642  0000A0                     	ds	2
   643  0000A2                     main@cmd:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0xE
   647  0000A2                     	ds	1
   648  0000A3                     main@i:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0xF
   652  0000A3                     	ds	1
   653                           
   654                           	psect	cstackCOMRAM
   655  000001                     __pcstackCOMRAM:
   656                           	callstack 0
   657  000001                     ??_INTERRUPT_InterruptManager:
   658                           
   659                           ; 1 bytes @ 0x0
   660  000001                     	ds	2
   661  000003                     ?_strlen:
   662                           	callstack 0
   663  000003                     ?___aodiv:
   664                           	callstack 0
   665  000003                     ?___aomod:
   666                           	callstack 0
   667  000003                     EUSART1_Write@txData:
   668                           	callstack 0
   669  000003                     TMR0_WriteTimer@timerVal:
   670                           	callstack 0
   671  000003                     TMR0_SetInterruptHandler@InterruptHandler:
   672                           	callstack 0
   673  000003                     EUSART1_SetFramingErrorHandler@interruptHandler:
   674                           	callstack 0
   675  000003                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   676                           	callstack 0
   677  000003                     EUSART1_SetErrorHandler@interruptHandler:
   678                           	callstack 0
   679  000003                     strlen@s:
   680                           	callstack 0
   681  000003                     ___aodiv@dividend:
   682                           	callstack 0
   683  000003                     ___aomod@dividend:
   684                           	callstack 0
   685                           
   686                           ; 8 bytes @ 0x2
   687  000003                     	ds	1
   688  000004                     putch@txData:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x3
   692  000004                     	ds	1
   693  000005                     ??_TMR0_Initialize:
   694  000005                     fputc@c:
   695                           	callstack 0
   696  000005                     strlen@a:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x4
   700  000005                     	ds	2
   701  000007                     fputc@fp:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x6
   705  000007                     	ds	2
   706  000009                     ??_fputc:
   707                           
   708                           ; 1 bytes @ 0x8
   709  000009                     	ds	2
   710  00000B                     ___aodiv@divisor:
   711                           	callstack 0
   712  00000B                     ___aomod@divisor:
   713                           	callstack 0
   714                           
   715                           ; 8 bytes @ 0xA
   716  00000B                     	ds	3
   717  00000E                     ?_ctoa:
   718                           	callstack 0
   719  00000E                     ctoa@fp:
   720                           	callstack 0
   721  00000E                     fputs@s:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0xD
   725  00000E                     	ds	2
   726  000010                     ctoa@c:
   727                           	callstack 0
   728  000010                     fputs@fp:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0xF
   732  000010                     	ds	1
   733  000011                     ??_ctoa:
   734                           
   735                           ; 1 bytes @ 0x10
   736  000011                     	ds	1
   737  000012                     fputs@c:
   738                           	callstack 0
   739  000012                     ctoa@l:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x11
   743  000012                     	ds	1
   744  000013                     ___aodiv@counter:
   745                           	callstack 0
   746  000013                     ___aomod@counter:
   747                           	callstack 0
   748  000013                     fputs@i:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x12
   752  000013                     	ds	1
   753  000014                     ___aodiv@sign:
   754                           	callstack 0
   755  000014                     ___aomod@sign:
   756                           	callstack 0
   757  000014                     ctoa@w:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x13
   761  000014                     	ds	1
   762  000015                     ?_abs:
   763                           	callstack 0
   764  000015                     ?_pad:
   765                           	callstack 0
   766  000015                     pad@fp:
   767                           	callstack 0
   768  000015                     abs@a:
   769                           	callstack 0
   770  000015                     ___aodiv@quotient:
   771                           	callstack 0
   772                           
   773                           ; 8 bytes @ 0x14
   774  000015                     	ds	2
   775  000017                     ??_abs:
   776  000017                     pad@buf:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x16
   780  000017                     	ds	2
   781  000019                     pad@p:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x18
   785  000019                     	ds	2
   786  00001B                     ??_pad:
   787                           
   788                           ; 1 bytes @ 0x1A
   789  00001B                     	ds	1
   790  00001C                     pad@i:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x1B
   794  00001C                     	ds	2
   795  00001E                     pad@w:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x1D
   799  00001E                     	ds	2
   800  000020                     ?_dtoa:
   801                           	callstack 0
   802  000020                     dtoa@fp:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x1F
   806  000020                     	ds	2
   807  000022                     dtoa@d:
   808                           	callstack 0
   809                           
   810                           ; 8 bytes @ 0x21
   811  000022                     	ds	8
   812  00002A                     ??_dtoa:
   813                           
   814                           ; 1 bytes @ 0x29
   815  00002A                     	ds	8
   816  000032                     _dtoa$1331:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x31
   820  000032                     	ds	2
   821  000034                     dtoa@p:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x33
   825  000034                     	ds	2
   826  000036                     dtoa@w:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x35
   830  000036                     	ds	2
   831  000038                     dtoa@s:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x37
   835  000038                     	ds	2
   836  00003A                     dtoa@n:
   837                           	callstack 0
   838                           
   839                           ; 8 bytes @ 0x39
   840  00003A                     	ds	8
   841  000042                     dtoa@i:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x41
   845  000042                     	ds	2
   846  000044                     ?_vfpfcnvrt:
   847                           	callstack 0
   848  000044                     vfpfcnvrt@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x43
   852  000044                     	ds	2
   853  000046                     vfpfcnvrt@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x45
   857  000046                     	ds	2
   858  000048                     vfpfcnvrt@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x47
   862  000048                     	ds	2
   863  00004A                     ??_vfpfcnvrt:
   864                           
   865                           ; 1 bytes @ 0x49
   866  00004A                     	ds	2
   867  00004C                     vfpfcnvrt@ll:
   868                           	callstack 0
   869                           
   870                           ; 8 bytes @ 0x4B
   871  00004C                     	ds	8
   872  000054                     vfpfcnvrt@c:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x53
   876  000054                     	ds	1
   877  000055                     ?_vfprintf:
   878                           	callstack 0
   879  000055                     vfprintf@fp:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x54
   883  000055                     	ds	2
   884  000057                     vfprintf@fmt:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x56
   888  000057                     	ds	2
   889  000059                     vfprintf@ap:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x58
   893  000059                     	ds	2
   894  00005B                     
   895                           ; 1 bytes @ 0x5A
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 42 in file "main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  adc_reading    64    0        unsigned char [64]
   906 ;;  i               1   15[BANK0 ] unsigned char 
   907 ;;  cmd             1   14[BANK0 ] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;Total ram usage:        4 bytes
   922 ;; Hardware stack levels required when called:   12
   923 ;; This function calls:
   924 ;;		_EUSART1_Read
   925 ;;		_EUSART1_is_rx_ready
   926 ;;		_SYSTEM_Initialize
   927 ;;		_TMR0_SetInterruptHandler
   928 ;;		_TMR0_WriteTimer
   929 ;;		_printf
   930 ;; This function is called by:
   931 ;;		Startup code after reset
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text0
   936  000324                     __ptext0:
   937                           	callstack 0
   938  000324                     _main:
   939                           	callstack 19
   940  000324                     
   941                           ;main.c: 44:         if ((EUSART1_is_rx_ready())) {;main.c: 45:             cmd = EUSART
      +                          1_Read();;main.c: 47: 
   942  000324  ECA4  F007         	call	_SYSTEM_Initialize	;wreg free
   943  000328                     
   944                           ;main.c: 52:                     printf("Z: Reset processor\r\n");
   945  000328  0E00               	movlw	0
   946  00032A  6E04               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
   947  00032C  0E00               	movlw	0
   948  00032E  6E03               	movwf	TMR0_WriteTimer@timerVal^0,c
   949  000330  ECD6  F007         	call	_TMR0_WriteTimer	;wreg free
   950  000334                     
   951                           ;main.c: 53:                     printf("z: Clear the terminal\r\n");
   952  000334  94F2               	bcf	242,2,c	;volatile
   953  000336                     l25:
   954  000336  A4F2               	btfss	242,2,c	;volatile
   955  000338  EFA0  F001         	goto	u1811
   956  00033C  EFA2  F001         	goto	u1810
   957  000340                     u1811:
   958  000340  EF9B  F001         	goto	l25
   959  000344                     u1810:
   960  000344                     
   961                           ;main.c: 56: 
   962  000344  0EE6               	movlw	low _myTMR0ISR
   963  000346  6E03               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   964  000348  0E0F               	movlw	high _myTMR0ISR
   965  00034A  6E04               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   966  00034C  ECDB  F007         	call	_TMR0_SetInterruptHandler	;wreg free
   967  000350                     
   968                           ;main.c: 57:                     printf("------------------------------\r\n");
   969  000350  8EF2               	bsf	242,7,c	;volatile
   970  000352                     
   971                           ;main.c: 58:                     break;
   972  000352  8CF2               	bsf	242,6,c	;volatile
   973  000354                     
   974                           ;main.c: 60: 
   975  000354  0EDA               	movlw	low STR_1
   976  000356  0100               	movlb	0	; () banked
   977  000358  6F96               	movwf	printf@fmt& (0+255),b
   978  00035A  0EFF               	movlw	high STR_1
   979  00035C  6F97               	movwf	(printf@fmt+1)& (0+255),b
   980  00035E  EC82  F007         	call	_printf	;wreg free
   981  000362                     
   982                           ;main.c: 61: 
   983  000362  0E5C               	movlw	low STR_2
   984  000364  0100               	movlb	0	; () banked
   985  000366  6F96               	movwf	printf@fmt& (0+255),b
   986  000368  0EFF               	movlw	high STR_2
   987  00036A  6F97               	movwf	(printf@fmt+1)& (0+255),b
   988  00036C  EC82  F007         	call	_printf	;wreg free
   989  000370                     
   990                           ;main.c: 62: 
   991  000370  0EE5               	movlw	low STR_3
   992  000372  0100               	movlb	0	; () banked
   993  000374  6F96               	movwf	printf@fmt& (0+255),b
   994  000376  0EFF               	movlw	high STR_3
   995  000378  6F97               	movwf	(printf@fmt+1)& (0+255),b
   996  00037A  EC82  F007         	call	_printf	;wreg free
   997  00037E                     
   998                           ;main.c: 63:                 case 'o':
   999  00037E  0EFB               	movlw	low STR_4
  1000  000380  0100               	movlb	0	; () banked
  1001  000382  6F96               	movwf	printf@fmt& (0+255),b
  1002  000384  0EFF               	movlw	high STR_4
  1003  000386  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1004  000388  EC82  F007         	call	_printf	;wreg free
  1005  00038C                     l2443:
  1006                           
  1007                           ;main.c: 70:                 case 'Z':
  1008  00038C  ECC7  F007         	call	_EUSART1_is_rx_ready	;wreg free
  1009  000390  0900               	iorlw	0
  1010  000392  B4D8               	btfsc	status,2,c
  1011  000394  EFCE  F001         	goto	u1821
  1012  000398  EFD0  F001         	goto	u1820
  1013  00039C                     u1821:
  1014  00039C  EFC6  F001         	goto	l2443
  1015  0003A0                     u1820:
  1016  0003A0                     
  1017                           ;main.c: 71:                     for (i = 0; i < 40; i++) printf("\n");
  1018  0003A0  EC6D  F007         	call	_EUSART1_Read	;wreg free
  1019  0003A4  0100               	movlb	0	; () banked
  1020  0003A6  6FA2               	movwf	main@cmd& (0+255),b
  1021                           
  1022                           ;main.c: 72:                     __asm("reset");
  1023  0003A8  EF84  F002         	goto	l2483
  1024  0003AC                     l2447:
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;main.c: 75: 
  1028  0003AC  0E3B               	movlw	low STR_5
  1029  0003AE  6F96               	movwf	printf@fmt& (0+255),b
  1030  0003B0  0EFF               	movlw	high STR_5
  1031  0003B2  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1032  0003B4  EC82  F007         	call	_printf	;wreg free
  1033                           
  1034                           ;main.c: 76: 
  1035  0003B8  0ECB               	movlw	low STR_6
  1036  0003BA  0100               	movlb	0	; () banked
  1037  0003BC  6F96               	movwf	printf@fmt& (0+255),b
  1038  0003BE  0EFF               	movlw	high STR_6
  1039  0003C0  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1040  0003C2  EC82  F007         	call	_printf	;wreg free
  1041                           
  1042                           ;main.c: 77: 
  1043  0003C6  0EEE               	movlw	low STR_7
  1044  0003C8  0100               	movlb	0	; () banked
  1045  0003CA  6F96               	movwf	printf@fmt& (0+255),b
  1046  0003CC  0EFF               	movlw	high STR_7
  1047  0003CE  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1048  0003D0  EC82  F007         	call	_printf	;wreg free
  1049                           
  1050                           ;main.c: 78:                 case 'z':
  1051  0003D4  0EA5               	movlw	low STR_8
  1052  0003D6  0100               	movlb	0	; () banked
  1053  0003D8  6F96               	movwf	printf@fmt& (0+255),b
  1054  0003DA  0EFF               	movlw	high STR_8
  1055  0003DC  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1056  0003DE  EC82  F007         	call	_printf	;wreg free
  1057                           
  1058                           ;main.c: 79:                     for (i = 0; i < 40; i++) printf("\n>");
  1059  0003E2  0E8D               	movlw	low STR_9
  1060  0003E4  0100               	movlb	0	; () banked
  1061  0003E6  6F96               	movwf	printf@fmt& (0+255),b
  1062  0003E8  0EFF               	movlw	high STR_9
  1063  0003EA  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1064  0003EC  EC82  F007         	call	_printf	;wreg free
  1065                           
  1066                           ;main.c: 80:                     break;
  1067  0003F0  0E10               	movlw	low STR_10
  1068  0003F2  0100               	movlb	0	; () banked
  1069  0003F4  6F96               	movwf	printf@fmt& (0+255),b
  1070  0003F6  0EFF               	movlw	high STR_10
  1071  0003F8  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1072  0003FA  EC82  F007         	call	_printf	;wreg free
  1073                           
  1074                           ;main.c: 81: 
  1075  0003FE  0E93               	movlw	low STR_11
  1076  000400  0100               	movlb	0	; () banked
  1077  000402  6F96               	movwf	printf@fmt& (0+255),b
  1078  000404  0EFE               	movlw	high STR_11
  1079  000406  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1080  000408  EC82  F007         	call	_printf	;wreg free
  1081                           
  1082                           ;main.c: 83:                     thresholdRange += 5;
  1083  00040C  0E3B               	movlw	low STR_5
  1084  00040E  0100               	movlb	0	; () banked
  1085  000410  6F96               	movwf	printf@fmt& (0+255),b
  1086  000412  0EFF               	movlw	high STR_5
  1087  000414  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1088  000416  EC82  F007         	call	_printf	;wreg free
  1089                           
  1090                           ;main.c: 84:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRang
      +                          e, 128 + thresholdRange);
  1091  00041A  EFC6  F001         	goto	l2443
  1092  00041E                     l2449:
  1093                           
  1094                           ; BSR set to: 0
  1095  00041E  0EF5               	movlw	low STR_13
  1096  000420  6F96               	movwf	printf@fmt& (0+255),b
  1097  000422  0EFF               	movlw	high STR_13
  1098  000424  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1099  000426  EC82  F007         	call	_printf	;wreg free
  1100  00042A  EFC6  F001         	goto	l2443
  1101  00042E                     l2451:
  1102                           
  1103                           ; BSR set to: 0
  1104  00042E  0E00               	movlw	0
  1105  000430  6FA3               	movwf	main@i& (0+255),b
  1106  000432                     l2457:
  1107                           
  1108                           ; BSR set to: 0
  1109  000432  0E0E               	movlw	low (STR_18+51)
  1110  000434  6F96               	movwf	printf@fmt& (0+255),b
  1111  000436  0EFF               	movlw	high (STR_18+51)
  1112  000438  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1113  00043A  EC82  F007         	call	_printf	;wreg free
  1114  00043E  0100               	movlb	0	; () banked
  1115  000440  2BA3               	incf	main@i& (0+255),f,b
  1116  000442                     
  1117                           ; BSR set to: 0
  1118  000442  0E27               	movlw	39
  1119  000444  65A3               	cpfsgt	main@i& (0+255),b
  1120  000446  EF27  F002         	goto	u1831
  1121  00044A  EF29  F002         	goto	u1830
  1122  00044E                     u1831:
  1123  00044E  EF19  F002         	goto	l2457
  1124  000452                     u1830:
  1125  000452                     
  1126                           ; BSR set to: 0
  1127  000452  00FF               	reset		;# 
  1128  000454  EFC6  F001         	goto	l2443
  1129  000458                     l2463:
  1130                           
  1131                           ; BSR set to: 0
  1132  000458  0E00               	movlw	0
  1133  00045A  6FA3               	movwf	main@i& (0+255),b
  1134  00045C                     l2469:
  1135                           
  1136                           ; BSR set to: 0
  1137  00045C  0EF8               	movlw	low (STR_13+3)
  1138  00045E  6F96               	movwf	printf@fmt& (0+255),b
  1139  000460  0EFF               	movlw	high (STR_13+3)
  1140  000462  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1141  000464  EC82  F007         	call	_printf	;wreg free
  1142  000468  0100               	movlb	0	; () banked
  1143  00046A  2BA3               	incf	main@i& (0+255),f,b
  1144  00046C                     
  1145                           ; BSR set to: 0
  1146  00046C  0E27               	movlw	39
  1147  00046E  65A3               	cpfsgt	main@i& (0+255),b
  1148  000470  EF3C  F002         	goto	u1841
  1149  000474  EF3E  F002         	goto	u1840
  1150  000478                     u1841:
  1151  000478  EF2E  F002         	goto	l2469
  1152  00047C                     u1840:
  1153  00047C  EFC6  F001         	goto	l2443
  1154  000480                     l2475:
  1155                           
  1156                           ; BSR set to: 0
  1157  000480  0E05               	movlw	5
  1158  000482  27A4               	addwf	_thresholdRange& (0+255),f,b
  1159  000484  0E00               	movlw	0
  1160  000486  23A5               	addwfc	(_thresholdRange+1)& (0+255),f,b
  1161  000488                     
  1162                           ; BSR set to: 0
  1163  000488  0E75               	movlw	low STR_16
  1164  00048A  6F96               	movwf	printf@fmt& (0+255),b
  1165  00048C  0EFF               	movlw	high STR_16
  1166  00048E  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1167  000490  51A4               	movf	_thresholdRange& (0+255),w,b
  1168  000492  0880               	sublw	128
  1169  000494  6F98               	movwf	(?_printf+2)& (0+255),b
  1170  000496  51A5               	movf	(_thresholdRange+1)& (0+255),w,b
  1171  000498  A0D8               	btfss	status,0,c
  1172  00049A  2AE8               	incf	wreg,f,c
  1173  00049C  0800               	sublw	0
  1174  00049E  6F99               	movwf	(?_printf+3)& (0+255),b
  1175  0004A0  0E80               	movlw	128
  1176  0004A2  25A4               	addwf	_thresholdRange& (0+255),w,b
  1177  0004A4  6F9A               	movwf	(?_printf+4)& (0+255),b
  1178  0004A6  0E00               	movlw	0
  1179  0004A8  21A5               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1180  0004AA  6F9B               	movwf	(?_printf+5)& (0+255),b
  1181  0004AC  EC82  F007         	call	_printf	;wreg free
  1182  0004B0                     l2479:
  1183  0004B0  0E05               	movlw	5
  1184  0004B2  0100               	movlb	0	; () banked
  1185  0004B4  5FA4               	subwf	_thresholdRange& (0+255),f,b
  1186  0004B6  0E00               	movlw	0
  1187  0004B8  5BA5               	subwfb	(_thresholdRange+1)& (0+255),f,b
  1188  0004BA  0E75               	movlw	low STR_16
  1189  0004BC  6F96               	movwf	printf@fmt& (0+255),b
  1190  0004BE  0EFF               	movlw	high STR_16
  1191  0004C0  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1192  0004C2  51A4               	movf	_thresholdRange& (0+255),w,b
  1193  0004C4  0880               	sublw	128
  1194  0004C6  6F98               	movwf	(?_printf+2)& (0+255),b
  1195  0004C8  51A5               	movf	(_thresholdRange+1)& (0+255),w,b
  1196  0004CA  A0D8               	btfss	status,0,c
  1197  0004CC  2AE8               	incf	wreg,f,c
  1198  0004CE  0800               	sublw	0
  1199  0004D0  6F99               	movwf	(?_printf+3)& (0+255),b
  1200  0004D2  0E80               	movlw	128
  1201  0004D4  25A4               	addwf	_thresholdRange& (0+255),w,b
  1202  0004D6  6F9A               	movwf	(?_printf+4)& (0+255),b
  1203  0004D8  0E00               	movlw	0
  1204  0004DA  21A5               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1205  0004DC  6F9B               	movwf	(?_printf+5)& (0+255),b
  1206  0004DE  EC82  F007         	call	_printf	;wreg free
  1207  0004E2                     l43:
  1208  0004E2  0EDB               	movlw	low STR_18
  1209  0004E4  0100               	movlb	0	; () banked
  1210  0004E6  6F96               	movwf	printf@fmt& (0+255),b
  1211  0004E8  0EFE               	movlw	high STR_18
  1212  0004EA  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1213  0004EC  EC82  F007         	call	_printf	;wreg free
  1214  0004F0                     l44:
  1215                           
  1216                           ;main.c: 152:                     printf("Unknown key %c\r\n", cmd);
  1217  0004F0  0EBA               	movlw	low STR_19
  1218  0004F2  0100               	movlb	0	; () banked
  1219  0004F4  6F96               	movwf	printf@fmt& (0+255),b
  1220  0004F6  0EFF               	movlw	high STR_19
  1221  0004F8  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1222  0004FA  C0A2  F098         	movff	main@cmd,?_printf+2
  1223  0004FE  6B99               	clrf	(?_printf+3)& (0+255),b
  1224  000500  EC82  F007         	call	_printf	;wreg free
  1225                           
  1226                           ;main.c: 153:                     break;
  1227  000504  EFC6  F001         	goto	l2443
  1228  000508                     l2483:
  1229                           
  1230                           ; BSR set to: 0
  1231  000508  51A2               	movf	main@cmd& (0+255),w,b
  1232  00050A  6FA0               	movwf	??_main& (0+255),b
  1233  00050C  6BA1               	clrf	(??_main+1)& (0+255),b
  1234                           
  1235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1236                           ; Switch size 1, requested type "simple"
  1237                           ; Number of cases is 1, Range of values is 0 to 0
  1238                           ; switch strategies available:
  1239                           ; Name         Instructions Cycles
  1240                           ; simple_byte            4     3 (average)
  1241                           ;	Chosen strategy is simple_byte
  1242  00050E  51A1               	movf	(??_main+1)& (0+255),w,b
  1243  000510  0A00               	xorlw	0	; case 0
  1244  000512  B4D8               	btfsc	status,2,c
  1245  000514  EF8E  F002         	goto	l2509
  1246  000518  EF78  F002         	goto	l44
  1247  00051C                     l2509:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ; Switch size 1, requested type "simple"
  1251                           ; Number of cases is 7, Range of values is 63 to 122
  1252                           ; switch strategies available:
  1253                           ; Name         Instructions Cycles
  1254                           ; simple_byte           22    12 (average)
  1255                           ;	Chosen strategy is simple_byte
  1256  00051C  51A0               	movf	??_main& (0+255),w,b
  1257  00051E  0A3F               	xorlw	63	; case 63
  1258  000520  B4D8               	btfsc	status,2,c
  1259  000522  EFD6  F001         	goto	l2447
  1260  000526  0A6B               	xorlw	107	; case 84
  1261  000528  B4D8               	btfsc	status,2,c
  1262  00052A  EF40  F002         	goto	l2475
  1263  00052E  0A0E               	xorlw	14	; case 90
  1264  000530  B4D8               	btfsc	status,2,c
  1265  000532  EF17  F002         	goto	l2451
  1266  000536  0A3C               	xorlw	60	; case 102
  1267  000538  B4D8               	btfsc	status,2,c
  1268  00053A  EF71  F002         	goto	l43
  1269  00053E  0A09               	xorlw	9	; case 111
  1270  000540  B4D8               	btfsc	status,2,c
  1271  000542  EF0F  F002         	goto	l2449
  1272  000546  0A1B               	xorlw	27	; case 116
  1273  000548  B4D8               	btfsc	status,2,c
  1274  00054A  EF58  F002         	goto	l2479
  1275  00054E  0A0E               	xorlw	14	; case 122
  1276  000550  B4D8               	btfsc	status,2,c
  1277  000552  EF2C  F002         	goto	l2463
  1278  000556  EF78  F002         	goto	l44
  1279  00055A  EF1F  F000         	goto	start
  1280  00055E                     __end_of_main:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _printf *****************
  1284 ;; Defined at:
  1285 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1288 ;;		 -> STR_19(17), STR_18(53), STR_17(24), STR_16(24), 
  1289 ;;		 -> STR_15(3), STR_14(2), STR_13(6), STR_12(33), 
  1290 ;;		 -> STR_11(72), STR_10(43), STR_9(24), STR_8(21), 
  1291 ;;		 -> STR_7(7), STR_6(15), STR_5(33), STR_4(3), 
  1292 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  ap              2   10[BANK0 ] PTR void [1]
  1295 ;;		 -> ?_printf(2), 
  1296 ;;  ret             2    0        int 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  2    2[BANK0 ] int 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1306 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;Total ram usage:       10 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:   11
  1313 ;; This function calls:
  1314 ;;		_vfprintf
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text1
  1321  000F04                     __ptext1:
  1322                           	callstack 0
  1323  000F04                     _printf:
  1324                           	callstack 19
  1325  000F04  0E98               	movlw	low (?_printf+2)
  1326  000F06  0100               	movlb	0	; () banked
  1327  000F08  6F9E               	movwf	printf@ap& (0+255),b
  1328  000F0A  0E00               	movlw	high (?_printf+2)
  1329  000F0C  6F9F               	movwf	(printf@ap+1)& (0+255),b
  1330  000F0E                     
  1331                           ; BSR set to: 0
  1332  000F0E  0E00               	movlw	0
  1333  000F10  6E55               	movwf	vfprintf@fp^0,c
  1334  000F12  0E00               	movlw	0
  1335  000F14  6E56               	movwf	(vfprintf@fp+1)^0,c
  1336  000F16  C096  F057         	movff	printf@fmt,vfprintf@fmt
  1337  000F1A  C097  F058         	movff	printf@fmt+1,vfprintf@fmt+1
  1338  000F1E  0E9E               	movlw	low printf@ap
  1339  000F20  6E59               	movwf	vfprintf@ap^0,c
  1340  000F22  0E00               	movlw	high printf@ap
  1341  000F24  6E5A               	movwf	(vfprintf@ap+1)^0,c
  1342  000F26  EC58  F006         	call	_vfprintf	;wreg free
  1343  000F2A  0012               	return		;funcret
  1344  000F2C                     __end_of_printf:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _vfprintf *****************
  1348 ;; Defined at:
  1349 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  1352 ;;		 -> NULL(0), 
  1353 ;;  fmt             2   86[COMRAM] PTR const unsigned char 
  1354 ;;		 -> STR_19(17), STR_18(53), STR_17(24), STR_16(24), 
  1355 ;;		 -> STR_15(3), STR_14(2), STR_13(6), STR_12(33), 
  1356 ;;		 -> STR_11(72), STR_10(43), STR_9(24), STR_8(21), 
  1357 ;;		 -> STR_7(7), STR_6(15), STR_5(33), STR_4(3), 
  1358 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  1359 ;;  ap              2   88[COMRAM] PTR PTR void 
  1360 ;;		 -> printf@ap(2), 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  1363 ;;		 -> STR_19(17), STR_18(53), STR_17(24), STR_16(24), 
  1364 ;;		 -> STR_15(3), STR_14(2), STR_13(6), STR_12(33), 
  1365 ;;		 -> STR_11(72), STR_10(43), STR_9(24), STR_8(21), 
  1366 ;;		 -> STR_7(7), STR_6(15), STR_5(33), STR_4(3), 
  1367 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  2   84[COMRAM] int 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1377 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;Total ram usage:        8 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:   10
  1384 ;; This function calls:
  1385 ;;		_vfpfcnvrt
  1386 ;; This function is called by:
  1387 ;;		_printf
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text2
  1392  000CB0                     __ptext2:
  1393                           	callstack 0
  1394  000CB0                     _vfprintf:
  1395                           	callstack 19
  1396  000CB0                     
  1397                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1398  000CB0  C057  F094         	movff	vfprintf@fmt,vfprintf@cfmt
  1399  000CB4  C058  F095         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1400  000CB8                     
  1401                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1402  000CB8  0E00               	movlw	0
  1403  000CBA  0100               	movlb	0	; () banked
  1404  000CBC  6F61               	movwf	(_nout+1)& (0+255),b
  1405  000CBE  0E00               	movlw	0
  1406  000CC0  6F60               	movwf	_nout& (0+255),b
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1409  000CC2  EF76  F006         	goto	l2415
  1410  000CC6                     l2413:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1414  000CC6  C055  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1415  000CCA  C056  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1416  000CCE  0E94               	movlw	low vfprintf@cfmt
  1417  000CD0  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1418  000CD2  0E00               	movlw	high vfprintf@cfmt
  1419  000CD4  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1420  000CD6  C059  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1421  000CDA  C05A  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1422  000CDE  ECAF  F002         	call	_vfpfcnvrt	;wreg free
  1423  000CE2  5044               	movf	?_vfpfcnvrt^0,w,c
  1424  000CE4  0100               	movlb	0	; () banked
  1425  000CE6  2760               	addwf	_nout& (0+255),f,b
  1426  000CE8  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1427  000CEA  2361               	addwfc	(_nout+1)& (0+255),f,b
  1428  000CEC                     l2415:
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1432  000CEC  C094  FFF6         	movff	vfprintf@cfmt,tblptrl
  1433  000CF0  C095  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1434  000CF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1435  000CF4  6AF8               	clrf	tblptru,c
  1436  000CF6                     	endif
  1437  000CF6                     	if	0	;tblptru may be non-zero
  1438  000CF6                     	endif
  1439  000CF6  0008               	tblrd		*
  1440  000CF8  50F5               	movf	tablat,w,c
  1441  000CFA  0900               	iorlw	0
  1442  000CFC  A4D8               	btfss	status,2,c
  1443  000CFE  EF83  F006         	goto	u1801
  1444  000D02  EF85  F006         	goto	u1800
  1445  000D06                     u1801:
  1446  000D06  EF63  F006         	goto	l2413
  1447  000D0A                     u1800:
  1448  000D0A                     
  1449                           ; BSR set to: 0
  1450                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1451  000D0A  C060  F055         	movff	_nout,?_vfprintf
  1452  000D0E  C061  F056         	movff	_nout+1,?_vfprintf+1
  1453  000D12                     
  1454                           ; BSR set to: 0
  1455  000D12  0012               	return		;funcret
  1456  000D14                     __end_of_vfprintf:
  1457                           	callstack 0
  1458                           
  1459 ;; *************** function _vfpfcnvrt *****************
  1460 ;; Defined at:
  1461 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1464 ;;		 -> NULL(0), 
  1465 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1466 ;;		 -> vfprintf@cfmt(2), 
  1467 ;;  ap              2   71[COMRAM] PTR PTR void 
  1468 ;;		 -> printf@ap(2), 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  ll              8   75[COMRAM] long long 
  1471 ;;  llu             8    0        unsigned long long 
  1472 ;;  f               4    0        unsigned long long 
  1473 ;;  vp              3    0        PTR void 
  1474 ;;  ct              3    0        unsigned char [3]
  1475 ;;  cp              3    0        PTR unsigned char 
  1476 ;;  i               2    0        int 
  1477 ;;  done            2    0        int 
  1478 ;;  c               1   83[COMRAM] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  2   67[COMRAM] int 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1488 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;Total ram usage:       17 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    9
  1495 ;; This function calls:
  1496 ;;		_ctoa
  1497 ;;		_dtoa
  1498 ;;		_fputc
  1499 ;; This function is called by:
  1500 ;;		_vfprintf
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text3
  1505  00055E                     __ptext3:
  1506                           	callstack 0
  1507  00055E                     _vfpfcnvrt:
  1508                           	callstack 19
  1509  00055E                     
  1510                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1511  00055E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1512  000562  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1513  000566  CFDE FFF6          	movff	postinc2,tblptrl
  1514  00056A  CFDD FFF7          	movff	postdec2,tblptrh
  1515  00056E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1516  00056E  6AF8               	clrf	tblptru,c
  1517  000570                     	endif
  1518  000570                     	if	0	;tblptru may be non-zero
  1519  000570                     	endif
  1520  000570  0008               	tblrd		*
  1521  000572  50F5               	movf	tablat,w,c
  1522  000574  0A25               	xorlw	37
  1523  000576  A4D8               	btfss	status,2,c
  1524  000578  EFC0  F002         	goto	u1751
  1525  00057C  EFC2  F002         	goto	u1750
  1526  000580                     u1751:
  1527  000580  EFAB  F003         	goto	l2401
  1528  000584                     u1750:
  1529  000584                     
  1530                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1531  000584  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1532  000588  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1533  00058C  2ADE               	incf	postinc2,f,c
  1534  00058E  0E00               	movlw	0
  1535  000590  22DD               	addwfc	postdec2,f,c
  1536  000592                     
  1537                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1538  000592  0E00               	movlw	0
  1539  000594  0100               	movlb	0	; () banked
  1540  000596  6F63               	movwf	(_width+1)& (0+255),b
  1541  000598  0E00               	movlw	0
  1542  00059A  6F62               	movwf	_width& (0+255),b
  1543  00059C  C062  F066         	movff	_width,_flags
  1544  0005A0  C063  F067         	movff	_width+1,_flags+1
  1545  0005A4                     
  1546                           ; BSR set to: 0
  1547                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1548  0005A4  6964               	setf	_prec& (0+255),b
  1549  0005A6  6965               	setf	(_prec+1)& (0+255),b
  1550  0005A8                     
  1551                           ; BSR set to: 0
  1552                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  1553  0005A8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1554  0005AC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1555  0005B0  CFDE FFF6          	movff	postinc2,tblptrl
  1556  0005B4  CFDD FFF7          	movff	postdec2,tblptrh
  1557  0005B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1558  0005B8  6AF8               	clrf	tblptru,c
  1559  0005BA                     	endif
  1560  0005BA                     	if	0	;tblptru may be non-zero
  1561  0005BA                     	endif
  1562  0005BA  0008               	tblrd		*
  1563  0005BC  50F5               	movf	tablat,w,c
  1564  0005BE  0A63               	xorlw	99
  1565  0005C0  A4D8               	btfss	status,2,c
  1566  0005C2  EFE5  F002         	goto	u1761
  1567  0005C6  EFE7  F002         	goto	u1760
  1568  0005CA                     u1761:
  1569  0005CA  EF0E  F003         	goto	l2375
  1570  0005CE                     u1760:
  1571  0005CE                     
  1572                           ; BSR set to: 0
  1573                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  1574  0005CE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1575  0005D2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1576  0005D6  2ADE               	incf	postinc2,f,c
  1577  0005D8  0E00               	movlw	0
  1578  0005DA  22DD               	addwfc	postdec2,f,c
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1581  0005DC  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1582  0005E0  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1583  0005E4  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1584  0005E8  0E02               	movlw	2
  1585  0005EA  26DE               	addwf	postinc2,f,c
  1586  0005EC  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1587  0005F0  0E00               	movlw	0
  1588  0005F2  22DD               	addwfc	postdec2,f,c
  1589  0005F4  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1590  0005F8  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1591  0005FC  50DF               	movf	indf2,w,c
  1592  0005FE  6E54               	movwf	vfpfcnvrt@c^0,c
  1593  000600                     
  1594                           ; BSR set to: 0
  1595                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  1596  000600  C044  F00E         	movff	vfpfcnvrt@fp,ctoa@fp
  1597  000604  C045  F00F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1598  000608  C054  F010         	movff	vfpfcnvrt@c,ctoa@c
  1599  00060C  EC3E  F005         	call	_ctoa	;wreg free
  1600  000610  C00E  F044         	movff	?_ctoa,?_vfpfcnvrt
  1601  000614  C00F  F045         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1602  000618  EFC7  F003         	goto	l1064
  1603  00061C                     l2375:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1607  00061C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1608  000620  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1609  000624  CFDE FFF6          	movff	postinc2,tblptrl
  1610  000628  CFDD FFF7          	movff	postdec2,tblptrh
  1611  00062C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1612  00062C  6AF8               	clrf	tblptru,c
  1613  00062E                     	endif
  1614  00062E                     	if	0	;tblptru may be non-zero
  1615  00062E                     	endif
  1616  00062E  0008               	tblrd		*
  1617  000630  50F5               	movf	tablat,w,c
  1618  000632  0A64               	xorlw	100
  1619  000634  B4D8               	btfsc	status,2,c
  1620  000636  EF1F  F003         	goto	u1771
  1621  00063A  EF21  F003         	goto	u1770
  1622  00063E                     u1771:
  1623  00063E  EF34  F003         	goto	l2379
  1624  000642                     u1770:
  1625  000642                     
  1626                           ; BSR set to: 0
  1627  000642  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1628  000646  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1629  00064A  CFDE FFF6          	movff	postinc2,tblptrl
  1630  00064E  CFDD FFF7          	movff	postdec2,tblptrh
  1631  000652                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1632  000652  6AF8               	clrf	tblptru,c
  1633  000654                     	endif
  1634  000654                     	if	0	;tblptru may be non-zero
  1635  000654                     	endif
  1636  000654  0008               	tblrd		*
  1637  000656  50F5               	movf	tablat,w,c
  1638  000658  0A69               	xorlw	105
  1639  00065A  A4D8               	btfss	status,2,c
  1640  00065C  EF32  F003         	goto	u1781
  1641  000660  EF34  F003         	goto	u1780
  1642  000664                     u1781:
  1643  000664  EF74  F003         	goto	l2385
  1644  000668                     u1780:
  1645  000668                     l2379:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1649  000668  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1650  00066C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1651  000670  2ADE               	incf	postinc2,f,c
  1652  000672  0E00               	movlw	0
  1653  000674  22DD               	addwfc	postdec2,f,c
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1656  000676  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1657  00067A  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1658  00067E  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1659  000682  0E02               	movlw	2
  1660  000684  26DE               	addwf	postinc2,f,c
  1661  000686  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1662  00068A  0E00               	movlw	0
  1663  00068C  22DD               	addwfc	postdec2,f,c
  1664  00068E  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1665  000692  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1666  000696  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  1667  00069A  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  1668  00069E  0E00               	movlw	0
  1669  0006A0  BE4D               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1670  0006A2  0EFF               	movlw	-1
  1671  0006A4  6E4E               	movwf	(vfpfcnvrt@ll+2)^0,c
  1672  0006A6  6E4F               	movwf	(vfpfcnvrt@ll+3)^0,c
  1673  0006A8  6E50               	movwf	(vfpfcnvrt@ll+4)^0,c
  1674  0006AA  6E51               	movwf	(vfpfcnvrt@ll+5)^0,c
  1675  0006AC  6E52               	movwf	(vfpfcnvrt@ll+6)^0,c
  1676  0006AE  6E53               	movwf	(vfpfcnvrt@ll+7)^0,c
  1677  0006B0                     
  1678                           ; BSR set to: 0
  1679                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1680  0006B0  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1681  0006B4  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1682  0006B8  C04C  F022         	movff	vfpfcnvrt@ll,dtoa@d
  1683  0006BC  C04D  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1684  0006C0  C04E  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1685  0006C4  C04F  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1686  0006C8  C050  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1687  0006CC  C051  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1688  0006D0  C052  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1689  0006D4  C053  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1690  0006D8  EC21  F000         	call	_dtoa	;wreg free
  1691  0006DC  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  1692  0006E0  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1693  0006E4  EFC7  F003         	goto	l1064
  1694  0006E8                     l2385:
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1698  0006E8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1699  0006EC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1700  0006F0  CFDE FFF6          	movff	postinc2,tblptrl
  1701  0006F4  CFDD FFF7          	movff	postdec2,tblptrh
  1702  0006F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1703  0006F8  6AF8               	clrf	tblptru,c
  1704  0006FA                     	endif
  1705  0006FA                     	if	0	;tblptru may be non-zero
  1706  0006FA                     	endif
  1707  0006FA  0008               	tblrd		*
  1708  0006FC  50F5               	movf	tablat,w,c
  1709  0006FE  0A25               	xorlw	37
  1710  000700  A4D8               	btfss	status,2,c
  1711  000702  EF85  F003         	goto	u1791
  1712  000706  EF87  F003         	goto	u1790
  1713  00070A                     u1791:
  1714  00070A  EF9E  F003         	goto	l2395
  1715  00070E                     u1790:
  1716  00070E                     
  1717                           ; BSR set to: 0
  1718                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1719  00070E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1720  000712  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1721  000716  2ADE               	incf	postinc2,f,c
  1722  000718  0E00               	movlw	0
  1723  00071A  22DD               	addwfc	postdec2,f,c
  1724  00071C                     
  1725                           ; BSR set to: 0
  1726                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1727  00071C  0E00               	movlw	0
  1728  00071E  6E06               	movwf	(fputc@c+1)^0,c
  1729  000720  0E25               	movlw	37
  1730  000722  6E05               	movwf	fputc@c^0,c
  1731  000724  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1732  000728  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1733  00072C  EC0D  F006         	call	_fputc	;wreg free
  1734  000730                     l2391:
  1735                           
  1736                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1737  000730  0E00               	movlw	0
  1738  000732  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1739  000734  0E01               	movlw	1
  1740  000736  6E44               	movwf	?_vfpfcnvrt^0,c
  1741  000738  EFC7  F003         	goto	l1064
  1742  00073C                     l2395:
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1746  00073C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1747  000740  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1748  000744  2ADE               	incf	postinc2,f,c
  1749  000746  0E00               	movlw	0
  1750  000748  22DD               	addwfc	postdec2,f,c
  1751  00074A                     
  1752                           ; BSR set to: 0
  1753                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1754  00074A  0E00               	movlw	0
  1755  00074C  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1756  00074E  0E00               	movlw	0
  1757  000750  6E44               	movwf	?_vfpfcnvrt^0,c
  1758  000752  EFC7  F003         	goto	l1064
  1759  000756                     l2401:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1762  000756  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1763  00075A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1764  00075E  CFDE FFF6          	movff	postinc2,tblptrl
  1765  000762  CFDD FFF7          	movff	postdec2,tblptrh
  1766  000766                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1767  000766  6AF8               	clrf	tblptru,c
  1768  000768                     	endif
  1769  000768                     	if	0	;tblptru may be non-zero
  1770  000768                     	endif
  1771  000768  0008               	tblrd		*
  1772  00076A  50F5               	movf	tablat,w,c
  1773  00076C  6E05               	movwf	fputc@c^0,c
  1774  00076E  6A06               	clrf	(fputc@c+1)^0,c
  1775  000770  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1776  000774  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1777  000778  EC0D  F006         	call	_fputc	;wreg free
  1778  00077C                     
  1779                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1780  00077C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1781  000780  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1782  000784  2ADE               	incf	postinc2,f,c
  1783  000786  0E00               	movlw	0
  1784  000788  22DD               	addwfc	postdec2,f,c
  1785  00078A  EF98  F003         	goto	l2391
  1786  00078E                     l1064:
  1787  00078E  0012               	return		;funcret
  1788  000790                     __end_of_vfpfcnvrt:
  1789                           	callstack 0
  1790                           
  1791 ;; *************** function _dtoa *****************
  1792 ;; Defined at:
  1793 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1796 ;;		 -> NULL(0), 
  1797 ;;  d               8   33[COMRAM] long long 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  n               8   57[COMRAM] long long 
  1800 ;;  i               2   65[COMRAM] int 
  1801 ;;  s               2   55[COMRAM] int 
  1802 ;;  w               2   53[COMRAM] int 
  1803 ;;  p               2   51[COMRAM] int 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  2   31[COMRAM] int 
  1806 ;; Registers used:
  1807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1813 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;Total ram usage:       36 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    8
  1820 ;; This function calls:
  1821 ;;		___aodiv
  1822 ;;		___aomod
  1823 ;;		_abs
  1824 ;;		_pad
  1825 ;; This function is called by:
  1826 ;;		_vfpfcnvrt
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text4
  1831  000042                     __ptext4:
  1832                           	callstack 0
  1833  000042                     _dtoa:
  1834                           	callstack 19
  1835  000042                     
  1836                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1837  000042  C022  F03A         	movff	dtoa@d,dtoa@n
  1838  000046  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  1839  00004A  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  1840  00004E  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  1841  000052  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  1842  000056  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  1843  00005A  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  1844  00005E  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  1845  000062                     
  1846                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1847  000062  BE41               	btfsc	(dtoa@n+7)^0,7,c
  1848  000064  EF36  F000         	goto	u1601
  1849  000068  EF39  F000         	goto	u1600
  1850  00006C                     u1601:
  1851  00006C  0E01               	movlw	1
  1852  00006E  EF3A  F000         	goto	u1610
  1853  000072                     u1600:
  1854  000072  0E00               	movlw	0
  1855  000074                     u1610:
  1856  000074  6E38               	movwf	dtoa@s^0,c
  1857  000076  6A39               	clrf	(dtoa@s+1)^0,c
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1860  000078  5038               	movf	dtoa@s^0,w,c
  1861  00007A  1039               	iorwf	(dtoa@s+1)^0,w,c
  1862  00007C  B4D8               	btfsc	status,2,c
  1863  00007E  EF43  F000         	goto	u1621
  1864  000082  EF45  F000         	goto	u1620
  1865  000086                     u1621:
  1866  000086  EF55  F000         	goto	l2303
  1867  00008A                     u1620:
  1868  00008A                     
  1869                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1870  00008A  1E41               	comf	(dtoa@n+7)^0,f,c
  1871  00008C  1E40               	comf	(dtoa@n+6)^0,f,c
  1872  00008E  1E3F               	comf	(dtoa@n+5)^0,f,c
  1873  000090  1E3E               	comf	(dtoa@n+4)^0,f,c
  1874  000092  1E3D               	comf	(dtoa@n+3)^0,f,c
  1875  000094  1E3C               	comf	(dtoa@n+2)^0,f,c
  1876  000096  1E3B               	comf	(dtoa@n+1)^0,f,c
  1877  000098  6C3A               	negf	dtoa@n^0,c
  1878  00009A  0E00               	movlw	0
  1879  00009C  223B               	addwfc	(dtoa@n+1)^0,f,c
  1880  00009E  223C               	addwfc	(dtoa@n+2)^0,f,c
  1881  0000A0  223D               	addwfc	(dtoa@n+3)^0,f,c
  1882  0000A2  223E               	addwfc	(dtoa@n+4)^0,f,c
  1883  0000A4  223F               	addwfc	(dtoa@n+5)^0,f,c
  1884  0000A6  2240               	addwfc	(dtoa@n+6)^0,f,c
  1885  0000A8  2241               	addwfc	(dtoa@n+7)^0,f,c
  1886  0000AA                     l2303:
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1889  0000AA  0100               	movlb	0	; () banked
  1890  0000AC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1891  0000AE  EF5B  F000         	goto	u1631
  1892  0000B2  EF5D  F000         	goto	u1630
  1893  0000B6                     u1631:
  1894  0000B6  EF5E  F000         	goto	l2307
  1895  0000BA                     u1630:
  1896  0000BA                     
  1897                           ; BSR set to: 0
  1898                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1899  0000BA  9366               	bcf	_flags& (0+255),1,b
  1900  0000BC                     l2307:
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1904  0000BC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1905  0000BE  EF6B  F000         	goto	u1640
  1906  0000C2  5165               	movf	(_prec+1)& (0+255),w,b
  1907  0000C4  E106               	bnz	u1641
  1908  0000C6  0564               	decf	_prec& (0+255),w,b
  1909  0000C8  B0D8               	btfsc	status,0,c
  1910  0000CA  EF69  F000         	goto	u1641
  1911  0000CE  EF6B  F000         	goto	u1640
  1912  0000D2                     u1641:
  1913  0000D2  EF71  F000         	goto	l1039
  1914  0000D6                     u1640:
  1915  0000D6                     
  1916                           ; BSR set to: 0
  1917  0000D6  0E00               	movlw	0
  1918  0000D8  6E35               	movwf	(dtoa@p+1)^0,c
  1919  0000DA  0E01               	movlw	1
  1920  0000DC  6E34               	movwf	dtoa@p^0,c
  1921  0000DE  EF75  F000         	goto	l1041
  1922  0000E2                     l1039:
  1923                           
  1924                           ; BSR set to: 0
  1925  0000E2  C064  F034         	movff	_prec,dtoa@p
  1926  0000E6  C065  F035         	movff	_prec+1,dtoa@p+1
  1927  0000EA                     l1041:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1931  0000EA  C062  F036         	movff	_width,dtoa@w
  1932  0000EE  C063  F037         	movff	_width+1,dtoa@w+1
  1933  0000F2                     
  1934                           ; BSR set to: 0
  1935                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1936  0000F2  5038               	movf	dtoa@s^0,w,c
  1937  0000F4  1039               	iorwf	(dtoa@s+1)^0,w,c
  1938  0000F6  A4D8               	btfss	status,2,c
  1939  0000F8  EF80  F000         	goto	u1651
  1940  0000FC  EF82  F000         	goto	u1650
  1941  000100                     u1651:
  1942  000100  EF89  F000         	goto	l2315
  1943  000104                     u1650:
  1944  000104                     
  1945                           ; BSR set to: 0
  1946  000104  A566               	btfss	_flags& (0+255),2,b
  1947  000106  EF87  F000         	goto	u1661
  1948  00010A  EF89  F000         	goto	u1660
  1949  00010E                     u1661:
  1950  00010E  EF8C  F000         	goto	l2317
  1951  000112                     u1660:
  1952  000112                     l2315:
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  1956  000112  0636               	decf	dtoa@w^0,f,c
  1957  000114  A0D8               	btfss	status,0,c
  1958  000116  0637               	decf	(dtoa@w+1)^0,f,c
  1959  000118                     l2317:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1963  000118  0E00               	movlw	0
  1964  00011A  6E43               	movwf	(dtoa@i+1)^0,c
  1965  00011C  0E1F               	movlw	31
  1966  00011E  6E42               	movwf	dtoa@i^0,c
  1967  000120                     
  1968                           ; BSR set to: 0
  1969                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1970  000120  0E00               	movlw	0
  1971  000122  6F93               	movwf	(_dbuf+31)& (0+255),b
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1974  000124  EF10  F001         	goto	l2331
  1975  000128                     l2321:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  1978  000128  0642               	decf	dtoa@i^0,f,c
  1979  00012A  A0D8               	btfss	status,0,c
  1980  00012C  0643               	decf	(dtoa@i+1)^0,f,c
  1981  00012E                     
  1982                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1983  00012E  0E74               	movlw	low _dbuf
  1984  000130  2442               	addwf	dtoa@i^0,w,c
  1985  000132  6ED9               	movwf	fsr2l,c
  1986  000134  0E00               	movlw	high _dbuf
  1987  000136  2043               	addwfc	(dtoa@i+1)^0,w,c
  1988  000138  6EDA               	movwf	fsr2h,c
  1989  00013A  C03A  F003         	movff	dtoa@n,___aomod@dividend
  1990  00013E  C03B  F004         	movff	dtoa@n+1,___aomod@dividend+1
  1991  000142  C03C  F005         	movff	dtoa@n+2,___aomod@dividend+2
  1992  000146  C03D  F006         	movff	dtoa@n+3,___aomod@dividend+3
  1993  00014A  C03E  F007         	movff	dtoa@n+4,___aomod@dividend+4
  1994  00014E  C03F  F008         	movff	dtoa@n+5,___aomod@dividend+5
  1995  000152  C040  F009         	movff	dtoa@n+6,___aomod@dividend+6
  1996  000156  C041  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  1997  00015A  0E0A               	movlw	10
  1998  00015C  6E0B               	movwf	___aomod@divisor^0,c
  1999  00015E  0E00               	movlw	0
  2000  000160  6E0C               	movwf	(___aomod@divisor+1)^0,c
  2001  000162  0E00               	movlw	0
  2002  000164  6E0D               	movwf	(___aomod@divisor+2)^0,c
  2003  000166  0E00               	movlw	0
  2004  000168  6E0E               	movwf	(___aomod@divisor+3)^0,c
  2005  00016A  0E00               	movlw	0
  2006  00016C  6E0F               	movwf	(___aomod@divisor+4)^0,c
  2007  00016E  0E00               	movlw	0
  2008  000170  6E10               	movwf	(___aomod@divisor+5)^0,c
  2009  000172  0E00               	movlw	0
  2010  000174  6E11               	movwf	(___aomod@divisor+6)^0,c
  2011  000176  0E00               	movlw	0
  2012  000178  6E12               	movwf	(___aomod@divisor+7)^0,c
  2013  00017A  EC8C  F004         	call	___aomod	;wreg free
  2014  00017E  C003  F02A         	movff	?___aomod,??_dtoa
  2015  000182  C004  F02B         	movff	?___aomod+1,??_dtoa+1
  2016  000186  C005  F02C         	movff	?___aomod+2,??_dtoa+2
  2017  00018A  C006  F02D         	movff	?___aomod+3,??_dtoa+3
  2018  00018E  C007  F02E         	movff	?___aomod+4,??_dtoa+4
  2019  000192  C008  F02F         	movff	?___aomod+5,??_dtoa+5
  2020  000196  C009  F030         	movff	?___aomod+6,??_dtoa+6
  2021  00019A  C00A  F031         	movff	?___aomod+7,??_dtoa+7
  2022  00019E  C02A  F015         	movff	??_dtoa,abs@a
  2023  0001A2  C02C  F016         	movff	??_dtoa+2,abs@a+1
  2024  0001A6  ECAC  F006         	call	_abs	;wreg free
  2025  0001AA  5015               	movf	?_abs^0,w,c
  2026  0001AC  0F30               	addlw	48
  2027  0001AE  6EDF               	movwf	indf2,c
  2028  0001B0                     
  2029                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2030  0001B0  0634               	decf	dtoa@p^0,f,c
  2031  0001B2  A0D8               	btfss	status,0,c
  2032  0001B4  0635               	decf	(dtoa@p+1)^0,f,c
  2033  0001B6                     
  2034                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2035  0001B6  0636               	decf	dtoa@w^0,f,c
  2036  0001B8  A0D8               	btfss	status,0,c
  2037  0001BA  0637               	decf	(dtoa@w+1)^0,f,c
  2038  0001BC                     
  2039                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2040  0001BC  C03A  F003         	movff	dtoa@n,___aodiv@dividend
  2041  0001C0  C03B  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  2042  0001C4  C03C  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  2043  0001C8  C03D  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  2044  0001CC  C03E  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  2045  0001D0  C03F  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  2046  0001D4  C040  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  2047  0001D8  C041  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  2048  0001DC  0E0A               	movlw	10
  2049  0001DE  6E0B               	movwf	___aodiv@divisor^0,c
  2050  0001E0  0E00               	movlw	0
  2051  0001E2  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  2052  0001E4  0E00               	movlw	0
  2053  0001E6  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  2054  0001E8  0E00               	movlw	0
  2055  0001EA  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  2056  0001EC  0E00               	movlw	0
  2057  0001EE  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  2058  0001F0  0E00               	movlw	0
  2059  0001F2  6E10               	movwf	(___aodiv@divisor+5)^0,c
  2060  0001F4  0E00               	movlw	0
  2061  0001F6  6E11               	movwf	(___aodiv@divisor+6)^0,c
  2062  0001F8  0E00               	movlw	0
  2063  0001FA  6E12               	movwf	(___aodiv@divisor+7)^0,c
  2064  0001FC  ECC8  F003         	call	___aodiv	;wreg free
  2065  000200  C003  F03A         	movff	?___aodiv,dtoa@n
  2066  000204  C004  F03B         	movff	?___aodiv+1,dtoa@n+1
  2067  000208  C005  F03C         	movff	?___aodiv+2,dtoa@n+2
  2068  00020C  C006  F03D         	movff	?___aodiv+3,dtoa@n+3
  2069  000210  C007  F03E         	movff	?___aodiv+4,dtoa@n+4
  2070  000214  C008  F03F         	movff	?___aodiv+5,dtoa@n+5
  2071  000218  C009  F040         	movff	?___aodiv+6,dtoa@n+6
  2072  00021C  C00A  F041         	movff	?___aodiv+7,dtoa@n+7
  2073  000220                     l2331:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2076  000220  BE43               	btfsc	(dtoa@i+1)^0,7,c
  2077  000222  EF1B  F001         	goto	u1671
  2078  000226  5043               	movf	(dtoa@i+1)^0,w,c
  2079  000228  E108               	bnz	u1670
  2080  00022A  0442               	decf	dtoa@i^0,w,c
  2081  00022C  A0D8               	btfss	status,0,c
  2082  00022E  EF1B  F001         	goto	u1671
  2083  000232  EF1D  F001         	goto	u1670
  2084  000236                     u1671:
  2085  000236  EF4E  F001         	goto	l2341
  2086  00023A                     u1670:
  2087  00023A  503A               	movf	dtoa@n^0,w,c
  2088  00023C  103B               	iorwf	(dtoa@n+1)^0,w,c
  2089  00023E  103C               	iorwf	(dtoa@n+2)^0,w,c
  2090  000240  103D               	iorwf	(dtoa@n+3)^0,w,c
  2091  000242  103E               	iorwf	(dtoa@n+4)^0,w,c
  2092  000244  103F               	iorwf	(dtoa@n+5)^0,w,c
  2093  000246  1040               	iorwf	(dtoa@n+6)^0,w,c
  2094  000248  1041               	iorwf	(dtoa@n+7)^0,w,c
  2095  00024A  A4D8               	btfss	status,2,c
  2096  00024C  EF2A  F001         	goto	u1681
  2097  000250  EF2C  F001         	goto	u1680
  2098  000254                     u1681:
  2099  000254  EF94  F000         	goto	l2321
  2100  000258                     u1680:
  2101  000258  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2102  00025A  EF39  F001         	goto	u1690
  2103  00025E  5035               	movf	(dtoa@p+1)^0,w,c
  2104  000260  E106               	bnz	u1691
  2105  000262  0434               	decf	dtoa@p^0,w,c
  2106  000264  B0D8               	btfsc	status,0,c
  2107  000266  EF37  F001         	goto	u1691
  2108  00026A  EF39  F001         	goto	u1690
  2109  00026E                     u1691:
  2110  00026E  EF94  F000         	goto	l2321
  2111  000272                     u1690:
  2112  000272  BE37               	btfsc	(dtoa@w+1)^0,7,c
  2113  000274  EF44  F001         	goto	u1701
  2114  000278  5037               	movf	(dtoa@w+1)^0,w,c
  2115  00027A  E108               	bnz	u1700
  2116  00027C  0436               	decf	dtoa@w^0,w,c
  2117  00027E  A0D8               	btfss	status,0,c
  2118  000280  EF44  F001         	goto	u1701
  2119  000284  EF46  F001         	goto	u1700
  2120  000288                     u1701:
  2121  000288  EF4E  F001         	goto	l2341
  2122  00028C                     u1700:
  2123  00028C  0100               	movlb	0	; () banked
  2124  00028E  B366               	btfsc	_flags& (0+255),1,b
  2125  000290  EF4C  F001         	goto	u1711
  2126  000294  EF4E  F001         	goto	u1710
  2127  000298                     u1711:
  2128  000298  EF94  F000         	goto	l2321
  2129  00029C                     u1710:
  2130  00029C                     l2341:
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2133  00029C  5038               	movf	dtoa@s^0,w,c
  2134  00029E  1039               	iorwf	(dtoa@s+1)^0,w,c
  2135  0002A0  A4D8               	btfss	status,2,c
  2136  0002A2  EF55  F001         	goto	u1721
  2137  0002A6  EF57  F001         	goto	u1720
  2138  0002AA                     u1721:
  2139  0002AA  EF5F  F001         	goto	l2345
  2140  0002AE                     u1720:
  2141  0002AE  0100               	movlb	0	; () banked
  2142  0002B0  A566               	btfss	_flags& (0+255),2,b
  2143  0002B2  EF5D  F001         	goto	u1731
  2144  0002B6  EF5F  F001         	goto	u1730
  2145  0002BA                     u1731:
  2146  0002BA  EF7D  F001         	goto	l2355
  2147  0002BE                     u1730:
  2148  0002BE                     l2345:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  2151  0002BE  0642               	decf	dtoa@i^0,f,c
  2152  0002C0  A0D8               	btfss	status,0,c
  2153  0002C2  0643               	decf	(dtoa@i+1)^0,f,c
  2154  0002C4                     
  2155                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2156  0002C4  5038               	movf	dtoa@s^0,w,c
  2157  0002C6  1039               	iorwf	(dtoa@s+1)^0,w,c
  2158  0002C8  A4D8               	btfss	status,2,c
  2159  0002CA  EF69  F001         	goto	u1741
  2160  0002CE  EF6B  F001         	goto	u1740
  2161  0002D2                     u1741:
  2162  0002D2  EF71  F001         	goto	l2351
  2163  0002D6                     u1740:
  2164  0002D6  0E00               	movlw	0
  2165  0002D8  6E33               	movwf	(_dtoa$1331+1)^0,c
  2166  0002DA  0E2B               	movlw	43
  2167  0002DC  6E32               	movwf	_dtoa$1331^0,c
  2168  0002DE  EF75  F001         	goto	l2353
  2169  0002E2                     l2351:
  2170  0002E2  0E00               	movlw	0
  2171  0002E4  6E33               	movwf	(_dtoa$1331+1)^0,c
  2172  0002E6  0E2D               	movlw	45
  2173  0002E8  6E32               	movwf	_dtoa$1331^0,c
  2174  0002EA                     l2353:
  2175  0002EA  0E74               	movlw	low _dbuf
  2176  0002EC  2442               	addwf	dtoa@i^0,w,c
  2177  0002EE  6ED9               	movwf	fsr2l,c
  2178  0002F0  0E00               	movlw	high _dbuf
  2179  0002F2  2043               	addwfc	(dtoa@i+1)^0,w,c
  2180  0002F4  6EDA               	movwf	fsr2h,c
  2181  0002F6  C032  FFDF         	movff	_dtoa$1331,indf2
  2182  0002FA                     l2355:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2185  0002FA  C020  F015         	movff	dtoa@fp,pad@fp
  2186  0002FE  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  2187  000302  0E74               	movlw	low _dbuf
  2188  000304  2442               	addwf	dtoa@i^0,w,c
  2189  000306  6E17               	movwf	pad@buf^0,c
  2190  000308  0E00               	movlw	high _dbuf
  2191  00030A  2043               	addwfc	(dtoa@i+1)^0,w,c
  2192  00030C  6E18               	movwf	(pad@buf+1)^0,c
  2193  00030E  C036  F019         	movff	dtoa@w,pad@p
  2194  000312  C037  F01A         	movff	dtoa@w+1,pad@p+1
  2195  000316  ECAA  F005         	call	_pad	;wreg free
  2196  00031A  C015  F020         	movff	?_pad,?_dtoa
  2197  00031E  C016  F021         	movff	?_pad+1,?_dtoa+1
  2198  000322  0012               	return		;funcret
  2199  000324                     __end_of_dtoa:
  2200                           	callstack 0
  2201                           
  2202 ;; *************** function _pad *****************
  2203 ;; Defined at:
  2204 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2207 ;;		 -> NULL(0), 
  2208 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2209 ;;		 -> dbuf(32), 
  2210 ;;  p               2   24[COMRAM] int 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  w               2   29[COMRAM] int 
  2213 ;;  i               2   27[COMRAM] int 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  2   20[COMRAM] int 
  2216 ;; Registers used:
  2217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2223 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;Total ram usage:       11 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    7
  2230 ;; This function calls:
  2231 ;;		_fputc
  2232 ;;		_fputs
  2233 ;;		_strlen
  2234 ;; This function is called by:
  2235 ;;		_dtoa
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text5
  2240  000B54                     __ptext5:
  2241                           	callstack 0
  2242  000B54                     _pad:
  2243                           	callstack 19
  2244  000B54                     
  2245                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2246  000B54  0100               	movlb	0	; () banked
  2247  000B56  A166               	btfss	_flags& (0+255),0,b
  2248  000B58  EFB0  F005         	goto	u1501
  2249  000B5C  EFB2  F005         	goto	u1500
  2250  000B60                     u1501:
  2251  000B60  EFBC  F005         	goto	l2247
  2252  000B64                     u1500:
  2253  000B64                     
  2254                           ; BSR set to: 0
  2255                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2256  000B64  C017  F00E         	movff	pad@buf,fputs@s
  2257  000B68  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2258  000B6C  C015  F010         	movff	pad@fp,fputs@fp
  2259  000B70  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2260  000B74  EC8A  F006         	call	_fputs	;wreg free
  2261  000B78                     l2247:
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2264  000B78  BE1A               	btfsc	(pad@p+1)^0,7,c
  2265  000B7A  EFC1  F005         	goto	u1511
  2266  000B7E  EFC3  F005         	goto	u1510
  2267  000B82                     u1511:
  2268  000B82  EFC9  F005         	goto	l2251
  2269  000B86                     u1510:
  2270  000B86  C019  F01E         	movff	pad@p,pad@w
  2271  000B8A  C01A  F01F         	movff	pad@p+1,pad@w+1
  2272  000B8E  EFCD  F005         	goto	l1012
  2273  000B92                     l2251:
  2274  000B92  0E00               	movlw	0
  2275  000B94  6E1F               	movwf	(pad@w+1)^0,c
  2276  000B96  0E00               	movlw	0
  2277  000B98  6E1E               	movwf	pad@w^0,c
  2278  000B9A                     l1012:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2281  000B9A  0E00               	movlw	0
  2282  000B9C  6E1D               	movwf	(pad@i+1)^0,c
  2283  000B9E  0E00               	movlw	0
  2284  000BA0  6E1C               	movwf	pad@i^0,c
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2287  000BA2  EFDF  F005         	goto	l2257
  2288  000BA6                     l2253:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2291  000BA6  0E00               	movlw	0
  2292  000BA8  6E06               	movwf	(fputc@c+1)^0,c
  2293  000BAA  0E20               	movlw	32
  2294  000BAC  6E05               	movwf	fputc@c^0,c
  2295  000BAE  C015  F007         	movff	pad@fp,fputc@fp
  2296  000BB2  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2297  000BB6  EC0D  F006         	call	_fputc	;wreg free
  2298  000BBA                     
  2299                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2300  000BBA  4A1C               	infsnz	pad@i^0,f,c
  2301  000BBC  2A1D               	incf	(pad@i+1)^0,f,c
  2302  000BBE                     l2257:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2305  000BBE  501E               	movf	pad@w^0,w,c
  2306  000BC0  5C1C               	subwf	pad@i^0,w,c
  2307  000BC2  501D               	movf	(pad@i+1)^0,w,c
  2308  000BC4  0A80               	xorlw	128
  2309  000BC6  6E1B               	movwf	??_pad^0,c
  2310  000BC8  501F               	movf	(pad@w+1)^0,w,c
  2311  000BCA  0A80               	xorlw	128
  2312  000BCC  581B               	subwfb	??_pad^0,w,c
  2313  000BCE  A0D8               	btfss	status,0,c
  2314  000BD0  EFEC  F005         	goto	u1521
  2315  000BD4  EFEE  F005         	goto	u1520
  2316  000BD8                     u1521:
  2317  000BD8  EFD3  F005         	goto	l2253
  2318  000BDC                     u1520:
  2319  000BDC                     
  2320                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2321  000BDC  0100               	movlb	0	; () banked
  2322  000BDE  B166               	btfsc	_flags& (0+255),0,b
  2323  000BE0  EFF4  F005         	goto	u1531
  2324  000BE4  EFF6  F005         	goto	u1530
  2325  000BE8                     u1531:
  2326  000BE8  EF00  F006         	goto	l2261
  2327  000BEC                     u1530:
  2328  000BEC                     
  2329                           ; BSR set to: 0
  2330                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2331  000BEC  C017  F00E         	movff	pad@buf,fputs@s
  2332  000BF0  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2333  000BF4  C015  F010         	movff	pad@fp,fputs@fp
  2334  000BF8  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2335  000BFC  EC8A  F006         	call	_fputs	;wreg free
  2336  000C00                     l2261:
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2339  000C00  C017  F003         	movff	pad@buf,strlen@s
  2340  000C04  C018  F004         	movff	pad@buf+1,strlen@s+1
  2341  000C08  EC08  F007         	call	_strlen	;wreg free
  2342  000C0C  501E               	movf	pad@w^0,w,c
  2343  000C0E  2403               	addwf	?_strlen^0,w,c
  2344  000C10  6E15               	movwf	?_pad^0,c
  2345  000C12  501F               	movf	(pad@w+1)^0,w,c
  2346  000C14  2004               	addwfc	(?_strlen+1)^0,w,c
  2347  000C16  6E16               	movwf	(?_pad+1)^0,c
  2348  000C18  0012               	return		;funcret
  2349  000C1A                     __end_of_pad:
  2350                           	callstack 0
  2351                           
  2352 ;; *************** function _strlen *****************
  2353 ;; Defined at:
  2354 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  s               2    2[COMRAM] PTR const unsigned char 
  2357 ;;		 -> dbuf(32), 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  a               2    4[COMRAM] PTR const unsigned char 
  2360 ;;		 -> dbuf(32), 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  2    2[COMRAM] unsigned int 
  2363 ;; Registers used:
  2364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;Total ram usage:        4 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    3
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_pad
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text6
  2385  000E10                     __ptext6:
  2386                           	callstack 0
  2387  000E10                     _strlen:
  2388                           	callstack 22
  2389  000E10  C003  F005         	movff	strlen@s,strlen@a
  2390  000E14  C004  F006         	movff	strlen@s+1,strlen@a+1
  2391  000E18  EF10  F007         	goto	l2157
  2392  000E1C                     l2155:
  2393  000E1C  4A03               	infsnz	strlen@s^0,f,c
  2394  000E1E  2A04               	incf	(strlen@s+1)^0,f,c
  2395  000E20                     l2157:
  2396  000E20  C003  FFD9         	movff	strlen@s,fsr2l
  2397  000E24  C004  FFDA         	movff	strlen@s+1,fsr2h
  2398  000E28  50DF               	movf	indf2,w,c
  2399  000E2A  A4D8               	btfss	status,2,c
  2400  000E2C  EF1A  F007         	goto	u1361
  2401  000E30  EF1C  F007         	goto	u1360
  2402  000E34                     u1361:
  2403  000E34  EF0E  F007         	goto	l2155
  2404  000E38                     u1360:
  2405  000E38  5005               	movf	strlen@a^0,w,c
  2406  000E3A  5C03               	subwf	strlen@s^0,w,c
  2407  000E3C  6E03               	movwf	?_strlen^0,c
  2408  000E3E  5006               	movf	(strlen@a+1)^0,w,c
  2409  000E40  5804               	subwfb	(strlen@s+1)^0,w,c
  2410  000E42  6E04               	movwf	(?_strlen+1)^0,c
  2411  000E44  0012               	return		;funcret
  2412  000E46                     __end_of_strlen:
  2413                           	callstack 0
  2414                           
  2415 ;; *************** function _fputs *****************
  2416 ;; Defined at:
  2417 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2420 ;;		 -> dbuf(32), 
  2421 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2422 ;;		 -> NULL(0), 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  i               2   18[COMRAM] int 
  2425 ;;  c               1   17[COMRAM] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  2   13[COMRAM] int 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2435 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;Total ram usage:        7 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    6
  2442 ;; This function calls:
  2443 ;;		_fputc
  2444 ;; This function is called by:
  2445 ;;		_pad
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text7
  2450  000D14                     __ptext7:
  2451                           	callstack 0
  2452  000D14                     _fputs:
  2453                           	callstack 19
  2454  000D14  0E00               	movlw	0
  2455  000D16  6E14               	movwf	(fputs@i+1)^0,c
  2456  000D18  0E00               	movlw	0
  2457  000D1A  6E13               	movwf	fputs@i^0,c
  2458  000D1C  EF9B  F006         	goto	l2151
  2459  000D20                     l2147:
  2460  000D20  C012  F005         	movff	fputs@c,fputc@c
  2461  000D24  6A06               	clrf	(fputc@c+1)^0,c
  2462  000D26  C010  F007         	movff	fputs@fp,fputc@fp
  2463  000D2A  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  2464  000D2E  EC0D  F006         	call	_fputc	;wreg free
  2465  000D32  4A13               	infsnz	fputs@i^0,f,c
  2466  000D34  2A14               	incf	(fputs@i+1)^0,f,c
  2467  000D36                     l2151:
  2468  000D36  5013               	movf	fputs@i^0,w,c
  2469  000D38  240E               	addwf	fputs@s^0,w,c
  2470  000D3A  6ED9               	movwf	fsr2l,c
  2471  000D3C  5014               	movf	(fputs@i+1)^0,w,c
  2472  000D3E  200F               	addwfc	(fputs@s+1)^0,w,c
  2473  000D40  6EDA               	movwf	fsr2h,c
  2474  000D42  50DF               	movf	indf2,w,c
  2475  000D44  6E12               	movwf	fputs@c^0,c
  2476  000D46  5012               	movf	fputs@c^0,w,c
  2477  000D48  A4D8               	btfss	status,2,c
  2478  000D4A  EFA9  F006         	goto	u1351
  2479  000D4E  EFAB  F006         	goto	u1350
  2480  000D52                     u1351:
  2481  000D52  EF90  F006         	goto	l2147
  2482  000D56                     u1350:
  2483  000D56  0012               	return		;funcret
  2484  000D58                     __end_of_fputs:
  2485                           	callstack 0
  2486                           
  2487 ;; *************** function _abs *****************
  2488 ;; Defined at:
  2489 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  a               2   20[COMRAM] int 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  2   20[COMRAM] int 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;Total ram usage:        4 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    3
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_dtoa
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text8
  2518  000D58                     __ptext8:
  2519                           	callstack 0
  2520  000D58                     _abs:
  2521                           	callstack 23
  2522  000D58  BE16               	btfsc	(abs@a+1)^0,7,c
  2523  000D5A  EFB9  F006         	goto	u1540
  2524  000D5E  5016               	movf	(abs@a+1)^0,w,c
  2525  000D60  E106               	bnz	u1541
  2526  000D62  0415               	decf	abs@a^0,w,c
  2527  000D64  B0D8               	btfsc	status,0,c
  2528  000D66  EFB7  F006         	goto	u1541
  2529  000D6A  EFB9  F006         	goto	u1540
  2530  000D6E                     u1541:
  2531  000D6E  EFC7  F006         	goto	l1078
  2532  000D72                     u1540:
  2533  000D72  C015  F017         	movff	abs@a,??_abs
  2534  000D76  C016  F018         	movff	abs@a+1,??_abs+1
  2535  000D7A  1E17               	comf	??_abs^0,f,c
  2536  000D7C  1E18               	comf	(??_abs+1)^0,f,c
  2537  000D7E  4A17               	infsnz	??_abs^0,f,c
  2538  000D80  2A18               	incf	(??_abs+1)^0,f,c
  2539  000D82  C017  F015         	movff	??_abs,?_abs
  2540  000D86  C018  F016         	movff	??_abs+1,?_abs+1
  2541  000D8A  EFCB  F006         	goto	l1081
  2542  000D8E                     l1078:
  2543  000D8E  C015  F015         	movff	abs@a,?_abs
  2544  000D92  C016  F016         	movff	abs@a+1,?_abs+1
  2545  000D96                     l1081:
  2546  000D96  0012               	return		;funcret
  2547  000D98                     __end_of_abs:
  2548                           	callstack 0
  2549                           
  2550 ;; *************** function ___aomod *****************
  2551 ;; Defined at:
  2552 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  dividend        8    2[COMRAM] long long 
  2555 ;;  divisor         8   10[COMRAM] long long 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  sign            1   19[COMRAM] unsigned char 
  2558 ;;  counter         1   18[COMRAM] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  8    2[COMRAM] long long 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2568 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;Total ram usage:       18 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    3
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_dtoa
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text9
  2583  000918                     __ptext9:
  2584                           	callstack 0
  2585  000918                     ___aomod:
  2586                           	callstack 23
  2587  000918  0E00               	movlw	0
  2588  00091A  6E14               	movwf	___aomod@sign^0,c
  2589  00091C  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  2590  00091E  EF95  F004         	goto	u1440
  2591  000922  EF93  F004         	goto	u1441
  2592  000926                     u1441:
  2593  000926  EFA7  F004         	goto	l2215
  2594  00092A                     u1440:
  2595  00092A  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2596  00092C  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2597  00092E  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2598  000930  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2599  000932  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2600  000934  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2601  000936  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2602  000938  6C03               	negf	___aomod@dividend^0,c
  2603  00093A  0E00               	movlw	0
  2604  00093C  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2605  00093E  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2606  000940  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2607  000942  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2608  000944  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2609  000946  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2610  000948  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2611  00094A  0E01               	movlw	1
  2612  00094C  6E14               	movwf	___aomod@sign^0,c
  2613  00094E                     l2215:
  2614  00094E  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  2615  000950  EFAE  F004         	goto	u1450
  2616  000954  EFAC  F004         	goto	u1451
  2617  000958                     u1451:
  2618  000958  EFBE  F004         	goto	l2219
  2619  00095C                     u1450:
  2620  00095C  1E12               	comf	(___aomod@divisor+7)^0,f,c
  2621  00095E  1E11               	comf	(___aomod@divisor+6)^0,f,c
  2622  000960  1E10               	comf	(___aomod@divisor+5)^0,f,c
  2623  000962  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  2624  000964  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  2625  000966  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  2626  000968  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  2627  00096A  6C0B               	negf	___aomod@divisor^0,c
  2628  00096C  0E00               	movlw	0
  2629  00096E  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  2630  000970  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  2631  000972  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  2632  000974  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  2633  000976  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  2634  000978  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  2635  00097A  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  2636  00097C                     l2219:
  2637  00097C  500B               	movf	___aomod@divisor^0,w,c
  2638  00097E  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  2639  000980  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  2640  000982  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  2641  000984  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  2642  000986  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  2643  000988  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  2644  00098A  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  2645  00098C  B4D8               	btfsc	status,2,c
  2646  00098E  EFCB  F004         	goto	u1461
  2647  000992  EFCD  F004         	goto	u1460
  2648  000996                     u1461:
  2649  000996  EF15  F005         	goto	l2235
  2650  00099A                     u1460:
  2651  00099A  0E01               	movlw	1
  2652  00099C  6E13               	movwf	___aomod@counter^0,c
  2653  00099E  EFDB  F004         	goto	l2225
  2654  0009A2                     l2223:
  2655  0009A2  90D8               	bcf	status,0,c
  2656  0009A4  360B               	rlcf	___aomod@divisor^0,f,c
  2657  0009A6  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  2658  0009A8  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  2659  0009AA  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  2660  0009AC  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  2661  0009AE  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  2662  0009B0  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  2663  0009B2  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  2664  0009B4  2A13               	incf	___aomod@counter^0,f,c
  2665  0009B6                     l2225:
  2666  0009B6  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  2667  0009B8  EFE0  F004         	goto	u1471
  2668  0009BC  EFE2  F004         	goto	u1470
  2669  0009C0                     u1471:
  2670  0009C0  EFD1  F004         	goto	l2223
  2671  0009C4                     u1470:
  2672  0009C4                     l2227:
  2673  0009C4  500B               	movf	___aomod@divisor^0,w,c
  2674  0009C6  5C03               	subwf	___aomod@dividend^0,w,c
  2675  0009C8  500C               	movf	(___aomod@divisor+1)^0,w,c
  2676  0009CA  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  2677  0009CC  500D               	movf	(___aomod@divisor+2)^0,w,c
  2678  0009CE  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  2679  0009D0  500E               	movf	(___aomod@divisor+3)^0,w,c
  2680  0009D2  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  2681  0009D4  500F               	movf	(___aomod@divisor+4)^0,w,c
  2682  0009D6  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  2683  0009D8  5010               	movf	(___aomod@divisor+5)^0,w,c
  2684  0009DA  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  2685  0009DC  5011               	movf	(___aomod@divisor+6)^0,w,c
  2686  0009DE  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  2687  0009E0  5012               	movf	(___aomod@divisor+7)^0,w,c
  2688  0009E2  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  2689  0009E4  A0D8               	btfss	status,0,c
  2690  0009E6  EFF7  F004         	goto	u1481
  2691  0009EA  EFF9  F004         	goto	u1480
  2692  0009EE                     u1481:
  2693  0009EE  EF09  F005         	goto	l2231
  2694  0009F2                     u1480:
  2695  0009F2  500B               	movf	___aomod@divisor^0,w,c
  2696  0009F4  5E03               	subwf	___aomod@dividend^0,f,c
  2697  0009F6  500C               	movf	(___aomod@divisor+1)^0,w,c
  2698  0009F8  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  2699  0009FA  500D               	movf	(___aomod@divisor+2)^0,w,c
  2700  0009FC  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  2701  0009FE  500E               	movf	(___aomod@divisor+3)^0,w,c
  2702  000A00  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  2703  000A02  500F               	movf	(___aomod@divisor+4)^0,w,c
  2704  000A04  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  2705  000A06  5010               	movf	(___aomod@divisor+5)^0,w,c
  2706  000A08  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  2707  000A0A  5011               	movf	(___aomod@divisor+6)^0,w,c
  2708  000A0C  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  2709  000A0E  5012               	movf	(___aomod@divisor+7)^0,w,c
  2710  000A10  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  2711  000A12                     l2231:
  2712  000A12  90D8               	bcf	status,0,c
  2713  000A14  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  2714  000A16  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  2715  000A18  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  2716  000A1A  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  2717  000A1C  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  2718  000A1E  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  2719  000A20  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  2720  000A22  320B               	rrcf	___aomod@divisor^0,f,c
  2721  000A24  2E13               	decfsz	___aomod@counter^0,f,c
  2722  000A26  EFE2  F004         	goto	l2227
  2723  000A2A                     l2235:
  2724  000A2A  5014               	movf	___aomod@sign^0,w,c
  2725  000A2C  B4D8               	btfsc	status,2,c
  2726  000A2E  EF1B  F005         	goto	u1491
  2727  000A32  EF1D  F005         	goto	u1490
  2728  000A36                     u1491:
  2729  000A36  EF2D  F005         	goto	l2239
  2730  000A3A                     u1490:
  2731  000A3A  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2732  000A3C  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2733  000A3E  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2734  000A40  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2735  000A42  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2736  000A44  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2737  000A46  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2738  000A48  6C03               	negf	___aomod@dividend^0,c
  2739  000A4A  0E00               	movlw	0
  2740  000A4C  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2741  000A4E  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2742  000A50  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2743  000A52  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2744  000A54  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2745  000A56  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2746  000A58  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2747  000A5A                     l2239:
  2748  000A5A  C003  F003         	movff	___aomod@dividend,?___aomod
  2749  000A5E  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  2750  000A62  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  2751  000A66  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  2752  000A6A  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  2753  000A6E  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  2754  000A72  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  2755  000A76  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  2756  000A7A  0012               	return		;funcret
  2757  000A7C                     __end_of___aomod:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function ___aodiv *****************
  2761 ;; Defined at:
  2762 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  dividend        8    2[COMRAM] long long 
  2765 ;;  divisor         8   10[COMRAM] long long 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  quotient        8   20[COMRAM] long long 
  2768 ;;  sign            1   19[COMRAM] unsigned char 
  2769 ;;  counter         1   18[COMRAM] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  8    2[COMRAM] long long 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2779 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;Total ram usage:       26 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    3
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_dtoa
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text10
  2794  000790                     __ptext10:
  2795                           	callstack 0
  2796  000790                     ___aodiv:
  2797                           	callstack 23
  2798  000790  0E00               	movlw	0
  2799  000792  6E14               	movwf	___aodiv@sign^0,c
  2800  000794  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  2801  000796  EFD1  F003         	goto	u1370
  2802  00079A  EFCF  F003         	goto	u1371
  2803  00079E                     u1371:
  2804  00079E  EFE3  F003         	goto	l2171
  2805  0007A2                     u1370:
  2806  0007A2  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  2807  0007A4  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  2808  0007A6  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  2809  0007A8  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  2810  0007AA  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  2811  0007AC  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  2812  0007AE  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  2813  0007B0  6C0B               	negf	___aodiv@divisor^0,c
  2814  0007B2  0E00               	movlw	0
  2815  0007B4  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  2816  0007B6  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  2817  0007B8  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  2818  0007BA  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  2819  0007BC  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  2820  0007BE  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  2821  0007C0  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  2822  0007C2  0E01               	movlw	1
  2823  0007C4  6E14               	movwf	___aodiv@sign^0,c
  2824  0007C6                     l2171:
  2825  0007C6  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  2826  0007C8  EFEA  F003         	goto	u1380
  2827  0007CC  EFE8  F003         	goto	u1381
  2828  0007D0                     u1381:
  2829  0007D0  EFFC  F003         	goto	l2177
  2830  0007D4                     u1380:
  2831  0007D4  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  2832  0007D6  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  2833  0007D8  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  2834  0007DA  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  2835  0007DC  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  2836  0007DE  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  2837  0007E0  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  2838  0007E2  6C03               	negf	___aodiv@dividend^0,c
  2839  0007E4  0E00               	movlw	0
  2840  0007E6  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  2841  0007E8  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  2842  0007EA  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  2843  0007EC  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  2844  0007EE  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  2845  0007F0  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  2846  0007F2  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  2847  0007F4  0E01               	movlw	1
  2848  0007F6  1A14               	xorwf	___aodiv@sign^0,f,c
  2849  0007F8                     l2177:
  2850  0007F8  EE20  F015         	lfsr	2,___aodiv@quotient
  2851  0007FC  0E07               	movlw	7
  2852  0007FE                     u1391:
  2853  0007FE  6ADE               	clrf	postinc2,c
  2854  000800  06E8               	decf	wreg,f,c
  2855  000802  E2FD               	bc	u1391
  2856  000804  500B               	movf	___aodiv@divisor^0,w,c
  2857  000806  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  2858  000808  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  2859  00080A  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  2860  00080C  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  2861  00080E  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  2862  000810  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  2863  000812  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  2864  000814  B4D8               	btfsc	status,2,c
  2865  000816  EF0F  F004         	goto	u1401
  2866  00081A  EF11  F004         	goto	u1400
  2867  00081E                     u1401:
  2868  00081E  EF63  F004         	goto	l2199
  2869  000822                     u1400:
  2870  000822  0E01               	movlw	1
  2871  000824  6E13               	movwf	___aodiv@counter^0,c
  2872  000826  EF1F  F004         	goto	l2185
  2873  00082A                     l2183:
  2874  00082A  90D8               	bcf	status,0,c
  2875  00082C  360B               	rlcf	___aodiv@divisor^0,f,c
  2876  00082E  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  2877  000830  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  2878  000832  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  2879  000834  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  2880  000836  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  2881  000838  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  2882  00083A  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  2883  00083C  2A13               	incf	___aodiv@counter^0,f,c
  2884  00083E                     l2185:
  2885  00083E  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  2886  000840  EF24  F004         	goto	u1411
  2887  000844  EF26  F004         	goto	u1410
  2888  000848                     u1411:
  2889  000848  EF15  F004         	goto	l2183
  2890  00084C                     u1410:
  2891  00084C                     l2187:
  2892  00084C  90D8               	bcf	status,0,c
  2893  00084E  3615               	rlcf	___aodiv@quotient^0,f,c
  2894  000850  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  2895  000852  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  2896  000854  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  2897  000856  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  2898  000858  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  2899  00085A  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  2900  00085C  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  2901  00085E  500B               	movf	___aodiv@divisor^0,w,c
  2902  000860  5C03               	subwf	___aodiv@dividend^0,w,c
  2903  000862  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2904  000864  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  2905  000866  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2906  000868  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  2907  00086A  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2908  00086C  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  2909  00086E  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2910  000870  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  2911  000872  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2912  000874  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  2913  000876  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2914  000878  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  2915  00087A  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2916  00087C  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  2917  00087E  A0D8               	btfss	status,0,c
  2918  000880  EF44  F004         	goto	u1421
  2919  000884  EF46  F004         	goto	u1420
  2920  000888                     u1421:
  2921  000888  EF57  F004         	goto	l2195
  2922  00088C                     u1420:
  2923  00088C  500B               	movf	___aodiv@divisor^0,w,c
  2924  00088E  5E03               	subwf	___aodiv@dividend^0,f,c
  2925  000890  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2926  000892  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  2927  000894  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2928  000896  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  2929  000898  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2930  00089A  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  2931  00089C  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2932  00089E  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  2933  0008A0  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2934  0008A2  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  2935  0008A4  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2936  0008A6  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  2937  0008A8  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2938  0008AA  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  2939  0008AC  8015               	bsf	___aodiv@quotient^0,0,c
  2940  0008AE                     l2195:
  2941  0008AE  90D8               	bcf	status,0,c
  2942  0008B0  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  2943  0008B2  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  2944  0008B4  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  2945  0008B6  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  2946  0008B8  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  2947  0008BA  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  2948  0008BC  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  2949  0008BE  320B               	rrcf	___aodiv@divisor^0,f,c
  2950  0008C0  2E13               	decfsz	___aodiv@counter^0,f,c
  2951  0008C2  EF26  F004         	goto	l2187
  2952  0008C6                     l2199:
  2953  0008C6  5014               	movf	___aodiv@sign^0,w,c
  2954  0008C8  B4D8               	btfsc	status,2,c
  2955  0008CA  EF69  F004         	goto	u1431
  2956  0008CE  EF6B  F004         	goto	u1430
  2957  0008D2                     u1431:
  2958  0008D2  EF7B  F004         	goto	l2203
  2959  0008D6                     u1430:
  2960  0008D6  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  2961  0008D8  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  2962  0008DA  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  2963  0008DC  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  2964  0008DE  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  2965  0008E0  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  2966  0008E2  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  2967  0008E4  6C15               	negf	___aodiv@quotient^0,c
  2968  0008E6  0E00               	movlw	0
  2969  0008E8  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  2970  0008EA  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  2971  0008EC  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  2972  0008EE  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  2973  0008F0  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  2974  0008F2  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  2975  0008F4  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  2976  0008F6                     l2203:
  2977  0008F6  C015  F003         	movff	___aodiv@quotient,?___aodiv
  2978  0008FA  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  2979  0008FE  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  2980  000902  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  2981  000906  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  2982  00090A  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  2983  00090E  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  2984  000912  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  2985  000916  0012               	return		;funcret
  2986  000918                     __end_of___aodiv:
  2987                           	callstack 0
  2988                           
  2989 ;; *************** function _ctoa *****************
  2990 ;; Defined at:
  2991 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  2994 ;;		 -> NULL(0), 
  2995 ;;  c               1   15[COMRAM] unsigned char 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  w               2   19[COMRAM] int 
  2998 ;;  l               2   17[COMRAM] int 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  2   13[COMRAM] int 
  3001 ;; Registers used:
  3002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3008 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;Total ram usage:        8 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    6
  3015 ;; This function calls:
  3016 ;;		_fputc
  3017 ;; This function is called by:
  3018 ;;		_vfpfcnvrt
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text11
  3023  000A7C                     __ptext11:
  3024                           	callstack 0
  3025  000A7C                     _ctoa:
  3026                           	callstack 21
  3027  000A7C                     
  3028                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3029  000A7C  0100               	movlb	0	; () banked
  3030  000A7E  5162               	movf	_width& (0+255),w,b
  3031  000A80  1163               	iorwf	(_width+1)& (0+255),w,b
  3032  000A82  A4D8               	btfss	status,2,c
  3033  000A84  EF46  F005         	goto	u1551
  3034  000A88  EF48  F005         	goto	u1550
  3035  000A8C                     u1551:
  3036  000A8C  EF4E  F005         	goto	l2273
  3037  000A90                     u1550:
  3038  000A90                     
  3039                           ; BSR set to: 0
  3040  000A90  C062  F014         	movff	_width,ctoa@w
  3041  000A94  C063  F015         	movff	_width+1,ctoa@w+1
  3042  000A98  EF54  F005         	goto	l2275
  3043  000A9C                     l2273:
  3044                           
  3045                           ; BSR set to: 0
  3046  000A9C  0EFF               	movlw	255
  3047  000A9E  2562               	addwf	_width& (0+255),w,b
  3048  000AA0  6E14               	movwf	ctoa@w^0,c
  3049  000AA2  0EFF               	movlw	255
  3050  000AA4  2163               	addwfc	(_width+1)& (0+255),w,b
  3051  000AA6  6E15               	movwf	(ctoa@w+1)^0,c
  3052  000AA8                     l2275:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3056  000AA8  A166               	btfss	_flags& (0+255),0,b
  3057  000AAA  EF59  F005         	goto	u1561
  3058  000AAE  EF5B  F005         	goto	u1560
  3059  000AB2                     u1561:
  3060  000AB2  EF64  F005         	goto	l2279
  3061  000AB6                     u1560:
  3062  000AB6                     
  3063                           ; BSR set to: 0
  3064                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3065  000AB6  C010  F005         	movff	ctoa@c,fputc@c
  3066  000ABA  6A06               	clrf	(fputc@c+1)^0,c
  3067  000ABC  C00E  F007         	movff	ctoa@fp,fputc@fp
  3068  000AC0  C00F  F008         	movff	ctoa@fp+1,fputc@fp+1
  3069  000AC4  EC0D  F006         	call	_fputc	;wreg free
  3070  000AC8                     l2279:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3073  000AC8  BE15               	btfsc	(ctoa@w+1)^0,7,c
  3074  000ACA  EF69  F005         	goto	u1571
  3075  000ACE  EF6B  F005         	goto	u1570
  3076  000AD2                     u1571:
  3077  000AD2  EF6D  F005         	goto	l2283
  3078  000AD6                     u1570:
  3079  000AD6  EF71  F005         	goto	l1028
  3080  000ADA                     l2283:
  3081  000ADA  0E00               	movlw	0
  3082  000ADC  6E15               	movwf	(ctoa@w+1)^0,c
  3083  000ADE  0E00               	movlw	0
  3084  000AE0  6E14               	movwf	ctoa@w^0,c
  3085  000AE2                     l1028:
  3086                           
  3087                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3088  000AE2  0E00               	movlw	0
  3089  000AE4  6E13               	movwf	(ctoa@l+1)^0,c
  3090  000AE6  0E00               	movlw	0
  3091  000AE8  6E12               	movwf	ctoa@l^0,c
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3094  000AEA  EF83  F005         	goto	l2289
  3095  000AEE                     l2285:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3098  000AEE  0E00               	movlw	0
  3099  000AF0  6E06               	movwf	(fputc@c+1)^0,c
  3100  000AF2  0E20               	movlw	32
  3101  000AF4  6E05               	movwf	fputc@c^0,c
  3102  000AF6  C00E  F007         	movff	ctoa@fp,fputc@fp
  3103  000AFA  C00F  F008         	movff	ctoa@fp+1,fputc@fp+1
  3104  000AFE  EC0D  F006         	call	_fputc	;wreg free
  3105  000B02                     
  3106                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3107  000B02  4A12               	infsnz	ctoa@l^0,f,c
  3108  000B04  2A13               	incf	(ctoa@l+1)^0,f,c
  3109  000B06                     l2289:
  3110                           
  3111                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3112  000B06  5014               	movf	ctoa@w^0,w,c
  3113  000B08  5C12               	subwf	ctoa@l^0,w,c
  3114  000B0A  5013               	movf	(ctoa@l+1)^0,w,c
  3115  000B0C  0A80               	xorlw	128
  3116  000B0E  6E11               	movwf	??_ctoa^0,c
  3117  000B10  5015               	movf	(ctoa@w+1)^0,w,c
  3118  000B12  0A80               	xorlw	128
  3119  000B14  5811               	subwfb	??_ctoa^0,w,c
  3120  000B16  A0D8               	btfss	status,0,c
  3121  000B18  EF90  F005         	goto	u1581
  3122  000B1C  EF92  F005         	goto	u1580
  3123  000B20                     u1581:
  3124  000B20  EF77  F005         	goto	l2285
  3125  000B24                     u1580:
  3126  000B24                     
  3127                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3128  000B24  0100               	movlb	0	; () banked
  3129  000B26  B166               	btfsc	_flags& (0+255),0,b
  3130  000B28  EF98  F005         	goto	u1591
  3131  000B2C  EF9A  F005         	goto	u1590
  3132  000B30                     u1591:
  3133  000B30  EFA3  F005         	goto	l2293
  3134  000B34                     u1590:
  3135  000B34                     
  3136                           ; BSR set to: 0
  3137                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3138  000B34  C010  F005         	movff	ctoa@c,fputc@c
  3139  000B38  6A06               	clrf	(fputc@c+1)^0,c
  3140  000B3A  C00E  F007         	movff	ctoa@fp,fputc@fp
  3141  000B3E  C00F  F008         	movff	ctoa@fp+1,fputc@fp+1
  3142  000B42  EC0D  F006         	call	_fputc	;wreg free
  3143  000B46                     l2293:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3146  000B46  0E01               	movlw	1
  3147  000B48  2412               	addwf	ctoa@l^0,w,c
  3148  000B4A  6E0E               	movwf	?_ctoa^0,c
  3149  000B4C  0E00               	movlw	0
  3150  000B4E  2013               	addwfc	(ctoa@l+1)^0,w,c
  3151  000B50  6E0F               	movwf	(?_ctoa+1)^0,c
  3152  000B52  0012               	return		;funcret
  3153  000B54                     __end_of_ctoa:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _fputc *****************
  3157 ;; Defined at:
  3158 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  c               2    4[COMRAM] int 
  3161 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  3162 ;;		 -> NULL(0), 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  2    4[COMRAM] int 
  3167 ;; Registers used:
  3168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;Total ram usage:        9 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    5
  3181 ;; This function calls:
  3182 ;;		_putch
  3183 ;; This function is called by:
  3184 ;;		_pad
  3185 ;;		_ctoa
  3186 ;;		_vfpfcnvrt
  3187 ;;		_fputs
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text12
  3192  000C1A                     __ptext12:
  3193                           	callstack 0
  3194  000C1A                     _fputc:
  3195                           	callstack 22
  3196  000C1A  5007               	movf	fputc@fp^0,w,c
  3197  000C1C  1008               	iorwf	(fputc@fp+1)^0,w,c
  3198  000C1E  B4D8               	btfsc	status,2,c
  3199  000C20  EF14  F006         	goto	u1311
  3200  000C24  EF16  F006         	goto	u1310
  3201  000C28                     u1311:
  3202  000C28  EF1F  F006         	goto	l2135
  3203  000C2C                     u1310:
  3204  000C2C  5007               	movf	fputc@fp^0,w,c
  3205  000C2E  1008               	iorwf	(fputc@fp+1)^0,w,c
  3206  000C30  A4D8               	btfss	status,2,c
  3207  000C32  EF1D  F006         	goto	u1321
  3208  000C36  EF1F  F006         	goto	u1320
  3209  000C3A                     u1321:
  3210  000C3A  EF24  F006         	goto	l2137
  3211  000C3E                     u1320:
  3212  000C3E                     l2135:
  3213  000C3E  5005               	movf	fputc@c^0,w,c
  3214  000C40  ECD1  F007         	call	_putch
  3215  000C44  EF57  F006         	goto	l1093
  3216  000C48                     l2137:
  3217  000C48  EE20 F004          	lfsr	2,4
  3218  000C4C  5007               	movf	fputc@fp^0,w,c
  3219  000C4E  26D9               	addwf	fsr2l,f,c
  3220  000C50  5008               	movf	(fputc@fp+1)^0,w,c
  3221  000C52  22DA               	addwfc	fsr2h,f,c
  3222  000C54  50DE               	movf	postinc2,w,c
  3223  000C56  10DE               	iorwf	postinc2,w,c
  3224  000C58  B4D8               	btfsc	status,2,c
  3225  000C5A  EF31  F006         	goto	u1331
  3226  000C5E  EF33  F006         	goto	u1330
  3227  000C62                     u1331:
  3228  000C62  EF4E  F006         	goto	l2141
  3229  000C66                     u1330:
  3230  000C66  EE20 F004          	lfsr	2,4
  3231  000C6A  5007               	movf	fputc@fp^0,w,c
  3232  000C6C  26D9               	addwf	fsr2l,f,c
  3233  000C6E  5008               	movf	(fputc@fp+1)^0,w,c
  3234  000C70  22DA               	addwfc	fsr2h,f,c
  3235  000C72  EE10 F002          	lfsr	1,2
  3236  000C76  5007               	movf	fputc@fp^0,w,c
  3237  000C78  26E1               	addwf	fsr1l,f,c
  3238  000C7A  5008               	movf	(fputc@fp+1)^0,w,c
  3239  000C7C  22E2               	addwfc	fsr1h,f,c
  3240  000C7E  50DE               	movf	postinc2,w,c
  3241  000C80  5CE6               	subwf	postinc1,w,c
  3242  000C82  50E6               	movf	postinc1,w,c
  3243  000C84  0A80               	xorlw	128
  3244  000C86  6E0D               	movwf	(??_fputc+4)^0,c
  3245  000C88  50DE               	movf	postinc2,w,c
  3246  000C8A  0A80               	xorlw	128
  3247  000C8C  580D               	subwfb	(??_fputc+4)^0,w,c
  3248  000C8E  B0D8               	btfsc	status,0,c
  3249  000C90  EF4C  F006         	goto	u1341
  3250  000C94  EF4E  F006         	goto	u1340
  3251  000C98                     u1341:
  3252  000C98  EF57  F006         	goto	l1093
  3253  000C9C                     u1340:
  3254  000C9C                     l2141:
  3255  000C9C  EE20 F002          	lfsr	2,2
  3256  000CA0  5007               	movf	fputc@fp^0,w,c
  3257  000CA2  26D9               	addwf	fsr2l,f,c
  3258  000CA4  5008               	movf	(fputc@fp+1)^0,w,c
  3259  000CA6  22DA               	addwfc	fsr2h,f,c
  3260  000CA8  2ADE               	incf	postinc2,f,c
  3261  000CAA  0E00               	movlw	0
  3262  000CAC  22DD               	addwfc	postdec2,f,c
  3263  000CAE                     l1093:
  3264  000CAE  0012               	return		;funcret
  3265  000CB0                     __end_of_fputc:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _putch *****************
  3269 ;; Defined at:
  3270 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  txData          1    wreg     unsigned char 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  txData          1    3[COMRAM] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;Total ram usage:        1 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    4
  3291 ;; This function calls:
  3292 ;;		_EUSART1_Write
  3293 ;; This function is called by:
  3294 ;;		_fputc
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text13
  3299  000FA2                     __ptext13:
  3300                           	callstack 0
  3301  000FA2                     _putch:
  3302                           	callstack 22
  3303                           
  3304                           ;incstack = 0
  3305                           ;putch@txData stored from wreg
  3306  000FA2  6E04               	movwf	putch@txData^0,c
  3307  000FA4                     
  3308                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3309  000FA4  5004               	movf	putch@txData^0,w,c
  3310  000FA6  ECB1  F007         	call	_EUSART1_Write
  3311  000FAA  0012               	return		;funcret
  3312  000FAC                     __end_of_putch:
  3313                           	callstack 0
  3314                           
  3315 ;; *************** function _EUSART1_Write *****************
  3316 ;; Defined at:
  3317 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  txData          1    wreg     unsigned char 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  txData          1    2[COMRAM] unsigned char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      void 
  3324 ;; Registers used:
  3325 ;;		wreg
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;Total ram usage:        1 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; Hardware stack levels required when called:    3
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_putch
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text14
  3346  000F62                     __ptext14:
  3347                           	callstack 0
  3348  000F62                     _EUSART1_Write:
  3349                           	callstack 22
  3350                           
  3351                           ;incstack = 0
  3352                           ;EUSART1_Write@txData stored from wreg
  3353  000F62  6E03               	movwf	EUSART1_Write@txData^0,c
  3354  000F64                     l261:
  3355                           
  3356                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3357  000F64  A89E               	btfss	158,4,c	;volatile
  3358  000F66  EFB7  F007         	goto	u1301
  3359  000F6A  EFB9  F007         	goto	u1300
  3360  000F6E                     u1301:
  3361  000F6E  EFB2  F007         	goto	l261
  3362  000F72                     u1300:
  3363  000F72                     
  3364                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3365  000F72  C003  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3366  000F76  0012               	return		;funcret
  3367  000F78                     __end_of_EUSART1_Write:
  3368                           	callstack 0
  3369                           
  3370 ;; *************** function _TMR0_WriteTimer *****************
  3371 ;; Defined at:
  3372 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  timerVal        2    2[COMRAM] unsigned short 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        2 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    3
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text15
  3401  000FAC                     __ptext15:
  3402                           	callstack 0
  3403  000FAC                     _TMR0_WriteTimer:
  3404                           	callstack 27
  3405  000FAC                     
  3406                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  3407  000FAC  5004               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  3408  000FAE  6ED7               	movwf	215,c	;volatile
  3409  000FB0                     
  3410                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  3411  000FB0  C003  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  3412  000FB4  0012               	return		;funcret
  3413  000FB6                     __end_of_TMR0_WriteTimer:
  3414                           	callstack 0
  3415                           
  3416 ;; *************** function _SYSTEM_Initialize *****************
  3417 ;; Defined at:
  3418 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    5
  3439 ;; This function calls:
  3440 ;;		_ADC_Initialize
  3441 ;;		_EUSART1_Initialize
  3442 ;;		_INTERRUPT_Initialize
  3443 ;;		_OSCILLATOR_Initialize
  3444 ;;		_PIN_MANAGER_Initialize
  3445 ;;		_TMR0_Initialize
  3446 ;; This function is called by:
  3447 ;;		_main
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text16
  3452  000F48                     __ptext16:
  3453                           	callstack 0
  3454  000F48                     _SYSTEM_Initialize:
  3455                           	callstack 25
  3456  000F48                     
  3457                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3458  000F48  ECEF  F007         	call	_INTERRUPT_Initialize	;wreg free
  3459  000F4C                     
  3460                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3461  000F4C  EC57  F007         	call	_PIN_MANAGER_Initialize	;wreg free
  3462  000F50                     
  3463                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3464  000F50  EC96  F007         	call	_OSCILLATOR_Initialize	;wreg free
  3465  000F54                     
  3466                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  3467  000F54  ECBC  F007         	call	_ADC_Initialize	;wreg free
  3468  000F58                     
  3469                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3470  000F58  EC23  F007         	call	_TMR0_Initialize	;wreg free
  3471  000F5C                     
  3472                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  3473  000F5C  ECCC  F006         	call	_EUSART1_Initialize	;wreg free
  3474  000F60  0012               	return		;funcret
  3475  000F62                     __end_of_SYSTEM_Initialize:
  3476                           	callstack 0
  3477                           
  3478 ;; *************** function _TMR0_Initialize *****************
  3479 ;; Defined at:
  3480 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;Total ram usage:        2 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    4
  3501 ;; This function calls:
  3502 ;;		_TMR0_SetInterruptHandler
  3503 ;; This function is called by:
  3504 ;;		_SYSTEM_Initialize
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text17
  3509  000E46                     __ptext17:
  3510                           	callstack 0
  3511  000E46                     _TMR0_Initialize:
  3512                           	callstack 25
  3513  000E46                     
  3514                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3515  000E46  9CD5               	bcf	213,6,c	;volatile
  3516  000E48                     
  3517                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  3518  000E48  0E00               	movlw	0
  3519  000E4A  6ED7               	movwf	215,c	;volatile
  3520                           
  3521                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  3522  000E4C  0E00               	movlw	0
  3523  000E4E  6ED6               	movwf	214,c	;volatile
  3524  000E50                     
  3525                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3526  000E50  50D6               	movf	214,w,c	;volatile
  3527  000E52  CFD7 F005          	movff	4055,??_TMR0_Initialize	;volatile
  3528  000E56  6A06               	clrf	(??_TMR0_Initialize+1)^0,c
  3529  000E58  C005  F006         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3530  000E5C  6A05               	clrf	??_TMR0_Initialize^0,c
  3531  000E5E  1005               	iorwf	??_TMR0_Initialize^0,w,c
  3532  000E60  6E5B               	movwf	_timer0ReloadVal^0,c	;volatile
  3533  000E62  5006               	movf	(??_TMR0_Initialize+1)^0,w,c
  3534  000E64  6E5C               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  3535  000E66                     
  3536                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  3537  000E66  94F2               	bcf	242,2,c	;volatile
  3538  000E68                     
  3539                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  3540  000E68  8AF2               	bsf	242,5,c	;volatile
  3541  000E6A                     
  3542                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3543  000E6A  0EE4               	movlw	low _TMR0_DefaultInterruptHandler
  3544  000E6C  6E03               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3545  000E6E  0E0F               	movlw	high _TMR0_DefaultInterruptHandler
  3546  000E70  6E04               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3547  000E72  ECDB  F007         	call	_TMR0_SetInterruptHandler	;wreg free
  3548  000E76                     
  3549                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  3550  000E76  0E9F               	movlw	159
  3551  000E78  6ED5               	movwf	213,c	;volatile
  3552  000E7A  0012               	return		;funcret
  3553  000E7C                     __end_of_TMR0_Initialize:
  3554                           	callstack 0
  3555                           
  3556 ;; *************** function _TMR0_SetInterruptHandler *****************
  3557 ;; Defined at:
  3558 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  3561 ;;		 -> TMR0_DefaultInterruptHandler(1), myTMR0ISR(1), 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;		None
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      void 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;Total ram usage:        2 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    3
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_main
  3584 ;;		_TMR0_Initialize
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text18
  3589  000FB6                     __ptext18:
  3590                           	callstack 0
  3591  000FB6                     _TMR0_SetInterruptHandler:
  3592                           	callstack 27
  3593  000FB6                     
  3594                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  3595  000FB6  C003  F070         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3596  000FBA  C004  F071         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3597  000FBE  0012               	return		;funcret
  3598  000FC0                     __end_of_TMR0_SetInterruptHandler:
  3599                           	callstack 0
  3600                           
  3601 ;; *************** function _PIN_MANAGER_Initialize *****************
  3602 ;; Defined at:
  3603 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;		None
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;Total ram usage:        0 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    3
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_SYSTEM_Initialize
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text19
  3632  000EAE                     __ptext19:
  3633                           	callstack 0
  3634  000EAE                     _PIN_MANAGER_Initialize:
  3635                           	callstack 26
  3636  000EAE                     
  3637                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3638  000EAE  0E00               	movlw	0
  3639  000EB0  6E89               	movwf	137,c	;volatile
  3640                           
  3641                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3642  000EB2  0E00               	movlw	0
  3643  000EB4  6E8A               	movwf	138,c	;volatile
  3644                           
  3645                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3646  000EB6  0E00               	movlw	0
  3647  000EB8  6E8B               	movwf	139,c	;volatile
  3648                           
  3649                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  3650  000EBA  0EBF               	movlw	191
  3651  000EBC  6E92               	movwf	146,c	;volatile
  3652  000EBE                     
  3653                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  3654  000EBE  6893               	setf	147,c	;volatile
  3655                           
  3656                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  3657  000EC0  0EBF               	movlw	191
  3658  000EC2  6E94               	movwf	148,c	;volatile
  3659                           
  3660                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3661  000EC4  0E3C               	movlw	60
  3662  000EC6  010F               	movlb	15	; () banked
  3663  000EC8  6F3A               	movwf	58,b	;volatile
  3664                           
  3665                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  3666  000ECA  0E3F               	movlw	63
  3667  000ECC  6F39               	movwf	57,b	;volatile
  3668                           
  3669                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  3670  000ECE  0E2F               	movlw	47
  3671  000ED0  6F38               	movwf	56,b	;volatile
  3672                           
  3673                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3674  000ED2  0E00               	movlw	0
  3675  000ED4  6E61               	movwf	97,c	;volatile
  3676  000ED6                     
  3677                           ; BSR set to: 15
  3678                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3679  000ED6  8EF1               	bsf	241,7,c	;volatile
  3680  000ED8                     
  3681                           ; BSR set to: 15
  3682  000ED8  0012               	return		;funcret
  3683  000EDA                     __end_of_PIN_MANAGER_Initialize:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function _OSCILLATOR_Initialize *****************
  3687 ;; Defined at:
  3688 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;Total ram usage:        0 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    3
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_SYSTEM_Initialize
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text20
  3717  000F2C                     __ptext20:
  3718                           	callstack 0
  3719  000F2C                     _OSCILLATOR_Initialize:
  3720                           	callstack 26
  3721  000F2C                     
  3722                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3723  000F2C  0E70               	movlw	112
  3724  000F2E  6ED3               	movwf	211,c	;volatile
  3725                           
  3726                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  3727  000F30  0E04               	movlw	4
  3728  000F32  6ED2               	movwf	210,c	;volatile
  3729                           
  3730                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  3731  000F34  0E40               	movlw	64
  3732  000F36  6E9B               	movwf	155,c	;volatile
  3733  000F38                     l151:
  3734                           
  3735                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  3736  000F38  AED2               	btfss	4050,7,c	;volatile
  3737  000F3A  EFA1  F007         	goto	u1171
  3738  000F3E  EFA3  F007         	goto	u1170
  3739  000F42                     u1171:
  3740  000F42  EF9C  F007         	goto	l151
  3741  000F46                     u1170:
  3742  000F46  0012               	return		;funcret
  3743  000F48                     __end_of_OSCILLATOR_Initialize:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _INTERRUPT_Initialize *****************
  3747 ;; Defined at:
  3748 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		None
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;Total ram usage:        0 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    3
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_SYSTEM_Initialize
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text21
  3777  000FDE                     __ptext21:
  3778                           	callstack 0
  3779  000FDE                     _INTERRUPT_Initialize:
  3780                           	callstack 26
  3781  000FDE                     
  3782                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3783  000FDE  9ED0               	bcf	208,7,c	;volatile
  3784  000FE0  0012               	return		;funcret
  3785  000FE2                     __end_of_INTERRUPT_Initialize:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _EUSART1_Initialize *****************
  3789 ;; Defined at:
  3790 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    4
  3811 ;; This function calls:
  3812 ;;		_EUSART1_SetErrorHandler
  3813 ;;		_EUSART1_SetFramingErrorHandler
  3814 ;;		_EUSART1_SetOverrunErrorHandler
  3815 ;; This function is called by:
  3816 ;;		_SYSTEM_Initialize
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text22
  3821  000D98                     __ptext22:
  3822                           	callstack 0
  3823  000D98                     _EUSART1_Initialize:
  3824                           	callstack 25
  3825  000D98                     
  3826                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  3827  000D98  0E08               	movlw	8
  3828  000D9A  6EB8               	movwf	184,c	;volatile
  3829                           
  3830                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  3831  000D9C  0E90               	movlw	144
  3832  000D9E  6EAB               	movwf	171,c	;volatile
  3833                           
  3834                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  3835  000DA0  0E24               	movlw	36
  3836  000DA2  6EAC               	movwf	172,c	;volatile
  3837                           
  3838                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  3839  000DA4  0E82               	movlw	130
  3840  000DA6  6EAF               	movwf	175,c	;volatile
  3841                           
  3842                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  3843  000DA8  0E06               	movlw	6
  3844  000DAA  6EB0               	movwf	176,c	;volatile
  3845  000DAC                     
  3846                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  3847  000DAC  0E00               	movlw	0
  3848  000DAE  6E03               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3849  000DB0  0E00               	movlw	0
  3850  000DB2  6E04               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3851  000DB4  ECE5  F007         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3852  000DB8                     
  3853                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  3854  000DB8  0E00               	movlw	0
  3855  000DBA  6E03               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3856  000DBC  0E00               	movlw	0
  3857  000DBE  6E04               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3858  000DC0  ECE0  F007         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3859  000DC4                     
  3860                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  3861  000DC4  0E00               	movlw	0
  3862  000DC6  6E03               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3863  000DC8  0E00               	movlw	0
  3864  000DCA  6E04               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3865  000DCC  ECEA  F007         	call	_EUSART1_SetErrorHandler	;wreg free
  3866  000DD0                     
  3867                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  3868  000DD0  0E00               	movlw	0
  3869  000DD2  0100               	movlb	0	; () banked
  3870  000DD4  6F72               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3871  000DD6                     
  3872                           ; BSR set to: 0
  3873  000DD6  0012               	return		;funcret
  3874  000DD8                     __end_of_EUSART1_Initialize:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3878 ;; Defined at:
  3879 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3882 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;Total ram usage:        2 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    3
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_EUSART1_Initialize
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text23
  3909  000FC0                     __ptext23:
  3910                           	callstack 0
  3911  000FC0                     _EUSART1_SetOverrunErrorHandler:
  3912                           	callstack 25
  3913  000FC0                     
  3914                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  3915  000FC0  C003  F06A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3916  000FC4  C004  F06B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3917  000FC8  0012               	return		;funcret
  3918  000FCA                     __end_of_EUSART1_SetOverrunErrorHandler:
  3919                           	callstack 0
  3920                           
  3921 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3922 ;; Defined at:
  3923 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3926 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;Total ram usage:        2 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    3
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_EUSART1_Initialize
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text24
  3953  000FCA                     __ptext24:
  3954                           	callstack 0
  3955  000FCA                     _EUSART1_SetFramingErrorHandler:
  3956                           	callstack 25
  3957  000FCA                     
  3958                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  3959  000FCA  C003  F06C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3960  000FCE  C004  F06D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3961  000FD2  0012               	return		;funcret
  3962  000FD4                     __end_of_EUSART1_SetFramingErrorHandler:
  3963                           	callstack 0
  3964                           
  3965 ;; *************** function _EUSART1_SetErrorHandler *****************
  3966 ;; Defined at:
  3967 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3970 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;Total ram usage:        2 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    3
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_EUSART1_Initialize
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text25
  3997  000FD4                     __ptext25:
  3998                           	callstack 0
  3999  000FD4                     _EUSART1_SetErrorHandler:
  4000                           	callstack 25
  4001  000FD4                     
  4002                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4003  000FD4  C003  F068         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4004  000FD8  C004  F069         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4005  000FDC  0012               	return		;funcret
  4006  000FDE                     __end_of_EUSART1_SetErrorHandler:
  4007                           	callstack 0
  4008                           
  4009 ;; *************** function _ADC_Initialize *****************
  4010 ;; Defined at:
  4011 ;;		line 62 in file "mcc_generated_files/adc.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;Total ram usage:        0 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    3
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_SYSTEM_Initialize
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           	psect	text26
  4040  000F78                     __ptext26:
  4041                           	callstack 0
  4042  000F78                     _ADC_Initialize:
  4043                           	callstack 26
  4044  000F78                     
  4045                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  4046  000F78  0E00               	movlw	0
  4047  000F7A  6EC1               	movwf	193,c	;volatile
  4048                           
  4049                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  4050  000F7C  0E26               	movlw	38
  4051  000F7E  6EC0               	movwf	192,c	;volatile
  4052                           
  4053                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  4054  000F80  0E00               	movlw	0
  4055  000F82  6EC3               	movwf	195,c	;volatile
  4056                           
  4057                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  4058  000F84  0E00               	movlw	0
  4059  000F86  6EC4               	movwf	196,c	;volatile
  4060                           
  4061                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  4062  000F88  0E11               	movlw	17
  4063  000F8A  6EC2               	movwf	194,c	;volatile
  4064  000F8C  0012               	return		;funcret
  4065  000F8E                     __end_of_ADC_Initialize:
  4066                           	callstack 0
  4067                           
  4068 ;; *************** function _EUSART1_is_rx_ready *****************
  4069 ;; Defined at:
  4070 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      _Bool 
  4077 ;; Registers used:
  4078 ;;		wreg
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;Total ram usage:        0 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    3
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_main
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text27
  4099  000F8E                     __ptext27:
  4100                           	callstack 0
  4101  000F8E                     _EUSART1_is_rx_ready:
  4102                           	callstack 27
  4103  000F8E                     
  4104                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4105  000F8E  BA9E               	btfsc	158,5,c	;volatile
  4106  000F90  EFCC  F007         	goto	u1191
  4107  000F94  EFCF  F007         	goto	u1190
  4108  000F98                     u1191:
  4109  000F98  0E01               	movlw	1
  4110  000F9A  EFD0  F007         	goto	u1196
  4111  000F9E                     u1190:
  4112  000F9E  0E00               	movlw	0
  4113  000FA0                     u1196:
  4114  000FA0  0012               	return		;funcret
  4115  000FA2                     __end_of_EUSART1_is_rx_ready:
  4116                           	callstack 0
  4117                           
  4118 ;; *************** function _EUSART1_Read *****************
  4119 ;; Defined at:
  4120 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      unsigned char 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;Total ram usage:        0 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    3
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_main
  4145 ;;		_getch
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text28
  4150  000EDA                     __ptext28:
  4151                           	callstack 0
  4152  000EDA                     _EUSART1_Read:
  4153                           	callstack 27
  4154  000EDA                     l254:
  4155                           
  4156                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4157  000EDA  AA9E               	btfss	158,5,c	;volatile
  4158  000EDC  EF72  F007         	goto	u1201
  4159  000EE0  EF74  F007         	goto	u1200
  4160  000EE4                     u1201:
  4161  000EE4  EF6D  F007         	goto	l254
  4162  000EE8                     u1200:
  4163  000EE8                     
  4164                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4165  000EE8  0E00               	movlw	0
  4166  000EEA  0100               	movlb	0	; () banked
  4167  000EEC  6F72               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4168  000EEE                     
  4169                           ; BSR set to: 0
  4170                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4171  000EEE  A2AB               	btfss	171,1,c	;volatile
  4172  000EF0  EF7C  F007         	goto	u1211
  4173  000EF4  EF7E  F007         	goto	u1210
  4174  000EF8                     u1211:
  4175  000EF8  EF80  F007         	goto	l2015
  4176  000EFC                     u1210:
  4177  000EFC                     
  4178                           ; BSR set to: 0
  4179                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4180  000EFC  98AB               	bcf	171,4,c	;volatile
  4181                           
  4182                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4183  000EFE  88AB               	bsf	171,4,c	;volatile
  4184  000F00                     l2015:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4188  000F00  50AE               	movf	174,w,c	;volatile
  4189  000F02                     
  4190                           ; BSR set to: 0
  4191  000F02  0012               	return		;funcret
  4192  000F04                     __end_of_EUSART1_Read:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function _INTERRUPT_InterruptManager *****************
  4196 ;; Defined at:
  4197 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;		None
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;Total ram usage:        2 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    2
  4218 ;; This function calls:
  4219 ;;		_TMR0_ISR
  4220 ;; This function is called by:
  4221 ;;		Interrupt level 2
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	intcode
  4226  000008                     __pintcode:
  4227                           	callstack 0
  4228  000008                     _INTERRUPT_InterruptManager:
  4229                           	callstack 19
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;incstack = 0
  4233  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4234  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  4235  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4236  000012                     
  4237                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4238  000012  AAF2               	btfss	242,5,c	;volatile
  4239  000014  EF0E  F000         	goto	i2u128_41
  4240  000018  EF10  F000         	goto	i2u128_40
  4241  00001C                     i2u128_41:
  4242  00001C  EF19  F000         	goto	i2l304
  4243  000020                     i2u128_40:
  4244  000020  A4F2               	btfss	242,2,c	;volatile
  4245  000022  EF15  F000         	goto	i2u129_41
  4246  000026  EF17  F000         	goto	i2u129_40
  4247  00002A                     i2u129_41:
  4248  00002A  EF19  F000         	goto	i2l304
  4249  00002E                     i2u129_40:
  4250  00002E                     
  4251                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  4252  00002E  ECEC  F006         	call	_TMR0_ISR	;wreg free
  4253  000032                     i2l304:
  4254  000032  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4255  000036  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4256  00003A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4257  00003C  0011               	retfie		f
  4258  00003E                     __end_of_INTERRUPT_InterruptManager:
  4259                           	callstack 0
  4260                           
  4261 ;; *************** function _TMR0_ISR *****************
  4262 ;; Defined at:
  4263 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;		None
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;		None
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;Total ram usage:        0 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:    1
  4284 ;; This function calls:
  4285 ;;		Absolute function
  4286 ;;		_TMR0_DefaultInterruptHandler
  4287 ;;		_myTMR0ISR
  4288 ;; This function is called by:
  4289 ;;		_INTERRUPT_InterruptManager
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text30
  4294  000DD8                     __ptext30:
  4295                           	callstack 0
  4296  000DD8                     _TMR0_ISR:
  4297                           	callstack 19
  4298  000DD8                     
  4299                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  4300  000DD8  94F2               	bcf	242,2,c	;volatile
  4301  000DDA                     
  4302                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  4303  000DDA  505C               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  4304  000DDC  6ED7               	movwf	215,c	;volatile
  4305  000DDE                     
  4306                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  4307  000DDE  C05B  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4308  000DE2                     
  4309                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  4310  000DE2  0100               	movlb	0	; () banked
  4311  000DE4  5170               	movf	_TMR0_InterruptHandler& (0+255),w,b
  4312  000DE6  1171               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  4313  000DE8  B4D8               	btfsc	status,2,c
  4314  000DEA  EFF9  F006         	goto	i2u122_41
  4315  000DEE  EFFB  F006         	goto	i2u122_40
  4316  000DF2                     i2u122_41:
  4317  000DF2  EF07  F007         	goto	i2l119
  4318  000DF6                     i2u122_40:
  4319  000DF6                     
  4320                           ; BSR set to: 0
  4321                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  4322  000DF6  D802               	call	i2u123_48
  4323  000DF8  EF07  F007         	goto	i2u123_49
  4324  000DFC                     i2u123_48:
  4325  000DFC  0005               	push	
  4326  000DFE  6EFA               	movwf	pclath,c
  4327  000E00  5170               	movf	_TMR0_InterruptHandler& (0+255),w,b
  4328  000E02  6EFD               	movwf	tosl,c
  4329  000E04  5171               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  4330  000E06  6EFE               	movwf	tosh,c
  4331  000E08  6AFF               	clrf	tosu,c
  4332  000E0A  50FA               	movf	pclath,w,c
  4333  000E0C  0012               	return		;indir
  4334  000E0E                     i2u123_49:
  4335  000E0E                     i2l119:
  4336  000E0E  0012               	return		;funcret
  4337  000E10                     __end_of_TMR0_ISR:
  4338                           	callstack 0
  4339                           
  4340 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4341 ;; Defined at:
  4342 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;		None
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		None
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;Total ram usage:        0 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_TMR0_Initialize
  4366 ;;		_TMR0_ISR
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text31
  4371  000FE4                     __ptext31:
  4372                           	callstack 0
  4373  000FE4                     _TMR0_DefaultInterruptHandler:
  4374                           	callstack 19
  4375  000FE4  0012               	return		;funcret
  4376  000FE6                     __end_of_TMR0_DefaultInterruptHandler:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function _myTMR0ISR *****************
  4380 ;; Defined at:
  4381 ;;		line 165 in file "main.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;		None
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;		None
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  1    wreg      void 
  4388 ;; Registers used:
  4389 ;;		None
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;Total ram usage:        0 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_main
  4405 ;;		_TMR0_ISR
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text32
  4410  000FE6                     __ptext32:
  4411                           	callstack 0
  4412  000FE6                     _myTMR0ISR:
  4413                           	callstack 19
  4414  000FE6  0012               	return		;funcret
  4415  000FE8                     __end_of_myTMR0ISR:
  4416                           	callstack 0
  4417                           
  4418                           	psect	text33
  4419  000000                     __ptext33:
  4420                           	callstack 0
  4421  000000                     
  4422                           	psect	rparam
  4423  0000                     
  4424                           	psect	temp
  4425  00005D                     btemp:
  4426                           	callstack 0
  4427  00005D                     	ds	1
  4428  0000                     int$flags	set	btemp
  4429  0000                     wtemp8	set	btemp+1
  4430  0000                     ttemp5	set	btemp+1
  4431  0000                     ttemp6	set	btemp+4
  4432  0000                     ttemp7	set	btemp+8
  4433                           
  4434                           	psect	idloc
  4435                           
  4436                           ;Config register IDLOC0 @ 0x200000
  4437                           ;	unspecified, using default values
  4438  200000                     	org	2097152
  4439  200000  FF                 	db	255
  4440                           
  4441                           ;Config register IDLOC1 @ 0x200001
  4442                           ;	unspecified, using default values
  4443  200001                     	org	2097153
  4444  200001  FF                 	db	255
  4445                           
  4446                           ;Config register IDLOC2 @ 0x200002
  4447                           ;	unspecified, using default values
  4448  200002                     	org	2097154
  4449  200002  FF                 	db	255
  4450                           
  4451                           ;Config register IDLOC3 @ 0x200003
  4452                           ;	unspecified, using default values
  4453  200003                     	org	2097155
  4454  200003  FF                 	db	255
  4455                           
  4456                           ;Config register IDLOC4 @ 0x200004
  4457                           ;	unspecified, using default values
  4458  200004                     	org	2097156
  4459  200004  FF                 	db	255
  4460                           
  4461                           ;Config register IDLOC5 @ 0x200005
  4462                           ;	unspecified, using default values
  4463  200005                     	org	2097157
  4464  200005  FF                 	db	255
  4465                           
  4466                           ;Config register IDLOC6 @ 0x200006
  4467                           ;	unspecified, using default values
  4468  200006                     	org	2097158
  4469  200006  FF                 	db	255
  4470                           
  4471                           ;Config register IDLOC7 @ 0x200007
  4472                           ;	unspecified, using default values
  4473  200007                     	org	2097159
  4474  200007  FF                 	db	255
  4475                           
  4476                           	psect	config
  4477                           
  4478                           ; Padding undefined space
  4479  300000                     	org	3145728
  4480  300000  FF                 	db	255
  4481                           
  4482                           ;Config register CONFIG1H @ 0x300001
  4483                           ;	Oscillator Selection bits
  4484                           ;	FOSC = INTIO67, Internal oscillator block
  4485                           ;	4X PLL Enable
  4486                           ;	PLLCFG = OFF, Oscillator used directly
  4487                           ;	Primary clock enable bit
  4488                           ;	PRICLKEN = ON, Primary clock enabled
  4489                           ;	Fail-Safe Clock Monitor Enable bit
  4490                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4491                           ;	Internal/External Oscillator Switchover bit
  4492                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4493  300001                     	org	3145729
  4494  300001  28                 	db	40
  4495                           
  4496                           ;Config register CONFIG2L @ 0x300002
  4497                           ;	Power-up Timer Enable bit
  4498                           ;	PWRTEN = OFF, Power up timer disabled
  4499                           ;	Brown-out Reset Enable bits
  4500                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4501                           ;	Brown Out Reset Voltage bits
  4502                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4503  300002                     	org	3145730
  4504  300002  1F                 	db	31
  4505                           
  4506                           ;Config register CONFIG2H @ 0x300003
  4507                           ;	Watchdog Timer Enable bits
  4508                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4509                           ;	Watchdog Timer Postscale Select bits
  4510                           ;	WDTPS = 32768, 1:32768
  4511  300003                     	org	3145731
  4512  300003  3C                 	db	60
  4513                           
  4514                           ; Padding undefined space
  4515  300004                     	org	3145732
  4516  300004  FF                 	db	255
  4517                           
  4518                           ;Config register CONFIG3H @ 0x300005
  4519                           ;	CCP2 MUX bit
  4520                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4521                           ;	PORTB A/D Enable bit
  4522                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4523                           ;	P3A/CCP3 Mux bit
  4524                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4525                           ;	HFINTOSC Fast Start-up
  4526                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4527                           ;	Timer3 Clock input mux bit
  4528                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4529                           ;	ECCP2 B output mux bit
  4530                           ;	P2BMX = PORTB5, P2B is on RB5
  4531                           ;	MCLR Pin Enable bit
  4532                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4533  300005                     	org	3145733
  4534  300005  BF                 	db	191
  4535                           
  4536                           ;Config register CONFIG4L @ 0x300006
  4537                           ;	Stack Full/Underflow Reset Enable bit
  4538                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4539                           ;	Single-Supply ICSP Enable bit
  4540                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4541                           ;	Extended Instruction Set Enable bit
  4542                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4543                           ;	Background Debug
  4544                           ;	DEBUG = OFF, Disabled
  4545  300006                     	org	3145734
  4546  300006  85                 	db	133
  4547                           
  4548                           ; Padding undefined space
  4549  300007                     	org	3145735
  4550  300007  FF                 	db	255
  4551                           
  4552                           ;Config register CONFIG5L @ 0x300008
  4553                           ;	Code Protection Block 0
  4554                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4555                           ;	Code Protection Block 1
  4556                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4557                           ;	Code Protection Block 2
  4558                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4559                           ;	Code Protection Block 3
  4560                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4561  300008                     	org	3145736
  4562  300008  0F                 	db	15
  4563                           
  4564                           ;Config register CONFIG5H @ 0x300009
  4565                           ;	Boot Block Code Protection bit
  4566                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4567                           ;	Data EEPROM Code Protection bit
  4568                           ;	CPD = OFF, Data EEPROM not code-protected
  4569  300009                     	org	3145737
  4570  300009  C0                 	db	192
  4571                           
  4572                           ;Config register CONFIG6L @ 0x30000A
  4573                           ;	Write Protection Block 0
  4574                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4575                           ;	Write Protection Block 1
  4576                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4577                           ;	Write Protection Block 2
  4578                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4579                           ;	Write Protection Block 3
  4580                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4581  30000A                     	org	3145738
  4582  30000A  0F                 	db	15
  4583                           
  4584                           ;Config register CONFIG6H @ 0x30000B
  4585                           ;	Configuration Register Write Protection bit
  4586                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4587                           ;	Boot Block Write Protection bit
  4588                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4589                           ;	Data EEPROM Write Protection bit
  4590                           ;	WRTD = OFF, Data EEPROM not write-protected
  4591  30000B                     	org	3145739
  4592  30000B  E0                 	db	224
  4593                           
  4594                           ;Config register CONFIG7L @ 0x30000C
  4595                           ;	Table Read Protection Block 0
  4596                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4597                           ;	Table Read Protection Block 1
  4598                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4599                           ;	Table Read Protection Block 2
  4600                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4601                           ;	Table Read Protection Block 3
  4602                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4603  30000C                     	org	3145740
  4604  30000C  0F                 	db	15
  4605                           
  4606                           ;Config register CONFIG7H @ 0x30000D
  4607                           ;	Boot Block Table Read Protection bit
  4608                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4609  30000D                     	org	3145741
  4610  30000D  40                 	db	64
  4611                           tosu	equ	0xFFF
  4612                           tosh	equ	0xFFE
  4613                           tosl	equ	0xFFD
  4614                           stkptr	equ	0xFFC
  4615                           pclatu	equ	0xFFB
  4616                           pclath	equ	0xFFA
  4617                           pcl	equ	0xFF9
  4618                           tblptru	equ	0xFF8
  4619                           tblptrh	equ	0xFF7
  4620                           tblptrl	equ	0xFF6
  4621                           tablat	equ	0xFF5
  4622                           prodh	equ	0xFF4
  4623                           prodl	equ	0xFF3
  4624                           indf0	equ	0xFEF
  4625                           postinc0	equ	0xFEE
  4626                           postdec0	equ	0xFED
  4627                           preinc0	equ	0xFEC
  4628                           plusw0	equ	0xFEB
  4629                           fsr0h	equ	0xFEA
  4630                           fsr0l	equ	0xFE9
  4631                           wreg	equ	0xFE8
  4632                           indf1	equ	0xFE7
  4633                           postinc1	equ	0xFE6
  4634                           postdec1	equ	0xFE5
  4635                           preinc1	equ	0xFE4
  4636                           plusw1	equ	0xFE3
  4637                           fsr1h	equ	0xFE2
  4638                           fsr1l	equ	0xFE1
  4639                           bsr	equ	0xFE0
  4640                           indf2	equ	0xFDF
  4641                           postinc2	equ	0xFDE
  4642                           postdec2	equ	0xFDD
  4643                           preinc2	equ	0xFDC
  4644                           plusw2	equ	0xFDB
  4645                           fsr2h	equ	0xFDA
  4646                           fsr2l	equ	0xFD9
  4647                           status	equ	0xFD8

Data Sizes:
    Strings     363
    Constant    0
    Data        2
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     16      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1262_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_19(CODE[17]), STR_18(CODE[53]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[3]), STR_14(CODE[2]), STR_13(CODE[6]), STR_12(CODE[33]), 
		 -> STR_11(CODE[72]), STR_10(CODE[43]), STR_9(CODE[24]), STR_8(CODE[21]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[33]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 72
		 -> STR_19(CODE[17]), STR_18(CODE[53]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[3]), STR_14(CODE[2]), STR_13(CODE[6]), STR_12(CODE[33]), 
		 -> STR_11(CODE[72]), STR_10(CODE[43]), STR_9(CODE[24]), STR_8(CODE[21]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[33]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_19(CODE[17]), STR_18(CODE[53]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[3]), STR_14(CODE[2]), STR_13(CODE[6]), STR_12(CODE[33]), 
		 -> STR_11(CODE[72]), STR_10(CODE[43]), STR_9(CODE[24]), STR_8(CODE[21]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[33]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), myTMR0ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), myTMR0ISR(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0   14405
                                             12 BANK0      4     4      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   13442
                                              2 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11645
                                             84 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   11163
                                             67 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6701
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4435
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             13 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1546
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              3 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      46       5       43.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A2      12        0.0%
DATA                 0      0      A2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Oct 19 14:56:07 2020

                                            l25 0336                                              l43 04E2  
                                            l44 04F0                                              l37 0452  
                                            l76 0ED8                                 _timer0ReloadVal 005B  
                                           l100 0E7A                                             l112 0FB4  
                                           l122 0FBE                                             l151 0F38  
                                           l154 0F46                                             l148 0F60  
                                           l245 0FA0                                             l173 0F8C  
                                           l237 0DD6                                             l261 0F64  
                                           l421 0916                                             l254 0EDA  
                                           l270 0FAA                                             l264 0F76  
                                           l258 0F02                                             l282 0FD2  
                                           l434 0A7A                                             l285 0FC8  
                                           l288 0FDC                                             l297 0FE0  
                                           l985 0F2A                                             _abs 0D58  
                                           _pad 0B54                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1012 0B9A                                            l1101 0D56  
                                          l1031 0B24                                            l1015 0BDC  
                                          l1033 0B52                                            l1017 0C18  
                                          l1041 00EA                                            l2011 0EEE  
                                          l2003 0F8E                                            l1107 0E44  
                                          ?_abs 0015                                            l1028 0AE2  
                                          l2013 0EFC                                            l2015 0F00  
                                          l2007 0EDA                                            l1039 00E2  
                                          l1064 078E                                            l2009 0EE8  
                                          l2201 08D6                                            l1081 0D96  
                                          l1073 0D0A                                            l1074 0D12  
                                          l2131 0C1A                                            l2203 08F6  
                                          l2211 092A                                            l1059 0322  
                                          l2125 0F64                                            l2141 0C9C  
                                          l1093 0CAE                                            l2133 0C2C  
                                          l2221 099A                                            l2213 094A  
                                          l2301 008A                                            l1078 0D8E  
                                          l2127 0F72                                            l2135 0C3E  
                                          l2231 0A12                                            l2223 09A2  
                                          l2215 094E                                            l2207 0918  
                                          l2151 0D36                                            l2311 00F2  
                                          l2303 00AA                                            l2129 0FA4  
                                          l2137 0C48                                            l2233 0A24  
                                          l2225 09B6                                            l2217 095C  
                                          l2209 091C                                            l2145 0D14  
                                          l2153 0E10                                            l2321 0128  
                                          l2313 0104                                            l2305 00BA  
                                          l2401 0756                                            l2139 0C66  
                                          l2171 07C6                                            l2163 0790  
                                          l2227 09C4                                            l2235 0A2A  
                                          l2219 097C                                            l2147 0D20  
                                          l2155 0E1C                                            l2251 0B92  
                                          l2243 0B54                                            l2323 012E  
                                          l2331 0220                                            l2315 0112  
                                          l2307 00BC                                            l2403 077C  
                                          l2411 0CB8                                            l2181 0822  
                                          l2173 07D4                                            l2165 0794  
                                          l2237 0A3A                                            l2229 09F2  
                                          l2149 0D32                                            l2157 0E20  
                                          l2261 0C00                                            l2253 0BA6  
                                          l2245 0B64                                            l2333 023A  
                                          l2341 029C                                            l2325 01B0  
                                          l2317 0118                                            l2309 00D6  
                                          l2413 0CC6                                            l2271 0A90  
                                          l2191 088C                                            l2183 082A  
                                          l2175 07F4                                            l2167 07A2  
                                          l2239 0A5A                                            l2159 0E38  
                                          l2255 0BBA                                            l2247 0B78  
                                          l2351 02E2                                            l2343 02AE  
                                          l2335 0258                                            l2327 01B6  
                                          l2319 0120                                            l2415 0CEC  
                                          l2431 0350                                            l2423 0324  
                                          l2273 0A9C                                            l2193 08AC  
                                          l2185 083E                                            l2177 07F8  
                                          l2169 07C2                                            l2265 0D58  
                                          l2257 0BBE                                            l2249 0B86  
                                          l2353 02EA                                            l2345 02BE  
                                          l2337 0272                                            l2329 01BC  
                                          l2361 0584                                            l2409 0CB0  
                                          l2417 0F04                                            l2441 037E  
                                          l2433 0352                                            l2425 0328  
                                          l2291 0B34                                            l2283 0ADA  
                                          l2275 0AA8                                            l2195 08AE  
                                          l2187 084C                                            l2179 0804  
                                          l2267 0D72                                            l2259 0BEC  
                                          l2347 02C4                                            l2355 02FA  
                                          l2339 028C                                            l2371 0600  
                                          l2363 0592                                            l2419 0F0E  
                                          l2451 042E                                            l2443 038C  
                                          l2435 0354                                            l2427 0334  
                                          l2293 0B46                                            l2285 0AEE  
                                          l2277 0AB6                                            l2269 0A7C  
                                          l2197 08C0                                            l2189 085E  
                                          l2349 02D6                                            l2381 06B0  
                                          l2365 05A4                                            l2509 051C  
                                          l2461 0442                                            l2445 03A0  
                                          l2437 0362                                            l2429 0344  
                                          l2287 0B02                                            l2279 0AC8  
                                          l2199 08C6                                            l2391 0730  
                                          l2375 061C                                            l2367 05A8  
                                          l2359 055E                                            l2471 0468  
                                          l2463 0458                                            l2447 03AC  
                                          l2439 0370                                            l2289 0B06  
                                          l2297 0042                                            l2385 06E8  
                                          l2377 0642                                            l2369 05CE  
                                          l2473 046C                                            l2457 0432  
                                          l2449 041E                                            l2299 0062  
                                          l2387 070E                                            l2395 073C  
                                          l2379 0668                                            l2475 0480  
                                          l2459 043E                                            l2483 0508  
                                          l1941 0ED6                                            l2397 074A  
                                          l2389 071C                                            l2477 0488  
                                          l2469 045C                                            l1951 0E68  
                                          l1943 0E46                                            l2479 04B0  
                                          l1961 0F78                                            l1881 0FCA  
                                          l1937 0EAE                                            l1953 0E6A  
                                          l1945 0E48                                            l1883 0FC0  
                                          l1971 0DD0                                            l1963 0D98  
                                          l1939 0EBE                                            l1955 0E76  
                                          l1947 0E50                                            l1885 0FD4  
                                          l1965 0DAC                                            l1957 0FDE  
                                          l1949 0E66                                            l1981 0F48  
                                          ?_pad 0015                                            l1967 0DB8  
                                          l1959 0F2C                                            l1879 0FB6  
                                          l1991 0F5C                                            l1983 0F4C  
                                          l1969 0DC4                                            l1985 0F50  
                                          l1993 0FAC                                            l1987 0F54  
                                          l1995 0FB0                                            l1989 0F58  
                                          STR_1 FFDA                                            STR_2 FF5C  
                                          STR_3 FFE5                                            STR_4 FFFB  
                                          STR_5 FF3B                                            STR_6 FFCB  
                                          STR_7 FFEE                                            STR_8 FFA5  
                                          STR_9 FF8D                                            u1200 0EE8  
                                          u1201 0EE4                                            u1210 0EFC  
                                          u1211 0EF8                                            u1300 0F72  
                                          u1301 0F6E                                            u1310 0C2C  
                                          u1311 0C28                                            u1320 0C3E  
                                          u1400 0822                                            u1321 0C3A  
                                          u1401 081E                                            u1170 0F46  
                                          u1330 0C66                                            u1410 084C  
                                          u1171 0F42                                            u1331 0C62  
                                          u1411 0848                                            u1340 0C9C  
                                          u1420 088C                                            u1500 0B64  
                                          u1341 0C98                                            u1421 0888  
                                          u1501 0B60                                            _LATA 000F89  
                                          u1190 0F9E                                            u1430 08D6  
                                          u1350 0D56                                            u1510 0B86  
                                          _LATB 000F8A                                            u1191 0F98  
                                          u1431 08D2                                            u1351 0D52  
                                          u1511 0B82                                            _LATC 000F8B  
                                          u1440 092A                                            u1360 0E38  
                                          u1520 0BDC                                            u1600 0072  
                                          u1441 0926                                            u1361 0E34  
                                          u1521 0BD8                                            u1601 006C  
                                          u1370 07A2                                            u1450 095C  
                                          u1530 0BEC                                            u1610 0074  
                                          u1371 079E                                            u1451 0958  
                                          u1531 0BE8                                            u1196 0FA0  
                                          u1380 07D4                                            u1460 099A  
                                          u1540 0D72                                            u1700 028C  
                                          u1620 008A                                            u1381 07D0  
                                          u1461 0996                                            u1541 0D6E  
                                          u1701 0288                                            u1621 0086  
                                          u1550 0A90                                            u1470 09C4  
                                          u1710 029C                                            u1630 00BA  
                                          u1551 0A8C                                            u1391 07FE  
                                          u1471 09C0                                            u1711 0298  
                                          u1631 00B6                                            u1560 0AB6  
                                          u1480 09F2                                            u1720 02AE  
                                          u1640 00D6                                            u1800 0D0A  
                                          u1561 0AB2                                            u1481 09EE  
                                          u1721 02AA                                            u1641 00D2  
                                          u1801 0D06                                            u1570 0AD6  
                                          u1490 0A3A                                            u1730 02BE  
                                          u1650 0104                                            u1810 0344  
                                          u1571 0AD2                                            u1491 0A36  
                                          u1731 02BA                                            u1651 0100  
                                          u1811 0340                                            u1580 0B24  
                                          u1740 02D6                                            u1660 0112  
                                          u1820 03A0                                            u1581 0B20  
                                          u1741 02D2                                            u1661 010E  
                                          u1821 039C                                            u1590 0B34  
                                          u1670 023A                                            u1750 0584  
                                          u1830 0452                                            u1591 0B30  
                                          u1671 0236                                            u1751 0580  
                                          u1831 044E                                            u1680 0258  
                                          u1760 05CE                                            u1840 047C  
                                          u1681 0254                                            u1761 05CA  
                                          u1841 0478                                            u1690 0272  
                                          u1770 0642                                            u1691 026E  
                                          u1771 063E                                            u1780 0668  
                                          u1781 0664                                            u1790 070E  
                                          u1791 070A                                            i2l49 0FE6  
                                          _WPUB 000F61                                   _EUSART1_Write 0F62  
                                          abs@a 0015                                            _dbuf 0074  
                                          _ctoa 0A7C                                            _main 0324  
                                          _dtoa 0042                                   ?_EUSART1_Read 0001  
                                          _prec 0064                                            _nout 0060  
                                          pad@i 001C                                            pad@p 0019  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 001E                                            fsr2l 000FD9  
                                          btemp 005D                                            start 003E  
                                  ___param_bank 000000                                           ??_abs 0017  
                                         ??_pad 001B                         __end_of_TMR0_Initialize 0E7C  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 0F48                                 __end_of___aodiv 0918  
                                         ?_ctoa 000E                                           ?_main 0001  
                                         ?_dtoa 0020                                 __end_of___aomod 0A7C  
                                         STR_10 FF10                                           STR_11 FE93  
                                         STR_12 FF3B                                           STR_13 FFF5  
                                         STR_14 FF0E                                           STR_15 FFF8  
                                         STR_16 FF75                                           STR_17 FF75  
                                         STR_18 FEDB                                           STR_19 FFBA  
                                         _T0CON 000FD5                                           i2l125 0FE4  
                                         i2l119 0E0E                                           i2l304 0032  
                               _TMR0_WriteTimer 0FAC                                    vfpfcnvrt@fmt 0046  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94               __size_of_TMR0_SetInterruptHandler 000A  
                     ?_TMR0_SetInterruptHandler 0003                                __end_of_TMR0_ISR 0E10  
                                         _flags 0066                                           _fputc 0C1A  
                                         _fputs 0D14                                           pad@fp 0015  
                                         _width 0062                                           ctoa@c 0010  
                                         _putch 0FA2                                           ctoa@l 0012  
                                         ctoa@w 0014                                           main@i 00A3  
                                         dtoa@d 0022                                           dtoa@i 0042  
                                         dtoa@n 003A                                           dtoa@p 0034  
                                         dtoa@s 0038                                           dtoa@w 0036  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         tablat 000FF5                                  ??_EUSART1_Read 0003  
                                         ttemp5 005E                                           ttemp6 0061  
                                         ttemp7 0065                                           status 000FD8  
                                         wtemp8 005E              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 0E7C                                    __end_of_ctoa 0B54  
                    __end_of_EUSART1_Initialize 0DD8                                    __end_of_main 055E  
                                  __end_of_dtoa 0324                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_ctoa 0011                                          ??_main 00A0  
                                        ??_dtoa 002A                                   __activetblptr 000003  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0005  
                                        ?_fputs 000E                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l2021 0DDA                                          i2l2101 0020  
                                        i2l2023 0DDE                                          i2l2103 002E  
                                        i2l2025 0DE2                                          i2l2027 0DF6  
                                        i2l2019 0DD8                                          i2l2099 0012  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    vfprintf@cfmt 0094  
                                     ??___aodiv 0013                                       ??___aomod 0013  
                       __end_of_TMR0_WriteTimer 0FB6                        ?_EUSART1_SetErrorHandler 0003  
                              ?_TMR0_Initialize 0001                                          clear_0 0E9A  
                                        _printf 0F04                                          pad@buf 0017  
              ??_EUSART1_SetOverrunErrorHandler 0005                 ?_EUSART1_SetOverrunErrorHandler 0003  
                                        ctoa@fp 000E                                          dtoa@fp 0020  
                                        _strlen 0E10                                          fputc@c 0005  
                                        fputs@c 0012                                          fputs@i 0013  
                                        fputs@s 000E                                    __mediumconst FE92  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 0D14  
                               ??_EUSART1_Write 0003        TMR0_SetInterruptHandler@InterruptHandler 0003  
                 __size_of_INTERRUPT_Initialize 0004                               _SYSTEM_Initialize 0F48  
                                    __accesstop 0060                         __end_of__initialization 0EA4  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 0FE2  
                           ??_SYSTEM_Initialize 0007                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 0CB0                                   __end_of_fputs 0D58  
                                 __end_of_putch 0FAC                            __end_of_EUSART1_Read 0F04  
                                       ??_fputc 0009                       __end_of_SYSTEM_Initialize 0F62  
                                       ??_fputs 0012                              __size_of_myTMR0ISR 0002  
                                       ??_putch 0004                                      __pbssBANK0 0060  
               __end_of_EUSART1_SetErrorHandler 0FDE                __end_of_TMR0_SetInterruptHandler 0FC0  
                                    ??_TMR0_ISR 0001                                ?_TMR0_WriteTimer 0003  
                                       ?_printf 0096                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 0003          __end_of_EUSART1_SetFramingErrorHandler 0FD4  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 0FCA  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0232  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                          _ADC_InterruptHandler 006E                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 0790  
                                       ___aomod 0918                               __end_of_myTMR0ISR 0FE8  
                                     ?_vfprintf 0055                             _EUSART1_is_rx_ready 0F8E  
                                       __pcinit 0E7C                                         __ramtop 1000  
                                       __ptext0 0324                                         __ptext1 0F04  
                                       __ptext2 0CB0                                         __ptext3 055E  
                                       __ptext4 0042                                         __ptext5 0B54  
                                       __ptext6 0E10                                         __ptext7 0D14  
                                       __ptext8 0D58                                         __ptext9 0918  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 0F2C  
                                  __size_of_abs 0040                                    __size_of_pad 00C6  
                            _EUSART1_Initialize 0D98                        ??_PIN_MANAGER_Initialize 0003  
                                       main@cmd 00A2                      __size_of_SYSTEM_Initialize 001A  
                          end_of_initialization 0EA4                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0007  
                   _EUSART1_OverrunErrorHandler 006A                                         fputs@fp 0010  
                             __end_of_vfpfcnvrt 0790                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                                    ??_vfprintf 005B                            ??_EUSART1_Initialize 0005  
                                       strlen@a 0005                                         strlen@s 0003  
                      _TMR0_SetInterruptHandler 0FB6                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0003                           ??_EUSART1_is_rx_ready 0003  
                                  _EUSART1_Read 0EDA                    __end_of_INTERRUPT_Initialize 0FE2  
                                   vfpfcnvrt@ap 0048                                     vfpfcnvrt@fp 0044  
                                   vfpfcnvrt@ll 004C                               __size_of_TMR0_ISR 0038  
                                _ADC_Initialize 0F78                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 0F2C                                  __end_of_strlen 0E46  
                           start_initialization 0E7C                        __size_of_TMR0_Initialize 0036  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 0D98  
                                   __end_of_pad 0C1A                                     putch@txData 0004  
                         __end_of_EUSART1_Write 0F78                                     vfprintf@fmt 0057  
                        __end_of_ADC_Initialize 0F8E                                     __pdataBANK0 00A4  
                                      ??_printf 005B                                        ??_strlen 0005  
                                   __pbssCOMRAM 005B                                   __pcstackBANK0 0094  
                              ___aodiv@dividend 0003                ??_EUSART1_SetFramingErrorHandler 0005  
               ?_EUSART1_SetFramingErrorHandler 0003                           _TMR0_InterruptHandler 0070  
                        _PIN_MANAGER_Initialize 0EAE                                       _dtoa$1331 0032  
                                     __pintcode 0008                                   __pmediumconst FE92  
                                      ?___aodiv 0003                                        ?___aomod 0003  
                              ___aodiv@quotient 0015                                 ?_ADC_Initialize 0001  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                                     _myTMR0ISR 0FE6                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 0068                         _EUSART1_SetErrorHandler 0FD4  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 0FDE  
                             ??_TMR0_Initialize 0005         EUSART1_SetErrorHandler@interruptHandler 0003  
                                      i2u122_40 0DF6                                        i2u122_41 0DF2  
                                      i2u123_48 0DFC                                        i2u123_49 0E0E  
           __size_of_INTERRUPT_InterruptManager 0036                                        i2u128_40 0020  
                                      i2u128_41 001C                                        i2u129_40 002E  
                                      i2u129_41 002A                      ??_TMR0_SetInterruptHandler 0005  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                                      _TMR0_ISR 0DD8                                       _vfpfcnvrt 055E  
                                    _ADCON0bits 000FC2                                      ?_myTMR0ISR 0001  
                                    vfpfcnvrt@c 0054                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                                        __Hrparam 0000  
                                    vfprintf@ap 0059                                        __Lrparam 0000  
                                    vfprintf@fp 0055                         ??_OSCILLATOR_Initialize 0003  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                   __size_of_EUSART1_Initialize 0040                                      ?_vfpfcnvrt 0044  
                               ___aodiv@divisor 000B                                 ___aodiv@counter 0013  
                     ??_EUSART1_SetErrorHandler 0005                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 0FA2                                        __ptext10 0790  
                                      __ptext11 0A7C                                        __ptext20 0F2C  
                                      __ptext12 0C1A                                        __ptext21 0FDE  
                                      __ptext13 0FA2                                        __ptext30 0DD8  
                                      __ptext22 0D98                                        __ptext14 0F62  
                                      __ptext31 0FE4                                        __ptext23 0FC0  
                                      __ptext15 0FAC                                        __ptext32 0FE6  
                                      __ptext24 0FCA                                        __ptext16 0F48  
                                      __ptext33 0000                                        __ptext25 0FD4  
                                      __ptext17 0E46                                        __ptext26 0F78  
                                      __ptext18 0FB6                                        __ptext27 0F8E  
                                      __ptext19 0EAE                                        __ptext28 0EDA  
                       TMR0_WriteTimer@timerVal 0003                               ??_TMR0_WriteTimer 0005  
                                 __size_of_ctoa 00D8                                   __size_of_main 023A  
                                 __size_of_dtoa 02E2            __end_of_TMR0_DefaultInterruptHandler 0FE6  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 0FE4  
EUSART1_SetOverrunErrorHandler@interruptHandler 0003                                        int$flags 005D  
                                      _vfprintf 0CB0              __end_of_INTERRUPT_InterruptManager 003E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0096  
                   _EUSART1_FramingErrorHandler 006C                                ___aomod@dividend 0003  
                                   ??_myTMR0ISR 0001                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 0003                                        intlevel2 0000  
                              _samplesCollected 0073                                  _thresholdRange 00A4  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 0FCA  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 0FC0  
                                    _RCSTA1bits 000FAB                                ??_ADC_Initialize 0003  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 009E  EUSART1_SetFramingErrorHandler@interruptHandler 0003  
                               ___aomod@divisor 000B                                     ??_vfpfcnvrt 004A  
                               ___aomod@counter 0013                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 0072                                 _TMR0_Initialize 0E46  
                                  ___aodiv@sign 0014                  __end_of_PIN_MANAGER_Initialize 0EDA  
                                  ___aomod@sign 0014                                    fp__myTMR0ISR 0000  
