

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Oct 20 09:15:22 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 05/05/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F26K22 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    90  0000                     
    91 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    92  0000                     
    93 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    94  0000                     
    95                           	psect	idataBANK0
    96  0011BC                     __pidataBANK0:
    97                           	callstack 0
    98                           
    99                           ;initializer for _thresholdRange
   100  0011BC  000A               	dw	10
   101  0000                     _ANSELA	set	3896
   102  0000                     _ANSELB	set	3897
   103  0000                     _ANSELC	set	3898
   104  0000                     _RCONbits	set	4048
   105  0000                     _TXREG1	set	4013
   106  0000                     _RCREG1	set	4014
   107  0000                     _RCSTA1bits	set	4011
   108  0000                     _TXSTA1bits	set	4012
   109  0000                     _PIR1bits	set	3998
   110  0000                     _SPBRGH1	set	4016
   111  0000                     _SPBRG1	set	4015
   112  0000                     _TXSTA1	set	4012
   113  0000                     _RCSTA1	set	4011
   114  0000                     _BAUDCON1	set	4024
   115  0000                     _ADCON0	set	4034
   116  0000                     _ADRESL	set	4035
   117  0000                     _ADCON2	set	4032
   118  0000                     _ADCON1	set	4033
   119  0000                     _OSCTUNE	set	3995
   120  0000                     _OSCCON2	set	4050
   121  0000                     _OSCCON	set	4051
   122  0000                     _T0CON	set	4053
   123  0000                     _TMR0L	set	4054
   124  0000                     _TMR0H	set	4055
   125  0000                     _T0CONbits	set	4053
   126  0000                     _INTCON2bits	set	4081
   127  0000                     _WPUB	set	3937
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISA	set	3986
   131  0000                     _LATC	set	3979
   132  0000                     _LATB	set	3978
   133  0000                     _LATA	set	3977
   134  0000                     _ADRESH	set	4036
   135  0000                     _ADCON0bits	set	4034
   136  0000                     _INTCONbits	set	4082
   137  0000                     _PLLRDY	set	32407
   138                           
   139                           	psect	mediumconst
   140  00FE78                     __pmediumconst:
   141                           	callstack 0
   142  00FE78  00                 	db	0
   143  00FE79                     STR_14:
   144  00FE79  66                 	db	102	;'f'
   145  00FE7A  3A                 	db	58	;':'
   146  00FE7B  20                 	db	32
   147  00FE7C  67                 	db	103	;'g'
   148  00FE7D  61                 	db	97	;'a'
   149  00FE7E  74                 	db	116	;'t'
   150  00FE7F  68                 	db	104	;'h'
   151  00FE80  65                 	db	101	;'e'
   152  00FE81  72                 	db	114	;'r'
   153  00FE82  20                 	db	32
   154  00FE83  35                 	db	53	;'5'
   155  00FE84  31                 	db	49	;'1'
   156  00FE85  32                 	db	50	;'2'
   157  00FE86  20                 	db	32
   158  00FE87  73                 	db	115	;'s'
   159  00FE88  61                 	db	97	;'a'
   160  00FE89  6D                 	db	109	;'m'
   161  00FE8A  70                 	db	112	;'p'
   162  00FE8B  6C                 	db	108	;'l'
   163  00FE8C  65                 	db	101	;'e'
   164  00FE8D  73                 	db	115	;'s'
   165  00FE8E  20                 	db	32
   166  00FE8F  66                 	db	102	;'f'
   167  00FE90  72                 	db	114	;'r'
   168  00FE91  6F                 	db	111	;'o'
   169  00FE92  6D                 	db	109	;'m'
   170  00FE93  20                 	db	32
   171  00FE94  74                 	db	116	;'t'
   172  00FE95  68                 	db	104	;'h'
   173  00FE96  65                 	db	101	;'e'
   174  00FE97  20                 	db	32
   175  00FE98  6D                 	db	109	;'m'
   176  00FE99  69                 	db	105	;'i'
   177  00FE9A  63                 	db	99	;'c'
   178  00FE9B  72                 	db	114	;'r'
   179  00FE9C  6F                 	db	111	;'o'
   180  00FE9D  70                 	db	112	;'p'
   181  00FE9E  68                 	db	104	;'h'
   182  00FE9F  6F                 	db	111	;'o'
   183  00FEA0  6E                 	db	110	;'n'
   184  00FEA1  65                 	db	101	;'e'
   185  00FEA2  20                 	db	32
   186  00FEA3  61                 	db	97	;'a'
   187  00FEA4  6E                 	db	110	;'n'
   188  00FEA5  64                 	db	100	;'d'
   189  00FEA6  20                 	db	32
   190  00FEA7  63                 	db	99	;'c'
   191  00FEA8  61                 	db	97	;'a'
   192  00FEA9  6C                 	db	108	;'l'
   193  00FEAA  63                 	db	99	;'c'
   194  00FEAB  75                 	db	117	;'u'
   195  00FEAC  6C                 	db	108	;'l'
   196  00FEAD  61                 	db	97	;'a'
   197  00FEAE  74                 	db	116	;'t'
   198  00FEAF  65                 	db	101	;'e'
   199  00FEB0  20                 	db	32
   200  00FEB1  74                 	db	116	;'t'
   201  00FEB2  68                 	db	104	;'h'
   202  00FEB3  65                 	db	101	;'e'
   203  00FEB4  20                 	db	32
   204  00FEB5  66                 	db	102	;'f'
   205  00FEB6  72                 	db	114	;'r'
   206  00FEB7  65                 	db	101	;'e'
   207  00FEB8  71                 	db	113	;'q'
   208  00FEB9  75                 	db	117	;'u'
   209  00FEBA  65                 	db	101	;'e'
   210  00FEBB  6E                 	db	110	;'n'
   211  00FEBC  63                 	db	99	;'c'
   212  00FEBD  79                 	db	121	;'y'
   213  00FEBE  0D                 	db	13
   214  00FEBF  0A                 	db	10
   215  00FEC0  00                 	db	0
   216  00FEC1                     STR_5:
   217  00FEC1  54                 	db	84	;'T'
   218  00FEC2  68                 	db	104	;'h'
   219  00FEC3  65                 	db	101	;'e'
   220  00FEC4  20                 	db	32
   221  00FEC5  6C                 	db	108	;'l'
   222  00FEC6  61                 	db	97	;'a'
   223  00FEC7  73                 	db	115	;'s'
   224  00FEC8  74                 	db	116	;'t'
   225  00FEC9  20                 	db	32
   226  00FECA  32                 	db	50	;'2'
   227  00FECB  35                 	db	53	;'5'
   228  00FECC  36                 	db	54	;'6'
   229  00FECD  20                 	db	32
   230  00FECE  41                 	db	65	;'A'
   231  00FECF  44                 	db	68	;'D'
   232  00FED0  43                 	db	67	;'C'
   233  00FED1  20                 	db	32
   234  00FED2  73                 	db	115	;'s'
   235  00FED3  61                 	db	97	;'a'
   236  00FED4  6D                 	db	109	;'m'
   237  00FED5  70                 	db	112	;'p'
   238  00FED6  6C                 	db	108	;'l'
   239  00FED7  65                 	db	101	;'e'
   240  00FED8  73                 	db	115	;'s'
   241  00FED9  20                 	db	32
   242  00FEDA  66                 	db	102	;'f'
   243  00FEDB  72                 	db	114	;'r'
   244  00FEDC  6F                 	db	111	;'o'
   245  00FEDD  6D                 	db	109	;'m'
   246  00FEDE  20                 	db	32
   247  00FEDF  74                 	db	116	;'t'
   248  00FEE0  68                 	db	104	;'h'
   249  00FEE1  65                 	db	101	;'e'
   250  00FEE2  20                 	db	32
   251  00FEE3  6D                 	db	109	;'m'
   252  00FEE4  69                 	db	105	;'i'
   253  00FEE5  63                 	db	99	;'c'
   254  00FEE6  72                 	db	114	;'r'
   255  00FEE7  6F                 	db	111	;'o'
   256  00FEE8  70                 	db	112	;'p'
   257  00FEE9  68                 	db	104	;'h'
   258  00FEEA  6F                 	db	111	;'o'
   259  00FEEB  6E                 	db	110	;'n'
   260  00FEEC  65                 	db	101	;'e'
   261  00FEED  20                 	db	32
   262  00FEEE  61                 	db	97	;'a'
   263  00FEEF  72                 	db	114	;'r'
   264  00FEF0  65                 	db	101	;'e'
   265  00FEF1  3A                 	db	58	;':'
   266  00FEF2  20                 	db	32
   267  00FEF3  0D                 	db	13
   268  00FEF4  0A                 	db	10
   269  00FEF5  00                 	db	0
   270  00FEF6                     STR_13:
   271  00FEF6  54                 	db	84	;'T'
   272  00FEF7  2F                 	db	47
   273  00FEF8  74                 	db	116	;'t'
   274  00FEF9  3A                 	db	58	;':'
   275  00FEFA  20                 	db	32
   276  00FEFB  49                 	db	73	;'I'
   277  00FEFC  6E                 	db	110	;'n'
   278  00FEFD  63                 	db	99	;'c'
   279  00FEFE  72                 	db	114	;'r'
   280  00FEFF  65                 	db	101	;'e'
   281  00FF00  61                 	db	97	;'a'
   282  00FF01  73                 	db	115	;'s'
   283  00FF02  65                 	db	101	;'e'
   284  00FF03  2F                 	db	47
   285  00FF04  64                 	db	100	;'d'
   286  00FF05  65                 	db	101	;'e'
   287  00FF06  63                 	db	99	;'c'
   288  00FF07  72                 	db	114	;'r'
   289  00FF08  65                 	db	101	;'e'
   290  00FF09  61                 	db	97	;'a'
   291  00FF0A  73                 	db	115	;'s'
   292  00FF0B  65                 	db	101	;'e'
   293  00FF0C  20                 	db	32
   294  00FF0D  74                 	db	116	;'t'
   295  00FF0E  68                 	db	104	;'h'
   296  00FF0F  72                 	db	114	;'r'
   297  00FF10  65                 	db	101	;'e'
   298  00FF11  73                 	db	115	;'s'
   299  00FF12  68                 	db	104	;'h'
   300  00FF13  6F                 	db	111	;'o'
   301  00FF14  6C                 	db	108	;'l'
   302  00FF15  64                 	db	100	;'d'
   303  00FF16  20                 	db	32
   304  00FF17  31                 	db	49	;'1'
   305  00FF18  33                 	db	51	;'3'
   306  00FF19  38                 	db	56	;'8'
   307  00FF1A  2D                 	db	45
   308  00FF1B  31                 	db	49	;'1'
   309  00FF1C  31                 	db	49	;'1'
   310  00FF1D  38                 	db	56	;'8'
   311  00FF1E  0D                 	db	13
   312  00FF1F  0A                 	db	10
   313  00FF20  00                 	db	0
   314  00FF21                     STR_8:
   315  00FF21  2D                 	db	45
   316  00FF22  2D                 	db	45
   317  00FF23  2D                 	db	45
   318  00FF24  2D                 	db	45
   319  00FF25  2D                 	db	45
   320  00FF26  2D                 	db	45
   321  00FF27  2D                 	db	45
   322  00FF28  2D                 	db	45
   323  00FF29  2D                 	db	45
   324  00FF2A  2D                 	db	45
   325  00FF2B  2D                 	db	45
   326  00FF2C  2D                 	db	45
   327  00FF2D  2D                 	db	45
   328  00FF2E  2D                 	db	45
   329  00FF2F  2D                 	db	45
   330  00FF30  2D                 	db	45
   331  00FF31  2D                 	db	45
   332  00FF32  2D                 	db	45
   333  00FF33  2D                 	db	45
   334  00FF34  2D                 	db	45
   335  00FF35  2D                 	db	45
   336  00FF36  2D                 	db	45
   337  00FF37  2D                 	db	45
   338  00FF38  2D                 	db	45
   339  00FF39  2D                 	db	45
   340  00FF3A  2D                 	db	45
   341  00FF3B  2D                 	db	45
   342  00FF3C  2D                 	db	45
   343  00FF3D  2D                 	db	45
   344  00FF3E  2D                 	db	45
   345  00FF3F  0D                 	db	13
   346  00FF40  0A                 	db	10
   347  00FF41  00                 	db	0
   348  00FF42                     STR_2:
   349  00FF42  4D                 	db	77	;'M'
   350  00FF43  69                 	db	105	;'i'
   351  00FF44  63                 	db	99	;'c'
   352  00FF45  72                 	db	114	;'r'
   353  00FF46  6F                 	db	111	;'o'
   354  00FF47  70                 	db	112	;'p'
   355  00FF48  68                 	db	104	;'h'
   356  00FF49  6F                 	db	111	;'o'
   357  00FF4A  6E                 	db	110	;'n'
   358  00FF4B  65                 	db	101	;'e'
   359  00FF4C  20                 	db	32
   360  00FF4D  65                 	db	101	;'e'
   361  00FF4E  78                 	db	120	;'x'
   362  00FF4F  70                 	db	112	;'p'
   363  00FF50  65                 	db	101	;'e'
   364  00FF51  72                 	db	114	;'r'
   365  00FF52  69                 	db	105	;'i'
   366  00FF53  6D                 	db	109	;'m'
   367  00FF54  65                 	db	101	;'e'
   368  00FF55  6E                 	db	110	;'n'
   369  00FF56  74                 	db	116	;'t'
   370  00FF57  73                 	db	115	;'s'
   371  00FF58  0D                 	db	13
   372  00FF59  0A                 	db	10
   373  00FF5A  00                 	db	0
   374  00FF5B                     STR_19:
   375  00FF5B  56                 	db	86	;'V'
   376  00FF5C  6F                 	db	111	;'o'
   377  00FF5D  6C                 	db	108	;'l'
   378  00FF5E  75                 	db	117	;'u'
   379  00FF5F  6D                 	db	109	;'m'
   380  00FF60  65                 	db	101	;'e'
   381  00FF61  20                 	db	32
   382  00FF62  72                 	db	114	;'r'
   383  00FF63  61                 	db	97	;'a'
   384  00FF64  6E                 	db	110	;'n'
   385  00FF65  67                 	db	103	;'g'
   386  00FF66  65                 	db	101	;'e'
   387  00FF67  3A                 	db	58	;':'
   388  00FF68  20                 	db	32
   389  00FF69  25                 	db	37
   390  00FF6A  64                 	db	100	;'d'
   391  00FF6B  20                 	db	32
   392  00FF6C  2D                 	db	45
   393  00FF6D  20                 	db	32
   394  00FF6E  25                 	db	37
   395  00FF6F  64                 	db	100	;'d'
   396  00FF70  0D                 	db	13
   397  00FF71  0A                 	db	10
   398  00FF72  00                 	db	0
   399  00FF73                     STR_12:
   400  00FF73  7A                 	db	122	;'z'
   401  00FF74  3A                 	db	58	;':'
   402  00FF75  20                 	db	32
   403  00FF76  43                 	db	67	;'C'
   404  00FF77  6C                 	db	108	;'l'
   405  00FF78  65                 	db	101	;'e'
   406  00FF79  61                 	db	97	;'a'
   407  00FF7A  72                 	db	114	;'r'
   408  00FF7B  20                 	db	32
   409  00FF7C  74                 	db	116	;'t'
   410  00FF7D  68                 	db	104	;'h'
   411  00FF7E  65                 	db	101	;'e'
   412  00FF7F  20                 	db	32
   413  00FF80  74                 	db	116	;'t'
   414  00FF81  65                 	db	101	;'e'
   415  00FF82  72                 	db	114	;'r'
   416  00FF83  6D                 	db	109	;'m'
   417  00FF84  69                 	db	105	;'i'
   418  00FF85  6E                 	db	110	;'n'
   419  00FF86  61                 	db	97	;'a'
   420  00FF87  6C                 	db	108	;'l'
   421  00FF88  0D                 	db	13
   422  00FF89  0A                 	db	10
   423  00FF8A  00                 	db	0
   424  00FF8B                     STR_22:
   425  00FF8B  54                 	db	84	;'T'
   426  00FF8C  68                 	db	104	;'h'
   427  00FF8D  72                 	db	114	;'r'
   428  00FF8E  65                 	db	101	;'e'
   429  00FF8F  73                 	db	115	;'s'
   430  00FF90  68                 	db	104	;'h'
   431  00FF91  6F                 	db	111	;'o'
   432  00FF92  6C                 	db	108	;'l'
   433  00FF93  64                 	db	100	;'d'
   434  00FF94  20                 	db	32
   435  00FF95  61                 	db	97	;'a'
   436  00FF96  74                 	db	116	;'t'
   437  00FF97  20                 	db	32
   438  00FF98  6D                 	db	109	;'m'
   439  00FF99  69                 	db	105	;'i'
   440  00FF9A  6E                 	db	110	;'n'
   441  00FF9B  69                 	db	105	;'i'
   442  00FF9C  6D                 	db	109	;'m'
   443  00FF9D  75                 	db	117	;'u'
   444  00FF9E  6D                 	db	109	;'m'
   445  00FF9F  0D                 	db	13
   446  00FFA0  0A                 	db	10
   447  00FFA1  00                 	db	0
   448  00FFA2                     STR_11:
   449  00FFA2  5A                 	db	90	;'Z'
   450  00FFA3  3A                 	db	58	;':'
   451  00FFA4  20                 	db	32
   452  00FFA5  52                 	db	82	;'R'
   453  00FFA6  65                 	db	101	;'e'
   454  00FFA7  73                 	db	115	;'s'
   455  00FFA8  65                 	db	101	;'e'
   456  00FFA9  74                 	db	116	;'t'
   457  00FFAA  20                 	db	32
   458  00FFAB  70                 	db	112	;'p'
   459  00FFAC  72                 	db	114	;'r'
   460  00FFAD  6F                 	db	111	;'o'
   461  00FFAE  63                 	db	99	;'c'
   462  00FFAF  65                 	db	101	;'e'
   463  00FFB0  73                 	db	115	;'s'
   464  00FFB1  73                 	db	115	;'s'
   465  00FFB2  6F                 	db	111	;'o'
   466  00FFB3  72                 	db	114	;'r'
   467  00FFB4  0D                 	db	13
   468  00FFB5  0A                 	db	10
   469  00FFB6  00                 	db	0
   470  00FFB7                     STR_23:
   471  00FFB7  55                 	db	85	;'U'
   472  00FFB8  6E                 	db	110	;'n'
   473  00FFB9  6B                 	db	107	;'k'
   474  00FFBA  6E                 	db	110	;'n'
   475  00FFBB  6F                 	db	111	;'o'
   476  00FFBC  77                 	db	119	;'w'
   477  00FFBD  6E                 	db	110	;'n'
   478  00FFBE  20                 	db	32
   479  00FFBF  6B                 	db	107	;'k'
   480  00FFC0  65                 	db	101	;'e'
   481  00FFC1  79                 	db	121	;'y'
   482  00FFC2  20                 	db	32
   483  00FFC3  25                 	db	37
   484  00FFC4  63                 	db	99	;'c'
   485  00FFC5  0D                 	db	13
   486  00FFC6  0A                 	db	10
   487  00FFC7  00                 	db	0
   488  00FFC8                     STR_9:
   489  00FFC8  3F                 	db	63	;'?'
   490  00FFC9  3A                 	db	58	;':'
   491  00FFCA  20                 	db	32
   492  00FFCB  48                 	db	72	;'H'
   493  00FFCC  65                 	db	101	;'e'
   494  00FFCD  6C                 	db	108	;'l'
   495  00FFCE  70                 	db	112	;'p'
   496  00FFCF  20                 	db	32
   497  00FFD0  6D                 	db	109	;'m'
   498  00FFD1  65                 	db	101	;'e'
   499  00FFD2  6E                 	db	110	;'n'
   500  00FFD3  75                 	db	117	;'u'
   501  00FFD4  0D                 	db	13
   502  00FFD5  0A                 	db	10
   503  00FFD6  00                 	db	0
   504  00FFD7                     STR_1:
   505  00FFD7  69                 	db	105	;'i'
   506  00FFD8  6E                 	db	110	;'n'
   507  00FFD9  4C                 	db	76	;'L'
   508  00FFDA  61                 	db	97	;'a'
   509  00FFDB  62                 	db	98	;'b'
   510  00FFDC  20                 	db	32
   511  00FFDD  30                 	db	48	;'0'
   512  00FFDE  38                 	db	56	;'8'
   513  00FFDF  0D                 	db	13
   514  00FFE0  0A                 	db	10
   515  00FFE1  00                 	db	0
   516  00FFE2                     STR_3:
   517  00FFE2  44                 	db	68	;'D'
   518  00FFE3  65                 	db	101	;'e'
   519  00FFE4  76                 	db	118	;'v'
   520  00FFE5  27                 	db	39
   521  00FFE6  32                 	db	50	;'2'
   522  00FFE7  31                 	db	49	;'1'
   523  00FFE8  0D                 	db	13
   524  00FFE9  0A                 	db	10
   525  00FFEA  00                 	db	0
   526  00FFEB                     STR_10:
   527  00FFEB  6F                 	db	111	;'o'
   528  00FFEC  3A                 	db	58	;':'
   529  00FFED  20                 	db	32
   530  00FFEE  6B                 	db	107	;'k'
   531  00FFEF  0D                 	db	13
   532  00FFF0  0A                 	db	10
   533  00FFF1  00                 	db	0
   534  00FFF2                     STR_16:
   535  00FFF2  20                 	db	32
   536  00FFF3  6B                 	db	107	;'k'
   537  00FFF4  0D                 	db	13
   538  00FFF5  0A                 	db	10
   539  00FFF6  3E                 	db	62	;'>'
   540  00FFF7  00                 	db	0
   541  00FFF8                     STR_6:
   542  00FFF8  25                 	db	37
   543  00FFF9  64                 	db	100	;'d'
   544  00FFFA  20                 	db	32
   545  00FFFB  00                 	db	0
   546  00FFFC                     STR_4:
   547  00FFFC  3E                 	db	62	;'>'
   548  00FFFD  20                 	db	32
   549  00FFFE  00                 	db	0
   550  00FFFF  00                 	db	0	; dummy byte at the end
   551  0000                     
   552                           ; #config settings
   553                           
   554                           	psect	cinit
   555  000FA2                     __pcinit:
   556                           	callstack 0
   557  000FA2                     start_initialization:
   558                           	callstack 0
   559  000FA2                     __initialization:
   560                           	callstack 0
   561                           
   562                           ; Initialize objects allocated to BANK0 (2 bytes)
   563                           ; load TBLPTR registers with __pidataBANK0
   564  000FA2  0EBC               	movlw	low __pidataBANK0
   565  000FA4  6EF6               	movwf	tblptrl,c
   566  000FA6  0E11               	movlw	high __pidataBANK0
   567  000FA8  6EF7               	movwf	tblptrh,c
   568  000FAA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   569  000FAC  6EF8               	movwf	tblptru,c
   570  000FAE  0009               	tblrd		*+	;fetch initializer
   571  000FB0  CFF5 F0FB          	movff	tablat,__pdataBANK0
   572  000FB4  0009               	tblrd		*+	;fetch initializer
   573  000FB6  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   574                           
   575                           ; Clear objects allocated to BANK0 (109 bytes)
   576  000FBA  EE00  F060         	lfsr	0,__pbssBANK0
   577  000FBE  0E6D               	movlw	109
   578  000FC0                     clear_0:
   579  000FC0  6AEE               	clrf	postinc0,c
   580  000FC2  06E8               	decf	wreg,f,c
   581  000FC4  E1FD               	bnz	clear_0
   582                           
   583                           ; Clear objects allocated to COMRAM (12 bytes)
   584  000FC6  EE00  F047         	lfsr	0,__pbssCOMRAM
   585  000FCA  0E0C               	movlw	12
   586  000FCC                     clear_1:
   587  000FCC  6AEE               	clrf	postinc0,c
   588  000FCE  06E8               	decf	wreg,f,c
   589  000FD0  E1FD               	bnz	clear_1
   590  000FD2                     end_of_initialization:
   591                           	callstack 0
   592  000FD2                     __end_of__initialization:
   593                           	callstack 0
   594  000FD2  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   595  000FD4  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   596  000FD6  0100               	movlb	0
   597  000FD8  EF29  F000         	goto	_main	;jump to C main() function
   598                           
   599                           	psect	bssCOMRAM
   600  000047                     __pbssCOMRAM:
   601                           	callstack 0
   602  000047                     _width:
   603                           	callstack 0
   604  000047                     	ds	2
   605  000049                     _prec:
   606                           	callstack 0
   607  000049                     	ds	2
   608  00004B                     _flags:
   609                           	callstack 0
   610  00004B                     	ds	2
   611  00004D                     _timer0ReloadVal:
   612                           	callstack 0
   613  00004D                     	ds	2
   614  00004F                     _eusart1RxLastError:
   615                           	callstack 0
   616  00004F                     	ds	1
   617  000050                     _bufferIdx:
   618                           	callstack 0
   619  000050                     	ds	1
   620  000051                     _timerState:
   621                           	callstack 0
   622  000051                     	ds	1
   623  000052                     _fillBuffer:
   624                           	callstack 0
   625  000052                     	ds	1
   626                           
   627                           	psect	bssBANK0
   628  000060                     __pbssBANK0:
   629                           	callstack 0
   630  000060                     _adc_reading:
   631                           	callstack 0
   632  000060                     	ds	64
   633  0000A0                     _nout:
   634                           	callstack 0
   635  0000A0                     	ds	2
   636  0000A2                     _EUSART1_ErrorHandler:
   637                           	callstack 0
   638  0000A2                     	ds	2
   639  0000A4                     _EUSART1_OverrunErrorHandler:
   640                           	callstack 0
   641  0000A4                     	ds	2
   642  0000A6                     _EUSART1_FramingErrorHandler:
   643                           	callstack 0
   644  0000A6                     	ds	2
   645  0000A8                     _ADC_InterruptHandler:
   646                           	callstack 0
   647  0000A8                     	ds	2
   648  0000AA                     _TMR0_InterruptHandler:
   649                           	callstack 0
   650  0000AA                     	ds	2
   651  0000AC                     _samplesCollected:
   652                           	callstack 0
   653  0000AC                     	ds	1
   654  0000AD                     _dbuf:
   655                           	callstack 0
   656  0000AD                     	ds	32
   657                           
   658                           	psect	dataBANK0
   659  0000FB                     __pdataBANK0:
   660                           	callstack 0
   661  0000FB                     _thresholdRange:
   662                           	callstack 0
   663  0000FB                     	ds	2
   664                           
   665                           	psect	cstackBANK0
   666  0000CD                     __pcstackBANK0:
   667                           	callstack 0
   668  0000CD                     _dtoa$1387:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x0
   672  0000CD                     	ds	2
   673  0000CF                     dtoa@p:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x2
   677  0000CF                     	ds	2
   678  0000D1                     dtoa@w:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x4
   682  0000D1                     	ds	2
   683  0000D3                     dtoa@s:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x6
   687  0000D3                     	ds	2
   688  0000D5                     dtoa@n:
   689                           	callstack 0
   690                           
   691                           ; 8 bytes @ 0x8
   692  0000D5                     	ds	8
   693  0000DD                     dtoa@i:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x10
   697  0000DD                     	ds	2
   698  0000DF                     vfpfcnvrt@ll:
   699                           	callstack 0
   700                           
   701                           ; 8 bytes @ 0x12
   702  0000DF                     	ds	8
   703  0000E7                     vfpfcnvrt@c:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x1A
   707  0000E7                     	ds	1
   708  0000E8                     ?_vfprintf:
   709                           	callstack 0
   710  0000E8                     vfprintf@fp:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x1B
   714  0000E8                     	ds	2
   715  0000EA                     vfprintf@fmt:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x1D
   719  0000EA                     	ds	2
   720  0000EC                     vfprintf@ap:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x1F
   724  0000EC                     	ds	2
   725  0000EE                     ?_printf:
   726                           	callstack 0
   727  0000EE                     printf@fmt:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x21
   731  0000EE                     	ds	8
   732  0000F6                     printf@ap:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x29
   736  0000F6                     	ds	2
   737  0000F8                     main@cmd:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x2B
   741  0000F8                     	ds	1
   742  0000F9                     main@i_214:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x2C
   746  0000F9                     	ds	1
   747  0000FA                     main@i:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x2D
   751  0000FA                     	ds	1
   752                           
   753                           	psect	cstackCOMRAM
   754  000001                     __pcstackCOMRAM:
   755                           	callstack 0
   756  000001                     i2TMR0_WriteTimer@timerVal:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x0
   760  000001                     	ds	2
   761  000003                     ??_myTMR0ISR:
   762  000003                     
   763                           ; 1 bytes @ 0x2
   764  000003                     	ds	4
   765  000007                     myTMR0ISR@micReading:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x6
   769  000007                     	ds	1
   770  000008                     ??_INTERRUPT_InterruptManager:
   771                           
   772                           ; 1 bytes @ 0x7
   773  000008                     	ds	4
   774  00000C                     ?_strlen:
   775                           	callstack 0
   776  00000C                     ?___aodiv:
   777                           	callstack 0
   778  00000C                     ?___aomod:
   779                           	callstack 0
   780  00000C                     EUSART1_Write@txData:
   781                           	callstack 0
   782  00000C                     TMR0_WriteTimer@timerVal:
   783                           	callstack 0
   784  00000C                     TMR0_SetInterruptHandler@InterruptHandler:
   785                           	callstack 0
   786  00000C                     EUSART1_SetFramingErrorHandler@interruptHandler:
   787                           	callstack 0
   788  00000C                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   789                           	callstack 0
   790  00000C                     EUSART1_SetErrorHandler@interruptHandler:
   791                           	callstack 0
   792  00000C                     strlen@s:
   793                           	callstack 0
   794  00000C                     ___aodiv@dividend:
   795                           	callstack 0
   796  00000C                     ___aomod@dividend:
   797                           	callstack 0
   798                           
   799                           ; 8 bytes @ 0xB
   800  00000C                     	ds	1
   801  00000D                     putch@txData:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0xC
   805  00000D                     	ds	1
   806  00000E                     ??_TMR0_Initialize:
   807  00000E                     fputc@c:
   808                           	callstack 0
   809  00000E                     strlen@a:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0xD
   813  00000E                     	ds	2
   814  000010                     fputc@fp:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0xF
   818  000010                     	ds	2
   819  000012                     ??_fputc:
   820                           
   821                           ; 1 bytes @ 0x11
   822  000012                     	ds	2
   823  000014                     ___aodiv@divisor:
   824                           	callstack 0
   825  000014                     ___aomod@divisor:
   826                           	callstack 0
   827                           
   828                           ; 8 bytes @ 0x13
   829  000014                     	ds	3
   830  000017                     ?_ctoa:
   831                           	callstack 0
   832  000017                     ctoa@fp:
   833                           	callstack 0
   834  000017                     fputs@s:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x16
   838  000017                     	ds	2
   839  000019                     ctoa@c:
   840                           	callstack 0
   841  000019                     fputs@fp:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x18
   845  000019                     	ds	1
   846  00001A                     ??_ctoa:
   847                           
   848                           ; 1 bytes @ 0x19
   849  00001A                     	ds	1
   850  00001B                     fputs@c:
   851                           	callstack 0
   852  00001B                     ctoa@l:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x1A
   856  00001B                     	ds	1
   857  00001C                     ___aodiv@counter:
   858                           	callstack 0
   859  00001C                     ___aomod@counter:
   860                           	callstack 0
   861  00001C                     fputs@i:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x1B
   865  00001C                     	ds	1
   866  00001D                     ___aodiv@sign:
   867                           	callstack 0
   868  00001D                     ___aomod@sign:
   869                           	callstack 0
   870  00001D                     ctoa@w:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x1C
   874  00001D                     	ds	1
   875  00001E                     ?_abs:
   876                           	callstack 0
   877  00001E                     ?_pad:
   878                           	callstack 0
   879  00001E                     pad@fp:
   880                           	callstack 0
   881  00001E                     abs@a:
   882                           	callstack 0
   883  00001E                     ___aodiv@quotient:
   884                           	callstack 0
   885                           
   886                           ; 8 bytes @ 0x1D
   887  00001E                     	ds	2
   888  000020                     ??_abs:
   889  000020                     pad@buf:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x1F
   893  000020                     	ds	2
   894  000022                     pad@p:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x21
   898  000022                     	ds	2
   899  000024                     ??_pad:
   900                           
   901                           ; 1 bytes @ 0x23
   902  000024                     	ds	1
   903  000025                     pad@i:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x24
   907  000025                     	ds	2
   908  000027                     pad@w:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x26
   912  000027                     	ds	2
   913  000029                     ?_dtoa:
   914                           	callstack 0
   915  000029                     dtoa@fp:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x28
   919  000029                     	ds	2
   920  00002B                     dtoa@d:
   921                           	callstack 0
   922                           
   923                           ; 8 bytes @ 0x2A
   924  00002B                     	ds	8
   925  000033                     ??_dtoa:
   926                           
   927                           ; 1 bytes @ 0x32
   928  000033                     	ds	8
   929  00003B                     ?_vfpfcnvrt:
   930                           	callstack 0
   931  00003B                     vfpfcnvrt@fp:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x3A
   935  00003B                     	ds	2
   936  00003D                     vfpfcnvrt@fmt:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x3C
   940  00003D                     	ds	2
   941  00003F                     vfpfcnvrt@ap:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x3E
   945  00003F                     	ds	2
   946  000041                     ??_vfpfcnvrt:
   947                           
   948                           ; 1 bytes @ 0x40
   949  000041                     	ds	2
   950  000043                     vfprintf@cfmt:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x42
   954  000043                     	ds	2
   955  000045                     ??_main:
   956                           
   957                           ; 1 bytes @ 0x44
   958  000045                     	ds	2
   959                           
   960 ;;
   961 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   962 ;;
   963 ;; *************** function _main *****************
   964 ;; Defined at:
   965 ;;		line 45 in file "main.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  i               1   44[BANK0 ] unsigned char 
   970 ;;  i               1   45[BANK0 ] unsigned char 
   971 ;;  cmd             1   43[BANK0 ] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;Total ram usage:        5 bytes
   986 ;; Hardware stack levels required when called:   13
   987 ;; This function calls:
   988 ;;		_EUSART1_Read
   989 ;;		_EUSART1_is_rx_ready
   990 ;;		_SYSTEM_Initialize
   991 ;;		_TMR0_SetInterruptHandler
   992 ;;		_TMR0_WriteTimer
   993 ;;		_printf
   994 ;; This function is called by:
   995 ;;		Startup code after reset
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text0
  1000  000052                     __ptext0:
  1001                           	callstack 0
  1002  000052                     _main:
  1003                           	callstack 18
  1004  000052                     
  1005                           ;main.c: 47: ;main.c: 48:     for (;;) {;main.c: 50:             samplesCollected = 0;
  1006  000052  EC8C  F008         	call	_SYSTEM_Initialize	;wreg free
  1007  000056                     
  1008                           ;main.c: 55:             }
  1009  000056  0E00               	movlw	0
  1010  000058  6E0D               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1011  00005A  0E00               	movlw	0
  1012  00005C  6E0C               	movwf	TMR0_WriteTimer@timerVal^0,c
  1013  00005E  ECBE  F008         	call	_TMR0_WriteTimer	;wreg free
  1014  000062                     
  1015                           ;main.c: 56:             printf("\r\n");
  1016  000062  94F2               	bcf	242,2,c	;volatile
  1017  000064                     l33:
  1018  000064  A4F2               	btfss	242,2,c	;volatile
  1019  000066  EF37  F000         	goto	u1971
  1020  00006A  EF39  F000         	goto	u1970
  1021  00006E                     u1971:
  1022  00006E  EF32  F000         	goto	l33
  1023  000072                     u1970:
  1024  000072                     
  1025                           ;main.c: 59:         if ((EUSART1_is_rx_ready())) {
  1026  000072  0E52               	movlw	low _myTMR0ISR
  1027  000074  6E0C               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1028  000076  0E0B               	movlw	high _myTMR0ISR
  1029  000078  6E0D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1030  00007A  ECC3  F008         	call	_TMR0_SetInterruptHandler	;wreg free
  1031  00007E                     
  1032                           ;main.c: 60:             cmd = EUSART1_Read();
  1033  00007E  8EF2               	bsf	242,7,c	;volatile
  1034  000080                     
  1035                           ;main.c: 61:             switch (cmd) {
  1036  000080  8CF2               	bsf	242,6,c	;volatile
  1037  000082                     
  1038                           ;main.c: 63:                 case '?':
  1039  000082  0ED7               	movlw	low STR_1
  1040  000084  0100               	movlb	0	; () banked
  1041  000086  6FEE               	movwf	printf@fmt& (0+255),b
  1042  000088  0EFF               	movlw	high STR_1
  1043  00008A  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1044  00008C  EC56  F008         	call	_printf	;wreg free
  1045  000090                     
  1046                           ;main.c: 64:                     printf("------------------------------\r\n");
  1047  000090  0E42               	movlw	low STR_2
  1048  000092  0100               	movlb	0	; () banked
  1049  000094  6FEE               	movwf	printf@fmt& (0+255),b
  1050  000096  0EFF               	movlw	high STR_2
  1051  000098  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1052  00009A  EC56  F008         	call	_printf	;wreg free
  1053  00009E                     
  1054                           ;main.c: 65:                     printf("?: Help menu\r\n");
  1055  00009E  0EE2               	movlw	low STR_3
  1056  0000A0  0100               	movlb	0	; () banked
  1057  0000A2  6FEE               	movwf	printf@fmt& (0+255),b
  1058  0000A4  0EFF               	movlw	high STR_3
  1059  0000A6  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1060  0000A8  EC56  F008         	call	_printf	;wreg free
  1061  0000AC                     
  1062                           ;main.c: 66:                     printf("o: k\r\n");
  1063  0000AC  0EFC               	movlw	low STR_4
  1064  0000AE  0100               	movlb	0	; () banked
  1065  0000B0  6FEE               	movwf	printf@fmt& (0+255),b
  1066  0000B2  0EFF               	movlw	high STR_4
  1067  0000B4  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1068  0000B6  EC56  F008         	call	_printf	;wreg free
  1069  0000BA                     
  1070                           ;main.c: 70:                     printf("f: gather 512 samples from the microphone and c
      +                          alculate the frequency\r\n");
  1071  0000BA  82C2               	bsf	194,1,c	;volatile
  1072  0000BC                     l36:
  1073  0000BC  B2C2               	btfsc	194,1,c	;volatile
  1074  0000BE  EF63  F000         	goto	u1981
  1075  0000C2  EF65  F000         	goto	u1980
  1076  0000C6                     u1981:
  1077  0000C6  EF5E  F000         	goto	l36
  1078  0000CA                     u1980:
  1079  0000CA                     l2676:
  1080                           
  1081                           ;main.c: 75: 
  1082  0000CA  0100               	movlb	0	; () banked
  1083  0000CC  51AC               	movf	_samplesCollected& (0+255),w,b
  1084  0000CE  B4D8               	btfsc	status,2,c
  1085  0000D0  EF6C  F000         	goto	u1991
  1086  0000D4  EF6E  F000         	goto	u1990
  1087  0000D8                     u1991:
  1088  0000D8  EF9A  F000         	goto	l2696
  1089  0000DC                     u1990:
  1090  0000DC                     
  1091                           ; BSR set to: 0
  1092                           ;main.c: 76: 
  1093  0000DC  0E00               	movlw	0
  1094  0000DE  6FAC               	movwf	_samplesCollected& (0+255),b
  1095  0000E0                     
  1096                           ; BSR set to: 0
  1097                           ;main.c: 77: 
  1098  0000E0  0EC1               	movlw	low STR_5
  1099  0000E2  6FEE               	movwf	printf@fmt& (0+255),b
  1100  0000E4  0EFE               	movlw	high STR_5
  1101  0000E6  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1102  0000E8  EC56  F008         	call	_printf	;wreg free
  1103  0000EC                     
  1104                           ;main.c: 79:                     printf(" k\r\n>");
  1105  0000EC  0E00               	movlw	0
  1106  0000EE  0100               	movlb	0	; () banked
  1107  0000F0  6FF9               	movwf	main@i_214& (0+255),b
  1108  0000F2                     l2688:
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;main.c: 80:                     break;
  1112  0000F2  0EF8               	movlw	low STR_6
  1113  0000F4  6FEE               	movwf	printf@fmt& (0+255),b
  1114  0000F6  0EFF               	movlw	high STR_6
  1115  0000F8  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1116  0000FA  0E60               	movlw	low _adc_reading
  1117  0000FC  25F9               	addwf	main@i_214& (0+255),w,b
  1118  0000FE  6ED9               	movwf	fsr2l,c
  1119  000100  6ADA               	clrf	fsr2h,c
  1120  000102  0E00               	movlw	high _adc_reading
  1121  000104  22DA               	addwfc	fsr2h,f,c
  1122  000106  50DF               	movf	indf2,w,c
  1123  000108  6E45               	movwf	??_main^0,c
  1124  00010A  5045               	movf	??_main^0,w,c
  1125  00010C  6FF0               	movwf	(?_printf+2)& (0+255),b
  1126  00010E  6BF1               	clrf	(?_printf+3)& (0+255),b
  1127  000110  EC56  F008         	call	_printf	;wreg free
  1128  000114                     
  1129                           ;main.c: 81: 
  1130  000114  0100               	movlb	0	; () banked
  1131  000116  2BF9               	incf	main@i_214& (0+255),f,b
  1132  000118                     
  1133                           ; BSR set to: 0
  1134  000118  0E3F               	movlw	63
  1135  00011A  65F9               	cpfsgt	main@i_214& (0+255),b
  1136  00011C  EF92  F000         	goto	u2001
  1137  000120  EF94  F000         	goto	u2000
  1138  000124                     u2001:
  1139  000124  EF79  F000         	goto	l2688
  1140  000128                     u2000:
  1141  000128                     
  1142                           ; BSR set to: 0
  1143                           ;main.c: 82: 
  1144  000128  0EF3               	movlw	low (STR_5+50)
  1145  00012A  6FEE               	movwf	printf@fmt& (0+255),b
  1146  00012C  0EFE               	movlw	high (STR_5+50)
  1147  00012E  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1148  000130  EC56  F008         	call	_printf	;wreg free
  1149  000134                     l2696:
  1150                           
  1151                           ;main.c: 85:                 case 'Z':
  1152  000134  ECAF  F008         	call	_EUSART1_is_rx_ready	;wreg free
  1153  000138  0900               	iorlw	0
  1154  00013A  B4D8               	btfsc	status,2,c
  1155  00013C  EFA2  F000         	goto	u2011
  1156  000140  EFA4  F000         	goto	u2010
  1157  000144                     u2011:
  1158  000144  EF65  F000         	goto	l2676
  1159  000148                     u2010:
  1160  000148                     
  1161                           ;main.c: 86:                     for (i = 0; i < 40; i++) printf("\n");
  1162  000148  EC6A  F008         	call	_EUSART1_Read	;wreg free
  1163  00014C  0100               	movlb	0	; () banked
  1164  00014E  6FF8               	movwf	main@cmd& (0+255),b
  1165                           
  1166                           ;main.c: 87:                     __asm("reset");
  1167  000150  EF7D  F001         	goto	l2746
  1168  000154                     l2700:
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;main.c: 90: 
  1172  000154  0E21               	movlw	low STR_8
  1173  000156  6FEE               	movwf	printf@fmt& (0+255),b
  1174  000158  0EFF               	movlw	high STR_8
  1175  00015A  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1176  00015C  EC56  F008         	call	_printf	;wreg free
  1177                           
  1178                           ;main.c: 91: 
  1179  000160  0EC8               	movlw	low STR_9
  1180  000162  0100               	movlb	0	; () banked
  1181  000164  6FEE               	movwf	printf@fmt& (0+255),b
  1182  000166  0EFF               	movlw	high STR_9
  1183  000168  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1184  00016A  EC56  F008         	call	_printf	;wreg free
  1185                           
  1186                           ;main.c: 92: 
  1187  00016E  0EEB               	movlw	low STR_10
  1188  000170  0100               	movlb	0	; () banked
  1189  000172  6FEE               	movwf	printf@fmt& (0+255),b
  1190  000174  0EFF               	movlw	high STR_10
  1191  000176  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1192  000178  EC56  F008         	call	_printf	;wreg free
  1193                           
  1194                           ;main.c: 93:                 case 'z':
  1195  00017C  0EA2               	movlw	low STR_11
  1196  00017E  0100               	movlb	0	; () banked
  1197  000180  6FEE               	movwf	printf@fmt& (0+255),b
  1198  000182  0EFF               	movlw	high STR_11
  1199  000184  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1200  000186  EC56  F008         	call	_printf	;wreg free
  1201                           
  1202                           ;main.c: 94:                     for (i = 0; i < 40; i++) printf("\n>");
  1203  00018A  0E73               	movlw	low STR_12
  1204  00018C  0100               	movlb	0	; () banked
  1205  00018E  6FEE               	movwf	printf@fmt& (0+255),b
  1206  000190  0EFF               	movlw	high STR_12
  1207  000192  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1208  000194  EC56  F008         	call	_printf	;wreg free
  1209                           
  1210                           ;main.c: 95:                     break;
  1211  000198  0EF6               	movlw	low STR_13
  1212  00019A  0100               	movlb	0	; () banked
  1213  00019C  6FEE               	movwf	printf@fmt& (0+255),b
  1214  00019E  0EFE               	movlw	high STR_13
  1215  0001A0  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1216  0001A2  EC56  F008         	call	_printf	;wreg free
  1217                           
  1218                           ;main.c: 96: 
  1219  0001A6  0E79               	movlw	low STR_14
  1220  0001A8  0100               	movlb	0	; () banked
  1221  0001AA  6FEE               	movwf	printf@fmt& (0+255),b
  1222  0001AC  0EFE               	movlw	high STR_14
  1223  0001AE  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1224  0001B0  EC56  F008         	call	_printf	;wreg free
  1225                           
  1226                           ;main.c: 98:                     thresholdRange += 5;
  1227  0001B4  0E21               	movlw	low STR_8
  1228  0001B6  0100               	movlb	0	; () banked
  1229  0001B8  6FEE               	movwf	printf@fmt& (0+255),b
  1230  0001BA  0EFF               	movlw	high STR_8
  1231  0001BC  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1232  0001BE  EC56  F008         	call	_printf	;wreg free
  1233                           
  1234                           ;main.c: 99:                     printf("Volume range: %d - %d\r\n", 128 - thresholdRang
      +                          e, 128 + thresholdRange);
  1235  0001C2  EF65  F000         	goto	l2676
  1236  0001C6                     l2702:
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;main.c: 105:                     }
  1240  0001C6  0EF2               	movlw	low STR_16
  1241  0001C8  6FEE               	movwf	printf@fmt& (0+255),b
  1242  0001CA  0EFF               	movlw	high STR_16
  1243  0001CC  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1244  0001CE  EC56  F008         	call	_printf	;wreg free
  1245                           
  1246                           ;main.c: 106:                     else{
  1247  0001D2  EF65  F000         	goto	l2676
  1248  0001D6                     l2704:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;main.c: 112:                 case 'f':
  1252  0001D6  0E00               	movlw	0
  1253  0001D8  6FFA               	movwf	main@i& (0+255),b
  1254  0001DA                     l2710:
  1255                           
  1256                           ; BSR set to: 0
  1257  0001DA  0EF4               	movlw	low (STR_5+51)
  1258  0001DC  6FEE               	movwf	printf@fmt& (0+255),b
  1259  0001DE  0EFE               	movlw	high (STR_5+51)
  1260  0001E0  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1261  0001E2  EC56  F008         	call	_printf	;wreg free
  1262  0001E6  0100               	movlb	0	; () banked
  1263  0001E8  2BFA               	incf	main@i& (0+255),f,b
  1264  0001EA                     
  1265                           ; BSR set to: 0
  1266  0001EA  0E27               	movlw	39
  1267  0001EC  65FA               	cpfsgt	main@i& (0+255),b
  1268  0001EE  EFFB  F000         	goto	u2021
  1269  0001F2  EFFD  F000         	goto	u2020
  1270  0001F6                     u2021:
  1271  0001F6  EFED  F000         	goto	l2710
  1272  0001FA                     u2020:
  1273  0001FA                     
  1274                           ; BSR set to: 0
  1275  0001FA  00FF               	reset		;# 
  1276                           
  1277                           ;main.c: 114:                     fillBuffer = 1;
  1278  0001FC  EF65  F000         	goto	l2676
  1279  000200                     l2716:
  1280                           
  1281                           ; BSR set to: 0
  1282  000200  0E00               	movlw	0
  1283  000202  6FFA               	movwf	main@i& (0+255),b
  1284  000204                     l2722:
  1285                           
  1286                           ; BSR set to: 0
  1287  000204  0EF5               	movlw	low (STR_16+3)
  1288  000206  6FEE               	movwf	printf@fmt& (0+255),b
  1289  000208  0EFF               	movlw	high (STR_16+3)
  1290  00020A  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1291  00020C  EC56  F008         	call	_printf	;wreg free
  1292  000210  0100               	movlb	0	; () banked
  1293  000212  2BFA               	incf	main@i& (0+255),f,b
  1294  000214                     
  1295                           ; BSR set to: 0
  1296  000214  0E27               	movlw	39
  1297  000216  65FA               	cpfsgt	main@i& (0+255),b
  1298  000218  EF10  F001         	goto	u2031
  1299  00021C  EF12  F001         	goto	u2030
  1300  000220                     u2031:
  1301  000220  EF02  F001         	goto	l2722
  1302  000224                     u2030:
  1303  000224  EF65  F000         	goto	l2676
  1304  000228                     l2728:
  1305                           
  1306                           ; BSR set to: 0
  1307  000228  0E05               	movlw	5
  1308  00022A  27FB               	addwf	_thresholdRange& (0+255),f,b
  1309  00022C  0E00               	movlw	0
  1310  00022E  23FC               	addwfc	(_thresholdRange+1)& (0+255),f,b
  1311  000230                     
  1312                           ; BSR set to: 0
  1313  000230  0E5B               	movlw	low STR_19
  1314  000232  6FEE               	movwf	printf@fmt& (0+255),b
  1315  000234  0EFF               	movlw	high STR_19
  1316  000236  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1317  000238  51FB               	movf	_thresholdRange& (0+255),w,b
  1318  00023A  0880               	sublw	128
  1319  00023C  6FF0               	movwf	(?_printf+2)& (0+255),b
  1320  00023E  51FC               	movf	(_thresholdRange+1)& (0+255),w,b
  1321  000240  A0D8               	btfss	status,0,c
  1322  000242  2AE8               	incf	wreg,f,c
  1323  000244  0800               	sublw	0
  1324  000246  6FF1               	movwf	(?_printf+3)& (0+255),b
  1325  000248  0E80               	movlw	128
  1326  00024A  25FB               	addwf	_thresholdRange& (0+255),w,b
  1327  00024C  6FF2               	movwf	(?_printf+4)& (0+255),b
  1328  00024E  0E00               	movlw	0
  1329  000250  21FC               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1330  000252  6FF3               	movwf	(?_printf+5)& (0+255),b
  1331  000254  EC56  F008         	call	_printf	;wreg free
  1332  000258  EF65  F000         	goto	l2676
  1333  00025C                     l2732:
  1334                           
  1335                           ; BSR set to: 0
  1336  00025C  51FB               	movf	_thresholdRange& (0+255),w,b
  1337  00025E  11FC               	iorwf	(_thresholdRange+1)& (0+255),w,b
  1338  000260  B4D8               	btfsc	status,2,c
  1339  000262  EF35  F001         	goto	u2041
  1340  000266  EF37  F001         	goto	u2040
  1341  00026A                     u2041:
  1342  00026A  EF51  F001         	goto	l2738
  1343  00026E                     u2040:
  1344  00026E                     
  1345                           ; BSR set to: 0
  1346  00026E  0E05               	movlw	5
  1347  000270  5FFB               	subwf	_thresholdRange& (0+255),f,b
  1348  000272  0E00               	movlw	0
  1349  000274  5BFC               	subwfb	(_thresholdRange+1)& (0+255),f,b
  1350  000276                     
  1351                           ; BSR set to: 0
  1352  000276  0E5B               	movlw	low STR_19
  1353  000278  6FEE               	movwf	printf@fmt& (0+255),b
  1354  00027A  0EFF               	movlw	high STR_19
  1355  00027C  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1356  00027E  51FB               	movf	_thresholdRange& (0+255),w,b
  1357  000280  0880               	sublw	128
  1358  000282  6FF0               	movwf	(?_printf+2)& (0+255),b
  1359  000284  51FC               	movf	(_thresholdRange+1)& (0+255),w,b
  1360  000286  A0D8               	btfss	status,0,c
  1361  000288  2AE8               	incf	wreg,f,c
  1362  00028A  0800               	sublw	0
  1363  00028C  6FF1               	movwf	(?_printf+3)& (0+255),b
  1364  00028E  0E80               	movlw	128
  1365  000290  25FB               	addwf	_thresholdRange& (0+255),w,b
  1366  000292  6FF2               	movwf	(?_printf+4)& (0+255),b
  1367  000294  0E00               	movlw	0
  1368  000296  21FC               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1369  000298  6FF3               	movwf	(?_printf+5)& (0+255),b
  1370  00029A  EC56  F008         	call	_printf	;wreg free
  1371  00029E  EF65  F000         	goto	l2676
  1372  0002A2                     l2738:
  1373                           
  1374                           ; BSR set to: 0
  1375  0002A2  0E5B               	movlw	low STR_19
  1376  0002A4  6FEE               	movwf	printf@fmt& (0+255),b
  1377  0002A6  0EFF               	movlw	high STR_19
  1378  0002A8  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1379  0002AA  51FB               	movf	_thresholdRange& (0+255),w,b
  1380  0002AC  0880               	sublw	128
  1381  0002AE  6FF0               	movwf	(?_printf+2)& (0+255),b
  1382  0002B0  51FC               	movf	(_thresholdRange+1)& (0+255),w,b
  1383  0002B2  A0D8               	btfss	status,0,c
  1384  0002B4  2AE8               	incf	wreg,f,c
  1385  0002B6  0800               	sublw	0
  1386  0002B8  6FF1               	movwf	(?_printf+3)& (0+255),b
  1387  0002BA  0E80               	movlw	128
  1388  0002BC  25FB               	addwf	_thresholdRange& (0+255),w,b
  1389  0002BE  6FF2               	movwf	(?_printf+4)& (0+255),b
  1390  0002C0  0E00               	movlw	0
  1391  0002C2  21FC               	addwfc	(_thresholdRange+1)& (0+255),w,b
  1392  0002C4  6FF3               	movwf	(?_printf+5)& (0+255),b
  1393  0002C6  EC56  F008         	call	_printf	;wreg free
  1394  0002CA  0E8B               	movlw	low STR_22
  1395  0002CC  0100               	movlb	0	; () banked
  1396  0002CE  6FEE               	movwf	printf@fmt& (0+255),b
  1397  0002D0  0EFF               	movlw	high STR_22
  1398  0002D2  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1399  0002D4  EC56  F008         	call	_printf	;wreg free
  1400  0002D8  EF65  F000         	goto	l2676
  1401  0002DC                     l2740:
  1402                           
  1403                           ; BSR set to: 0
  1404  0002DC  0E01               	movlw	1
  1405  0002DE  6E52               	movwf	_fillBuffer^0,c
  1406  0002E0  EF65  F000         	goto	l2676
  1407  0002E4                     l2742:
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;main.c: 179:                     printf("Unknown key %c\r\n", cmd);
  1411  0002E4  0EB7               	movlw	low STR_23
  1412  0002E6  6FEE               	movwf	printf@fmt& (0+255),b
  1413  0002E8  0EFF               	movlw	high STR_23
  1414  0002EA  6FEF               	movwf	(printf@fmt+1)& (0+255),b
  1415  0002EC  C0F8  F0F0         	movff	main@cmd,?_printf+2
  1416  0002F0  6BF1               	clrf	(?_printf+3)& (0+255),b
  1417  0002F2  EC56  F008         	call	_printf	;wreg free
  1418                           
  1419                           ;main.c: 180:                     break;
  1420  0002F6  EF65  F000         	goto	l2676
  1421  0002FA                     l2746:
  1422                           
  1423                           ; BSR set to: 0
  1424  0002FA  51F8               	movf	main@cmd& (0+255),w,b
  1425  0002FC  6E45               	movwf	??_main^0,c
  1426  0002FE  6A46               	clrf	(??_main+1)^0,c
  1427                           
  1428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1429                           ; Switch size 1, requested type "simple"
  1430                           ; Number of cases is 1, Range of values is 0 to 0
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte            4     3 (average)
  1434                           ;	Chosen strategy is simple_byte
  1435  000300  5046               	movf	(??_main+1)^0,w,c
  1436  000302  0A00               	xorlw	0	; case 0
  1437  000304  B4D8               	btfsc	status,2,c
  1438  000306  EF87  F001         	goto	l2804
  1439  00030A  EF72  F001         	goto	l2742
  1440  00030E                     l2804:
  1441                           
  1442                           ; BSR set to: 0
  1443                           ; Switch size 1, requested type "simple"
  1444                           ; Number of cases is 7, Range of values is 63 to 122
  1445                           ; switch strategies available:
  1446                           ; Name         Instructions Cycles
  1447                           ; simple_byte           22    12 (average)
  1448                           ;	Chosen strategy is simple_byte
  1449  00030E  5045               	movf	??_main^0,w,c
  1450  000310  0A3F               	xorlw	63	; case 63
  1451  000312  B4D8               	btfsc	status,2,c
  1452  000314  EFAA  F000         	goto	l2700
  1453  000318  0A6B               	xorlw	107	; case 84
  1454  00031A  B4D8               	btfsc	status,2,c
  1455  00031C  EF14  F001         	goto	l2728
  1456  000320  0A0E               	xorlw	14	; case 90
  1457  000322  B4D8               	btfsc	status,2,c
  1458  000324  EFEB  F000         	goto	l2704
  1459  000328  0A3C               	xorlw	60	; case 102
  1460  00032A  B4D8               	btfsc	status,2,c
  1461  00032C  EF6E  F001         	goto	l2740
  1462  000330  0A09               	xorlw	9	; case 111
  1463  000332  B4D8               	btfsc	status,2,c
  1464  000334  EFE3  F000         	goto	l2702
  1465  000338  0A1B               	xorlw	27	; case 116
  1466  00033A  B4D8               	btfsc	status,2,c
  1467  00033C  EF2E  F001         	goto	l2732
  1468  000340  0A0E               	xorlw	14	; case 122
  1469  000342  B4D8               	btfsc	status,2,c
  1470  000344  EF00  F001         	goto	l2716
  1471  000348  EF72  F001         	goto	l2742
  1472  00034C  EF27  F000         	goto	start
  1473  000350                     __end_of_main:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _printf *****************
  1477 ;; Defined at:
  1478 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  1481 ;;		 -> STR_23(17), STR_22(23), STR_21(24), STR_20(24), 
  1482 ;;		 -> STR_19(24), STR_18(3), STR_17(2), STR_16(6), 
  1483 ;;		 -> STR_15(33), STR_14(72), STR_13(43), STR_12(24), 
  1484 ;;		 -> STR_11(21), STR_10(7), STR_9(15), STR_8(33), 
  1485 ;;		 -> STR_7(3), STR_6(4), STR_5(53), STR_4(3), 
  1486 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  ap              2   41[BANK0 ] PTR void [1]
  1489 ;;		 -> ?_printf(2), 
  1490 ;;  ret             2    0        int 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  2   33[BANK0 ] int 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:       10 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:   12
  1507 ;; This function calls:
  1508 ;;		_vfprintf
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text1
  1515  0010AC                     __ptext1:
  1516                           	callstack 0
  1517  0010AC                     _printf:
  1518                           	callstack 18
  1519  0010AC  0EF0               	movlw	low (?_printf+2)
  1520  0010AE  0100               	movlb	0	; () banked
  1521  0010B0  6FF6               	movwf	printf@ap& (0+255),b
  1522  0010B2  0E00               	movlw	high (?_printf+2)
  1523  0010B4  6FF7               	movwf	(printf@ap+1)& (0+255),b
  1524  0010B6                     
  1525                           ; BSR set to: 0
  1526  0010B6  0E00               	movlw	0
  1527  0010B8  6FE8               	movwf	vfprintf@fp& (0+255),b
  1528  0010BA  0E00               	movlw	0
  1529  0010BC  6FE9               	movwf	(vfprintf@fp+1)& (0+255),b
  1530  0010BE  C0EE  F0EA         	movff	printf@fmt,vfprintf@fmt
  1531  0010C2  C0EF  F0EB         	movff	printf@fmt+1,vfprintf@fmt+1
  1532  0010C6  0EF6               	movlw	low printf@ap
  1533  0010C8  6FEC               	movwf	vfprintf@ap& (0+255),b
  1534  0010CA  0E00               	movlw	high printf@ap
  1535  0010CC  6FED               	movwf	(vfprintf@ap+1)& (0+255),b
  1536  0010CE  EC3E  F007         	call	_vfprintf	;wreg free
  1537  0010D2  0012               	return		;funcret
  1538  0010D4                     __end_of_printf:
  1539                           	callstack 0
  1540                           
  1541 ;; *************** function _vfprintf *****************
  1542 ;; Defined at:
  1543 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  1546 ;;		 -> NULL(0), 
  1547 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  1548 ;;		 -> STR_23(17), STR_22(23), STR_21(24), STR_20(24), 
  1549 ;;		 -> STR_19(24), STR_18(3), STR_17(2), STR_16(6), 
  1550 ;;		 -> STR_15(33), STR_14(72), STR_13(43), STR_12(24), 
  1551 ;;		 -> STR_11(21), STR_10(7), STR_9(15), STR_8(33), 
  1552 ;;		 -> STR_7(3), STR_6(4), STR_5(53), STR_4(3), 
  1553 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  1554 ;;  ap              2   31[BANK0 ] PTR PTR void 
  1555 ;;		 -> printf@ap(2), 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  cfmt            2   66[COMRAM] PTR unsigned char 
  1558 ;;		 -> STR_23(17), STR_22(23), STR_21(24), STR_20(24), 
  1559 ;;		 -> STR_19(24), STR_18(3), STR_17(2), STR_16(6), 
  1560 ;;		 -> STR_15(33), STR_14(72), STR_13(43), STR_12(24), 
  1561 ;;		 -> STR_11(21), STR_10(7), STR_9(15), STR_8(33), 
  1562 ;;		 -> STR_7(3), STR_6(4), STR_5(53), STR_4(3), 
  1563 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  2   27[BANK0 ] int 
  1566 ;; Registers used:
  1567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1573 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;Total ram usage:        8 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:   11
  1580 ;; This function calls:
  1581 ;;		_vfpfcnvrt
  1582 ;; This function is called by:
  1583 ;;		_printf
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text2
  1588  000E7C                     __ptext2:
  1589                           	callstack 0
  1590  000E7C                     _vfprintf:
  1591                           	callstack 18
  1592  000E7C                     
  1593                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1594  000E7C  C0EA  F043         	movff	vfprintf@fmt,vfprintf@cfmt
  1595  000E80  C0EB  F044         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1596  000E84                     
  1597                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1598  000E84  0E00               	movlw	0
  1599  000E86  0100               	movlb	0	; () banked
  1600  000E88  6FA1               	movwf	(_nout+1)& (0+255),b
  1601  000E8A  0E00               	movlw	0
  1602  000E8C  6FA0               	movwf	_nout& (0+255),b
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1605  000E8E  EF5C  F007         	goto	l2646
  1606  000E92                     l2644:
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1610  000E92  C0E8  F03B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1611  000E96  C0E9  F03C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1612  000E9A  0E43               	movlw	low vfprintf@cfmt
  1613  000E9C  6E3D               	movwf	vfpfcnvrt@fmt^0,c
  1614  000E9E  0E00               	movlw	high vfprintf@cfmt
  1615  000EA0  6E3E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1616  000EA2  C0EC  F03F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1617  000EA6  C0ED  F040         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1618  000EAA  EC19  F003         	call	_vfpfcnvrt	;wreg free
  1619  000EAE  503B               	movf	?_vfpfcnvrt^0,w,c
  1620  000EB0  0100               	movlb	0	; () banked
  1621  000EB2  27A0               	addwf	_nout& (0+255),f,b
  1622  000EB4  503C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1623  000EB6  23A1               	addwfc	(_nout+1)& (0+255),f,b
  1624  000EB8                     l2646:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1628  000EB8  C043  FFF6         	movff	vfprintf@cfmt,tblptrl
  1629  000EBC  C044  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1630  000EC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1631  000EC0  6AF8               	clrf	tblptru,c
  1632  000EC2                     	endif
  1633  000EC2                     	if	0	;tblptru may be non-zero
  1634  000EC2                     	endif
  1635  000EC2  0008               	tblrd		*
  1636  000EC4  50F5               	movf	tablat,w,c
  1637  000EC6  0900               	iorlw	0
  1638  000EC8  A4D8               	btfss	status,2,c
  1639  000ECA  EF69  F007         	goto	u1961
  1640  000ECE  EF6B  F007         	goto	u1960
  1641  000ED2                     u1961:
  1642  000ED2  EF49  F007         	goto	l2644
  1643  000ED6                     u1960:
  1644  000ED6                     
  1645                           ; BSR set to: 0
  1646                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1647  000ED6  C0A0  F0E8         	movff	_nout,?_vfprintf
  1648  000EDA  C0A1  F0E9         	movff	_nout+1,?_vfprintf+1
  1649  000EDE                     
  1650                           ; BSR set to: 0
  1651  000EDE  0012               	return		;funcret
  1652  000EE0                     __end_of_vfprintf:
  1653                           	callstack 0
  1654                           
  1655 ;; *************** function _vfpfcnvrt *****************
  1656 ;; Defined at:
  1657 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  fp              2   58[COMRAM] PTR struct _IO_FILE
  1660 ;;		 -> NULL(0), 
  1661 ;;  fmt             2   60[COMRAM] PTR PTR unsigned char 
  1662 ;;		 -> vfprintf@cfmt(2), 
  1663 ;;  ap              2   62[COMRAM] PTR PTR void 
  1664 ;;		 -> printf@ap(2), 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  ll              8   18[BANK0 ] long long 
  1667 ;;  llu             8    0        unsigned long long 
  1668 ;;  f               4    0        unsigned long long 
  1669 ;;  vp              3    0        PTR void 
  1670 ;;  ct              3    0        unsigned char [3]
  1671 ;;  cp              3    0        PTR unsigned char 
  1672 ;;  i               2    0        int 
  1673 ;;  done            2    0        int 
  1674 ;;  c               1   26[BANK0 ] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  2   58[COMRAM] int 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1684 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;Total ram usage:       17 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:   10
  1691 ;; This function calls:
  1692 ;;		_ctoa
  1693 ;;		_dtoa
  1694 ;;		_fputc
  1695 ;; This function is called by:
  1696 ;;		_vfprintf
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text3
  1701  000632                     __ptext3:
  1702                           	callstack 0
  1703  000632                     _vfpfcnvrt:
  1704                           	callstack 18
  1705  000632                     
  1706                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1707  000632  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1708  000636  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1709  00063A  CFDE FFF6          	movff	postinc2,tblptrl
  1710  00063E  CFDD FFF7          	movff	postdec2,tblptrh
  1711  000642                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1712  000642  6AF8               	clrf	tblptru,c
  1713  000644                     	endif
  1714  000644                     	if	0	;tblptru may be non-zero
  1715  000644                     	endif
  1716  000644  0008               	tblrd		*
  1717  000646  50F5               	movf	tablat,w,c
  1718  000648  0A25               	xorlw	37
  1719  00064A  A4D8               	btfss	status,2,c
  1720  00064C  EF2A  F003         	goto	u1911
  1721  000650  EF2C  F003         	goto	u1910
  1722  000654                     u1911:
  1723  000654  EF16  F004         	goto	l2632
  1724  000658                     u1910:
  1725  000658                     
  1726                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1727  000658  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1728  00065C  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1729  000660  2ADE               	incf	postinc2,f,c
  1730  000662  0E00               	movlw	0
  1731  000664  22DD               	addwfc	postdec2,f,c
  1732  000666                     
  1733                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1734  000666  0E00               	movlw	0
  1735  000668  6E48               	movwf	(_width+1)^0,c
  1736  00066A  0E00               	movlw	0
  1737  00066C  6E47               	movwf	_width^0,c
  1738  00066E  C047  F04B         	movff	_width,_flags
  1739  000672  C048  F04C         	movff	_width+1,_flags+1
  1740  000676                     
  1741                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1742  000676  6849               	setf	_prec^0,c
  1743  000678  684A               	setf	(_prec+1)^0,c
  1744  00067A                     
  1745                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  1746  00067A  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1747  00067E  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1748  000682  CFDE FFF6          	movff	postinc2,tblptrl
  1749  000686  CFDD FFF7          	movff	postdec2,tblptrh
  1750  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1751  00068A  6AF8               	clrf	tblptru,c
  1752  00068C                     	endif
  1753  00068C                     	if	0	;tblptru may be non-zero
  1754  00068C                     	endif
  1755  00068C  0008               	tblrd		*
  1756  00068E  50F5               	movf	tablat,w,c
  1757  000690  0A63               	xorlw	99
  1758  000692  A4D8               	btfss	status,2,c
  1759  000694  EF4E  F003         	goto	u1921
  1760  000698  EF50  F003         	goto	u1920
  1761  00069C                     u1921:
  1762  00069C  EF78  F003         	goto	l2606
  1763  0006A0                     u1920:
  1764  0006A0                     
  1765                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  1766  0006A0  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1767  0006A4  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1768  0006A8  2ADE               	incf	postinc2,f,c
  1769  0006AA  0E00               	movlw	0
  1770  0006AC  22DD               	addwfc	postdec2,f,c
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1773  0006AE  C03F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1774  0006B2  C040  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1775  0006B6  CFDF F041          	movff	indf2,??_vfpfcnvrt
  1776  0006BA  0E02               	movlw	2
  1777  0006BC  26DE               	addwf	postinc2,f,c
  1778  0006BE  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  1779  0006C2  0E00               	movlw	0
  1780  0006C4  22DD               	addwfc	postdec2,f,c
  1781  0006C6  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1782  0006CA  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1783  0006CE  50DF               	movf	indf2,w,c
  1784  0006D0  0100               	movlb	0	; () banked
  1785  0006D2  6FE7               	movwf	vfpfcnvrt@c& (0+255),b
  1786  0006D4                     
  1787                           ; BSR set to: 0
  1788                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  1789  0006D4  C03B  F017         	movff	vfpfcnvrt@fp,ctoa@fp
  1790  0006D8  C03C  F018         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1791  0006DC  C0E7  F019         	movff	vfpfcnvrt@c,ctoa@c
  1792  0006E0  EC28  F006         	call	_ctoa	;wreg free
  1793  0006E4  C017  F03B         	movff	?_ctoa,?_vfpfcnvrt
  1794  0006E8  C018  F03C         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1795  0006EC  EF32  F004         	goto	l1091
  1796  0006F0                     l2606:
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1799  0006F0  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1800  0006F4  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1801  0006F8  CFDE FFF6          	movff	postinc2,tblptrl
  1802  0006FC  CFDD FFF7          	movff	postdec2,tblptrh
  1803  000700                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1804  000700  6AF8               	clrf	tblptru,c
  1805  000702                     	endif
  1806  000702                     	if	0	;tblptru may be non-zero
  1807  000702                     	endif
  1808  000702  0008               	tblrd		*
  1809  000704  50F5               	movf	tablat,w,c
  1810  000706  0A64               	xorlw	100
  1811  000708  B4D8               	btfsc	status,2,c
  1812  00070A  EF89  F003         	goto	u1931
  1813  00070E  EF8B  F003         	goto	u1930
  1814  000712                     u1931:
  1815  000712  EF9E  F003         	goto	l2610
  1816  000716                     u1930:
  1817  000716  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1818  00071A  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1819  00071E  CFDE FFF6          	movff	postinc2,tblptrl
  1820  000722  CFDD FFF7          	movff	postdec2,tblptrh
  1821  000726                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1822  000726  6AF8               	clrf	tblptru,c
  1823  000728                     	endif
  1824  000728                     	if	0	;tblptru may be non-zero
  1825  000728                     	endif
  1826  000728  0008               	tblrd		*
  1827  00072A  50F5               	movf	tablat,w,c
  1828  00072C  0A69               	xorlw	105
  1829  00072E  A4D8               	btfss	status,2,c
  1830  000730  EF9C  F003         	goto	u1941
  1831  000734  EF9E  F003         	goto	u1940
  1832  000738                     u1941:
  1833  000738  EFDF  F003         	goto	l2616
  1834  00073C                     u1940:
  1835  00073C                     l2610:
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1838  00073C  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1839  000740  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1840  000744  2ADE               	incf	postinc2,f,c
  1841  000746  0E00               	movlw	0
  1842  000748  22DD               	addwfc	postdec2,f,c
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1845  00074A  C03F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1846  00074E  C040  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1847  000752  CFDF F041          	movff	indf2,??_vfpfcnvrt
  1848  000756  0E02               	movlw	2
  1849  000758  26DE               	addwf	postinc2,f,c
  1850  00075A  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  1851  00075E  0E00               	movlw	0
  1852  000760  22DD               	addwfc	postdec2,f,c
  1853  000762  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1854  000766  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1855  00076A  CFDE F0DF          	movff	postinc2,vfpfcnvrt@ll
  1856  00076E  CFDD F0E0          	movff	postdec2,vfpfcnvrt@ll+1
  1857  000772  0100               	movlb	0	; () banked
  1858  000774  0E00               	movlw	0
  1859  000776  BFE0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1860  000778  0EFF               	movlw	-1
  1861  00077A  6FE1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1862  00077C  6FE2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1863  00077E  6FE3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1864  000780  6FE4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1865  000782  6FE5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1866  000784  6FE6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1867  000786                     
  1868                           ; BSR set to: 0
  1869                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1870  000786  C03B  F029         	movff	vfpfcnvrt@fp,dtoa@fp
  1871  00078A  C03C  F02A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1872  00078E  C0DF  F02B         	movff	vfpfcnvrt@ll,dtoa@d
  1873  000792  C0E0  F02C         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1874  000796  C0E1  F02D         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1875  00079A  C0E2  F02E         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1876  00079E  C0E3  F02F         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1877  0007A2  C0E4  F030         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1878  0007A6  C0E5  F031         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1879  0007AA  C0E6  F032         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1880  0007AE  ECA8  F001         	call	_dtoa	;wreg free
  1881  0007B2  C029  F03B         	movff	?_dtoa,?_vfpfcnvrt
  1882  0007B6  C02A  F03C         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1883  0007BA  EF32  F004         	goto	l1091
  1884  0007BE                     l2616:
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1887  0007BE  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1888  0007C2  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1889  0007C6  CFDE FFF6          	movff	postinc2,tblptrl
  1890  0007CA  CFDD FFF7          	movff	postdec2,tblptrh
  1891  0007CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1892  0007CE  6AF8               	clrf	tblptru,c
  1893  0007D0                     	endif
  1894  0007D0                     	if	0	;tblptru may be non-zero
  1895  0007D0                     	endif
  1896  0007D0  0008               	tblrd		*
  1897  0007D2  50F5               	movf	tablat,w,c
  1898  0007D4  0A25               	xorlw	37
  1899  0007D6  A4D8               	btfss	status,2,c
  1900  0007D8  EFF0  F003         	goto	u1951
  1901  0007DC  EFF2  F003         	goto	u1950
  1902  0007E0                     u1951:
  1903  0007E0  EF09  F004         	goto	l2626
  1904  0007E4                     u1950:
  1905  0007E4                     
  1906                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1907  0007E4  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1908  0007E8  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1909  0007EC  2ADE               	incf	postinc2,f,c
  1910  0007EE  0E00               	movlw	0
  1911  0007F0  22DD               	addwfc	postdec2,f,c
  1912  0007F2                     
  1913                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1914  0007F2  0E00               	movlw	0
  1915  0007F4  6E0F               	movwf	(fputc@c+1)^0,c
  1916  0007F6  0E25               	movlw	37
  1917  0007F8  6E0E               	movwf	fputc@c^0,c
  1918  0007FA  C03B  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1919  0007FE  C03C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1920  000802  ECF3  F006         	call	_fputc	;wreg free
  1921  000806                     l2622:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1924  000806  0E00               	movlw	0
  1925  000808  6E3C               	movwf	(?_vfpfcnvrt+1)^0,c
  1926  00080A  0E01               	movlw	1
  1927  00080C  6E3B               	movwf	?_vfpfcnvrt^0,c
  1928  00080E  EF32  F004         	goto	l1091
  1929  000812                     l2626:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1932  000812  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1933  000816  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1934  00081A  2ADE               	incf	postinc2,f,c
  1935  00081C  0E00               	movlw	0
  1936  00081E  22DD               	addwfc	postdec2,f,c
  1937  000820                     
  1938                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1939  000820  0E00               	movlw	0
  1940  000822  6E3C               	movwf	(?_vfpfcnvrt+1)^0,c
  1941  000824  0E00               	movlw	0
  1942  000826  6E3B               	movwf	?_vfpfcnvrt^0,c
  1943  000828  EF32  F004         	goto	l1091
  1944  00082C                     l2632:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1947  00082C  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1948  000830  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1949  000834  CFDE FFF6          	movff	postinc2,tblptrl
  1950  000838  CFDD FFF7          	movff	postdec2,tblptrh
  1951  00083C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1952  00083C  6AF8               	clrf	tblptru,c
  1953  00083E                     	endif
  1954  00083E                     	if	0	;tblptru may be non-zero
  1955  00083E                     	endif
  1956  00083E  0008               	tblrd		*
  1957  000840  50F5               	movf	tablat,w,c
  1958  000842  6E0E               	movwf	fputc@c^0,c
  1959  000844  6A0F               	clrf	(fputc@c+1)^0,c
  1960  000846  C03B  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1961  00084A  C03C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1962  00084E  ECF3  F006         	call	_fputc	;wreg free
  1963  000852                     
  1964                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1965  000852  C03D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1966  000856  C03E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1967  00085A  2ADE               	incf	postinc2,f,c
  1968  00085C  0E00               	movlw	0
  1969  00085E  22DD               	addwfc	postdec2,f,c
  1970  000860  EF03  F004         	goto	l2622
  1971  000864                     l1091:
  1972  000864  0012               	return		;funcret
  1973  000866                     __end_of_vfpfcnvrt:
  1974                           	callstack 0
  1975                           
  1976 ;; *************** function _dtoa *****************
  1977 ;; Defined at:
  1978 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  1981 ;;		 -> NULL(0), 
  1982 ;;  d               8   42[COMRAM] long long 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  n               8    8[BANK0 ] long long 
  1985 ;;  i               2   16[BANK0 ] int 
  1986 ;;  s               2    6[BANK0 ] int 
  1987 ;;  w               2    4[BANK0 ] int 
  1988 ;;  p               2    2[BANK0 ] int 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2   40[COMRAM] int 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1998 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Totals:        18      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;Total ram usage:       36 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    9
  2005 ;; This function calls:
  2006 ;;		___aodiv
  2007 ;;		___aomod
  2008 ;;		_abs
  2009 ;;		_pad
  2010 ;; This function is called by:
  2011 ;;		_vfpfcnvrt
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text4
  2016  000350                     __ptext4:
  2017                           	callstack 0
  2018  000350                     _dtoa:
  2019                           	callstack 18
  2020  000350                     
  2021                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2022  000350  C02B  F0D5         	movff	dtoa@d,dtoa@n
  2023  000354  C02C  F0D6         	movff	dtoa@d+1,dtoa@n+1
  2024  000358  C02D  F0D7         	movff	dtoa@d+2,dtoa@n+2
  2025  00035C  C02E  F0D8         	movff	dtoa@d+3,dtoa@n+3
  2026  000360  C02F  F0D9         	movff	dtoa@d+4,dtoa@n+4
  2027  000364  C030  F0DA         	movff	dtoa@d+5,dtoa@n+5
  2028  000368  C031  F0DB         	movff	dtoa@d+6,dtoa@n+6
  2029  00036C  C032  F0DC         	movff	dtoa@d+7,dtoa@n+7
  2030  000370                     
  2031                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2032  000370  0100               	movlb	0	; () banked
  2033  000372  BFDC               	btfsc	(dtoa@n+7)& (0+255),7,b
  2034  000374  EFBE  F001         	goto	u1761
  2035  000378  EFC1  F001         	goto	u1760
  2036  00037C                     u1761:
  2037  00037C  0E01               	movlw	1
  2038  00037E  EFC2  F001         	goto	u1770
  2039  000382                     u1760:
  2040  000382  0E00               	movlw	0
  2041  000384                     u1770:
  2042  000384  6FD3               	movwf	dtoa@s& (0+255),b
  2043  000386  6BD4               	clrf	(dtoa@s+1)& (0+255),b
  2044                           
  2045                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2046  000388  51D3               	movf	dtoa@s& (0+255),w,b
  2047  00038A  11D4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2048  00038C  B4D8               	btfsc	status,2,c
  2049  00038E  EFCB  F001         	goto	u1781
  2050  000392  EFCD  F001         	goto	u1780
  2051  000396                     u1781:
  2052  000396  EFDD  F001         	goto	l2534
  2053  00039A                     u1780:
  2054  00039A                     
  2055                           ; BSR set to: 0
  2056                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2057  00039A  1FDC               	comf	(dtoa@n+7)& (0+255),f,b
  2058  00039C  1FDB               	comf	(dtoa@n+6)& (0+255),f,b
  2059  00039E  1FDA               	comf	(dtoa@n+5)& (0+255),f,b
  2060  0003A0  1FD9               	comf	(dtoa@n+4)& (0+255),f,b
  2061  0003A2  1FD8               	comf	(dtoa@n+3)& (0+255),f,b
  2062  0003A4  1FD7               	comf	(dtoa@n+2)& (0+255),f,b
  2063  0003A6  1FD6               	comf	(dtoa@n+1)& (0+255),f,b
  2064  0003A8  6DD5               	negf	dtoa@n& (0+255),b
  2065  0003AA  0E00               	movlw	0
  2066  0003AC  23D6               	addwfc	(dtoa@n+1)& (0+255),f,b
  2067  0003AE  23D7               	addwfc	(dtoa@n+2)& (0+255),f,b
  2068  0003B0  23D8               	addwfc	(dtoa@n+3)& (0+255),f,b
  2069  0003B2  23D9               	addwfc	(dtoa@n+4)& (0+255),f,b
  2070  0003B4  23DA               	addwfc	(dtoa@n+5)& (0+255),f,b
  2071  0003B6  23DB               	addwfc	(dtoa@n+6)& (0+255),f,b
  2072  0003B8  23DC               	addwfc	(dtoa@n+7)& (0+255),f,b
  2073  0003BA                     l2534:
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2077  0003BA  BE4A               	btfsc	(_prec+1)^0,7,c
  2078  0003BC  EFE2  F001         	goto	u1791
  2079  0003C0  EFE4  F001         	goto	u1790
  2080  0003C4                     u1791:
  2081  0003C4  EFE5  F001         	goto	l2538
  2082  0003C8                     u1790:
  2083  0003C8                     
  2084                           ; BSR set to: 0
  2085                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2086  0003C8  924B               	bcf	_flags^0,1,c
  2087  0003CA                     l2538:
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2091  0003CA  BE4A               	btfsc	(_prec+1)^0,7,c
  2092  0003CC  EFF2  F001         	goto	u1800
  2093  0003D0  504A               	movf	(_prec+1)^0,w,c
  2094  0003D2  E106               	bnz	u1801
  2095  0003D4  0449               	decf	_prec^0,w,c
  2096  0003D6  B0D8               	btfsc	status,0,c
  2097  0003D8  EFF0  F001         	goto	u1801
  2098  0003DC  EFF2  F001         	goto	u1800
  2099  0003E0                     u1801:
  2100  0003E0  EFF8  F001         	goto	l1066
  2101  0003E4                     u1800:
  2102  0003E4                     
  2103                           ; BSR set to: 0
  2104  0003E4  0E00               	movlw	0
  2105  0003E6  6FD0               	movwf	(dtoa@p+1)& (0+255),b
  2106  0003E8  0E01               	movlw	1
  2107  0003EA  6FCF               	movwf	dtoa@p& (0+255),b
  2108  0003EC  EFFC  F001         	goto	l1068
  2109  0003F0                     l1066:
  2110                           
  2111                           ; BSR set to: 0
  2112  0003F0  C049  F0CF         	movff	_prec,dtoa@p
  2113  0003F4  C04A  F0D0         	movff	_prec+1,dtoa@p+1
  2114  0003F8                     l1068:
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2118  0003F8  C047  F0D1         	movff	_width,dtoa@w
  2119  0003FC  C048  F0D2         	movff	_width+1,dtoa@w+1
  2120  000400                     
  2121                           ; BSR set to: 0
  2122                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2123  000400  51D3               	movf	dtoa@s& (0+255),w,b
  2124  000402  11D4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2125  000404  A4D8               	btfss	status,2,c
  2126  000406  EF07  F002         	goto	u1811
  2127  00040A  EF09  F002         	goto	u1810
  2128  00040E                     u1811:
  2129  00040E  EF10  F002         	goto	l2546
  2130  000412                     u1810:
  2131  000412                     
  2132                           ; BSR set to: 0
  2133  000412  A44B               	btfss	_flags^0,2,c
  2134  000414  EF0E  F002         	goto	u1821
  2135  000418  EF10  F002         	goto	u1820
  2136  00041C                     u1821:
  2137  00041C  EF13  F002         	goto	l2548
  2138  000420                     u1820:
  2139  000420                     l2546:
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  2143  000420  07D1               	decf	dtoa@w& (0+255),f,b
  2144  000422  A0D8               	btfss	status,0,c
  2145  000424  07D2               	decf	(dtoa@w+1)& (0+255),f,b
  2146  000426                     l2548:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2150  000426  0E00               	movlw	0
  2151  000428  6FDE               	movwf	(dtoa@i+1)& (0+255),b
  2152  00042A  0E1F               	movlw	31
  2153  00042C  6FDD               	movwf	dtoa@i& (0+255),b
  2154  00042E                     
  2155                           ; BSR set to: 0
  2156                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2157  00042E  0E00               	movlw	0
  2158  000430  6FCC               	movwf	(_dbuf+31)& (0+255),b
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2161  000432  EF98  F002         	goto	l2562
  2162  000436                     l2552:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  2166  000436  07DD               	decf	dtoa@i& (0+255),f,b
  2167  000438  A0D8               	btfss	status,0,c
  2168  00043A  07DE               	decf	(dtoa@i+1)& (0+255),f,b
  2169  00043C                     
  2170                           ; BSR set to: 0
  2171                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2172  00043C  0EAD               	movlw	low _dbuf
  2173  00043E  25DD               	addwf	dtoa@i& (0+255),w,b
  2174  000440  6ED9               	movwf	fsr2l,c
  2175  000442  0E00               	movlw	high _dbuf
  2176  000444  21DE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2177  000446  6EDA               	movwf	fsr2h,c
  2178  000448  C0D5  F00C         	movff	dtoa@n,___aomod@dividend
  2179  00044C  C0D6  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  2180  000450  C0D7  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  2181  000454  C0D8  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  2182  000458  C0D9  F010         	movff	dtoa@n+4,___aomod@dividend+4
  2183  00045C  C0DA  F011         	movff	dtoa@n+5,___aomod@dividend+5
  2184  000460  C0DB  F012         	movff	dtoa@n+6,___aomod@dividend+6
  2185  000464  C0DC  F013         	movff	dtoa@n+7,___aomod@dividend+7
  2186  000468  0E0A               	movlw	10
  2187  00046A  6E14               	movwf	___aomod@divisor^0,c
  2188  00046C  0E00               	movlw	0
  2189  00046E  6E15               	movwf	(___aomod@divisor+1)^0,c
  2190  000470  0E00               	movlw	0
  2191  000472  6E16               	movwf	(___aomod@divisor+2)^0,c
  2192  000474  0E00               	movlw	0
  2193  000476  6E17               	movwf	(___aomod@divisor+3)^0,c
  2194  000478  0E00               	movlw	0
  2195  00047A  6E18               	movwf	(___aomod@divisor+4)^0,c
  2196  00047C  0E00               	movlw	0
  2197  00047E  6E19               	movwf	(___aomod@divisor+5)^0,c
  2198  000480  0E00               	movlw	0
  2199  000482  6E1A               	movwf	(___aomod@divisor+6)^0,c
  2200  000484  0E00               	movlw	0
  2201  000486  6E1B               	movwf	(___aomod@divisor+7)^0,c
  2202  000488  ECF7  F004         	call	___aomod	;wreg free
  2203  00048C  C00C  F033         	movff	?___aomod,??_dtoa
  2204  000490  C00D  F034         	movff	?___aomod+1,??_dtoa+1
  2205  000494  C00E  F035         	movff	?___aomod+2,??_dtoa+2
  2206  000498  C00F  F036         	movff	?___aomod+3,??_dtoa+3
  2207  00049C  C010  F037         	movff	?___aomod+4,??_dtoa+4
  2208  0004A0  C011  F038         	movff	?___aomod+5,??_dtoa+5
  2209  0004A4  C012  F039         	movff	?___aomod+6,??_dtoa+6
  2210  0004A8  C013  F03A         	movff	?___aomod+7,??_dtoa+7
  2211  0004AC  C033  F01E         	movff	??_dtoa,abs@a
  2212  0004B0  C035  F01F         	movff	??_dtoa+2,abs@a+1
  2213  0004B4  EC92  F007         	call	_abs	;wreg free
  2214  0004B8  501E               	movf	?_abs^0,w,c
  2215  0004BA  0F30               	addlw	48
  2216  0004BC  6EDF               	movwf	indf2,c
  2217  0004BE                     
  2218                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2219  0004BE  0100               	movlb	0	; () banked
  2220  0004C0  07CF               	decf	dtoa@p& (0+255),f,b
  2221  0004C2  A0D8               	btfss	status,0,c
  2222  0004C4  07D0               	decf	(dtoa@p+1)& (0+255),f,b
  2223  0004C6                     
  2224                           ; BSR set to: 0
  2225                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2226  0004C6  07D1               	decf	dtoa@w& (0+255),f,b
  2227  0004C8  A0D8               	btfss	status,0,c
  2228  0004CA  07D2               	decf	(dtoa@w+1)& (0+255),f,b
  2229  0004CC                     
  2230                           ; BSR set to: 0
  2231                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2232  0004CC  C0D5  F00C         	movff	dtoa@n,___aodiv@dividend
  2233  0004D0  C0D6  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  2234  0004D4  C0D7  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  2235  0004D8  C0D8  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  2236  0004DC  C0D9  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  2237  0004E0  C0DA  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  2238  0004E4  C0DB  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  2239  0004E8  C0DC  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  2240  0004EC  0E0A               	movlw	10
  2241  0004EE  6E14               	movwf	___aodiv@divisor^0,c
  2242  0004F0  0E00               	movlw	0
  2243  0004F2  6E15               	movwf	(___aodiv@divisor+1)^0,c
  2244  0004F4  0E00               	movlw	0
  2245  0004F6  6E16               	movwf	(___aodiv@divisor+2)^0,c
  2246  0004F8  0E00               	movlw	0
  2247  0004FA  6E17               	movwf	(___aodiv@divisor+3)^0,c
  2248  0004FC  0E00               	movlw	0
  2249  0004FE  6E18               	movwf	(___aodiv@divisor+4)^0,c
  2250  000500  0E00               	movlw	0
  2251  000502  6E19               	movwf	(___aodiv@divisor+5)^0,c
  2252  000504  0E00               	movlw	0
  2253  000506  6E1A               	movwf	(___aodiv@divisor+6)^0,c
  2254  000508  0E00               	movlw	0
  2255  00050A  6E1B               	movwf	(___aodiv@divisor+7)^0,c
  2256  00050C  EC33  F004         	call	___aodiv	;wreg free
  2257  000510  C00C  F0D5         	movff	?___aodiv,dtoa@n
  2258  000514  C00D  F0D6         	movff	?___aodiv+1,dtoa@n+1
  2259  000518  C00E  F0D7         	movff	?___aodiv+2,dtoa@n+2
  2260  00051C  C00F  F0D8         	movff	?___aodiv+3,dtoa@n+3
  2261  000520  C010  F0D9         	movff	?___aodiv+4,dtoa@n+4
  2262  000524  C011  F0DA         	movff	?___aodiv+5,dtoa@n+5
  2263  000528  C012  F0DB         	movff	?___aodiv+6,dtoa@n+6
  2264  00052C  C013  F0DC         	movff	?___aodiv+7,dtoa@n+7
  2265  000530                     l2562:
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2268  000530  0100               	movlb	0	; () banked
  2269  000532  BFDE               	btfsc	(dtoa@i+1)& (0+255),7,b
  2270  000534  EFA4  F002         	goto	u1831
  2271  000538  51DE               	movf	(dtoa@i+1)& (0+255),w,b
  2272  00053A  E108               	bnz	u1830
  2273  00053C  05DD               	decf	dtoa@i& (0+255),w,b
  2274  00053E  A0D8               	btfss	status,0,c
  2275  000540  EFA4  F002         	goto	u1831
  2276  000544  EFA6  F002         	goto	u1830
  2277  000548                     u1831:
  2278  000548  EFD6  F002         	goto	l2572
  2279  00054C                     u1830:
  2280  00054C                     
  2281                           ; BSR set to: 0
  2282  00054C  51D5               	movf	dtoa@n& (0+255),w,b
  2283  00054E  11D6               	iorwf	(dtoa@n+1)& (0+255),w,b
  2284  000550  11D7               	iorwf	(dtoa@n+2)& (0+255),w,b
  2285  000552  11D8               	iorwf	(dtoa@n+3)& (0+255),w,b
  2286  000554  11D9               	iorwf	(dtoa@n+4)& (0+255),w,b
  2287  000556  11DA               	iorwf	(dtoa@n+5)& (0+255),w,b
  2288  000558  11DB               	iorwf	(dtoa@n+6)& (0+255),w,b
  2289  00055A  11DC               	iorwf	(dtoa@n+7)& (0+255),w,b
  2290  00055C  A4D8               	btfss	status,2,c
  2291  00055E  EFB3  F002         	goto	u1841
  2292  000562  EFB5  F002         	goto	u1840
  2293  000566                     u1841:
  2294  000566  EF1B  F002         	goto	l2552
  2295  00056A                     u1840:
  2296  00056A                     
  2297                           ; BSR set to: 0
  2298  00056A  BFD0               	btfsc	(dtoa@p+1)& (0+255),7,b
  2299  00056C  EFC2  F002         	goto	u1850
  2300  000570  51D0               	movf	(dtoa@p+1)& (0+255),w,b
  2301  000572  E106               	bnz	u1851
  2302  000574  05CF               	decf	dtoa@p& (0+255),w,b
  2303  000576  B0D8               	btfsc	status,0,c
  2304  000578  EFC0  F002         	goto	u1851
  2305  00057C  EFC2  F002         	goto	u1850
  2306  000580                     u1851:
  2307  000580  EF1B  F002         	goto	l2552
  2308  000584                     u1850:
  2309  000584                     
  2310                           ; BSR set to: 0
  2311  000584  BFD2               	btfsc	(dtoa@w+1)& (0+255),7,b
  2312  000586  EFCD  F002         	goto	u1861
  2313  00058A  51D2               	movf	(dtoa@w+1)& (0+255),w,b
  2314  00058C  E108               	bnz	u1860
  2315  00058E  05D1               	decf	dtoa@w& (0+255),w,b
  2316  000590  A0D8               	btfss	status,0,c
  2317  000592  EFCD  F002         	goto	u1861
  2318  000596  EFCF  F002         	goto	u1860
  2319  00059A                     u1861:
  2320  00059A  EFD6  F002         	goto	l2572
  2321  00059E                     u1860:
  2322  00059E                     
  2323                           ; BSR set to: 0
  2324  00059E  B24B               	btfsc	_flags^0,1,c
  2325  0005A0  EFD4  F002         	goto	u1871
  2326  0005A4  EFD6  F002         	goto	u1870
  2327  0005A8                     u1871:
  2328  0005A8  EF1B  F002         	goto	l2552
  2329  0005AC                     u1870:
  2330  0005AC                     l2572:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2334  0005AC  51D3               	movf	dtoa@s& (0+255),w,b
  2335  0005AE  11D4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2336  0005B0  A4D8               	btfss	status,2,c
  2337  0005B2  EFDD  F002         	goto	u1881
  2338  0005B6  EFDF  F002         	goto	u1880
  2339  0005BA                     u1881:
  2340  0005BA  EFE6  F002         	goto	l2576
  2341  0005BE                     u1880:
  2342  0005BE                     
  2343                           ; BSR set to: 0
  2344  0005BE  A44B               	btfss	_flags^0,2,c
  2345  0005C0  EFE4  F002         	goto	u1891
  2346  0005C4  EFE6  F002         	goto	u1890
  2347  0005C8                     u1891:
  2348  0005C8  EF04  F003         	goto	l2586
  2349  0005CC                     u1890:
  2350  0005CC                     l2576:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  2354  0005CC  07DD               	decf	dtoa@i& (0+255),f,b
  2355  0005CE  A0D8               	btfss	status,0,c
  2356  0005D0  07DE               	decf	(dtoa@i+1)& (0+255),f,b
  2357  0005D2                     
  2358                           ; BSR set to: 0
  2359                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2360  0005D2  51D3               	movf	dtoa@s& (0+255),w,b
  2361  0005D4  11D4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2362  0005D6  A4D8               	btfss	status,2,c
  2363  0005D8  EFF0  F002         	goto	u1901
  2364  0005DC  EFF2  F002         	goto	u1900
  2365  0005E0                     u1901:
  2366  0005E0  EFF8  F002         	goto	l2582
  2367  0005E4                     u1900:
  2368  0005E4                     
  2369                           ; BSR set to: 0
  2370  0005E4  0E00               	movlw	0
  2371  0005E6  6FCE               	movwf	(_dtoa$1387+1)& (0+255),b
  2372  0005E8  0E2B               	movlw	43
  2373  0005EA  6FCD               	movwf	_dtoa$1387& (0+255),b
  2374  0005EC  EFFC  F002         	goto	l2584
  2375  0005F0                     l2582:
  2376                           
  2377                           ; BSR set to: 0
  2378  0005F0  0E00               	movlw	0
  2379  0005F2  6FCE               	movwf	(_dtoa$1387+1)& (0+255),b
  2380  0005F4  0E2D               	movlw	45
  2381  0005F6  6FCD               	movwf	_dtoa$1387& (0+255),b
  2382  0005F8                     l2584:
  2383                           
  2384                           ; BSR set to: 0
  2385  0005F8  0EAD               	movlw	low _dbuf
  2386  0005FA  25DD               	addwf	dtoa@i& (0+255),w,b
  2387  0005FC  6ED9               	movwf	fsr2l,c
  2388  0005FE  0E00               	movlw	high _dbuf
  2389  000600  21DE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2390  000602  6EDA               	movwf	fsr2h,c
  2391  000604  C0CD  FFDF         	movff	_dtoa$1387,indf2
  2392  000608                     l2586:
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2396  000608  C029  F01E         	movff	dtoa@fp,pad@fp
  2397  00060C  C02A  F01F         	movff	dtoa@fp+1,pad@fp+1
  2398  000610  0EAD               	movlw	low _dbuf
  2399  000612  25DD               	addwf	dtoa@i& (0+255),w,b
  2400  000614  6E20               	movwf	pad@buf^0,c
  2401  000616  0E00               	movlw	high _dbuf
  2402  000618  21DE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2403  00061A  6E21               	movwf	(pad@buf+1)^0,c
  2404  00061C  C0D1  F022         	movff	dtoa@w,pad@p
  2405  000620  C0D2  F023         	movff	dtoa@w+1,pad@p+1
  2406  000624  EC92  F006         	call	_pad	;wreg free
  2407  000628  C01E  F029         	movff	?_pad,?_dtoa
  2408  00062C  C01F  F02A         	movff	?_pad+1,?_dtoa+1
  2409  000630  0012               	return		;funcret
  2410  000632                     __end_of_dtoa:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _pad *****************
  2414 ;; Defined at:
  2415 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  2418 ;;		 -> NULL(0), 
  2419 ;;  buf             2   31[COMRAM] PTR unsigned char 
  2420 ;;		 -> dbuf(32), 
  2421 ;;  p               2   33[COMRAM] int 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  w               2   38[COMRAM] int 
  2424 ;;  i               2   36[COMRAM] int 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  2   29[COMRAM] int 
  2427 ;; Registers used:
  2428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2434 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;Total ram usage:       11 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    8
  2441 ;; This function calls:
  2442 ;;		_fputc
  2443 ;;		_fputs
  2444 ;;		_strlen
  2445 ;; This function is called by:
  2446 ;;		_dtoa
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text5
  2451  000D24                     __ptext5:
  2452                           	callstack 0
  2453  000D24                     _pad:
  2454                           	callstack 18
  2455  000D24                     
  2456                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2457  000D24  A04B               	btfss	_flags^0,0,c
  2458  000D26  EF97  F006         	goto	u1661
  2459  000D2A  EF99  F006         	goto	u1660
  2460  000D2E                     u1661:
  2461  000D2E  EFA3  F006         	goto	l2478
  2462  000D32                     u1660:
  2463  000D32                     
  2464                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2465  000D32  C020  F017         	movff	pad@buf,fputs@s
  2466  000D36  C021  F018         	movff	pad@buf+1,fputs@s+1
  2467  000D3A  C01E  F019         	movff	pad@fp,fputs@fp
  2468  000D3E  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  2469  000D42  EC70  F007         	call	_fputs	;wreg free
  2470  000D46                     l2478:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2473  000D46  BE23               	btfsc	(pad@p+1)^0,7,c
  2474  000D48  EFA8  F006         	goto	u1671
  2475  000D4C  EFAA  F006         	goto	u1670
  2476  000D50                     u1671:
  2477  000D50  EFB0  F006         	goto	l2482
  2478  000D54                     u1670:
  2479  000D54  C022  F027         	movff	pad@p,pad@w
  2480  000D58  C023  F028         	movff	pad@p+1,pad@w+1
  2481  000D5C  EFB4  F006         	goto	l1039
  2482  000D60                     l2482:
  2483  000D60  0E00               	movlw	0
  2484  000D62  6E28               	movwf	(pad@w+1)^0,c
  2485  000D64  0E00               	movlw	0
  2486  000D66  6E27               	movwf	pad@w^0,c
  2487  000D68                     l1039:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2490  000D68  0E00               	movlw	0
  2491  000D6A  6E26               	movwf	(pad@i+1)^0,c
  2492  000D6C  0E00               	movlw	0
  2493  000D6E  6E25               	movwf	pad@i^0,c
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2496  000D70  EFC6  F006         	goto	l2488
  2497  000D74                     l2484:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2500  000D74  0E00               	movlw	0
  2501  000D76  6E0F               	movwf	(fputc@c+1)^0,c
  2502  000D78  0E20               	movlw	32
  2503  000D7A  6E0E               	movwf	fputc@c^0,c
  2504  000D7C  C01E  F010         	movff	pad@fp,fputc@fp
  2505  000D80  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  2506  000D84  ECF3  F006         	call	_fputc	;wreg free
  2507  000D88                     
  2508                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2509  000D88  4A25               	infsnz	pad@i^0,f,c
  2510  000D8A  2A26               	incf	(pad@i+1)^0,f,c
  2511  000D8C                     l2488:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2514  000D8C  5027               	movf	pad@w^0,w,c
  2515  000D8E  5C25               	subwf	pad@i^0,w,c
  2516  000D90  5026               	movf	(pad@i+1)^0,w,c
  2517  000D92  0A80               	xorlw	128
  2518  000D94  6E24               	movwf	??_pad^0,c
  2519  000D96  5028               	movf	(pad@w+1)^0,w,c
  2520  000D98  0A80               	xorlw	128
  2521  000D9A  5824               	subwfb	??_pad^0,w,c
  2522  000D9C  A0D8               	btfss	status,0,c
  2523  000D9E  EFD3  F006         	goto	u1681
  2524  000DA2  EFD5  F006         	goto	u1680
  2525  000DA6                     u1681:
  2526  000DA6  EFBA  F006         	goto	l2484
  2527  000DAA                     u1680:
  2528  000DAA                     
  2529                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2530  000DAA  B04B               	btfsc	_flags^0,0,c
  2531  000DAC  EFDA  F006         	goto	u1691
  2532  000DB0  EFDC  F006         	goto	u1690
  2533  000DB4                     u1691:
  2534  000DB4  EFE6  F006         	goto	l2492
  2535  000DB8                     u1690:
  2536  000DB8                     
  2537                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2538  000DB8  C020  F017         	movff	pad@buf,fputs@s
  2539  000DBC  C021  F018         	movff	pad@buf+1,fputs@s+1
  2540  000DC0  C01E  F019         	movff	pad@fp,fputs@fp
  2541  000DC4  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  2542  000DC8  EC70  F007         	call	_fputs	;wreg free
  2543  000DCC                     l2492:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2546  000DCC  C020  F00C         	movff	pad@buf,strlen@s
  2547  000DD0  C021  F00D         	movff	pad@buf+1,strlen@s+1
  2548  000DD4  EC0A  F008         	call	_strlen	;wreg free
  2549  000DD8  5027               	movf	pad@w^0,w,c
  2550  000DDA  240C               	addwf	?_strlen^0,w,c
  2551  000DDC  6E1E               	movwf	?_pad^0,c
  2552  000DDE  5028               	movf	(pad@w+1)^0,w,c
  2553  000DE0  200D               	addwfc	(?_strlen+1)^0,w,c
  2554  000DE2  6E1F               	movwf	(?_pad+1)^0,c
  2555  000DE4  0012               	return		;funcret
  2556  000DE6                     __end_of_pad:
  2557                           	callstack 0
  2558                           
  2559 ;; *************** function _strlen *****************
  2560 ;; Defined at:
  2561 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  s               2   11[COMRAM] PTR const unsigned char 
  2564 ;;		 -> dbuf(32), 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  a               2   13[COMRAM] PTR const unsigned char 
  2567 ;;		 -> dbuf(32), 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  2   11[COMRAM] unsigned int 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;Total ram usage:        4 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    4
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_pad
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text6
  2592  001014                     __ptext6:
  2593                           	callstack 0
  2594  001014                     _strlen:
  2595                           	callstack 21
  2596  001014  C00C  F00E         	movff	strlen@s,strlen@a
  2597  001018  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  2598  00101C  EF12  F008         	goto	l2388
  2599  001020                     l2386:
  2600  001020  4A0C               	infsnz	strlen@s^0,f,c
  2601  001022  2A0D               	incf	(strlen@s+1)^0,f,c
  2602  001024                     l2388:
  2603  001024  C00C  FFD9         	movff	strlen@s,fsr2l
  2604  001028  C00D  FFDA         	movff	strlen@s+1,fsr2h
  2605  00102C  50DF               	movf	indf2,w,c
  2606  00102E  A4D8               	btfss	status,2,c
  2607  001030  EF1C  F008         	goto	u1521
  2608  001034  EF1E  F008         	goto	u1520
  2609  001038                     u1521:
  2610  001038  EF10  F008         	goto	l2386
  2611  00103C                     u1520:
  2612  00103C  500E               	movf	strlen@a^0,w,c
  2613  00103E  5C0C               	subwf	strlen@s^0,w,c
  2614  001040  6E0C               	movwf	?_strlen^0,c
  2615  001042  500F               	movf	(strlen@a+1)^0,w,c
  2616  001044  580D               	subwfb	(strlen@s+1)^0,w,c
  2617  001046  6E0D               	movwf	(?_strlen+1)^0,c
  2618  001048  0012               	return		;funcret
  2619  00104A                     __end_of_strlen:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function _fputs *****************
  2623 ;; Defined at:
  2624 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  s               2   22[COMRAM] PTR const unsigned char 
  2627 ;;		 -> dbuf(32), 
  2628 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  2629 ;;		 -> NULL(0), 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  i               2   27[COMRAM] int 
  2632 ;;  c               1   26[COMRAM] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  2   22[COMRAM] int 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;Total ram usage:        7 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    7
  2649 ;; This function calls:
  2650 ;;		_fputc
  2651 ;; This function is called by:
  2652 ;;		_pad
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text7
  2657  000EE0                     __ptext7:
  2658                           	callstack 0
  2659  000EE0                     _fputs:
  2660                           	callstack 18
  2661  000EE0  0E00               	movlw	0
  2662  000EE2  6E1D               	movwf	(fputs@i+1)^0,c
  2663  000EE4  0E00               	movlw	0
  2664  000EE6  6E1C               	movwf	fputs@i^0,c
  2665  000EE8  EF81  F007         	goto	l2382
  2666  000EEC                     l2378:
  2667  000EEC  C01B  F00E         	movff	fputs@c,fputc@c
  2668  000EF0  6A0F               	clrf	(fputc@c+1)^0,c
  2669  000EF2  C019  F010         	movff	fputs@fp,fputc@fp
  2670  000EF6  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  2671  000EFA  ECF3  F006         	call	_fputc	;wreg free
  2672  000EFE  4A1C               	infsnz	fputs@i^0,f,c
  2673  000F00  2A1D               	incf	(fputs@i+1)^0,f,c
  2674  000F02                     l2382:
  2675  000F02  501C               	movf	fputs@i^0,w,c
  2676  000F04  2417               	addwf	fputs@s^0,w,c
  2677  000F06  6ED9               	movwf	fsr2l,c
  2678  000F08  501D               	movf	(fputs@i+1)^0,w,c
  2679  000F0A  2018               	addwfc	(fputs@s+1)^0,w,c
  2680  000F0C  6EDA               	movwf	fsr2h,c
  2681  000F0E  50DF               	movf	indf2,w,c
  2682  000F10  6E1B               	movwf	fputs@c^0,c
  2683  000F12  501B               	movf	fputs@c^0,w,c
  2684  000F14  A4D8               	btfss	status,2,c
  2685  000F16  EF8F  F007         	goto	u1511
  2686  000F1A  EF91  F007         	goto	u1510
  2687  000F1E                     u1511:
  2688  000F1E  EF76  F007         	goto	l2378
  2689  000F22                     u1510:
  2690  000F22  0012               	return		;funcret
  2691  000F24                     __end_of_fputs:
  2692                           	callstack 0
  2693                           
  2694 ;; *************** function _abs *****************
  2695 ;; Defined at:
  2696 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  a               2   29[COMRAM] int 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  2   29[COMRAM] int 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;Total ram usage:        4 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    4
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_dtoa
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text8
  2725  000F24                     __ptext8:
  2726                           	callstack 0
  2727  000F24                     _abs:
  2728                           	callstack 22
  2729  000F24  BE1F               	btfsc	(abs@a+1)^0,7,c
  2730  000F26  EF9F  F007         	goto	u1700
  2731  000F2A  501F               	movf	(abs@a+1)^0,w,c
  2732  000F2C  E106               	bnz	u1701
  2733  000F2E  041E               	decf	abs@a^0,w,c
  2734  000F30  B0D8               	btfsc	status,0,c
  2735  000F32  EF9D  F007         	goto	u1701
  2736  000F36  EF9F  F007         	goto	u1700
  2737  000F3A                     u1701:
  2738  000F3A  EFAD  F007         	goto	l1105
  2739  000F3E                     u1700:
  2740  000F3E  C01E  F020         	movff	abs@a,??_abs
  2741  000F42  C01F  F021         	movff	abs@a+1,??_abs+1
  2742  000F46  1E20               	comf	??_abs^0,f,c
  2743  000F48  1E21               	comf	(??_abs+1)^0,f,c
  2744  000F4A  4A20               	infsnz	??_abs^0,f,c
  2745  000F4C  2A21               	incf	(??_abs+1)^0,f,c
  2746  000F4E  C020  F01E         	movff	??_abs,?_abs
  2747  000F52  C021  F01F         	movff	??_abs+1,?_abs+1
  2748  000F56  EFB1  F007         	goto	l1108
  2749  000F5A                     l1105:
  2750  000F5A  C01E  F01E         	movff	abs@a,?_abs
  2751  000F5E  C01F  F01F         	movff	abs@a+1,?_abs+1
  2752  000F62                     l1108:
  2753  000F62  0012               	return		;funcret
  2754  000F64                     __end_of_abs:
  2755                           	callstack 0
  2756                           
  2757 ;; *************** function ___aomod *****************
  2758 ;; Defined at:
  2759 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  dividend        8   11[COMRAM] long long 
  2762 ;;  divisor         8   19[COMRAM] long long 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  sign            1   28[COMRAM] unsigned char 
  2765 ;;  counter         1   27[COMRAM] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  8   11[COMRAM] long long 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2775 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;Total ram usage:       18 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    4
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_dtoa
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text9
  2790  0009EE                     __ptext9:
  2791                           	callstack 0
  2792  0009EE                     ___aomod:
  2793                           	callstack 22
  2794  0009EE  0E00               	movlw	0
  2795  0009F0  6E1D               	movwf	___aomod@sign^0,c
  2796  0009F2  BE13               	btfsc	(___aomod@dividend+7)^0,7,c
  2797  0009F4  EF00  F005         	goto	u1600
  2798  0009F8  EFFE  F004         	goto	u1601
  2799  0009FC                     u1601:
  2800  0009FC  EF12  F005         	goto	l2446
  2801  000A00                     u1600:
  2802  000A00  1E13               	comf	(___aomod@dividend+7)^0,f,c
  2803  000A02  1E12               	comf	(___aomod@dividend+6)^0,f,c
  2804  000A04  1E11               	comf	(___aomod@dividend+5)^0,f,c
  2805  000A06  1E10               	comf	(___aomod@dividend+4)^0,f,c
  2806  000A08  1E0F               	comf	(___aomod@dividend+3)^0,f,c
  2807  000A0A  1E0E               	comf	(___aomod@dividend+2)^0,f,c
  2808  000A0C  1E0D               	comf	(___aomod@dividend+1)^0,f,c
  2809  000A0E  6C0C               	negf	___aomod@dividend^0,c
  2810  000A10  0E00               	movlw	0
  2811  000A12  220D               	addwfc	(___aomod@dividend+1)^0,f,c
  2812  000A14  220E               	addwfc	(___aomod@dividend+2)^0,f,c
  2813  000A16  220F               	addwfc	(___aomod@dividend+3)^0,f,c
  2814  000A18  2210               	addwfc	(___aomod@dividend+4)^0,f,c
  2815  000A1A  2211               	addwfc	(___aomod@dividend+5)^0,f,c
  2816  000A1C  2212               	addwfc	(___aomod@dividend+6)^0,f,c
  2817  000A1E  2213               	addwfc	(___aomod@dividend+7)^0,f,c
  2818  000A20  0E01               	movlw	1
  2819  000A22  6E1D               	movwf	___aomod@sign^0,c
  2820  000A24                     l2446:
  2821  000A24  BE1B               	btfsc	(___aomod@divisor+7)^0,7,c
  2822  000A26  EF19  F005         	goto	u1610
  2823  000A2A  EF17  F005         	goto	u1611
  2824  000A2E                     u1611:
  2825  000A2E  EF29  F005         	goto	l2450
  2826  000A32                     u1610:
  2827  000A32  1E1B               	comf	(___aomod@divisor+7)^0,f,c
  2828  000A34  1E1A               	comf	(___aomod@divisor+6)^0,f,c
  2829  000A36  1E19               	comf	(___aomod@divisor+5)^0,f,c
  2830  000A38  1E18               	comf	(___aomod@divisor+4)^0,f,c
  2831  000A3A  1E17               	comf	(___aomod@divisor+3)^0,f,c
  2832  000A3C  1E16               	comf	(___aomod@divisor+2)^0,f,c
  2833  000A3E  1E15               	comf	(___aomod@divisor+1)^0,f,c
  2834  000A40  6C14               	negf	___aomod@divisor^0,c
  2835  000A42  0E00               	movlw	0
  2836  000A44  2215               	addwfc	(___aomod@divisor+1)^0,f,c
  2837  000A46  2216               	addwfc	(___aomod@divisor+2)^0,f,c
  2838  000A48  2217               	addwfc	(___aomod@divisor+3)^0,f,c
  2839  000A4A  2218               	addwfc	(___aomod@divisor+4)^0,f,c
  2840  000A4C  2219               	addwfc	(___aomod@divisor+5)^0,f,c
  2841  000A4E  221A               	addwfc	(___aomod@divisor+6)^0,f,c
  2842  000A50  221B               	addwfc	(___aomod@divisor+7)^0,f,c
  2843  000A52                     l2450:
  2844  000A52  5014               	movf	___aomod@divisor^0,w,c
  2845  000A54  1015               	iorwf	(___aomod@divisor+1)^0,w,c
  2846  000A56  1016               	iorwf	(___aomod@divisor+2)^0,w,c
  2847  000A58  1017               	iorwf	(___aomod@divisor+3)^0,w,c
  2848  000A5A  1018               	iorwf	(___aomod@divisor+4)^0,w,c
  2849  000A5C  1019               	iorwf	(___aomod@divisor+5)^0,w,c
  2850  000A5E  101A               	iorwf	(___aomod@divisor+6)^0,w,c
  2851  000A60  101B               	iorwf	(___aomod@divisor+7)^0,w,c
  2852  000A62  B4D8               	btfsc	status,2,c
  2853  000A64  EF36  F005         	goto	u1621
  2854  000A68  EF38  F005         	goto	u1620
  2855  000A6C                     u1621:
  2856  000A6C  EF80  F005         	goto	l2466
  2857  000A70                     u1620:
  2858  000A70  0E01               	movlw	1
  2859  000A72  6E1C               	movwf	___aomod@counter^0,c
  2860  000A74  EF46  F005         	goto	l2456
  2861  000A78                     l2454:
  2862  000A78  90D8               	bcf	status,0,c
  2863  000A7A  3614               	rlcf	___aomod@divisor^0,f,c
  2864  000A7C  3615               	rlcf	(___aomod@divisor+1)^0,f,c
  2865  000A7E  3616               	rlcf	(___aomod@divisor+2)^0,f,c
  2866  000A80  3617               	rlcf	(___aomod@divisor+3)^0,f,c
  2867  000A82  3618               	rlcf	(___aomod@divisor+4)^0,f,c
  2868  000A84  3619               	rlcf	(___aomod@divisor+5)^0,f,c
  2869  000A86  361A               	rlcf	(___aomod@divisor+6)^0,f,c
  2870  000A88  361B               	rlcf	(___aomod@divisor+7)^0,f,c
  2871  000A8A  2A1C               	incf	___aomod@counter^0,f,c
  2872  000A8C                     l2456:
  2873  000A8C  AE1B               	btfss	(___aomod@divisor+7)^0,7,c
  2874  000A8E  EF4B  F005         	goto	u1631
  2875  000A92  EF4D  F005         	goto	u1630
  2876  000A96                     u1631:
  2877  000A96  EF3C  F005         	goto	l2454
  2878  000A9A                     u1630:
  2879  000A9A                     l2458:
  2880  000A9A  5014               	movf	___aomod@divisor^0,w,c
  2881  000A9C  5C0C               	subwf	___aomod@dividend^0,w,c
  2882  000A9E  5015               	movf	(___aomod@divisor+1)^0,w,c
  2883  000AA0  580D               	subwfb	(___aomod@dividend+1)^0,w,c
  2884  000AA2  5016               	movf	(___aomod@divisor+2)^0,w,c
  2885  000AA4  580E               	subwfb	(___aomod@dividend+2)^0,w,c
  2886  000AA6  5017               	movf	(___aomod@divisor+3)^0,w,c
  2887  000AA8  580F               	subwfb	(___aomod@dividend+3)^0,w,c
  2888  000AAA  5018               	movf	(___aomod@divisor+4)^0,w,c
  2889  000AAC  5810               	subwfb	(___aomod@dividend+4)^0,w,c
  2890  000AAE  5019               	movf	(___aomod@divisor+5)^0,w,c
  2891  000AB0  5811               	subwfb	(___aomod@dividend+5)^0,w,c
  2892  000AB2  501A               	movf	(___aomod@divisor+6)^0,w,c
  2893  000AB4  5812               	subwfb	(___aomod@dividend+6)^0,w,c
  2894  000AB6  501B               	movf	(___aomod@divisor+7)^0,w,c
  2895  000AB8  5813               	subwfb	(___aomod@dividend+7)^0,w,c
  2896  000ABA  A0D8               	btfss	status,0,c
  2897  000ABC  EF62  F005         	goto	u1641
  2898  000AC0  EF64  F005         	goto	u1640
  2899  000AC4                     u1641:
  2900  000AC4  EF74  F005         	goto	l2462
  2901  000AC8                     u1640:
  2902  000AC8  5014               	movf	___aomod@divisor^0,w,c
  2903  000ACA  5E0C               	subwf	___aomod@dividend^0,f,c
  2904  000ACC  5015               	movf	(___aomod@divisor+1)^0,w,c
  2905  000ACE  5A0D               	subwfb	(___aomod@dividend+1)^0,f,c
  2906  000AD0  5016               	movf	(___aomod@divisor+2)^0,w,c
  2907  000AD2  5A0E               	subwfb	(___aomod@dividend+2)^0,f,c
  2908  000AD4  5017               	movf	(___aomod@divisor+3)^0,w,c
  2909  000AD6  5A0F               	subwfb	(___aomod@dividend+3)^0,f,c
  2910  000AD8  5018               	movf	(___aomod@divisor+4)^0,w,c
  2911  000ADA  5A10               	subwfb	(___aomod@dividend+4)^0,f,c
  2912  000ADC  5019               	movf	(___aomod@divisor+5)^0,w,c
  2913  000ADE  5A11               	subwfb	(___aomod@dividend+5)^0,f,c
  2914  000AE0  501A               	movf	(___aomod@divisor+6)^0,w,c
  2915  000AE2  5A12               	subwfb	(___aomod@dividend+6)^0,f,c
  2916  000AE4  501B               	movf	(___aomod@divisor+7)^0,w,c
  2917  000AE6  5A13               	subwfb	(___aomod@dividend+7)^0,f,c
  2918  000AE8                     l2462:
  2919  000AE8  90D8               	bcf	status,0,c
  2920  000AEA  321B               	rrcf	(___aomod@divisor+7)^0,f,c
  2921  000AEC  321A               	rrcf	(___aomod@divisor+6)^0,f,c
  2922  000AEE  3219               	rrcf	(___aomod@divisor+5)^0,f,c
  2923  000AF0  3218               	rrcf	(___aomod@divisor+4)^0,f,c
  2924  000AF2  3217               	rrcf	(___aomod@divisor+3)^0,f,c
  2925  000AF4  3216               	rrcf	(___aomod@divisor+2)^0,f,c
  2926  000AF6  3215               	rrcf	(___aomod@divisor+1)^0,f,c
  2927  000AF8  3214               	rrcf	___aomod@divisor^0,f,c
  2928  000AFA  2E1C               	decfsz	___aomod@counter^0,f,c
  2929  000AFC  EF4D  F005         	goto	l2458
  2930  000B00                     l2466:
  2931  000B00  501D               	movf	___aomod@sign^0,w,c
  2932  000B02  B4D8               	btfsc	status,2,c
  2933  000B04  EF86  F005         	goto	u1651
  2934  000B08  EF88  F005         	goto	u1650
  2935  000B0C                     u1651:
  2936  000B0C  EF98  F005         	goto	l2470
  2937  000B10                     u1650:
  2938  000B10  1E13               	comf	(___aomod@dividend+7)^0,f,c
  2939  000B12  1E12               	comf	(___aomod@dividend+6)^0,f,c
  2940  000B14  1E11               	comf	(___aomod@dividend+5)^0,f,c
  2941  000B16  1E10               	comf	(___aomod@dividend+4)^0,f,c
  2942  000B18  1E0F               	comf	(___aomod@dividend+3)^0,f,c
  2943  000B1A  1E0E               	comf	(___aomod@dividend+2)^0,f,c
  2944  000B1C  1E0D               	comf	(___aomod@dividend+1)^0,f,c
  2945  000B1E  6C0C               	negf	___aomod@dividend^0,c
  2946  000B20  0E00               	movlw	0
  2947  000B22  220D               	addwfc	(___aomod@dividend+1)^0,f,c
  2948  000B24  220E               	addwfc	(___aomod@dividend+2)^0,f,c
  2949  000B26  220F               	addwfc	(___aomod@dividend+3)^0,f,c
  2950  000B28  2210               	addwfc	(___aomod@dividend+4)^0,f,c
  2951  000B2A  2211               	addwfc	(___aomod@dividend+5)^0,f,c
  2952  000B2C  2212               	addwfc	(___aomod@dividend+6)^0,f,c
  2953  000B2E  2213               	addwfc	(___aomod@dividend+7)^0,f,c
  2954  000B30                     l2470:
  2955  000B30  C00C  F00C         	movff	___aomod@dividend,?___aomod
  2956  000B34  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  2957  000B38  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  2958  000B3C  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  2959  000B40  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  2960  000B44  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  2961  000B48  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  2962  000B4C  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  2963  000B50  0012               	return		;funcret
  2964  000B52                     __end_of___aomod:
  2965                           	callstack 0
  2966                           
  2967 ;; *************** function ___aodiv *****************
  2968 ;; Defined at:
  2969 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  dividend        8   11[COMRAM] long long 
  2972 ;;  divisor         8   19[COMRAM] long long 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  quotient        8   29[COMRAM] long long 
  2975 ;;  sign            1   28[COMRAM] unsigned char 
  2976 ;;  counter         1   27[COMRAM] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  8   11[COMRAM] long long 
  2979 ;; Registers used:
  2980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2986 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;Total ram usage:       26 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    4
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_dtoa
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text10
  3001  000866                     __ptext10:
  3002                           	callstack 0
  3003  000866                     ___aodiv:
  3004                           	callstack 22
  3005  000866  0E00               	movlw	0
  3006  000868  6E1D               	movwf	___aodiv@sign^0,c
  3007  00086A  BE1B               	btfsc	(___aodiv@divisor+7)^0,7,c
  3008  00086C  EF3C  F004         	goto	u1530
  3009  000870  EF3A  F004         	goto	u1531
  3010  000874                     u1531:
  3011  000874  EF4E  F004         	goto	l2402
  3012  000878                     u1530:
  3013  000878  1E1B               	comf	(___aodiv@divisor+7)^0,f,c
  3014  00087A  1E1A               	comf	(___aodiv@divisor+6)^0,f,c
  3015  00087C  1E19               	comf	(___aodiv@divisor+5)^0,f,c
  3016  00087E  1E18               	comf	(___aodiv@divisor+4)^0,f,c
  3017  000880  1E17               	comf	(___aodiv@divisor+3)^0,f,c
  3018  000882  1E16               	comf	(___aodiv@divisor+2)^0,f,c
  3019  000884  1E15               	comf	(___aodiv@divisor+1)^0,f,c
  3020  000886  6C14               	negf	___aodiv@divisor^0,c
  3021  000888  0E00               	movlw	0
  3022  00088A  2215               	addwfc	(___aodiv@divisor+1)^0,f,c
  3023  00088C  2216               	addwfc	(___aodiv@divisor+2)^0,f,c
  3024  00088E  2217               	addwfc	(___aodiv@divisor+3)^0,f,c
  3025  000890  2218               	addwfc	(___aodiv@divisor+4)^0,f,c
  3026  000892  2219               	addwfc	(___aodiv@divisor+5)^0,f,c
  3027  000894  221A               	addwfc	(___aodiv@divisor+6)^0,f,c
  3028  000896  221B               	addwfc	(___aodiv@divisor+7)^0,f,c
  3029  000898  0E01               	movlw	1
  3030  00089A  6E1D               	movwf	___aodiv@sign^0,c
  3031  00089C                     l2402:
  3032  00089C  BE13               	btfsc	(___aodiv@dividend+7)^0,7,c
  3033  00089E  EF55  F004         	goto	u1540
  3034  0008A2  EF53  F004         	goto	u1541
  3035  0008A6                     u1541:
  3036  0008A6  EF67  F004         	goto	l2408
  3037  0008AA                     u1540:
  3038  0008AA  1E13               	comf	(___aodiv@dividend+7)^0,f,c
  3039  0008AC  1E12               	comf	(___aodiv@dividend+6)^0,f,c
  3040  0008AE  1E11               	comf	(___aodiv@dividend+5)^0,f,c
  3041  0008B0  1E10               	comf	(___aodiv@dividend+4)^0,f,c
  3042  0008B2  1E0F               	comf	(___aodiv@dividend+3)^0,f,c
  3043  0008B4  1E0E               	comf	(___aodiv@dividend+2)^0,f,c
  3044  0008B6  1E0D               	comf	(___aodiv@dividend+1)^0,f,c
  3045  0008B8  6C0C               	negf	___aodiv@dividend^0,c
  3046  0008BA  0E00               	movlw	0
  3047  0008BC  220D               	addwfc	(___aodiv@dividend+1)^0,f,c
  3048  0008BE  220E               	addwfc	(___aodiv@dividend+2)^0,f,c
  3049  0008C0  220F               	addwfc	(___aodiv@dividend+3)^0,f,c
  3050  0008C2  2210               	addwfc	(___aodiv@dividend+4)^0,f,c
  3051  0008C4  2211               	addwfc	(___aodiv@dividend+5)^0,f,c
  3052  0008C6  2212               	addwfc	(___aodiv@dividend+6)^0,f,c
  3053  0008C8  2213               	addwfc	(___aodiv@dividend+7)^0,f,c
  3054  0008CA  0E01               	movlw	1
  3055  0008CC  1A1D               	xorwf	___aodiv@sign^0,f,c
  3056  0008CE                     l2408:
  3057  0008CE  EE20  F01E         	lfsr	2,___aodiv@quotient
  3058  0008D2  0E07               	movlw	7
  3059  0008D4                     u1551:
  3060  0008D4  6ADE               	clrf	postinc2,c
  3061  0008D6  06E8               	decf	wreg,f,c
  3062  0008D8  E2FD               	bc	u1551
  3063  0008DA  5014               	movf	___aodiv@divisor^0,w,c
  3064  0008DC  1015               	iorwf	(___aodiv@divisor+1)^0,w,c
  3065  0008DE  1016               	iorwf	(___aodiv@divisor+2)^0,w,c
  3066  0008E0  1017               	iorwf	(___aodiv@divisor+3)^0,w,c
  3067  0008E2  1018               	iorwf	(___aodiv@divisor+4)^0,w,c
  3068  0008E4  1019               	iorwf	(___aodiv@divisor+5)^0,w,c
  3069  0008E6  101A               	iorwf	(___aodiv@divisor+6)^0,w,c
  3070  0008E8  101B               	iorwf	(___aodiv@divisor+7)^0,w,c
  3071  0008EA  B4D8               	btfsc	status,2,c
  3072  0008EC  EF7A  F004         	goto	u1561
  3073  0008F0  EF7C  F004         	goto	u1560
  3074  0008F4                     u1561:
  3075  0008F4  EFCE  F004         	goto	l2430
  3076  0008F8                     u1560:
  3077  0008F8  0E01               	movlw	1
  3078  0008FA  6E1C               	movwf	___aodiv@counter^0,c
  3079  0008FC  EF8A  F004         	goto	l2416
  3080  000900                     l2414:
  3081  000900  90D8               	bcf	status,0,c
  3082  000902  3614               	rlcf	___aodiv@divisor^0,f,c
  3083  000904  3615               	rlcf	(___aodiv@divisor+1)^0,f,c
  3084  000906  3616               	rlcf	(___aodiv@divisor+2)^0,f,c
  3085  000908  3617               	rlcf	(___aodiv@divisor+3)^0,f,c
  3086  00090A  3618               	rlcf	(___aodiv@divisor+4)^0,f,c
  3087  00090C  3619               	rlcf	(___aodiv@divisor+5)^0,f,c
  3088  00090E  361A               	rlcf	(___aodiv@divisor+6)^0,f,c
  3089  000910  361B               	rlcf	(___aodiv@divisor+7)^0,f,c
  3090  000912  2A1C               	incf	___aodiv@counter^0,f,c
  3091  000914                     l2416:
  3092  000914  AE1B               	btfss	(___aodiv@divisor+7)^0,7,c
  3093  000916  EF8F  F004         	goto	u1571
  3094  00091A  EF91  F004         	goto	u1570
  3095  00091E                     u1571:
  3096  00091E  EF80  F004         	goto	l2414
  3097  000922                     u1570:
  3098  000922                     l2418:
  3099  000922  90D8               	bcf	status,0,c
  3100  000924  361E               	rlcf	___aodiv@quotient^0,f,c
  3101  000926  361F               	rlcf	(___aodiv@quotient+1)^0,f,c
  3102  000928  3620               	rlcf	(___aodiv@quotient+2)^0,f,c
  3103  00092A  3621               	rlcf	(___aodiv@quotient+3)^0,f,c
  3104  00092C  3622               	rlcf	(___aodiv@quotient+4)^0,f,c
  3105  00092E  3623               	rlcf	(___aodiv@quotient+5)^0,f,c
  3106  000930  3624               	rlcf	(___aodiv@quotient+6)^0,f,c
  3107  000932  3625               	rlcf	(___aodiv@quotient+7)^0,f,c
  3108  000934  5014               	movf	___aodiv@divisor^0,w,c
  3109  000936  5C0C               	subwf	___aodiv@dividend^0,w,c
  3110  000938  5015               	movf	(___aodiv@divisor+1)^0,w,c
  3111  00093A  580D               	subwfb	(___aodiv@dividend+1)^0,w,c
  3112  00093C  5016               	movf	(___aodiv@divisor+2)^0,w,c
  3113  00093E  580E               	subwfb	(___aodiv@dividend+2)^0,w,c
  3114  000940  5017               	movf	(___aodiv@divisor+3)^0,w,c
  3115  000942  580F               	subwfb	(___aodiv@dividend+3)^0,w,c
  3116  000944  5018               	movf	(___aodiv@divisor+4)^0,w,c
  3117  000946  5810               	subwfb	(___aodiv@dividend+4)^0,w,c
  3118  000948  5019               	movf	(___aodiv@divisor+5)^0,w,c
  3119  00094A  5811               	subwfb	(___aodiv@dividend+5)^0,w,c
  3120  00094C  501A               	movf	(___aodiv@divisor+6)^0,w,c
  3121  00094E  5812               	subwfb	(___aodiv@dividend+6)^0,w,c
  3122  000950  501B               	movf	(___aodiv@divisor+7)^0,w,c
  3123  000952  5813               	subwfb	(___aodiv@dividend+7)^0,w,c
  3124  000954  A0D8               	btfss	status,0,c
  3125  000956  EFAF  F004         	goto	u1581
  3126  00095A  EFB1  F004         	goto	u1580
  3127  00095E                     u1581:
  3128  00095E  EFC2  F004         	goto	l2426
  3129  000962                     u1580:
  3130  000962  5014               	movf	___aodiv@divisor^0,w,c
  3131  000964  5E0C               	subwf	___aodiv@dividend^0,f,c
  3132  000966  5015               	movf	(___aodiv@divisor+1)^0,w,c
  3133  000968  5A0D               	subwfb	(___aodiv@dividend+1)^0,f,c
  3134  00096A  5016               	movf	(___aodiv@divisor+2)^0,w,c
  3135  00096C  5A0E               	subwfb	(___aodiv@dividend+2)^0,f,c
  3136  00096E  5017               	movf	(___aodiv@divisor+3)^0,w,c
  3137  000970  5A0F               	subwfb	(___aodiv@dividend+3)^0,f,c
  3138  000972  5018               	movf	(___aodiv@divisor+4)^0,w,c
  3139  000974  5A10               	subwfb	(___aodiv@dividend+4)^0,f,c
  3140  000976  5019               	movf	(___aodiv@divisor+5)^0,w,c
  3141  000978  5A11               	subwfb	(___aodiv@dividend+5)^0,f,c
  3142  00097A  501A               	movf	(___aodiv@divisor+6)^0,w,c
  3143  00097C  5A12               	subwfb	(___aodiv@dividend+6)^0,f,c
  3144  00097E  501B               	movf	(___aodiv@divisor+7)^0,w,c
  3145  000980  5A13               	subwfb	(___aodiv@dividend+7)^0,f,c
  3146  000982  801E               	bsf	___aodiv@quotient^0,0,c
  3147  000984                     l2426:
  3148  000984  90D8               	bcf	status,0,c
  3149  000986  321B               	rrcf	(___aodiv@divisor+7)^0,f,c
  3150  000988  321A               	rrcf	(___aodiv@divisor+6)^0,f,c
  3151  00098A  3219               	rrcf	(___aodiv@divisor+5)^0,f,c
  3152  00098C  3218               	rrcf	(___aodiv@divisor+4)^0,f,c
  3153  00098E  3217               	rrcf	(___aodiv@divisor+3)^0,f,c
  3154  000990  3216               	rrcf	(___aodiv@divisor+2)^0,f,c
  3155  000992  3215               	rrcf	(___aodiv@divisor+1)^0,f,c
  3156  000994  3214               	rrcf	___aodiv@divisor^0,f,c
  3157  000996  2E1C               	decfsz	___aodiv@counter^0,f,c
  3158  000998  EF91  F004         	goto	l2418
  3159  00099C                     l2430:
  3160  00099C  501D               	movf	___aodiv@sign^0,w,c
  3161  00099E  B4D8               	btfsc	status,2,c
  3162  0009A0  EFD4  F004         	goto	u1591
  3163  0009A4  EFD6  F004         	goto	u1590
  3164  0009A8                     u1591:
  3165  0009A8  EFE6  F004         	goto	l2434
  3166  0009AC                     u1590:
  3167  0009AC  1E25               	comf	(___aodiv@quotient+7)^0,f,c
  3168  0009AE  1E24               	comf	(___aodiv@quotient+6)^0,f,c
  3169  0009B0  1E23               	comf	(___aodiv@quotient+5)^0,f,c
  3170  0009B2  1E22               	comf	(___aodiv@quotient+4)^0,f,c
  3171  0009B4  1E21               	comf	(___aodiv@quotient+3)^0,f,c
  3172  0009B6  1E20               	comf	(___aodiv@quotient+2)^0,f,c
  3173  0009B8  1E1F               	comf	(___aodiv@quotient+1)^0,f,c
  3174  0009BA  6C1E               	negf	___aodiv@quotient^0,c
  3175  0009BC  0E00               	movlw	0
  3176  0009BE  221F               	addwfc	(___aodiv@quotient+1)^0,f,c
  3177  0009C0  2220               	addwfc	(___aodiv@quotient+2)^0,f,c
  3178  0009C2  2221               	addwfc	(___aodiv@quotient+3)^0,f,c
  3179  0009C4  2222               	addwfc	(___aodiv@quotient+4)^0,f,c
  3180  0009C6  2223               	addwfc	(___aodiv@quotient+5)^0,f,c
  3181  0009C8  2224               	addwfc	(___aodiv@quotient+6)^0,f,c
  3182  0009CA  2225               	addwfc	(___aodiv@quotient+7)^0,f,c
  3183  0009CC                     l2434:
  3184  0009CC  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  3185  0009D0  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  3186  0009D4  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  3187  0009D8  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  3188  0009DC  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  3189  0009E0  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  3190  0009E4  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  3191  0009E8  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  3192  0009EC  0012               	return		;funcret
  3193  0009EE                     __end_of___aodiv:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _ctoa *****************
  3197 ;; Defined at:
  3198 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3201 ;;		 -> NULL(0), 
  3202 ;;  c               1   24[COMRAM] unsigned char 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  w               2   28[COMRAM] int 
  3205 ;;  l               2   26[COMRAM] int 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  2   22[COMRAM] int 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3215 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;Total ram usage:        8 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    7
  3222 ;; This function calls:
  3223 ;;		_fputc
  3224 ;; This function is called by:
  3225 ;;		_vfpfcnvrt
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text11
  3230  000C50                     __ptext11:
  3231                           	callstack 0
  3232  000C50                     _ctoa:
  3233                           	callstack 20
  3234  000C50                     
  3235                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3236  000C50  5047               	movf	_width^0,w,c
  3237  000C52  1048               	iorwf	(_width+1)^0,w,c
  3238  000C54  A4D8               	btfss	status,2,c
  3239  000C56  EF2F  F006         	goto	u1711
  3240  000C5A  EF31  F006         	goto	u1710
  3241  000C5E                     u1711:
  3242  000C5E  EF37  F006         	goto	l2504
  3243  000C62                     u1710:
  3244  000C62  C047  F01D         	movff	_width,ctoa@w
  3245  000C66  C048  F01E         	movff	_width+1,ctoa@w+1
  3246  000C6A  EF3D  F006         	goto	l2506
  3247  000C6E                     l2504:
  3248  000C6E  0EFF               	movlw	255
  3249  000C70  2447               	addwf	_width^0,w,c
  3250  000C72  6E1D               	movwf	ctoa@w^0,c
  3251  000C74  0EFF               	movlw	255
  3252  000C76  2048               	addwfc	(_width+1)^0,w,c
  3253  000C78  6E1E               	movwf	(ctoa@w+1)^0,c
  3254  000C7A                     l2506:
  3255                           
  3256                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3257  000C7A  A04B               	btfss	_flags^0,0,c
  3258  000C7C  EF42  F006         	goto	u1721
  3259  000C80  EF44  F006         	goto	u1720
  3260  000C84                     u1721:
  3261  000C84  EF4D  F006         	goto	l2510
  3262  000C88                     u1720:
  3263  000C88                     
  3264                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3265  000C88  C019  F00E         	movff	ctoa@c,fputc@c
  3266  000C8C  6A0F               	clrf	(fputc@c+1)^0,c
  3267  000C8E  C017  F010         	movff	ctoa@fp,fputc@fp
  3268  000C92  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  3269  000C96  ECF3  F006         	call	_fputc	;wreg free
  3270  000C9A                     l2510:
  3271                           
  3272                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3273  000C9A  BE1E               	btfsc	(ctoa@w+1)^0,7,c
  3274  000C9C  EF52  F006         	goto	u1731
  3275  000CA0  EF54  F006         	goto	u1730
  3276  000CA4                     u1731:
  3277  000CA4  EF56  F006         	goto	l2514
  3278  000CA8                     u1730:
  3279  000CA8  EF5A  F006         	goto	l1055
  3280  000CAC                     l2514:
  3281  000CAC  0E00               	movlw	0
  3282  000CAE  6E1E               	movwf	(ctoa@w+1)^0,c
  3283  000CB0  0E00               	movlw	0
  3284  000CB2  6E1D               	movwf	ctoa@w^0,c
  3285  000CB4                     l1055:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3288  000CB4  0E00               	movlw	0
  3289  000CB6  6E1C               	movwf	(ctoa@l+1)^0,c
  3290  000CB8  0E00               	movlw	0
  3291  000CBA  6E1B               	movwf	ctoa@l^0,c
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3294  000CBC  EF6C  F006         	goto	l2520
  3295  000CC0                     l2516:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3298  000CC0  0E00               	movlw	0
  3299  000CC2  6E0F               	movwf	(fputc@c+1)^0,c
  3300  000CC4  0E20               	movlw	32
  3301  000CC6  6E0E               	movwf	fputc@c^0,c
  3302  000CC8  C017  F010         	movff	ctoa@fp,fputc@fp
  3303  000CCC  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  3304  000CD0  ECF3  F006         	call	_fputc	;wreg free
  3305  000CD4                     
  3306                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3307  000CD4  4A1B               	infsnz	ctoa@l^0,f,c
  3308  000CD6  2A1C               	incf	(ctoa@l+1)^0,f,c
  3309  000CD8                     l2520:
  3310                           
  3311                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3312  000CD8  501D               	movf	ctoa@w^0,w,c
  3313  000CDA  5C1B               	subwf	ctoa@l^0,w,c
  3314  000CDC  501C               	movf	(ctoa@l+1)^0,w,c
  3315  000CDE  0A80               	xorlw	128
  3316  000CE0  6E1A               	movwf	??_ctoa^0,c
  3317  000CE2  501E               	movf	(ctoa@w+1)^0,w,c
  3318  000CE4  0A80               	xorlw	128
  3319  000CE6  581A               	subwfb	??_ctoa^0,w,c
  3320  000CE8  A0D8               	btfss	status,0,c
  3321  000CEA  EF79  F006         	goto	u1741
  3322  000CEE  EF7B  F006         	goto	u1740
  3323  000CF2                     u1741:
  3324  000CF2  EF60  F006         	goto	l2516
  3325  000CF6                     u1740:
  3326  000CF6                     
  3327                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3328  000CF6  B04B               	btfsc	_flags^0,0,c
  3329  000CF8  EF80  F006         	goto	u1751
  3330  000CFC  EF82  F006         	goto	u1750
  3331  000D00                     u1751:
  3332  000D00  EF8B  F006         	goto	l2524
  3333  000D04                     u1750:
  3334  000D04                     
  3335                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3336  000D04  C019  F00E         	movff	ctoa@c,fputc@c
  3337  000D08  6A0F               	clrf	(fputc@c+1)^0,c
  3338  000D0A  C017  F010         	movff	ctoa@fp,fputc@fp
  3339  000D0E  C018  F011         	movff	ctoa@fp+1,fputc@fp+1
  3340  000D12  ECF3  F006         	call	_fputc	;wreg free
  3341  000D16                     l2524:
  3342                           
  3343                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3344  000D16  0E01               	movlw	1
  3345  000D18  241B               	addwf	ctoa@l^0,w,c
  3346  000D1A  6E17               	movwf	?_ctoa^0,c
  3347  000D1C  0E00               	movlw	0
  3348  000D1E  201C               	addwfc	(ctoa@l+1)^0,w,c
  3349  000D20  6E18               	movwf	(?_ctoa+1)^0,c
  3350  000D22  0012               	return		;funcret
  3351  000D24                     __end_of_ctoa:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _fputc *****************
  3355 ;; Defined at:
  3356 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  c               2   13[COMRAM] int 
  3359 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3360 ;;		 -> NULL(0), 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2   13[COMRAM] int 
  3365 ;; Registers used:
  3366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;Total ram usage:        9 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    6
  3379 ;; This function calls:
  3380 ;;		_putch
  3381 ;; This function is called by:
  3382 ;;		_pad
  3383 ;;		_ctoa
  3384 ;;		_vfpfcnvrt
  3385 ;;		_fputs
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text12
  3390  000DE6                     __ptext12:
  3391                           	callstack 0
  3392  000DE6                     _fputc:
  3393                           	callstack 21
  3394  000DE6  5010               	movf	fputc@fp^0,w,c
  3395  000DE8  1011               	iorwf	(fputc@fp+1)^0,w,c
  3396  000DEA  B4D8               	btfsc	status,2,c
  3397  000DEC  EFFA  F006         	goto	u1471
  3398  000DF0  EFFC  F006         	goto	u1470
  3399  000DF4                     u1471:
  3400  000DF4  EF05  F007         	goto	l2366
  3401  000DF8                     u1470:
  3402  000DF8  5010               	movf	fputc@fp^0,w,c
  3403  000DFA  1011               	iorwf	(fputc@fp+1)^0,w,c
  3404  000DFC  A4D8               	btfss	status,2,c
  3405  000DFE  EF03  F007         	goto	u1481
  3406  000E02  EF05  F007         	goto	u1480
  3407  000E06                     u1481:
  3408  000E06  EF0A  F007         	goto	l2368
  3409  000E0A                     u1480:
  3410  000E0A                     l2366:
  3411  000E0A  500E               	movf	fputc@c^0,w,c
  3412  000E0C  ECB9  F008         	call	_putch
  3413  000E10  EF3D  F007         	goto	l1120
  3414  000E14                     l2368:
  3415  000E14  EE20 F004          	lfsr	2,4
  3416  000E18  5010               	movf	fputc@fp^0,w,c
  3417  000E1A  26D9               	addwf	fsr2l,f,c
  3418  000E1C  5011               	movf	(fputc@fp+1)^0,w,c
  3419  000E1E  22DA               	addwfc	fsr2h,f,c
  3420  000E20  50DE               	movf	postinc2,w,c
  3421  000E22  10DE               	iorwf	postinc2,w,c
  3422  000E24  B4D8               	btfsc	status,2,c
  3423  000E26  EF17  F007         	goto	u1491
  3424  000E2A  EF19  F007         	goto	u1490
  3425  000E2E                     u1491:
  3426  000E2E  EF34  F007         	goto	l2372
  3427  000E32                     u1490:
  3428  000E32  EE20 F004          	lfsr	2,4
  3429  000E36  5010               	movf	fputc@fp^0,w,c
  3430  000E38  26D9               	addwf	fsr2l,f,c
  3431  000E3A  5011               	movf	(fputc@fp+1)^0,w,c
  3432  000E3C  22DA               	addwfc	fsr2h,f,c
  3433  000E3E  EE10 F002          	lfsr	1,2
  3434  000E42  5010               	movf	fputc@fp^0,w,c
  3435  000E44  26E1               	addwf	fsr1l,f,c
  3436  000E46  5011               	movf	(fputc@fp+1)^0,w,c
  3437  000E48  22E2               	addwfc	fsr1h,f,c
  3438  000E4A  50DE               	movf	postinc2,w,c
  3439  000E4C  5CE6               	subwf	postinc1,w,c
  3440  000E4E  50E6               	movf	postinc1,w,c
  3441  000E50  0A80               	xorlw	128
  3442  000E52  6E16               	movwf	(??_fputc+4)^0,c
  3443  000E54  50DE               	movf	postinc2,w,c
  3444  000E56  0A80               	xorlw	128
  3445  000E58  5816               	subwfb	(??_fputc+4)^0,w,c
  3446  000E5A  B0D8               	btfsc	status,0,c
  3447  000E5C  EF32  F007         	goto	u1501
  3448  000E60  EF34  F007         	goto	u1500
  3449  000E64                     u1501:
  3450  000E64  EF3D  F007         	goto	l1120
  3451  000E68                     u1500:
  3452  000E68                     l2372:
  3453  000E68  EE20 F002          	lfsr	2,2
  3454  000E6C  5010               	movf	fputc@fp^0,w,c
  3455  000E6E  26D9               	addwf	fsr2l,f,c
  3456  000E70  5011               	movf	(fputc@fp+1)^0,w,c
  3457  000E72  22DA               	addwfc	fsr2h,f,c
  3458  000E74  2ADE               	incf	postinc2,f,c
  3459  000E76  0E00               	movlw	0
  3460  000E78  22DD               	addwfc	postdec2,f,c
  3461  000E7A                     l1120:
  3462  000E7A  0012               	return		;funcret
  3463  000E7C                     __end_of_fputc:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _putch *****************
  3467 ;; Defined at:
  3468 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  txData          1    wreg     unsigned char 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  txData          1   12[COMRAM] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;Total ram usage:        1 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    5
  3489 ;; This function calls:
  3490 ;;		_EUSART1_Write
  3491 ;; This function is called by:
  3492 ;;		_fputc
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text13
  3497  001172                     __ptext13:
  3498                           	callstack 0
  3499  001172                     _putch:
  3500                           	callstack 21
  3501                           
  3502                           ;incstack = 0
  3503                           ;putch@txData stored from wreg
  3504  001172  6E0D               	movwf	putch@txData^0,c
  3505  001174                     
  3506                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3507  001174  500D               	movf	putch@txData^0,w,c
  3508  001176  EC99  F008         	call	_EUSART1_Write
  3509  00117A  0012               	return		;funcret
  3510  00117C                     __end_of_putch:
  3511                           	callstack 0
  3512                           
  3513 ;; *************** function _EUSART1_Write *****************
  3514 ;; Defined at:
  3515 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  txData          1    wreg     unsigned char 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  txData          1   11[COMRAM] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;Total ram usage:        1 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    4
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_putch
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text14
  3544  001132                     __ptext14:
  3545                           	callstack 0
  3546  001132                     _EUSART1_Write:
  3547                           	callstack 21
  3548                           
  3549                           ;incstack = 0
  3550                           ;EUSART1_Write@txData stored from wreg
  3551  001132  6E0C               	movwf	EUSART1_Write@txData^0,c
  3552  001134                     l288:
  3553                           
  3554                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3555  001134  A89E               	btfss	158,4,c	;volatile
  3556  001136  EF9F  F008         	goto	u1461
  3557  00113A  EFA1  F008         	goto	u1460
  3558  00113E                     u1461:
  3559  00113E  EF9A  F008         	goto	l288
  3560  001142                     u1460:
  3561  001142                     
  3562                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3563  001142  C00C  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3564  001146  0012               	return		;funcret
  3565  001148                     __end_of_EUSART1_Write:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function _TMR0_WriteTimer *****************
  3569 ;; Defined at:
  3570 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  timerVal        2   11[COMRAM] unsigned short 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;Total ram usage:        2 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; Hardware stack levels required when called:    4
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text15
  3599  00117C                     __ptext15:
  3600                           	callstack 0
  3601  00117C                     _TMR0_WriteTimer:
  3602                           	callstack 26
  3603  00117C                     
  3604                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  3605  00117C  500D               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  3606  00117E  6ED7               	movwf	215,c	;volatile
  3607  001180                     
  3608                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  3609  001180  C00C  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  3610  001184  0012               	return		;funcret
  3611  001186                     __end_of_TMR0_WriteTimer:
  3612                           	callstack 0
  3613                           
  3614 ;; *************** function _SYSTEM_Initialize *****************
  3615 ;; Defined at:
  3616 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;Total ram usage:        0 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    6
  3637 ;; This function calls:
  3638 ;;		_ADC_Initialize
  3639 ;;		_EUSART1_Initialize
  3640 ;;		_INTERRUPT_Initialize
  3641 ;;		_OSCILLATOR_Initialize
  3642 ;;		_PIN_MANAGER_Initialize
  3643 ;;		_TMR0_Initialize
  3644 ;; This function is called by:
  3645 ;;		_main
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text16
  3650  001118                     __ptext16:
  3651                           	callstack 0
  3652  001118                     _SYSTEM_Initialize:
  3653                           	callstack 24
  3654  001118                     
  3655                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3656  001118  ECDC  F008         	call	_INTERRUPT_Initialize	;wreg free
  3657  00111C                     
  3658                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3659  00111C  EC40  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  3660  001120                     
  3661                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3662  001120  EC7E  F008         	call	_OSCILLATOR_Initialize	;wreg free
  3663  001124                     
  3664                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  3665  001124  ECA4  F008         	call	_ADC_Initialize	;wreg free
  3666  001128                     
  3667                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3668  001128  EC25  F008         	call	_TMR0_Initialize	;wreg free
  3669  00112C                     
  3670                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  3671  00112C  ECB2  F007         	call	_EUSART1_Initialize	;wreg free
  3672  001130  0012               	return		;funcret
  3673  001132                     __end_of_SYSTEM_Initialize:
  3674                           	callstack 0
  3675                           
  3676 ;; *************** function _TMR0_Initialize *****************
  3677 ;; Defined at:
  3678 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;Total ram usage:        2 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    5
  3699 ;; This function calls:
  3700 ;;		_TMR0_SetInterruptHandler
  3701 ;; This function is called by:
  3702 ;;		_SYSTEM_Initialize
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           	psect	text17
  3707  00104A                     __ptext17:
  3708                           	callstack 0
  3709  00104A                     _TMR0_Initialize:
  3710                           	callstack 24
  3711  00104A                     
  3712                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3713  00104A  9CD5               	bcf	213,6,c	;volatile
  3714  00104C                     
  3715                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  3716  00104C  0E00               	movlw	0
  3717  00104E  6ED7               	movwf	215,c	;volatile
  3718                           
  3719                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  3720  001050  0E00               	movlw	0
  3721  001052  6ED6               	movwf	214,c	;volatile
  3722  001054                     
  3723                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3724  001054  50D6               	movf	214,w,c	;volatile
  3725  001056  CFD7 F00E          	movff	4055,??_TMR0_Initialize	;volatile
  3726  00105A  6A0F               	clrf	(??_TMR0_Initialize+1)^0,c
  3727  00105C  C00E  F00F         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3728  001060  6A0E               	clrf	??_TMR0_Initialize^0,c
  3729  001062  100E               	iorwf	??_TMR0_Initialize^0,w,c
  3730  001064  6E4D               	movwf	_timer0ReloadVal^0,c	;volatile
  3731  001066  500F               	movf	(??_TMR0_Initialize+1)^0,w,c
  3732  001068  6E4E               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  3733  00106A                     
  3734                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  3735  00106A  94F2               	bcf	242,2,c	;volatile
  3736  00106C                     
  3737                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  3738  00106C  8AF2               	bsf	242,5,c	;volatile
  3739  00106E                     
  3740                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3741  00106E  0EBE               	movlw	low _TMR0_DefaultInterruptHandler
  3742  001070  6E0C               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3743  001072  0E11               	movlw	high _TMR0_DefaultInterruptHandler
  3744  001074  6E0D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3745  001076  ECC3  F008         	call	_TMR0_SetInterruptHandler	;wreg free
  3746  00107A                     
  3747                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  3748  00107A  0E9F               	movlw	159
  3749  00107C  6ED5               	movwf	213,c	;volatile
  3750  00107E  0012               	return		;funcret
  3751  001080                     __end_of_TMR0_Initialize:
  3752                           	callstack 0
  3753                           
  3754 ;; *************** function _TMR0_SetInterruptHandler *****************
  3755 ;; Defined at:
  3756 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  InterruptHan    2   11[COMRAM] PTR FTN()void 
  3759 ;;		 -> TMR0_DefaultInterruptHandler(1), myTMR0ISR(1), 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;Total ram usage:        2 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    4
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_main
  3782 ;;		_TMR0_Initialize
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text18
  3787  001186                     __ptext18:
  3788                           	callstack 0
  3789  001186                     _TMR0_SetInterruptHandler:
  3790                           	callstack 26
  3791  001186                     
  3792                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  3793  001186  C00C  F0AA         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3794  00118A  C00D  F0AB         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3795  00118E  0012               	return		;funcret
  3796  001190                     __end_of_TMR0_SetInterruptHandler:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _PIN_MANAGER_Initialize *****************
  3800 ;; Defined at:
  3801 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;Total ram usage:        0 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:    4
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_SYSTEM_Initialize
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text19
  3830  001080                     __ptext19:
  3831                           	callstack 0
  3832  001080                     _PIN_MANAGER_Initialize:
  3833                           	callstack 25
  3834  001080                     
  3835                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3836  001080  0E00               	movlw	0
  3837  001082  6E89               	movwf	137,c	;volatile
  3838                           
  3839                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3840  001084  0E00               	movlw	0
  3841  001086  6E8A               	movwf	138,c	;volatile
  3842                           
  3843                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3844  001088  0E00               	movlw	0
  3845  00108A  6E8B               	movwf	139,c	;volatile
  3846                           
  3847                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  3848  00108C  0EBF               	movlw	191
  3849  00108E  6E92               	movwf	146,c	;volatile
  3850  001090                     
  3851                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  3852  001090  6893               	setf	147,c	;volatile
  3853                           
  3854                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  3855  001092  0EBF               	movlw	191
  3856  001094  6E94               	movwf	148,c	;volatile
  3857                           
  3858                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3859  001096  0E3C               	movlw	60
  3860  001098  010F               	movlb	15	; () banked
  3861  00109A  6F3A               	movwf	58,b	;volatile
  3862                           
  3863                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  3864  00109C  0E3F               	movlw	63
  3865  00109E  6F39               	movwf	57,b	;volatile
  3866                           
  3867                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  3868  0010A0  0E2F               	movlw	47
  3869  0010A2  6F38               	movwf	56,b	;volatile
  3870                           
  3871                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3872  0010A4  0E00               	movlw	0
  3873  0010A6  6E61               	movwf	97,c	;volatile
  3874  0010A8                     
  3875                           ; BSR set to: 15
  3876                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3877  0010A8  8EF1               	bsf	241,7,c	;volatile
  3878  0010AA                     
  3879                           ; BSR set to: 15
  3880  0010AA  0012               	return		;funcret
  3881  0010AC                     __end_of_PIN_MANAGER_Initialize:
  3882                           	callstack 0
  3883                           
  3884 ;; *************** function _OSCILLATOR_Initialize *****************
  3885 ;; Defined at:
  3886 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;		None
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;		None
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      void 
  3893 ;; Registers used:
  3894 ;;		wreg, status,2
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;Total ram usage:        0 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    4
  3907 ;; This function calls:
  3908 ;;		Nothing
  3909 ;; This function is called by:
  3910 ;;		_SYSTEM_Initialize
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text20
  3915  0010FC                     __ptext20:
  3916                           	callstack 0
  3917  0010FC                     _OSCILLATOR_Initialize:
  3918                           	callstack 25
  3919  0010FC                     
  3920                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3921  0010FC  0E70               	movlw	112
  3922  0010FE  6ED3               	movwf	211,c	;volatile
  3923                           
  3924                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  3925  001100  0E04               	movlw	4
  3926  001102  6ED2               	movwf	210,c	;volatile
  3927                           
  3928                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  3929  001104  0E40               	movlw	64
  3930  001106  6E9B               	movwf	155,c	;volatile
  3931  001108                     l178:
  3932                           
  3933                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  3934  001108  AED2               	btfss	4050,7,c	;volatile
  3935  00110A  EF89  F008         	goto	u1291
  3936  00110E  EF8B  F008         	goto	u1290
  3937  001112                     u1291:
  3938  001112  EF84  F008         	goto	l178
  3939  001116                     u1290:
  3940  001116  0012               	return		;funcret
  3941  001118                     __end_of_OSCILLATOR_Initialize:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function _INTERRUPT_Initialize *****************
  3945 ;; Defined at:
  3946 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		None
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;Total ram usage:        0 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:    4
  3967 ;; This function calls:
  3968 ;;		Nothing
  3969 ;; This function is called by:
  3970 ;;		_SYSTEM_Initialize
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text21
  3975  0011B8                     __ptext21:
  3976                           	callstack 0
  3977  0011B8                     _INTERRUPT_Initialize:
  3978                           	callstack 25
  3979  0011B8                     
  3980                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3981  0011B8  9ED0               	bcf	208,7,c	;volatile
  3982  0011BA  0012               	return		;funcret
  3983  0011BC                     __end_of_INTERRUPT_Initialize:
  3984                           	callstack 0
  3985                           
  3986 ;; *************** function _EUSART1_Initialize *****************
  3987 ;; Defined at:
  3988 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;		None
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;		None
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;Total ram usage:        0 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    5
  4009 ;; This function calls:
  4010 ;;		_EUSART1_SetErrorHandler
  4011 ;;		_EUSART1_SetFramingErrorHandler
  4012 ;;		_EUSART1_SetOverrunErrorHandler
  4013 ;; This function is called by:
  4014 ;;		_SYSTEM_Initialize
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text22
  4019  000F64                     __ptext22:
  4020                           	callstack 0
  4021  000F64                     _EUSART1_Initialize:
  4022                           	callstack 24
  4023  000F64                     
  4024                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4025  000F64  0E08               	movlw	8
  4026  000F66  6EB8               	movwf	184,c	;volatile
  4027                           
  4028                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4029  000F68  0E90               	movlw	144
  4030  000F6A  6EAB               	movwf	171,c	;volatile
  4031                           
  4032                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4033  000F6C  0E24               	movlw	36
  4034  000F6E  6EAC               	movwf	172,c	;volatile
  4035                           
  4036                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  4037  000F70  0E82               	movlw	130
  4038  000F72  6EAF               	movwf	175,c	;volatile
  4039                           
  4040                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  4041  000F74  0E06               	movlw	6
  4042  000F76  6EB0               	movwf	176,c	;volatile
  4043  000F78                     
  4044                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4045  000F78  0E00               	movlw	0
  4046  000F7A  6E0C               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4047  000F7C  0E00               	movlw	0
  4048  000F7E  6E0D               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4049  000F80  ECCD  F008         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4050  000F84                     
  4051                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4052  000F84  0E00               	movlw	0
  4053  000F86  6E0C               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4054  000F88  0E00               	movlw	0
  4055  000F8A  6E0D               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4056  000F8C  ECC8  F008         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4057  000F90                     
  4058                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4059  000F90  0E00               	movlw	0
  4060  000F92  6E0C               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4061  000F94  0E00               	movlw	0
  4062  000F96  6E0D               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4063  000F98  ECD2  F008         	call	_EUSART1_SetErrorHandler	;wreg free
  4064  000F9C                     
  4065                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4066  000F9C  0E00               	movlw	0
  4067  000F9E  6E4F               	movwf	_eusart1RxLastError^0,c	;volatile
  4068  000FA0  0012               	return		;funcret
  4069  000FA2                     __end_of_EUSART1_Initialize:
  4070                           	callstack 0
  4071                           
  4072 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4073 ;; Defined at:
  4074 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  4077 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      void 
  4082 ;; Registers used:
  4083 ;;		wreg, status,2, status,0
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;Total ram usage:        2 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    4
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_EUSART1_Initialize
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text23
  4104  001190                     __ptext23:
  4105                           	callstack 0
  4106  001190                     _EUSART1_SetOverrunErrorHandler:
  4107                           	callstack 24
  4108  001190                     
  4109                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4110  001190  C00C  F0A4         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4111  001194  C00D  F0A5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4112  001198  0012               	return		;funcret
  4113  00119A                     __end_of_EUSART1_SetOverrunErrorHandler:
  4114                           	callstack 0
  4115                           
  4116 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4117 ;; Defined at:
  4118 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  4121 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;		None
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;Total ram usage:        2 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; Hardware stack levels required when called:    4
  4140 ;; This function calls:
  4141 ;;		Nothing
  4142 ;; This function is called by:
  4143 ;;		_EUSART1_Initialize
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text24
  4148  00119A                     __ptext24:
  4149                           	callstack 0
  4150  00119A                     _EUSART1_SetFramingErrorHandler:
  4151                           	callstack 24
  4152  00119A                     
  4153                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4154  00119A  C00C  F0A6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4155  00119E  C00D  F0A7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4156  0011A2  0012               	return		;funcret
  4157  0011A4                     __end_of_EUSART1_SetFramingErrorHandler:
  4158                           	callstack 0
  4159                           
  4160 ;; *************** function _EUSART1_SetErrorHandler *****************
  4161 ;; Defined at:
  4162 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  4165 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;Total ram usage:        2 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    4
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_EUSART1_Initialize
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text25
  4192  0011A4                     __ptext25:
  4193                           	callstack 0
  4194  0011A4                     _EUSART1_SetErrorHandler:
  4195                           	callstack 24
  4196  0011A4                     
  4197                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4198  0011A4  C00C  F0A2         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4199  0011A8  C00D  F0A3         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4200  0011AC  0012               	return		;funcret
  4201  0011AE                     __end_of_EUSART1_SetErrorHandler:
  4202                           	callstack 0
  4203                           
  4204 ;; *************** function _ADC_Initialize *****************
  4205 ;; Defined at:
  4206 ;;		line 62 in file "mcc_generated_files/adc.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;		None
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      void 
  4213 ;; Registers used:
  4214 ;;		wreg, status,2
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;Total ram usage:        0 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    4
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_SYSTEM_Initialize
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text26
  4235  001148                     __ptext26:
  4236                           	callstack 0
  4237  001148                     _ADC_Initialize:
  4238                           	callstack 25
  4239  001148                     
  4240                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  4241  001148  0E00               	movlw	0
  4242  00114A  6EC1               	movwf	193,c	;volatile
  4243                           
  4244                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  4245  00114C  0E26               	movlw	38
  4246  00114E  6EC0               	movwf	192,c	;volatile
  4247                           
  4248                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  4249  001150  0E00               	movlw	0
  4250  001152  6EC3               	movwf	195,c	;volatile
  4251                           
  4252                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  4253  001154  0E00               	movlw	0
  4254  001156  6EC4               	movwf	196,c	;volatile
  4255                           
  4256                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  4257  001158  0E11               	movlw	17
  4258  00115A  6EC2               	movwf	194,c	;volatile
  4259  00115C  0012               	return		;funcret
  4260  00115E                     __end_of_ADC_Initialize:
  4261                           	callstack 0
  4262                           
  4263 ;; *************** function _EUSART1_is_rx_ready *****************
  4264 ;; Defined at:
  4265 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      _Bool 
  4272 ;; Registers used:
  4273 ;;		wreg
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;Total ram usage:        0 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    4
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_main
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text27
  4294  00115E                     __ptext27:
  4295                           	callstack 0
  4296  00115E                     _EUSART1_is_rx_ready:
  4297                           	callstack 26
  4298  00115E                     
  4299                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4300  00115E  BA9E               	btfsc	158,5,c	;volatile
  4301  001160  EFB4  F008         	goto	u1311
  4302  001164  EFB7  F008         	goto	u1310
  4303  001168                     u1311:
  4304  001168  0E01               	movlw	1
  4305  00116A  EFB8  F008         	goto	u1316
  4306  00116E                     u1310:
  4307  00116E  0E00               	movlw	0
  4308  001170                     u1316:
  4309  001170  0012               	return		;funcret
  4310  001172                     __end_of_EUSART1_is_rx_ready:
  4311                           	callstack 0
  4312                           
  4313 ;; *************** function _EUSART1_Read *****************
  4314 ;; Defined at:
  4315 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;		None
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      unsigned char 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;Total ram usage:        0 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    4
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_main
  4340 ;;		_getch
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text28
  4345  0010D4                     __ptext28:
  4346                           	callstack 0
  4347  0010D4                     _EUSART1_Read:
  4348                           	callstack 26
  4349  0010D4                     l281:
  4350                           
  4351                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4352  0010D4  AA9E               	btfss	158,5,c	;volatile
  4353  0010D6  EF6F  F008         	goto	u1321
  4354  0010DA  EF71  F008         	goto	u1320
  4355  0010DE                     u1321:
  4356  0010DE  EF6A  F008         	goto	l281
  4357  0010E2                     u1320:
  4358  0010E2                     
  4359                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4360  0010E2  0E00               	movlw	0
  4361  0010E4  6E4F               	movwf	_eusart1RxLastError^0,c	;volatile
  4362  0010E6                     
  4363                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4364  0010E6  A2AB               	btfss	171,1,c	;volatile
  4365  0010E8  EF78  F008         	goto	u1331
  4366  0010EC  EF7A  F008         	goto	u1330
  4367  0010F0                     u1331:
  4368  0010F0  EF7C  F008         	goto	l2182
  4369  0010F4                     u1330:
  4370  0010F4                     
  4371                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4372  0010F4  98AB               	bcf	171,4,c	;volatile
  4373                           
  4374                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4375  0010F6  88AB               	bsf	171,4,c	;volatile
  4376  0010F8                     l2182:
  4377                           
  4378                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4379  0010F8  50AE               	movf	174,w,c	;volatile
  4380  0010FA  0012               	return		;funcret
  4381  0010FC                     __end_of_EUSART1_Read:
  4382                           	callstack 0
  4383                           
  4384 ;; *************** function _INTERRUPT_InterruptManager *****************
  4385 ;; Defined at:
  4386 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;		None
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;Total ram usage:        4 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    3
  4407 ;; This function calls:
  4408 ;;		_TMR0_ISR
  4409 ;; This function is called by:
  4410 ;;		Interrupt level 2
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	intcode
  4415  000008                     __pintcode:
  4416                           	callstack 0
  4417  000008                     _INTERRUPT_InterruptManager:
  4418                           	callstack 18
  4419                           
  4420                           ;incstack = 0
  4421  000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4422  00000A  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManager
  4423  00000E  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4424  000012  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  4425  000016  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  4426  00001A                     
  4427                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4428  00001A  AAF2               	btfss	242,5,c	;volatile
  4429  00001C  EF12  F000         	goto	i2u144_41
  4430  000020  EF14  F000         	goto	i2u144_40
  4431  000024                     i2u144_41:
  4432  000024  EF1D  F000         	goto	i2l331
  4433  000028                     i2u144_40:
  4434  000028  A4F2               	btfss	242,2,c	;volatile
  4435  00002A  EF19  F000         	goto	i2u145_41
  4436  00002E  EF1B  F000         	goto	i2u145_40
  4437  000032                     i2u145_41:
  4438  000032  EF1D  F000         	goto	i2l331
  4439  000036                     i2u145_40:
  4440  000036                     
  4441                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  4442  000036  ECEE  F007         	call	_TMR0_ISR	;wreg free
  4443  00003A                     i2l331:
  4444  00003A  C00B  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  4445  00003E  C00A  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  4446  000042  C009  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4447  000046  C008  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4448  00004A  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4449  00004C  0011               	retfie		f
  4450  00004E                     __end_of_INTERRUPT_InterruptManager:
  4451                           	callstack 0
  4452                           
  4453 ;; *************** function _TMR0_ISR *****************
  4454 ;; Defined at:
  4455 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;Total ram usage:        0 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    2
  4476 ;; This function calls:
  4477 ;;		Absolute function
  4478 ;;		_TMR0_DefaultInterruptHandler
  4479 ;;		_myTMR0ISR
  4480 ;; This function is called by:
  4481 ;;		_INTERRUPT_InterruptManager
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text30
  4486  000FDC                     __ptext30:
  4487                           	callstack 0
  4488  000FDC                     _TMR0_ISR:
  4489                           	callstack 18
  4490  000FDC                     
  4491                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  4492  000FDC  94F2               	bcf	242,2,c	;volatile
  4493  000FDE                     
  4494                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  4495  000FDE  504E               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  4496  000FE0  6ED7               	movwf	215,c	;volatile
  4497  000FE2                     
  4498                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  4499  000FE2  C04D  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4500  000FE6                     
  4501                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  4502  000FE6  0100               	movlb	0	; () banked
  4503  000FE8  51AA               	movf	_TMR0_InterruptHandler& (0+255),w,b
  4504  000FEA  11AB               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  4505  000FEC  B4D8               	btfsc	status,2,c
  4506  000FEE  EFFB  F007         	goto	i2u134_41
  4507  000FF2  EFFD  F007         	goto	i2u134_40
  4508  000FF6                     i2u134_41:
  4509  000FF6  EF09  F008         	goto	i2l146
  4510  000FFA                     i2u134_40:
  4511  000FFA                     
  4512                           ; BSR set to: 0
  4513                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  4514  000FFA  D802               	call	i2u135_48
  4515  000FFC  EF09  F008         	goto	i2u135_49
  4516  001000                     i2u135_48:
  4517  001000  0005               	push	
  4518  001002  6EFA               	movwf	pclath,c
  4519  001004  51AA               	movf	_TMR0_InterruptHandler& (0+255),w,b
  4520  001006  6EFD               	movwf	tosl,c
  4521  001008  51AB               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  4522  00100A  6EFE               	movwf	tosh,c
  4523  00100C  6AFF               	clrf	tosu,c
  4524  00100E  50FA               	movf	pclath,w,c
  4525  001010  0012               	return		;indir
  4526  001012                     i2u135_49:
  4527  001012                     i2l146:
  4528  001012  0012               	return		;funcret
  4529  001014                     __end_of_TMR0_ISR:
  4530                           	callstack 0
  4531                           
  4532 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4533 ;; Defined at:
  4534 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		None
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;Total ram usage:        0 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_TMR0_Initialize
  4558 ;;		_TMR0_ISR
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text31
  4563  0011BE                     __ptext31:
  4564                           	callstack 0
  4565  0011BE                     _TMR0_DefaultInterruptHandler:
  4566                           	callstack 19
  4567  0011BE  0012               	return		;funcret
  4568  0011C0                     __end_of_TMR0_DefaultInterruptHandler:
  4569                           	callstack 0
  4570                           
  4571 ;; *************** function _myTMR0ISR *****************
  4572 ;; Defined at:
  4573 ;;		line 195 in file "main.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  micReading      1    6[COMRAM] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;Total ram usage:        5 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    1
  4594 ;; This function calls:
  4595 ;;		i2_TMR0_WriteTimer
  4596 ;; This function is called by:
  4597 ;;		_main
  4598 ;;		_TMR0_ISR
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text32
  4603  000B52                     __ptext32:
  4604                           	callstack 0
  4605  000B52                     _myTMR0ISR:
  4606                           	callstack 18
  4607  000B52                     
  4608                           ;main.c: 198:     uint8_t micReading = ADRESH;
  4609  000B52  CFC4 F007          	movff	4036,myTMR0ISR@micReading	;volatile
  4610                           
  4611                           ;main.c: 200:         ADCON0bits.GO_NOT_DONE = 1;
  4612  000B56  82C2               	bsf	194,1,c	;volatile
  4613                           
  4614                           ;main.c: 204:     switch(timerState){
  4615  000B58  EF0E  F006         	goto	i2l2098
  4616  000B5C                     i2l2072:
  4617                           
  4618                           ;main.c: 208:             if(fillBuffer){
  4619  000B5C  5052               	movf	_fillBuffer^0,w,c
  4620  000B5E  B4D8               	btfsc	status,2,c
  4621  000B60  EFB4  F005         	goto	i2u125_41
  4622  000B64  EFB6  F005         	goto	i2u125_40
  4623  000B68                     i2u125_41:
  4624  000B68  EF27  F006         	goto	i2l76
  4625  000B6C                     i2u125_40:
  4626  000B6C                     
  4627                           ;main.c: 209:                 timerState = MIC_WAIT_FOR_TRIGGER;
  4628  000B6C  0E01               	movlw	1
  4629  000B6E  6E51               	movwf	_timerState^0,c
  4630                           
  4631                           ;main.c: 210:                 bufferIdx = 0;
  4632  000B70  0E00               	movlw	0
  4633  000B72  6E50               	movwf	_bufferIdx^0,c
  4634                           
  4635                           ;main.c: 211:                 fillBuffer = 0;
  4636  000B74  0E00               	movlw	0
  4637  000B76  6E52               	movwf	_fillBuffer^0,c
  4638  000B78  EF27  F006         	goto	i2l76
  4639  000B7C                     i2l2076:
  4640                           
  4641                           ;main.c: 217:             if(micReading <= 128 + thresholdRange && micReading >= 128 - t
      +                          hresholdRange){
  4642  000B7C  5007               	movf	myTMR0ISR@micReading^0,w,c
  4643  000B7E  6E03               	movwf	??_myTMR0ISR^0,c
  4644  000B80  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  4645  000B82  0E80               	movlw	128
  4646  000B84  0100               	movlb	0	; () banked
  4647  000B86  25FB               	addwf	_thresholdRange& (0+255),w,b
  4648  000B88  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  4649  000B8A  0E00               	movlw	0
  4650  000B8C  21FC               	addwfc	(_thresholdRange+1)& (0+255),w,b
  4651  000B8E  6E06               	movwf	(??_myTMR0ISR+3)^0,c
  4652  000B90  5003               	movf	??_myTMR0ISR^0,w,c
  4653  000B92  5C05               	subwf	(??_myTMR0ISR+2)^0,w,c
  4654  000B94  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  4655  000B96  5806               	subwfb	(??_myTMR0ISR+3)^0,w,c
  4656  000B98  A0D8               	btfss	status,0,c
  4657  000B9A  EFD1  F005         	goto	i2u126_41
  4658  000B9E  EFD3  F005         	goto	i2u126_40
  4659  000BA2                     i2u126_41:
  4660  000BA2  EF27  F006         	goto	i2l76
  4661  000BA6                     i2u126_40:
  4662  000BA6                     
  4663                           ; BSR set to: 0
  4664  000BA6  0E80               	movlw	128
  4665  000BA8  6E03               	movwf	??_myTMR0ISR^0,c
  4666  000BAA  0E00               	movlw	0
  4667  000BAC  6E04               	movwf	(??_myTMR0ISR+1)^0,c
  4668  000BAE  51FB               	movf	_thresholdRange& (0+255),w,b
  4669  000BB0  5E03               	subwf	??_myTMR0ISR^0,f,c
  4670  000BB2  51FC               	movf	(_thresholdRange+1)& (0+255),w,b
  4671  000BB4  5A04               	subwfb	(??_myTMR0ISR+1)^0,f,c
  4672  000BB6  5007               	movf	myTMR0ISR@micReading^0,w,c
  4673  000BB8  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  4674  000BBA  6A06               	clrf	(??_myTMR0ISR+3)^0,c
  4675  000BBC  5003               	movf	??_myTMR0ISR^0,w,c
  4676  000BBE  5C05               	subwf	(??_myTMR0ISR+2)^0,w,c
  4677  000BC0  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  4678  000BC2  5806               	subwfb	(??_myTMR0ISR+3)^0,w,c
  4679  000BC4  A0D8               	btfss	status,0,c
  4680  000BC6  EFE7  F005         	goto	i2u127_41
  4681  000BCA  EFE9  F005         	goto	i2u127_40
  4682  000BCE                     i2u127_41:
  4683  000BCE  EF27  F006         	goto	i2l76
  4684  000BD2                     i2u127_40:
  4685  000BD2                     
  4686                           ; BSR set to: 0
  4687                           ;main.c: 218:                 adc_reading[bufferIdx] = micReading;
  4688  000BD2  0E60               	movlw	low _adc_reading
  4689  000BD4  2450               	addwf	_bufferIdx^0,w,c
  4690  000BD6  6ED9               	movwf	fsr2l,c
  4691  000BD8  6ADA               	clrf	fsr2h,c
  4692  000BDA  0E00               	movlw	high _adc_reading
  4693  000BDC  22DA               	addwfc	fsr2h,f,c
  4694  000BDE  C007  FFDF         	movff	myTMR0ISR@micReading,indf2
  4695  000BE2                     
  4696                           ; BSR set to: 0
  4697                           ;main.c: 219:                 bufferIdx += 1;
  4698  000BE2  2A50               	incf	_bufferIdx^0,f,c
  4699  000BE4                     
  4700                           ; BSR set to: 0
  4701                           ;main.c: 220:                 timerState = MIC_ACQUIRE;
  4702  000BE4  0E02               	movlw	2
  4703  000BE6  6E51               	movwf	_timerState^0,c
  4704  000BE8  EF27  F006         	goto	i2l76
  4705  000BEC                     i2l2086:
  4706                           
  4707                           ;main.c: 224:             adc_reading[bufferIdx] = micReading;
  4708  000BEC  0E60               	movlw	low _adc_reading
  4709  000BEE  2450               	addwf	_bufferIdx^0,w,c
  4710  000BF0  6ED9               	movwf	fsr2l,c
  4711  000BF2  6ADA               	clrf	fsr2h,c
  4712  000BF4  0E00               	movlw	high _adc_reading
  4713  000BF6  22DA               	addwfc	fsr2h,f,c
  4714  000BF8  C007  FFDF         	movff	myTMR0ISR@micReading,indf2
  4715  000BFC                     
  4716                           ;main.c: 225:             bufferIdx += 1;
  4717  000BFC  2A50               	incf	_bufferIdx^0,f,c
  4718  000BFE                     
  4719                           ;main.c: 226:             if(bufferIdx >= 64){
  4720  000BFE  0E3F               	movlw	63
  4721  000C00  6450               	cpfsgt	_bufferIdx^0,c
  4722  000C02  EF05  F006         	goto	i2u128_41
  4723  000C06  EF07  F006         	goto	i2u128_40
  4724  000C0A                     i2u128_41:
  4725  000C0A  EF27  F006         	goto	i2l76
  4726  000C0E                     i2u128_40:
  4727  000C0E                     
  4728                           ;main.c: 228:                 samplesCollected = 1;
  4729  000C0E  0E01               	movlw	1
  4730  000C10  0100               	movlb	0	; () banked
  4731  000C12  6FAC               	movwf	_samplesCollected& (0+255),b
  4732                           
  4733                           ;main.c: 229:                 timerState = MIC_IDLE;
  4734  000C14  0E00               	movlw	0
  4735  000C16  6E51               	movwf	_timerState^0,c
  4736  000C18  EF27  F006         	goto	i2l76
  4737  000C1C                     i2l2098:
  4738  000C1C  5051               	movf	_timerState^0,w,c
  4739  000C1E  6E03               	movwf	??_myTMR0ISR^0,c
  4740  000C20  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  4741                           
  4742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4743                           ; Switch size 1, requested type "simple"
  4744                           ; Number of cases is 1, Range of values is 0 to 0
  4745                           ; switch strategies available:
  4746                           ; Name         Instructions Cycles
  4747                           ; simple_byte            4     3 (average)
  4748                           ;	Chosen strategy is simple_byte
  4749  000C22  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  4750  000C24  0A00               	xorlw	0	; case 0
  4751  000C26  B4D8               	btfsc	status,2,c
  4752  000C28  EF18  F006         	goto	i2l2806
  4753  000C2C  EF27  F006         	goto	i2l76
  4754  000C30                     i2l2806:
  4755                           
  4756                           ; Switch size 1, requested type "simple"
  4757                           ; Number of cases is 3, Range of values is 0 to 2
  4758                           ; switch strategies available:
  4759                           ; Name         Instructions Cycles
  4760                           ; simple_byte           10     6 (average)
  4761                           ;	Chosen strategy is simple_byte
  4762  000C30  5003               	movf	??_myTMR0ISR^0,w,c
  4763  000C32  0A00               	xorlw	0	; case 0
  4764  000C34  B4D8               	btfsc	status,2,c
  4765  000C36  EFAE  F005         	goto	i2l2072
  4766  000C3A  0A01               	xorlw	1	; case 1
  4767  000C3C  B4D8               	btfsc	status,2,c
  4768  000C3E  EFBE  F005         	goto	i2l2076
  4769  000C42  0A03               	xorlw	3	; case 2
  4770  000C44  B4D8               	btfsc	status,2,c
  4771  000C46  EFF6  F005         	goto	i2l2086
  4772  000C4A  EF27  F006         	goto	i2l76
  4773  000C4E                     i2l76:
  4774  000C4E  0012               	return		;funcret
  4775  000C50                     __end_of_myTMR0ISR:
  4776                           	callstack 0
  4777                           
  4778 ;; *************** function i2_TMR0_WriteTimer *****************
  4779 ;; Defined at:
  4780 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  timerVal        2    0[COMRAM] unsigned short 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;Total ram usage:        2 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_myTMR0ISR
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text33
  4808  0011AE                     __ptext33:
  4809                           	callstack 0
  4810  0011AE                     i2_TMR0_WriteTimer:
  4811                           	callstack 18
  4812  0011AE                     
  4813                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4814  0011AE  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  4815  0011B0  6ED7               	movwf	215,c	;volatile
  4816  0011B2                     
  4817                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4818  0011B2  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  4819  0011B6  0012               	return		;funcret
  4820  0011B8                     __end_ofi2_TMR0_WriteTimer:
  4821                           	callstack 0
  4822                           
  4823                           	psect	text34
  4824  000000                     __ptext34:
  4825                           	callstack 0
  4826  000000                     
  4827                           	psect	rparam
  4828  0000                     
  4829                           	psect	temp
  4830  000053                     btemp:
  4831                           	callstack 0
  4832  000053                     	ds	1
  4833  0000                     int$flags	set	btemp
  4834  0000                     wtemp8	set	btemp+1
  4835  0000                     ttemp5	set	btemp+1
  4836  0000                     ttemp6	set	btemp+4
  4837  0000                     ttemp7	set	btemp+8
  4838                           
  4839                           	psect	idloc
  4840                           
  4841                           ;Config register IDLOC0 @ 0x200000
  4842                           ;	unspecified, using default values
  4843  200000                     	org	2097152
  4844  200000  FF                 	db	255
  4845                           
  4846                           ;Config register IDLOC1 @ 0x200001
  4847                           ;	unspecified, using default values
  4848  200001                     	org	2097153
  4849  200001  FF                 	db	255
  4850                           
  4851                           ;Config register IDLOC2 @ 0x200002
  4852                           ;	unspecified, using default values
  4853  200002                     	org	2097154
  4854  200002  FF                 	db	255
  4855                           
  4856                           ;Config register IDLOC3 @ 0x200003
  4857                           ;	unspecified, using default values
  4858  200003                     	org	2097155
  4859  200003  FF                 	db	255
  4860                           
  4861                           ;Config register IDLOC4 @ 0x200004
  4862                           ;	unspecified, using default values
  4863  200004                     	org	2097156
  4864  200004  FF                 	db	255
  4865                           
  4866                           ;Config register IDLOC5 @ 0x200005
  4867                           ;	unspecified, using default values
  4868  200005                     	org	2097157
  4869  200005  FF                 	db	255
  4870                           
  4871                           ;Config register IDLOC6 @ 0x200006
  4872                           ;	unspecified, using default values
  4873  200006                     	org	2097158
  4874  200006  FF                 	db	255
  4875                           
  4876                           ;Config register IDLOC7 @ 0x200007
  4877                           ;	unspecified, using default values
  4878  200007                     	org	2097159
  4879  200007  FF                 	db	255
  4880                           
  4881                           	psect	config
  4882                           
  4883                           ; Padding undefined space
  4884  300000                     	org	3145728
  4885  300000  FF                 	db	255
  4886                           
  4887                           ;Config register CONFIG1H @ 0x300001
  4888                           ;	Oscillator Selection bits
  4889                           ;	FOSC = INTIO67, Internal oscillator block
  4890                           ;	4X PLL Enable
  4891                           ;	PLLCFG = OFF, Oscillator used directly
  4892                           ;	Primary clock enable bit
  4893                           ;	PRICLKEN = ON, Primary clock enabled
  4894                           ;	Fail-Safe Clock Monitor Enable bit
  4895                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4896                           ;	Internal/External Oscillator Switchover bit
  4897                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4898  300001                     	org	3145729
  4899  300001  28                 	db	40
  4900                           
  4901                           ;Config register CONFIG2L @ 0x300002
  4902                           ;	Power-up Timer Enable bit
  4903                           ;	PWRTEN = OFF, Power up timer disabled
  4904                           ;	Brown-out Reset Enable bits
  4905                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4906                           ;	Brown Out Reset Voltage bits
  4907                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4908  300002                     	org	3145730
  4909  300002  1F                 	db	31
  4910                           
  4911                           ;Config register CONFIG2H @ 0x300003
  4912                           ;	Watchdog Timer Enable bits
  4913                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4914                           ;	Watchdog Timer Postscale Select bits
  4915                           ;	WDTPS = 32768, 1:32768
  4916  300003                     	org	3145731
  4917  300003  3C                 	db	60
  4918                           
  4919                           ; Padding undefined space
  4920  300004                     	org	3145732
  4921  300004  FF                 	db	255
  4922                           
  4923                           ;Config register CONFIG3H @ 0x300005
  4924                           ;	CCP2 MUX bit
  4925                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4926                           ;	PORTB A/D Enable bit
  4927                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4928                           ;	P3A/CCP3 Mux bit
  4929                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4930                           ;	HFINTOSC Fast Start-up
  4931                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4932                           ;	Timer3 Clock input mux bit
  4933                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4934                           ;	ECCP2 B output mux bit
  4935                           ;	P2BMX = PORTB5, P2B is on RB5
  4936                           ;	MCLR Pin Enable bit
  4937                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4938  300005                     	org	3145733
  4939  300005  BF                 	db	191
  4940                           
  4941                           ;Config register CONFIG4L @ 0x300006
  4942                           ;	Stack Full/Underflow Reset Enable bit
  4943                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4944                           ;	Single-Supply ICSP Enable bit
  4945                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4946                           ;	Extended Instruction Set Enable bit
  4947                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4948                           ;	Background Debug
  4949                           ;	DEBUG = OFF, Disabled
  4950  300006                     	org	3145734
  4951  300006  85                 	db	133
  4952                           
  4953                           ; Padding undefined space
  4954  300007                     	org	3145735
  4955  300007  FF                 	db	255
  4956                           
  4957                           ;Config register CONFIG5L @ 0x300008
  4958                           ;	Code Protection Block 0
  4959                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4960                           ;	Code Protection Block 1
  4961                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4962                           ;	Code Protection Block 2
  4963                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4964                           ;	Code Protection Block 3
  4965                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4966  300008                     	org	3145736
  4967  300008  0F                 	db	15
  4968                           
  4969                           ;Config register CONFIG5H @ 0x300009
  4970                           ;	Boot Block Code Protection bit
  4971                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4972                           ;	Data EEPROM Code Protection bit
  4973                           ;	CPD = OFF, Data EEPROM not code-protected
  4974  300009                     	org	3145737
  4975  300009  C0                 	db	192
  4976                           
  4977                           ;Config register CONFIG6L @ 0x30000A
  4978                           ;	Write Protection Block 0
  4979                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4980                           ;	Write Protection Block 1
  4981                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4982                           ;	Write Protection Block 2
  4983                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4984                           ;	Write Protection Block 3
  4985                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4986  30000A                     	org	3145738
  4987  30000A  0F                 	db	15
  4988                           
  4989                           ;Config register CONFIG6H @ 0x30000B
  4990                           ;	Configuration Register Write Protection bit
  4991                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4992                           ;	Boot Block Write Protection bit
  4993                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4994                           ;	Data EEPROM Write Protection bit
  4995                           ;	WRTD = OFF, Data EEPROM not write-protected
  4996  30000B                     	org	3145739
  4997  30000B  E0                 	db	224
  4998                           
  4999                           ;Config register CONFIG7L @ 0x30000C
  5000                           ;	Table Read Protection Block 0
  5001                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5002                           ;	Table Read Protection Block 1
  5003                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5004                           ;	Table Read Protection Block 2
  5005                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5006                           ;	Table Read Protection Block 3
  5007                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5008  30000C                     	org	3145740
  5009  30000C  0F                 	db	15
  5010                           
  5011                           ;Config register CONFIG7H @ 0x30000D
  5012                           ;	Boot Block Table Read Protection bit
  5013                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5014  30000D                     	org	3145741
  5015  30000D  40                 	db	64
  5016                           tosu	equ	0xFFF
  5017                           tosh	equ	0xFFE
  5018                           tosl	equ	0xFFD
  5019                           stkptr	equ	0xFFC
  5020                           pclatu	equ	0xFFB
  5021                           pclath	equ	0xFFA
  5022                           pcl	equ	0xFF9
  5023                           tblptru	equ	0xFF8
  5024                           tblptrh	equ	0xFF7
  5025                           tblptrl	equ	0xFF6
  5026                           tablat	equ	0xFF5
  5027                           prodh	equ	0xFF4
  5028                           prodl	equ	0xFF3
  5029                           indf0	equ	0xFEF
  5030                           postinc0	equ	0xFEE
  5031                           postdec0	equ	0xFED
  5032                           preinc0	equ	0xFEC
  5033                           plusw0	equ	0xFEB
  5034                           fsr0h	equ	0xFEA
  5035                           fsr0l	equ	0xFE9
  5036                           wreg	equ	0xFE8
  5037                           indf1	equ	0xFE7
  5038                           postinc1	equ	0xFE6
  5039                           postdec1	equ	0xFE5
  5040                           preinc1	equ	0xFE4
  5041                           plusw1	equ	0xFE3
  5042                           fsr1h	equ	0xFE2
  5043                           fsr1l	equ	0xFE1
  5044                           bsr	equ	0xFE0
  5045                           indf2	equ	0xFDF
  5046                           postinc2	equ	0xFDE
  5047                           postdec2	equ	0xFDD
  5048                           preinc2	equ	0xFDC
  5049                           plusw2	equ	0xFDB
  5050                           fsr2h	equ	0xFDA
  5051                           fsr2l	equ	0xFD9
  5052                           status	equ	0xFD8

Data Sizes:
    Strings     390
    Constant    0
    Data        2
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      82
    BANK0           160     46     157
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1318_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_23(CODE[17]), STR_22(CODE[23]), STR_21(CODE[24]), STR_20(CODE[24]), 
		 -> STR_19(CODE[24]), STR_18(CODE[3]), STR_17(CODE[2]), STR_16(CODE[6]), 
		 -> STR_15(CODE[33]), STR_14(CODE[72]), STR_13(CODE[43]), STR_12(CODE[24]), 
		 -> STR_11(CODE[21]), STR_10(CODE[7]), STR_9(CODE[15]), STR_8(CODE[33]), 
		 -> STR_7(CODE[3]), STR_6(CODE[4]), STR_5(CODE[53]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 72
		 -> STR_23(CODE[17]), STR_22(CODE[23]), STR_21(CODE[24]), STR_20(CODE[24]), 
		 -> STR_19(CODE[24]), STR_18(CODE[3]), STR_17(CODE[2]), STR_16(CODE[6]), 
		 -> STR_15(CODE[33]), STR_14(CODE[72]), STR_13(CODE[43]), STR_12(CODE[24]), 
		 -> STR_11(CODE[21]), STR_10(CODE[7]), STR_9(CODE[15]), STR_8(CODE[33]), 
		 -> STR_7(CODE[3]), STR_6(CODE[4]), STR_5(CODE[53]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_23(CODE[17]), STR_22(CODE[23]), STR_21(CODE[24]), STR_20(CODE[24]), 
		 -> STR_19(CODE[24]), STR_18(CODE[3]), STR_17(CODE[2]), STR_16(CODE[6]), 
		 -> STR_15(CODE[33]), STR_14(CODE[72]), STR_13(CODE[43]), STR_12(CODE[24]), 
		 -> STR_11(CODE[21]), STR_10(CODE[7]), STR_9(CODE[15]), STR_8(CODE[33]), 
		 -> STR_7(CODE[3]), STR_6(CODE[4]), STR_5(CODE[53]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), myTMR0ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), myTMR0ISR(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   14914
                                             68 COMRAM     2     2      0
                                             43 BANK0      3     3      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   13802
                                             33 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11645
                                             66 COMRAM     2     2      0
                                             27 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   11163
                                             58 COMRAM     8     2      6
                                             18 BANK0      9     9      0
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6701
                                             40 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4435
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             22 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1546
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                             12 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             13 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     159
                                              7 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     159
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           5     5      0     159
                                              2 COMRAM     5     5      0
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       i2_TMR0_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      52       1       87.2%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EF      12        0.0%
DATA                 0      0      EF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Oct 20 09:15:22 2020

                                            l33 0064                                              l50 01FA  
                                            l36 00BC                                 _timer0ReloadVal 004D  
                           myTMR0ISR@micReading 0007                                             l103 10AA  
                                           l200 115C                                             l127 107E  
                                           l312 1198                                             l315 11AC  
                                           l139 1184                                             l324 11BA  
                                           l309 11A2                                             l181 1116  
                                           l149 118E                                             l175 1130  
                                           l272 1170                                             l264 0FA0  
                                           l281 10D4                                             l178 1108  
                                           l291 1146                                             l285 10FA  
                                           l461 0B50                                             l288 1134  
                                           l448 09EC                                             l297 117A  
                                           _abs 0F24                                             _pad 0D24  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1100 0ED6  
                                          l1012 10D2                                            l1101 0EDE  
                                          l1120 0E7A                                            l1105 0F5A  
                                          l2010 119A                                            l1042 0DAA  
                                          ?_abs 001E                                            l2012 1190  
                                          l1060 0D22                                            l1108 0F62  
                                          l1044 0DE4                                            l2014 11A4  
                                          l2110 104A                                            l1134 1048  
                                          l1055 0CB4                                            l1039 0D68  
                                          l2104 1080                                            l2008 1186  
                                          l2120 106E                                            l2112 104C  
                                          l1128 0F22                                            l2130 0F64  
                                          l2106 1090                                            l2122 107A  
                                          l2114 1054                                            l1058 0CF6  
                                          l1066 03F0                                            l1091 0864  
                                          l2132 0F78                                            l2124 11B8  
                                          l2108 10A8                                            l2116 106A  
                                          l1068 03F8                                            l2134 0F84  
                                          l2126 10FC                                            l2118 106C  
                                          l2150 111C                                            l1086 0630  
                                          l2128 1148                                            l2136 0F90  
                                          l2152 1120                                            l2160 117C  
                                          l2400 0898                                            l2170 115E  
                                          l2138 0F9C                                            l2154 1124  
                                          l2162 1180                                            l2410 08DA  
                                          l2402 089C                                            l2180 10F4  
                                          l2156 1128                                            l2148 1118  
                                          l2500 0C50                                            l2420 0934  
                                          l2412 08F8                                            l2404 08AA  
                                          l2182 10F8                                            l2174 10D4  
                                          l2158 112C                                            l2510 0C9A  
                                          l2502 0C62                                            l2422 0962  
                                          l2414 0900                                            l2430 099C  
                                          l2406 08CA                                            l2176 10E2  
                                          l2360 1174                                            l2520 0CD8  
                                          l2504 0C6E                                            l2432 09AC  
                                          l2424 0982                                            l2416 0914  
                                          l2408 08CE                                            l2440 09F2  
                                          l2600 06A0                                            l2178 10E6  
                                          l2370 0E32                                            l2362 0DE6  
                                          l2522 0D04                                            l2514 0CAC  
                                          l2506 0C7A                                            l2434 09CC  
                                          l2426 0984                                            l2418 0922  
                                          l2450 0A52                                            l2442 0A00  
                                          l2530 0370                                            l2610 073C  
                                          l2602 06D4                                            l2356 1134  
                                          l2372 0E68                                            l2364 0DF8  
                                          l2524 0D16                                            l2516 0CC0  
                                          l2508 0C88                                            l2428 0996  
                                          l2460 0AC8                                            l2452 0A70  
                                          l2444 0A20                                            l2380 0EFE  
                                          l2540 03E4                                            l2532 039A  
                                          l2620 07F2                                            l2612 0786  
                                          l2700 0154                                            l2358 1142  
                                          l2366 0E0A                                            l2518 0CD4  
                                          l2470 0B30                                            l2462 0AE8  
                                          l2454 0A78                                            l2446 0A24  
                                          l2438 09EE                                            l2382 0F02  
                                          l2390 103C                                            l2550 042E  
                                          l2542 0400                                            l2534 03BA  
                                          l2622 0806                                            l2606 06F0  
                                          l2710 01DA                                            l2702 01C6  
                                          l2368 0E14                                            l2464 0AFA  
                                          l2456 0A8C                                            l2448 0A32  
                                          l2376 0EE0                                            l2384 1014  
                                          l2480 0D54                                            l2560 04CC  
                                          l2552 0436                                            l2544 0412  
                                          l2536 03C8                                            l2528 0350  
                                          l2616 07BE                                            l2608 0716  
                                          l2632 082C                                            l2640 0E7C  
                                          l2712 01E6                                            l2704 01D6  
                                          l2394 0866                                            l2458 0A9A  
                                          l2466 0B00                                            l2378 0EEC  
                                          l2386 1020                                            l2490 0DB8  
                                          l2482 0D60                                            l2474 0D24  
                                          l2570 059E                                            l2554 043C  
                                          l2562 0530                                            l2546 0420  
                                          l2538 03CA                                            l2634 0852  
                                          l2618 07E4                                            l2626 0812  
                                          l2642 0E84                                            l2650 10B6  
                                          l2730 0230                                            l2722 0204  
                                          l2714 01EA                                            l2396 086A  
                                          l2468 0B10                                            l2388 1024  
                                          l2492 0DCC                                            l2484 0D74  
                                          l2476 0D32                                            l2580 05E4  
                                          l2564 054C                                            l2572 05AC  
                                          l2556 04BE                                            l2548 0426  
                                          l2628 0820                                            l2644 0E92  
                                          l2804 030E                                            l2740 02DC  
                                          l2732 025C                                            l2724 0210  
                                          l2716 0200                                            l2660 0072  
                                          l2398 0878                                            l2486 0D88  
                                          l2478 0D46                                            l2582 05F0  
                                          l2574 05BE                                            l2566 056A  
                                          l2558 04C6                                            l2590 0632  
                                          l2646 0EB8                                            l2742 02E4  
                                          l2734 026E                                            l2726 0214  
                                          l2670 009E                                            l2662 007E  
                                          l2654 0052                                            l2496 0F24  
                                          l2488 0D8C                                            l2584 05F8  
                                          l2576 05CC                                            l2568 0584  
                                          l2592 0658                                            l2648 10AC  
                                          l2736 0276                                            l2728 0228  
                                          l2680 00E0                                            l2672 00AC  
                                          l2664 0080                                            l2656 0056  
                                          l2498 0F3E                                            l2578 05D2  
                                          l2586 0608                                            l2594 0666  
                                          l2738 02A2                                            l2746 02FA  
                                          l2690 0114                                            l2682 00EC  
                                          l2674 00BA                                            l2666 0082  
                                          l2658 0062                                            l2596 0676  
                                          l2692 0118                                            l2676 00CA  
                                          l2668 0090                                            l2598 067A  
                                          l2694 0128                                            l2678 00DC  
                                          ?_pad 001E                                            l2688 00F2  
                                          l2696 0134                                            l2698 0148  
                                          STR_1 FFD7                                            STR_2 FF42  
                                          STR_3 FFE2                                            STR_4 FFFC  
                                          STR_5 FEC1                                            STR_6 FFF8  
                                          STR_7 FEF3                                            STR_8 FF21  
                                          STR_9 FFC8                                            u2000 0128  
                                          u2001 0124                                            u2010 0148  
                                          u2011 0144                                            u2020 01FA  
                                          u2021 01F6                                            u1310 116E  
                                          u2030 0224                                            u1311 1168  
                                          u2031 0220                                            u1320 10E2  
                                          u2040 026E                                            u1321 10DE  
                                          u2041 026A                                            u1330 10F4  
                                          u1331 10F0                                            u1316 1170  
                                          u1500 0E68                                            u1501 0E64  
                                          _LATA 000F89                                            u1510 0F22  
                                          _LATB 000F8A                                            u1511 0F1E  
                                          _LATC 000F8B                                            u1600 0A00  
                                          u1520 103C                                            u1601 09FC  
                                          u1521 1038                                            u1290 1116  
                                          u1530 0878                                            u1610 0A32  
                                          u1291 1112                                            u1531 0874  
                                          u1611 0A2E                                            u1460 1142  
                                          u1540 08AA                                            u1620 0A70  
                                          u1700 0F3E                                            u1461 113E  
                                          u1541 08A6                                            u1621 0A6C  
                                          u1701 0F3A                                            u1470 0DF8  
                                          u1710 0C62                                            u1630 0A9A  
                                          u1471 0DF4                                            u1711 0C5E  
                                          u1551 08D4                                            u1631 0A96  
                                          u1480 0E0A                                            u1720 0C88  
                                          u1560 08F8                                            u1640 0AC8  
                                          u1800 03E4                                            u1481 0E06  
                                          u1721 0C84                                            u1561 08F4  
                                          u1641 0AC4                                            u1801 03E0  
                                          u1490 0E32                                            u1730 0CA8  
                                          u1570 0922                                            u1650 0B10  
                                          u1810 0412                                            u1491 0E2E  
                                          u1731 0CA4                                            u1571 091E  
                                          u1651 0B0C                                            u1811 040E  
                                          u1740 0CF6                                            u1580 0962  
                                          u1660 0D32                                            u1900 05E4  
                                          u1820 0420                                            u1741 0CF2  
                                          u1581 095E                                            u1661 0D2E  
                                          u1901 05E0                                            u1821 041C  
                                          u1750 0D04                                            u1590 09AC  
                                          u1670 0D54                                            u1830 054C  
                                          u1910 0658                                            u1751 0D00  
                                          u1591 09A8                                            u1671 0D50  
                                          u1831 0548                                            u1911 0654  
                                          u1680 0DAA                                            u1840 056A  
                                          u1760 0382                                            u1920 06A0  
                                          u1681 0DA6                                            u1841 0566  
                                          u1761 037C                                            u1921 069C  
                                          u1690 0DB8                                            u1850 0584  
                                          u1770 0384                                            u1930 0716  
                                          u1691 0DB4                                            u1851 0580  
                                          u1931 0712                                            u1860 059E  
                                          u1780 039A                                            u1940 073C  
                                          u1861 059A                                            u1781 0396  
                                          u1941 0738                                            u1870 05AC  
                                          u1790 03C8                                            u1950 07E4  
                                          u1871 05A8                                            u1791 03C4  
                                          u1951 07E0                                            u1880 05BE  
                                          u1960 0ED6                                            u1881 05BA  
                                          u1961 0ED2                                            u1890 05CC  
                                          u1970 0072                                            u1891 05C8  
                                          u1971 006E                                            u1980 00CA  
                                          u1981 00C6                                            u1990 00DC  
                                          u1991 00D8                                            i2l76 0C4E  
                                          _WPUB 000F61                                   _EUSART1_Write 1132  
                                          abs@a 001E                                            _dbuf 00AD  
                                          _ctoa 0C50                                            _main 0052  
                                          _dtoa 0350                                   ?_EUSART1_Read 0001  
                                          _prec 0049                                            _nout 00A0  
                                          pad@i 0025                                            pad@p 0022  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0027                                            fsr2l 000FD9  
                                          btemp 0053                                            start 004E  
                                  ___param_bank 000000                                           ??_abs 0020  
                                         ??_pad 0024                         __end_of_TMR0_Initialize 1080  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 1118                                 __end_of___aodiv 09EE  
                                         ?_ctoa 0017                                           ?_main 0001  
                                         ?_dtoa 0029                                 __end_of___aomod 0B52  
                                         STR_10 FFEB                                           STR_11 FFA2  
                                         STR_20 FF5B                                           STR_12 FF73  
                                         STR_21 FF5B                                           STR_13 FEF6  
                                         STR_22 FF8B                                           STR_14 FE79  
                                         STR_15 FF21                                           STR_23 FFB7  
                                         STR_16 FFF2                                           STR_17 FEF4  
                                         STR_18 FFF5                                           STR_19 FF5B  
                                         _T0CON 000FD5                                           i2l152 11BE  
                                         i2l146 1012                                           i2l139 11B6  
                                         i2l331 003A                                 _TMR0_WriteTimer 117C  
                                  vfpfcnvrt@fmt 003D                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                       ?_TMR0_SetInterruptHandler 000C  
                              __end_of_TMR0_ISR 1014                                           _flags 004B  
                                         _fputc 0DE6                                           _fputs 0EE0  
                                         pad@fp 001E                                           _width 0047  
                                         ctoa@c 0019                                           _putch 1172  
                                         ctoa@l 001B                                           ctoa@w 001D  
                                         main@i 00FA                                           dtoa@d 002B  
                                         dtoa@i 00DD                                           dtoa@n 00D5  
                                         dtoa@p 00CF                                           dtoa@s 00D3  
                                         dtoa@w 00D1                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 000C                                           ttemp5 0054  
                                         ttemp6 0057                                           ttemp7 005B  
                                         status 000FD8                                           wtemp8 0054  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 0FA2  
                                  __end_of_ctoa 0D24                      __end_of_EUSART1_Initialize 0FA2  
                                  __end_of_main 0350                                    __end_of_dtoa 0632  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 001A  
                                        ??_main 0045                                          ??_dtoa 0033  
                                 __activetblptr 000003                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 000E                                          ?_fputs 0017  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l2300 001A  
                                        i2l2070 0B52                                          i2l2302 0028  
                                        i2l2080 0BD2                                          i2l2072 0B5C  
                                        i2l2304 0036                                          i2l2066 11AE  
                                        i2l2090 0BFE                                          i2l2082 0BE2  
                                        i2l2074 0B6C                                          i2l2068 11B2  
                                        i2l2092 0C0E                                          i2l2084 0BE4  
                                        i2l2076 0B7C                                          i2l2086 0BEC  
                                        i2l2078 0BA6                                          i2l2190 0FE2  
                                        i2l2088 0BFC                                          i2l2192 0FE6  
                                        i2l2098 0C1C                                          i2l2194 0FFA  
                                        i2l2186 0FDC                                          i2l2188 0FDE  
                                        i2l2806 0C30                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                  vfprintf@cfmt 0043                                       ??___aodiv 001C  
                                     ??___aomod 001C                         __end_of_TMR0_WriteTimer 1186  
                     i2TMR0_WriteTimer@timerVal 0001                        ?_EUSART1_SetErrorHandler 000C  
                              ?_TMR0_Initialize 0001                                          clear_0 0FC0  
                                        clear_1 0FCC                                          _printf 10AC  
                                        pad@buf 0020                ??_EUSART1_SetOverrunErrorHandler 000E  
               ?_EUSART1_SetOverrunErrorHandler 000C                                          ctoa@fp 0017  
                                        dtoa@fp 0029                                          _strlen 1014  
                                        fputc@c 000E                                          fputs@c 001B  
                                        fputs@i 001C                                          fputs@s 0017  
                                  __mediumconst FE78                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 0EE0                                 ??_EUSART1_Write 000C  
      TMR0_SetInterruptHandler@InterruptHandler 000C                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 1118                                      __accesstop 0060  
                       __end_of__initialization 0FD2                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 11BC                             ??_SYSTEM_Initialize 0010  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 0E7C  
                                 __end_of_fputs 0F24                                   __end_of_putch 117C  
                          __end_of_EUSART1_Read 10FC                                         ??_fputc 0012  
                     __end_of_SYSTEM_Initialize 1132                                         ??_fputs 001B  
                            __size_of_myTMR0ISR 00FE                                         ??_putch 000D  
                                    __pbssBANK0 0060                 __end_of_EUSART1_SetErrorHandler 11AE  
              __end_of_TMR0_SetInterruptHandler 1190                                      ??_TMR0_ISR 0008  
                              ?_TMR0_WriteTimer 000C                                      _fillBuffer 0052  
                                       ?_printf 00EE                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 000C          __end_of_EUSART1_SetFramingErrorHandler 11A4  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 119A  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0234  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                          _ADC_InterruptHandler 00A8                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 0866  
                                       ___aomod 09EE                               __end_of_myTMR0ISR 0C50  
                                     ?_vfprintf 00E8                             _EUSART1_is_rx_ready 115E  
                                       __pcinit 0FA2                                         __ramtop 1000  
                                       __ptext0 0052                                         __ptext1 10AC  
                                       __ptext2 0E7C                                         __ptext3 0632  
                                       __ptext4 0350                                         __ptext5 0D24  
                                       __ptext6 1014                                         __ptext7 0EE0  
                                       __ptext8 0F24                                         __ptext9 09EE  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 10FC  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                            _EUSART1_Initialize 0F64                        ??_PIN_MANAGER_Initialize 000C  
                                       main@cmd 00F8                      __size_of_SYSTEM_Initialize 001A  
                          end_of_initialization 0FD2                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0010  
                   _EUSART1_OverrunErrorHandler 00A4                                         fputs@fp 0019  
                             __end_of_vfpfcnvrt 0866                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0028  
                                    ??_vfprintf 0043                            ??_EUSART1_Initialize 000E  
                                       strlen@a 000E                                         strlen@s 000C  
                                    _timerState 0051                        _TMR0_SetInterruptHandler 1186  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 000C  
                         ??_EUSART1_is_rx_ready 000C                                    _EUSART1_Read 10D4  
                  __end_of_INTERRUPT_Initialize 11BC                                     vfpfcnvrt@ap 003F  
                                   vfpfcnvrt@fp 003B                                     vfpfcnvrt@ll 00DF  
                             __size_of_TMR0_ISR 0038                                  _ADC_Initialize 1148  
                                   _adc_reading 0060                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 10D4                                  __end_of_strlen 104A  
                           start_initialization 0FA2                        __size_of_TMR0_Initialize 0036  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 0F64  
                                   __end_of_pad 0DE6                                     putch@txData 000D  
                         __end_of_EUSART1_Write 1148                                     vfprintf@fmt 00EA  
                        __end_of_ADC_Initialize 115E                                     __pdataBANK0 00FB  
                                      ??_printf 0045                                        ??_strlen 000E  
                                   __pbssCOMRAM 0047                                   __pcstackBANK0 00CD  
                              ___aodiv@dividend 000C                ??_EUSART1_SetFramingErrorHandler 000E  
               ?_EUSART1_SetFramingErrorHandler 000C                           _TMR0_InterruptHandler 00AA  
                        _PIN_MANAGER_Initialize 1080                                       _dtoa$1387 00CD  
                                     __pintcode 0008                                   __pmediumconst FE78  
                                      ?___aodiv 000C                                        ?___aomod 000C  
                              ___aodiv@quotient 001E                                 ?_ADC_Initialize 0001  
                                     _bufferIdx 0050                    ??_INTERRUPT_InterruptManager 0008  
                             __size_of_vfprintf 0064                                       _myTMR0ISR 0B52  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 00A2  
                       _EUSART1_SetErrorHandler 11A4                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 11B8                               ??_TMR0_Initialize 000E  
       EUSART1_SetErrorHandler@interruptHandler 000C                                        i2u125_40 0B6C  
                                      i2u125_41 0B68                                        i2u126_40 0BA6  
                                      i2u134_40 0FFA                                        i2u126_41 0BA2  
                                      i2u134_41 0FF6                                        i2u127_40 0BD2  
                                      i2u127_41 0BCE             __size_of_INTERRUPT_InterruptManager 0046  
                                      i2u128_40 0C0E                                        i2u135_48 1000  
                                      i2u144_40 0028                                        i2u128_41 0C0A  
                                      i2u135_49 1012                                        i2u144_41 0024  
                                      i2u145_40 0036                                        i2u145_41 0032  
                    ??_TMR0_SetInterruptHandler 000E                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 0FDC  
                                     _vfpfcnvrt 0632                                      _ADCON0bits 000FC2  
                                     main@i_214 00F9                                      ?_myTMR0ISR 0001  
                             i2_TMR0_WriteTimer 11AE                                      vfpfcnvrt@c 00E7  
                            ?i2_TMR0_WriteTimer 0001                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                             ??i2_TMR0_WriteTimer 0003  
                                      __Hrparam 0000                                      vfprintf@ap 00EC  
                                      __Lrparam 0000                                      vfprintf@fp 00E8  
                       ??_OSCILLATOR_Initialize 000C                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 003E  
                                    ?_vfpfcnvrt 003B                                 ___aodiv@divisor 0014  
                               ___aodiv@counter 001C                       __end_ofi2_TMR0_WriteTimer 11B8  
                     ??_EUSART1_SetErrorHandler 000E                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 1172                                        __ptext10 0866  
                                      __ptext11 0C50                                        __ptext20 10FC  
                                      __ptext12 0DE6                                        __ptext21 11B8  
                                      __ptext13 1172                                        __ptext30 0FDC  
                                      __ptext22 0F64                                        __ptext14 1132  
                                      __ptext31 11BE                                        __ptext23 1190  
                                      __ptext15 117C                                        __ptext32 0B52  
                                      __ptext24 119A                                        __ptext16 1118  
                                      __ptext33 11AE                                        __ptext25 11A4  
                                      __ptext17 104A                                        __ptext34 0000  
                                      __ptext26 1148                                        __ptext18 1186  
                                      __ptext27 115E                                        __ptext19 1080  
                                      __ptext28 10D4                         TMR0_WriteTimer@timerVal 000C  
                             ??_TMR0_WriteTimer 000E                                   __size_of_ctoa 00D4  
                                 __size_of_main 02FE                                   __size_of_dtoa 02E2  
          __end_of_TMR0_DefaultInterruptHandler 11C0           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 11BE  EUSART1_SetOverrunErrorHandler@interruptHandler 000C  
                                      int$flags 0053                                        _vfprintf 0E7C  
            __end_of_INTERRUPT_InterruptManager 004E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00EE                     _EUSART1_FramingErrorHandler 00A6  
                              ___aomod@dividend 000C                                     ??_myTMR0ISR 0003  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 000C  
                                      intlevel2 0000                                _samplesCollected 00AC  
                                _thresholdRange 00FB                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 119A         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1190                                      _RCSTA1bits 000FAB  
                              ??_ADC_Initialize 000C                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 00F6  
EUSART1_SetFramingErrorHandler@interruptHandler 000C                                 ___aomod@divisor 0014  
                                   ??_vfpfcnvrt 0041                                 ___aomod@counter 001C  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 004F  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 104A  
                                  ___aodiv@sign 001D                  __end_of_PIN_MANAGER_Initialize 10AC  
                                  ___aomod@sign 001D                                    fp__myTMR0ISR 0000  
